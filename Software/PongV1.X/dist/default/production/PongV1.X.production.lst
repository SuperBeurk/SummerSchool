

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 06 13:02:34 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=3
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	text74,global,reloc=2,class=CODE,delta=1
    88                           	psect	text75,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1
    90                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1
    92                           	psect	text79,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	text81,global,reloc=2,class=CODE,delta=1
    95                           	psect	text82,global,reloc=2,class=CODE,delta=1
    96                           	psect	text83,global,reloc=2,class=CODE,delta=1
    97                           	psect	text84,global,reloc=2,class=CODE,delta=1
    98                           	psect	text85,global,reloc=2,class=CODE,delta=1
    99                           	psect	text86,global,reloc=2,class=CODE,delta=1
   100                           	psect	text87,global,reloc=2,class=CODE,delta=1
   101                           	psect	text88,global,reloc=2,class=CODE,delta=1
   102                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   103                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   104                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   105                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   106                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   107  0000                     
   108                           ; Version 2.32
   109                           ; Generated 02/02/2021 GMT
   110                           ; 
   111                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution. Publication is not required when
   125                           ;        this file is used in an embedded application.
   126                           ; 
   127                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   128                           ;        software without specific prior written permission.
   129                           ; 
   130                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   131                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   132                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   133                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   134                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   135                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   136                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   137                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   138                           ; 
   139                           ; 
   140                           ; Code-generator required, PIC18LF25K22 Definitions
   141                           ; 
   142                           ; SFR Addresses
   143  0000                     
   144                           	psect	mediumconst
   145  00783A                     __pmediumconst:
   146                           	callstack 0
   147  00783A  00                 	db	0
   148  00783B                     _arialNarrow_12ptBitmaps:
   149                           	callstack 0
   150  00783B  00                 	db	0
   151  00783C  00                 	db	0
   152  00783D  00                 	db	0
   153  00783E  00                 	db	0
   154  00783F  00                 	db	0
   155  007840  00                 	db	0
   156  007841  00                 	db	0
   157  007842  00                 	db	0
   158  007843  00                 	db	0
   159  007844  00                 	db	0
   160  007845  00                 	db	0
   161  007846  00                 	db	0
   162  007847  00                 	db	0
   163  007848  00                 	db	0
   164  007849  00                 	db	0
   165  00784A  00                 	db	0
   166  00784B  C0                 	db	192
   167  00784C  C0                 	db	192
   168  00784D  C0                 	db	192
   169  00784E  C0                 	db	192
   170  00784F  C0                 	db	192
   171  007850  C0                 	db	192
   172  007851  C0                 	db	192
   173  007852  C0                 	db	192
   174  007853  00                 	db	0
   175  007854  C0                 	db	192
   176  007855  C0                 	db	192
   177  007856  00                 	db	0
   178  007857  00                 	db	0
   179  007858  00                 	db	0
   180  007859  00                 	db	0
   181  00785A  D8                 	db	216
   182  00785B  D8                 	db	216
   183  00785C  D8                 	db	216
   184  00785D  D8                 	db	216
   185  00785E  00                 	db	0
   186  00785F  00                 	db	0
   187  007860  00                 	db	0
   188  007861  00                 	db	0
   189  007862  00                 	db	0
   190  007863  00                 	db	0
   191  007864  00                 	db	0
   192  007865  00                 	db	0
   193  007866  00                 	db	0
   194  007867  00                 	db	0
   195  007868  00                 	db	0
   196  007869  12                 	db	18
   197  00786A  12                 	db	18
   198  00786B  24                 	db	36
   199  00786C  FE                 	db	254
   200  00786D  FE                 	db	254
   201  00786E  48                 	db	72
   202  00786F  FE                 	db	254
   203  007870  FE                 	db	254
   204  007871  48                 	db	72
   205  007872  90                 	db	144
   206  007873  90                 	db	144
   207  007874  00                 	db	0
   208  007875  00                 	db	0
   209  007876  00                 	db	0
   210  007877  10                 	db	16
   211  007878  7C                 	db	124
   212  007879  FC                 	db	252
   213  00787A  D6                 	db	214
   214  00787B  D0                 	db	208
   215  00787C  F0                 	db	240
   216  00787D  7C                 	db	124
   217  00787E  1E                 	db	30
   218  00787F  16                 	db	22
   219  007880  D6                 	db	214
   220  007881  7E                 	db	126
   221  007882  7C                 	db	124
   222  007883  10                 	db	16
   223  007884  00                 	db	0
   224  007885  00                 	db	0
   225  007886  00                 	db	0
   226  007887  00                 	db	0
   227  007888  61                 	db	97
   228  007889  00                 	db	0
   229  00788A  91                 	db	145
   230  00788B  00                 	db	0
   231  00788C  92                 	db	146
   232  00788D  00                 	db	0
   233  00788E  92                 	db	146
   234  00788F  00                 	db	0
   235  007890  94                 	db	148
   236  007891  00                 	db	0
   237  007892  65                 	db	101
   238  007893  80                 	db	128
   239  007894  06                 	db	6
   240  007895  40                 	db	64
   241  007896  0A                 	db	10
   242  007897  40                 	db	64
   243  007898  0A                 	db	10
   244  007899  40                 	db	64
   245  00789A  12                 	db	18
   246  00789B  40                 	db	64
   247  00789C  11                 	db	17
   248  00789D  80                 	db	128
   249  00789E  00                 	db	0
   250  00789F  00                 	db	0
   251  0078A0  00                 	db	0
   252  0078A1  00                 	db	0
   253  0078A2  00                 	db	0
   254  0078A3  00                 	db	0
   255  0078A4  00                 	db	0
   256  0078A5  38                 	db	56
   257  0078A6  7C                 	db	124
   258  0078A7  6C                 	db	108
   259  0078A8  7C                 	db	124
   260  0078A9  30                 	db	48
   261  0078AA  78                 	db	120
   262  0078AB  DA                 	db	218
   263  0078AC  CE                 	db	206
   264  0078AD  CE                 	db	206
   265  0078AE  FF                 	db	255
   266  0078AF  7A                 	db	122
   267  0078B0  00                 	db	0
   268  0078B1  00                 	db	0
   269  0078B2  00                 	db	0
   270  0078B3  00                 	db	0
   271  0078B4  C0                 	db	192
   272  0078B5  C0                 	db	192
   273  0078B6  C0                 	db	192
   274  0078B7  C0                 	db	192
   275  0078B8  00                 	db	0
   276  0078B9  00                 	db	0
   277  0078BA  00                 	db	0
   278  0078BB  00                 	db	0
   279  0078BC  00                 	db	0
   280  0078BD  00                 	db	0
   281  0078BE  00                 	db	0
   282  0078BF  00                 	db	0
   283  0078C0  00                 	db	0
   284  0078C1  00                 	db	0
   285  0078C2  00                 	db	0
   286  0078C3  10                 	db	16
   287  0078C4  20                 	db	32
   288  0078C5  60                 	db	96
   289  0078C6  60                 	db	96
   290  0078C7  C0                 	db	192
   291  0078C8  C0                 	db	192
   292  0078C9  C0                 	db	192
   293  0078CA  C0                 	db	192
   294  0078CB  C0                 	db	192
   295  0078CC  C0                 	db	192
   296  0078CD  60                 	db	96
   297  0078CE  60                 	db	96
   298  0078CF  20                 	db	32
   299  0078D0  10                 	db	16
   300  0078D1  00                 	db	0
   301  0078D2  80                 	db	128
   302  0078D3  40                 	db	64
   303  0078D4  60                 	db	96
   304  0078D5  20                 	db	32
   305  0078D6  30                 	db	48
   306  0078D7  30                 	db	48
   307  0078D8  30                 	db	48
   308  0078D9  30                 	db	48
   309  0078DA  30                 	db	48
   310  0078DB  30                 	db	48
   311  0078DC  60                 	db	96
   312  0078DD  60                 	db	96
   313  0078DE  40                 	db	64
   314  0078DF  80                 	db	128
   315  0078E0  00                 	db	0
   316  0078E1  20                 	db	32
   317  0078E2  A8                 	db	168
   318  0078E3  F8                 	db	248
   319  0078E4  20                 	db	32
   320  0078E5  50                 	db	80
   321  0078E6  50                 	db	80
   322  0078E7  00                 	db	0
   323  0078E8  00                 	db	0
   324  0078E9  00                 	db	0
   325  0078EA  00                 	db	0
   326  0078EB  00                 	db	0
   327  0078EC  00                 	db	0
   328  0078ED  00                 	db	0
   329  0078EE  00                 	db	0
   330  0078EF  00                 	db	0
   331  0078F0  00                 	db	0
   332  0078F1  00                 	db	0
   333  0078F2  00                 	db	0
   334  0078F3  30                 	db	48
   335  0078F4  30                 	db	48
   336  0078F5  30                 	db	48
   337  0078F6  FC                 	db	252
   338  0078F7  FC                 	db	252
   339  0078F8  30                 	db	48
   340  0078F9  30                 	db	48
   341  0078FA  30                 	db	48
   342  0078FB  00                 	db	0
   343  0078FC  00                 	db	0
   344  0078FD  00                 	db	0
   345  0078FE  00                 	db	0
   346  0078FF  00                 	db	0
   347  007900  00                 	db	0
   348  007901  00                 	db	0
   349  007902  00                 	db	0
   350  007903  00                 	db	0
   351  007904  00                 	db	0
   352  007905  00                 	db	0
   353  007906  00                 	db	0
   354  007907  00                 	db	0
   355  007908  C0                 	db	192
   356  007909  C0                 	db	192
   357  00790A  40                 	db	64
   358  00790B  40                 	db	64
   359  00790C  80                 	db	128
   360  00790D  00                 	db	0
   361  00790E  00                 	db	0
   362  00790F  00                 	db	0
   363  007910  00                 	db	0
   364  007911  00                 	db	0
   365  007912  00                 	db	0
   366  007913  00                 	db	0
   367  007914  F0                 	db	240
   368  007915  F0                 	db	240
   369  007916  00                 	db	0
   370  007917  00                 	db	0
   371  007918  00                 	db	0
   372  007919  00                 	db	0
   373  00791A  00                 	db	0
   374  00791B  00                 	db	0
   375  00791C  00                 	db	0
   376  00791D  00                 	db	0
   377  00791E  00                 	db	0
   378  00791F  00                 	db	0
   379  007920  00                 	db	0
   380  007921  00                 	db	0
   381  007922  00                 	db	0
   382  007923  00                 	db	0
   383  007924  00                 	db	0
   384  007925  00                 	db	0
   385  007926  C0                 	db	192
   386  007927  C0                 	db	192
   387  007928  00                 	db	0
   388  007929  00                 	db	0
   389  00792A  00                 	db	0
   390  00792B  00                 	db	0
   391  00792C  30                 	db	48
   392  00792D  30                 	db	48
   393  00792E  30                 	db	48
   394  00792F  60                 	db	96
   395  007930  60                 	db	96
   396  007931  60                 	db	96
   397  007932  60                 	db	96
   398  007933  60                 	db	96
   399  007934  C0                 	db	192
   400  007935  C0                 	db	192
   401  007936  C0                 	db	192
   402  007937  00                 	db	0
   403  007938  00                 	db	0
   404  007939  00                 	db	0
   405  00793A  00                 	db	0
   406  00793B  78                 	db	120
   407  00793C  78                 	db	120
   408  00793D  CC                 	db	204
   409  00793E  CC                 	db	204
   410  00793F  CC                 	db	204
   411  007940  CC                 	db	204
   412  007941  CC                 	db	204
   413  007942  CC                 	db	204
   414  007943  CC                 	db	204
   415  007944  78                 	db	120
   416  007945  78                 	db	120
   417  007946  00                 	db	0
   418  007947  00                 	db	0
   419  007948  00                 	db	0
   420  007949  00                 	db	0
   421  00794A  30                 	db	48
   422  00794B  30                 	db	48
   423  00794C  70                 	db	112
   424  00794D  F0                 	db	240
   425  00794E  B0                 	db	176
   426  00794F  30                 	db	48
   427  007950  30                 	db	48
   428  007951  30                 	db	48
   429  007952  30                 	db	48
   430  007953  30                 	db	48
   431  007954  30                 	db	48
   432  007955  00                 	db	0
   433  007956  00                 	db	0
   434  007957  00                 	db	0
   435  007958  00                 	db	0
   436  007959  38                 	db	56
   437  00795A  7C                 	db	124
   438  00795B  CC                 	db	204
   439  00795C  CC                 	db	204
   440  00795D  0C                 	db	12
   441  00795E  18                 	db	24
   442  00795F  38                 	db	56
   443  007960  70                 	db	112
   444  007961  60                 	db	96
   445  007962  FC                 	db	252
   446  007963  FC                 	db	252
   447  007964  00                 	db	0
   448  007965  00                 	db	0
   449  007966  00                 	db	0
   450  007967  00                 	db	0
   451  007968  78                 	db	120
   452  007969  FC                 	db	252
   453  00796A  CC                 	db	204
   454  00796B  0C                 	db	12
   455  00796C  38                 	db	56
   456  00796D  38                 	db	56
   457  00796E  0C                 	db	12
   458  00796F  0C                 	db	12
   459  007970  CC                 	db	204
   460  007971  F8                 	db	248
   461  007972  78                 	db	120
   462  007973  00                 	db	0
   463  007974  00                 	db	0
   464  007975  00                 	db	0
   465  007976  00                 	db	0
   466  007977  0C                 	db	12
   467  007978  1C                 	db	28
   468  007979  1C                 	db	28
   469  00797A  3C                 	db	60
   470  00797B  2C                 	db	44
   471  00797C  6C                 	db	108
   472  00797D  CC                 	db	204
   473  00797E  FE                 	db	254
   474  00797F  FE                 	db	254
   475  007980  0C                 	db	12
   476  007981  0C                 	db	12
   477  007982  00                 	db	0
   478  007983  00                 	db	0
   479  007984  00                 	db	0
   480  007985  00                 	db	0
   481  007986  7C                 	db	124
   482  007987  7C                 	db	124
   483  007988  60                 	db	96
   484  007989  D8                 	db	216
   485  00798A  FC                 	db	252
   486  00798B  CC                 	db	204
   487  00798C  0C                 	db	12
   488  00798D  CC                 	db	204
   489  00798E  CC                 	db	204
   490  00798F  78                 	db	120
   491  007990  78                 	db	120
   492  007991  00                 	db	0
   493  007992  00                 	db	0
   494  007993  00                 	db	0
   495  007994  00                 	db	0
   496  007995  70                 	db	112
   497  007996  78                 	db	120
   498  007997  D8                 	db	216
   499  007998  C0                 	db	192
   500  007999  F0                 	db	240
   501  00799A  F8                 	db	248
   502  00799B  D8                 	db	216
   503  00799C  D8                 	db	216
   504  00799D  D8                 	db	216
   505  00799E  78                 	db	120
   506  00799F  70                 	db	112
   507  0079A0  00                 	db	0
   508  0079A1  00                 	db	0
   509  0079A2  00                 	db	0
   510  0079A3  00                 	db	0
   511  0079A4  F8                 	db	248
   512  0079A5  F8                 	db	248
   513  0079A6  18                 	db	24
   514  0079A7  10                 	db	16
   515  0079A8  30                 	db	48
   516  0079A9  30                 	db	48
   517  0079AA  20                 	db	32
   518  0079AB  60                 	db	96
   519  0079AC  60                 	db	96
   520  0079AD  60                 	db	96
   521  0079AE  60                 	db	96
   522  0079AF  00                 	db	0
   523  0079B0  00                 	db	0
   524  0079B1  00                 	db	0
   525  0079B2  00                 	db	0
   526  0079B3  78                 	db	120
   527  0079B4  FC                 	db	252
   528  0079B5  CC                 	db	204
   529  0079B6  CC                 	db	204
   530  0079B7  78                 	db	120
   531  0079B8  78                 	db	120
   532  0079B9  CC                 	db	204
   533  0079BA  CC                 	db	204
   534  0079BB  CC                 	db	204
   535  0079BC  FC                 	db	252
   536  0079BD  78                 	db	120
   537  0079BE  00                 	db	0
   538  0079BF  00                 	db	0
   539  0079C0  00                 	db	0
   540  0079C1  00                 	db	0
   541  0079C2  70                 	db	112
   542  0079C3  F8                 	db	248
   543  0079C4  CC                 	db	204
   544  0079C5  CC                 	db	204
   545  0079C6  CC                 	db	204
   546  0079C7  FC                 	db	252
   547  0079C8  7C                 	db	124
   548  0079C9  0C                 	db	12
   549  0079CA  CC                 	db	204
   550  0079CB  F8                 	db	248
   551  0079CC  70                 	db	112
   552  0079CD  00                 	db	0
   553  0079CE  00                 	db	0
   554  0079CF  00                 	db	0
   555  0079D0  00                 	db	0
   556  0079D1  00                 	db	0
   557  0079D2  00                 	db	0
   558  0079D3  00                 	db	0
   559  0079D4  C0                 	db	192
   560  0079D5  C0                 	db	192
   561  0079D6  00                 	db	0
   562  0079D7  00                 	db	0
   563  0079D8  00                 	db	0
   564  0079D9  00                 	db	0
   565  0079DA  C0                 	db	192
   566  0079DB  C0                 	db	192
   567  0079DC  00                 	db	0
   568  0079DD  00                 	db	0
   569  0079DE  00                 	db	0
   570  0079DF  00                 	db	0
   571  0079E0  00                 	db	0
   572  0079E1  00                 	db	0
   573  0079E2  00                 	db	0
   574  0079E3  C0                 	db	192
   575  0079E4  C0                 	db	192
   576  0079E5  00                 	db	0
   577  0079E6  00                 	db	0
   578  0079E7  00                 	db	0
   579  0079E8  00                 	db	0
   580  0079E9  C0                 	db	192
   581  0079EA  C0                 	db	192
   582  0079EB  40                 	db	64
   583  0079EC  40                 	db	64
   584  0079ED  80                 	db	128
   585  0079EE  00                 	db	0
   586  0079EF  00                 	db	0
   587  0079F0  04                 	db	4
   588  0079F1  1C                 	db	28
   589  0079F2  38                 	db	56
   590  0079F3  F0                 	db	240
   591  0079F4  C0                 	db	192
   592  0079F5  F0                 	db	240
   593  0079F6  38                 	db	56
   594  0079F7  1C                 	db	28
   595  0079F8  04                 	db	4
   596  0079F9  00                 	db	0
   597  0079FA  00                 	db	0
   598  0079FB  00                 	db	0
   599  0079FC  00                 	db	0
   600  0079FD  00                 	db	0
   601  0079FE  00                 	db	0
   602  0079FF  00                 	db	0
   603  007A00  00                 	db	0
   604  007A01  FC                 	db	252
   605  007A02  FC                 	db	252
   606  007A03  00                 	db	0
   607  007A04  FC                 	db	252
   608  007A05  FC                 	db	252
   609  007A06  00                 	db	0
   610  007A07  00                 	db	0
   611  007A08  00                 	db	0
   612  007A09  00                 	db	0
   613  007A0A  00                 	db	0
   614  007A0B  00                 	db	0
   615  007A0C  00                 	db	0
   616  007A0D  00                 	db	0
   617  007A0E  80                 	db	128
   618  007A0F  E0                 	db	224
   619  007A10  70                 	db	112
   620  007A11  3C                 	db	60
   621  007A12  0C                 	db	12
   622  007A13  1C                 	db	28
   623  007A14  70                 	db	112
   624  007A15  E0                 	db	224
   625  007A16  80                 	db	128
   626  007A17  00                 	db	0
   627  007A18  00                 	db	0
   628  007A19  00                 	db	0
   629  007A1A  00                 	db	0
   630  007A1B  00                 	db	0
   631  007A1C  78                 	db	120
   632  007A1D  FC                 	db	252
   633  007A1E  CC                 	db	204
   634  007A1F  CC                 	db	204
   635  007A20  1C                 	db	28
   636  007A21  18                 	db	24
   637  007A22  30                 	db	48
   638  007A23  30                 	db	48
   639  007A24  00                 	db	0
   640  007A25  30                 	db	48
   641  007A26  30                 	db	48
   642  007A27  00                 	db	0
   643  007A28  00                 	db	0
   644  007A29  00                 	db	0
   645  007A2A  00                 	db	0
   646  007A2B  00                 	db	0
   647  007A2C  0F                 	db	15
   648  007A2D  C0                 	db	192
   649  007A2E  1F                 	db	31
   650  007A2F  E0                 	db	224
   651  007A30  30                 	db	48
   652  007A31  30                 	db	48
   653  007A32  66                 	db	102
   654  007A33  D8                 	db	216
   655  007A34  EF                 	db	239
   656  007A35  D8                 	db	216
   657  007A36  DD                 	db	221
   658  007A37  D8                 	db	216
   659  007A38  D8                 	db	216
   660  007A39  98                 	db	152
   661  007A3A  D9                 	db	217
   662  007A3B  98                 	db	152
   663  007A3C  D9                 	db	217
   664  007A3D  B0                 	db	176
   665  007A3E  DF                 	db	223
   666  007A3F  F0                 	db	240
   667  007A40  6E                 	db	110
   668  007A41  C8                 	db	200
   669  007A42  70                 	db	112
   670  007A43  10                 	db	16
   671  007A44  3F                 	db	63
   672  007A45  E0                 	db	224
   673  007A46  0F                 	db	15
   674  007A47  C0                 	db	192
   675  007A48  00                 	db	0
   676  007A49  00                 	db	0
   677  007A4A  1C                 	db	28
   678  007A4B  00                 	db	0
   679  007A4C  1C                 	db	28
   680  007A4D  00                 	db	0
   681  007A4E  1C                 	db	28
   682  007A4F  00                 	db	0
   683  007A50  36                 	db	54
   684  007A51  00                 	db	0
   685  007A52  36                 	db	54
   686  007A53  00                 	db	0
   687  007A54  36                 	db	54
   688  007A55  00                 	db	0
   689  007A56  63                 	db	99
   690  007A57  00                 	db	0
   691  007A58  7F                 	db	127
   692  007A59  00                 	db	0
   693  007A5A  7F                 	db	127
   694  007A5B  00                 	db	0
   695  007A5C  C1                 	db	193
   696  007A5D  80                 	db	128
   697  007A5E  C1                 	db	193
   698  007A5F  80                 	db	128
   699  007A60  00                 	db	0
   700  007A61  00                 	db	0
   701  007A62  00                 	db	0
   702  007A63  00                 	db	0
   703  007A64  00                 	db	0
   704  007A65  00                 	db	0
   705  007A66  00                 	db	0
   706  007A67  FC                 	db	252
   707  007A68  FE                 	db	254
   708  007A69  C6                 	db	198
   709  007A6A  C6                 	db	198
   710  007A6B  FC                 	db	252
   711  007A6C  FC                 	db	252
   712  007A6D  C6                 	db	198
   713  007A6E  C6                 	db	198
   714  007A6F  C6                 	db	198
   715  007A70  FE                 	db	254
   716  007A71  FC                 	db	252
   717  007A72  00                 	db	0
   718  007A73  00                 	db	0
   719  007A74  00                 	db	0
   720  007A75  00                 	db	0
   721  007A76  3C                 	db	60
   722  007A77  7E                 	db	126
   723  007A78  67                 	db	103
   724  007A79  C2                 	db	194
   725  007A7A  C0                 	db	192
   726  007A7B  C0                 	db	192
   727  007A7C  C0                 	db	192
   728  007A7D  C2                 	db	194
   729  007A7E  67                 	db	103
   730  007A7F  7E                 	db	126
   731  007A80  3C                 	db	60
   732  007A81  00                 	db	0
   733  007A82  00                 	db	0
   734  007A83  00                 	db	0
   735  007A84  00                 	db	0
   736  007A85  F8                 	db	248
   737  007A86  FC                 	db	252
   738  007A87  CE                 	db	206
   739  007A88  C6                 	db	198
   740  007A89  C6                 	db	198
   741  007A8A  C6                 	db	198
   742  007A8B  C6                 	db	198
   743  007A8C  C6                 	db	198
   744  007A8D  CE                 	db	206
   745  007A8E  FC                 	db	252
   746  007A8F  F8                 	db	248
   747  007A90  00                 	db	0
   748  007A91  00                 	db	0
   749  007A92  00                 	db	0
   750  007A93  00                 	db	0
   751  007A94  FE                 	db	254
   752  007A95  FE                 	db	254
   753  007A96  C0                 	db	192
   754  007A97  C0                 	db	192
   755  007A98  FE                 	db	254
   756  007A99  FE                 	db	254
   757  007A9A  C0                 	db	192
   758  007A9B  C0                 	db	192
   759  007A9C  C0                 	db	192
   760  007A9D  FE                 	db	254
   761  007A9E  FE                 	db	254
   762  007A9F  00                 	db	0
   763  007AA0  00                 	db	0
   764  007AA1  00                 	db	0
   765  007AA2  00                 	db	0
   766  007AA3  FC                 	db	252
   767  007AA4  FC                 	db	252
   768  007AA5  C0                 	db	192
   769  007AA6  C0                 	db	192
   770  007AA7  F8                 	db	248
   771  007AA8  F8                 	db	248
   772  007AA9  C0                 	db	192
   773  007AAA  C0                 	db	192
   774  007AAB  C0                 	db	192
   775  007AAC  C0                 	db	192
   776  007AAD  C0                 	db	192
   777  007AAE  00                 	db	0
   778  007AAF  00                 	db	0
   779  007AB0  00                 	db	0
   780  007AB1  00                 	db	0
   781  007AB2  3C                 	db	60
   782  007AB3  7E                 	db	126
   783  007AB4  67                 	db	103
   784  007AB5  C3                 	db	195
   785  007AB6  C0                 	db	192
   786  007AB7  CF                 	db	207
   787  007AB8  CF                 	db	207
   788  007AB9  C3                 	db	195
   789  007ABA  63                 	db	99
   790  007ABB  7F                 	db	127
   791  007ABC  3C                 	db	60
   792  007ABD  00                 	db	0
   793  007ABE  00                 	db	0
   794  007ABF  00                 	db	0
   795  007AC0  00                 	db	0
   796  007AC1  C6                 	db	198
   797  007AC2  C6                 	db	198
   798  007AC3  C6                 	db	198
   799  007AC4  C6                 	db	198
   800  007AC5  FE                 	db	254
   801  007AC6  FE                 	db	254
   802  007AC7  C6                 	db	198
   803  007AC8  C6                 	db	198
   804  007AC9  C6                 	db	198
   805  007ACA  C6                 	db	198
   806  007ACB  C6                 	db	198
   807  007ACC  00                 	db	0
   808  007ACD  00                 	db	0
   809  007ACE  00                 	db	0
   810  007ACF  00                 	db	0
   811  007AD0  C0                 	db	192
   812  007AD1  C0                 	db	192
   813  007AD2  C0                 	db	192
   814  007AD3  C0                 	db	192
   815  007AD4  C0                 	db	192
   816  007AD5  C0                 	db	192
   817  007AD6  C0                 	db	192
   818  007AD7  C0                 	db	192
   819  007AD8  C0                 	db	192
   820  007AD9  C0                 	db	192
   821  007ADA  C0                 	db	192
   822  007ADB  00                 	db	0
   823  007ADC  00                 	db	0
   824  007ADD  00                 	db	0
   825  007ADE  00                 	db	0
   826  007ADF  0C                 	db	12
   827  007AE0  0C                 	db	12
   828  007AE1  0C                 	db	12
   829  007AE2  0C                 	db	12
   830  007AE3  0C                 	db	12
   831  007AE4  0C                 	db	12
   832  007AE5  0C                 	db	12
   833  007AE6  CC                 	db	204
   834  007AE7  CC                 	db	204
   835  007AE8  FC                 	db	252
   836  007AE9  78                 	db	120
   837  007AEA  00                 	db	0
   838  007AEB  00                 	db	0
   839  007AEC  00                 	db	0
   840  007AED  00                 	db	0
   841  007AEE  C3                 	db	195
   842  007AEF  C6                 	db	198
   843  007AF0  CC                 	db	204
   844  007AF1  CC                 	db	204
   845  007AF2  D8                 	db	216
   846  007AF3  FC                 	db	252
   847  007AF4  EC                 	db	236
   848  007AF5  C6                 	db	198
   849  007AF6  C6                 	db	198
   850  007AF7  C3                 	db	195
   851  007AF8  C3                 	db	195
   852  007AF9  00                 	db	0
   853  007AFA  00                 	db	0
   854  007AFB  00                 	db	0
   855  007AFC  00                 	db	0
   856  007AFD  C0                 	db	192
   857  007AFE  C0                 	db	192
   858  007AFF  C0                 	db	192
   859  007B00  C0                 	db	192
   860  007B01  C0                 	db	192
   861  007B02  C0                 	db	192
   862  007B03  C0                 	db	192
   863  007B04  C0                 	db	192
   864  007B05  C0                 	db	192
   865  007B06  FE                 	db	254
   866  007B07  FE                 	db	254
   867  007B08  00                 	db	0
   868  007B09  00                 	db	0
   869  007B0A  00                 	db	0
   870  007B0B  00                 	db	0
   871  007B0C  00                 	db	0
   872  007B0D  E3                 	db	227
   873  007B0E  80                 	db	128
   874  007B0F  E3                 	db	227
   875  007B10  80                 	db	128
   876  007B11  E3                 	db	227
   877  007B12  80                 	db	128
   878  007B13  F7                 	db	247
   879  007B14  80                 	db	128
   880  007B15  D5                 	db	213
   881  007B16  80                 	db	128
   882  007B17  D5                 	db	213
   883  007B18  80                 	db	128
   884  007B19  D5                 	db	213
   885  007B1A  80                 	db	128
   886  007B1B  D5                 	db	213
   887  007B1C  80                 	db	128
   888  007B1D  DD                 	db	221
   889  007B1E  80                 	db	128
   890  007B1F  D9                 	db	217
   891  007B20  80                 	db	128
   892  007B21  C9                 	db	201
   893  007B22  80                 	db	128
   894  007B23  00                 	db	0
   895  007B24  00                 	db	0
   896  007B25  00                 	db	0
   897  007B26  00                 	db	0
   898  007B27  00                 	db	0
   899  007B28  00                 	db	0
   900  007B29  00                 	db	0
   901  007B2A  C6                 	db	198
   902  007B2B  E6                 	db	230
   903  007B2C  E6                 	db	230
   904  007B2D  E6                 	db	230
   905  007B2E  F6                 	db	246
   906  007B2F  D6                 	db	214
   907  007B30  DE                 	db	222
   908  007B31  DE                 	db	222
   909  007B32  CE                 	db	206
   910  007B33  CE                 	db	206
   911  007B34  C6                 	db	198
   912  007B35  00                 	db	0
   913  007B36  00                 	db	0
   914  007B37  00                 	db	0
   915  007B38  00                 	db	0
   916  007B39  3C                 	db	60
   917  007B3A  7E                 	db	126
   918  007B3B  67                 	db	103
   919  007B3C  C3                 	db	195
   920  007B3D  C3                 	db	195
   921  007B3E  C3                 	db	195
   922  007B3F  C3                 	db	195
   923  007B40  C3                 	db	195
   924  007B41  66                 	db	102
   925  007B42  7E                 	db	126
   926  007B43  3C                 	db	60
   927  007B44  00                 	db	0
   928  007B45  00                 	db	0
   929  007B46  00                 	db	0
   930  007B47  00                 	db	0
   931  007B48  FC                 	db	252
   932  007B49  FE                 	db	254
   933  007B4A  C6                 	db	198
   934  007B4B  C6                 	db	198
   935  007B4C  C6                 	db	198
   936  007B4D  FE                 	db	254
   937  007B4E  FC                 	db	252
   938  007B4F  C0                 	db	192
   939  007B50  C0                 	db	192
   940  007B51  C0                 	db	192
   941  007B52  C0                 	db	192
   942  007B53  00                 	db	0
   943  007B54  00                 	db	0
   944  007B55  00                 	db	0
   945  007B56  00                 	db	0
   946  007B57  00                 	db	0
   947  007B58  3C                 	db	60
   948  007B59  00                 	db	0
   949  007B5A  7E                 	db	126
   950  007B5B  00                 	db	0
   951  007B5C  E7                 	db	231
   952  007B5D  00                 	db	0
   953  007B5E  C3                 	db	195
   954  007B5F  00                 	db	0
   955  007B60  C3                 	db	195
   956  007B61  00                 	db	0
   957  007B62  C3                 	db	195
   958  007B63  00                 	db	0
   959  007B64  C3                 	db	195
   960  007B65  00                 	db	0
   961  007B66  CB                 	db	203
   962  007B67  00                 	db	0
   963  007B68  66                 	db	102
   964  007B69  00                 	db	0
   965  007B6A  7F                 	db	127
   966  007B6B  00                 	db	0
   967  007B6C  3D                 	db	61
   968  007B6D  80                 	db	128
   969  007B6E  00                 	db	0
   970  007B6F  80                 	db	128
   971  007B70  00                 	db	0
   972  007B71  00                 	db	0
   973  007B72  00                 	db	0
   974  007B73  00                 	db	0
   975  007B74  00                 	db	0
   976  007B75  FC                 	db	252
   977  007B76  FE                 	db	254
   978  007B77  C6                 	db	198
   979  007B78  C6                 	db	198
   980  007B79  FE                 	db	254
   981  007B7A  FC                 	db	252
   982  007B7B  CC                 	db	204
   983  007B7C  C6                 	db	198
   984  007B7D  C6                 	db	198
   985  007B7E  C6                 	db	198
   986  007B7F  C3                 	db	195
   987  007B80  00                 	db	0
   988  007B81  00                 	db	0
   989  007B82  00                 	db	0
   990  007B83  00                 	db	0
   991  007B84  7C                 	db	124
   992  007B85  FE                 	db	254
   993  007B86  C6                 	db	198
   994  007B87  C6                 	db	198
   995  007B88  F0                 	db	240
   996  007B89  7C                 	db	124
   997  007B8A  0E                 	db	14
   998  007B8B  C6                 	db	198
   999  007B8C  C6                 	db	198
  1000  007B8D  FE                 	db	254
  1001  007B8E  7C                 	db	124
  1002  007B8F  00                 	db	0
  1003  007B90  00                 	db	0
  1004  007B91  00                 	db	0
  1005  007B92  00                 	db	0
  1006  007B93  FF                 	db	255
  1007  007B94  FF                 	db	255
  1008  007B95  18                 	db	24
  1009  007B96  18                 	db	24
  1010  007B97  18                 	db	24
  1011  007B98  18                 	db	24
  1012  007B99  18                 	db	24
  1013  007B9A  18                 	db	24
  1014  007B9B  18                 	db	24
  1015  007B9C  18                 	db	24
  1016  007B9D  18                 	db	24
  1017  007B9E  00                 	db	0
  1018  007B9F  00                 	db	0
  1019  007BA0  00                 	db	0
  1020  007BA1  00                 	db	0
  1021  007BA2  C6                 	db	198
  1022  007BA3  C6                 	db	198
  1023  007BA4  C6                 	db	198
  1024  007BA5  C6                 	db	198
  1025  007BA6  C6                 	db	198
  1026  007BA7  C6                 	db	198
  1027  007BA8  C6                 	db	198
  1028  007BA9  C6                 	db	198
  1029  007BAA  C6                 	db	198
  1030  007BAB  7E                 	db	126
  1031  007BAC  38                 	db	56
  1032  007BAD  00                 	db	0
  1033  007BAE  00                 	db	0
  1034  007BAF  00                 	db	0
  1035  007BB0  00                 	db	0
  1036  007BB1  00                 	db	0
  1037  007BB2  C1                 	db	193
  1038  007BB3  80                 	db	128
  1039  007BB4  C1                 	db	193
  1040  007BB5  80                 	db	128
  1041  007BB6  63                 	db	99
  1042  007BB7  00                 	db	0
  1043  007BB8  63                 	db	99
  1044  007BB9  00                 	db	0
  1045  007BBA  63                 	db	99
  1046  007BBB  00                 	db	0
  1047  007BBC  36                 	db	54
  1048  007BBD  00                 	db	0
  1049  007BBE  36                 	db	54
  1050  007BBF  00                 	db	0
  1051  007BC0  36                 	db	54
  1052  007BC1  00                 	db	0
  1053  007BC2  1C                 	db	28
  1054  007BC3  00                 	db	0
  1055  007BC4  1C                 	db	28
  1056  007BC5  00                 	db	0
  1057  007BC6  1C                 	db	28
  1058  007BC7  00                 	db	0
  1059  007BC8  00                 	db	0
  1060  007BC9  00                 	db	0
  1061  007BCA  00                 	db	0
  1062  007BCB  00                 	db	0
  1063  007BCC  00                 	db	0
  1064  007BCD  00                 	db	0
  1065  007BCE  00                 	db	0
  1066  007BCF  00                 	db	0
  1067  007BD0  C4                 	db	196
  1068  007BD1  60                 	db	96
  1069  007BD2  C4                 	db	196
  1070  007BD3  60                 	db	96
  1071  007BD4  CA                 	db	202
  1072  007BD5  60                 	db	96
  1073  007BD6  6A                 	db	106
  1074  007BD7  C0                 	db	192
  1075  007BD8  6A                 	db	106
  1076  007BD9  C0                 	db	192
  1077  007BDA  6A                 	db	106
  1078  007BDB  C0                 	db	192
  1079  007BDC  6A                 	db	106
  1080  007BDD  C0                 	db	192
  1081  007BDE  6A                 	db	106
  1082  007BDF  C0                 	db	192
  1083  007BE0  31                 	db	49
  1084  007BE1  80                 	db	128
  1085  007BE2  31                 	db	49
  1086  007BE3  80                 	db	128
  1087  007BE4  31                 	db	49
  1088  007BE5  80                 	db	128
  1089  007BE6  00                 	db	0
  1090  007BE7  00                 	db	0
  1091  007BE8  00                 	db	0
  1092  007BE9  00                 	db	0
  1093  007BEA  00                 	db	0
  1094  007BEB  00                 	db	0
  1095  007BEC  00                 	db	0
  1096  007BED  00                 	db	0
  1097  007BEE  C1                 	db	193
  1098  007BEF  80                 	db	128
  1099  007BF0  63                 	db	99
  1100  007BF1  00                 	db	0
  1101  007BF2  36                 	db	54
  1102  007BF3  00                 	db	0
  1103  007BF4  36                 	db	54
  1104  007BF5  00                 	db	0
  1105  007BF6  1C                 	db	28
  1106  007BF7  00                 	db	0
  1107  007BF8  1C                 	db	28
  1108  007BF9  00                 	db	0
  1109  007BFA  1C                 	db	28
  1110  007BFB  00                 	db	0
  1111  007BFC  36                 	db	54
  1112  007BFD  00                 	db	0
  1113  007BFE  36                 	db	54
  1114  007BFF  00                 	db	0
  1115  007C00  63                 	db	99
  1116  007C01  00                 	db	0
  1117  007C02  C1                 	db	193
  1118  007C03  80                 	db	128
  1119  007C04  00                 	db	0
  1120  007C05  00                 	db	0
  1121  007C06  00                 	db	0
  1122  007C07  00                 	db	0
  1123  007C08  00                 	db	0
  1124  007C09  00                 	db	0
  1125  007C0A  00                 	db	0
  1126  007C0B  C3                 	db	195
  1127  007C0C  66                 	db	102
  1128  007C0D  66                 	db	102
  1129  007C0E  3C                 	db	60
  1130  007C0F  3C                 	db	60
  1131  007C10  18                 	db	24
  1132  007C11  18                 	db	24
  1133  007C12  18                 	db	24
  1134  007C13  18                 	db	24
  1135  007C14  18                 	db	24
  1136  007C15  18                 	db	24
  1137  007C16  00                 	db	0
  1138  007C17  00                 	db	0
  1139  007C18  00                 	db	0
  1140  007C19  00                 	db	0
  1141  007C1A  FE                 	db	254
  1142  007C1B  FE                 	db	254
  1143  007C1C  06                 	db	6
  1144  007C1D  0C                 	db	12
  1145  007C1E  18                 	db	24
  1146  007C1F  30                 	db	48
  1147  007C20  30                 	db	48
  1148  007C21  60                 	db	96
  1149  007C22  C0                 	db	192
  1150  007C23  FE                 	db	254
  1151  007C24  FE                 	db	254
  1152  007C25  00                 	db	0
  1153  007C26  00                 	db	0
  1154  007C27  00                 	db	0
  1155  007C28  00                 	db	0
  1156  007C29  E0                 	db	224
  1157  007C2A  E0                 	db	224
  1158  007C2B  C0                 	db	192
  1159  007C2C  C0                 	db	192
  1160  007C2D  C0                 	db	192
  1161  007C2E  C0                 	db	192
  1162  007C2F  C0                 	db	192
  1163  007C30  C0                 	db	192
  1164  007C31  C0                 	db	192
  1165  007C32  C0                 	db	192
  1166  007C33  C0                 	db	192
  1167  007C34  C0                 	db	192
  1168  007C35  E0                 	db	224
  1169  007C36  E0                 	db	224
  1170  007C37  00                 	db	0
  1171  007C38  C0                 	db	192
  1172  007C39  C0                 	db	192
  1173  007C3A  C0                 	db	192
  1174  007C3B  60                 	db	96
  1175  007C3C  60                 	db	96
  1176  007C3D  60                 	db	96
  1177  007C3E  60                 	db	96
  1178  007C3F  60                 	db	96
  1179  007C40  30                 	db	48
  1180  007C41  30                 	db	48
  1181  007C42  30                 	db	48
  1182  007C43  00                 	db	0
  1183  007C44  00                 	db	0
  1184  007C45  00                 	db	0
  1185  007C46  00                 	db	0
  1186  007C47  E0                 	db	224
  1187  007C48  E0                 	db	224
  1188  007C49  60                 	db	96
  1189  007C4A  60                 	db	96
  1190  007C4B  60                 	db	96
  1191  007C4C  60                 	db	96
  1192  007C4D  60                 	db	96
  1193  007C4E  60                 	db	96
  1194  007C4F  60                 	db	96
  1195  007C50  60                 	db	96
  1196  007C51  60                 	db	96
  1197  007C52  60                 	db	96
  1198  007C53  E0                 	db	224
  1199  007C54  E0                 	db	224
  1200  007C55  00                 	db	0
  1201  007C56  38                 	db	56
  1202  007C57  38                 	db	56
  1203  007C58  6C                 	db	108
  1204  007C59  6C                 	db	108
  1205  007C5A  6C                 	db	108
  1206  007C5B  C6                 	db	198
  1207  007C5C  00                 	db	0
  1208  007C5D  00                 	db	0
  1209  007C5E  00                 	db	0
  1210  007C5F  00                 	db	0
  1211  007C60  00                 	db	0
  1212  007C61  00                 	db	0
  1213  007C62  00                 	db	0
  1214  007C63  00                 	db	0
  1215  007C64  00                 	db	0
  1216  007C65  00                 	db	0
  1217  007C66  00                 	db	0
  1218  007C67  00                 	db	0
  1219  007C68  00                 	db	0
  1220  007C69  00                 	db	0
  1221  007C6A  00                 	db	0
  1222  007C6B  00                 	db	0
  1223  007C6C  00                 	db	0
  1224  007C6D  00                 	db	0
  1225  007C6E  00                 	db	0
  1226  007C6F  00                 	db	0
  1227  007C70  00                 	db	0
  1228  007C71  FE                 	db	254
  1229  007C72  00                 	db	0
  1230  007C73  00                 	db	0
  1231  007C74  C0                 	db	192
  1232  007C75  60                 	db	96
  1233  007C76  00                 	db	0
  1234  007C77  00                 	db	0
  1235  007C78  00                 	db	0
  1236  007C79  00                 	db	0
  1237  007C7A  00                 	db	0
  1238  007C7B  00                 	db	0
  1239  007C7C  00                 	db	0
  1240  007C7D  00                 	db	0
  1241  007C7E  00                 	db	0
  1242  007C7F  00                 	db	0
  1243  007C80  00                 	db	0
  1244  007C81  00                 	db	0
  1245  007C82  00                 	db	0
  1246  007C83  00                 	db	0
  1247  007C84  00                 	db	0
  1248  007C85  00                 	db	0
  1249  007C86  78                 	db	120
  1250  007C87  FC                 	db	252
  1251  007C88  CC                 	db	204
  1252  007C89  3C                 	db	60
  1253  007C8A  FC                 	db	252
  1254  007C8B  CC                 	db	204
  1255  007C8C  FC                 	db	252
  1256  007C8D  6C                 	db	108
  1257  007C8E  00                 	db	0
  1258  007C8F  00                 	db	0
  1259  007C90  00                 	db	0
  1260  007C91  00                 	db	0
  1261  007C92  C0                 	db	192
  1262  007C93  C0                 	db	192
  1263  007C94  C0                 	db	192
  1264  007C95  F8                 	db	248
  1265  007C96  FC                 	db	252
  1266  007C97  CC                 	db	204
  1267  007C98  CC                 	db	204
  1268  007C99  CC                 	db	204
  1269  007C9A  CC                 	db	204
  1270  007C9B  F8                 	db	248
  1271  007C9C  F8                 	db	248
  1272  007C9D  00                 	db	0
  1273  007C9E  00                 	db	0
  1274  007C9F  00                 	db	0
  1275  007CA0  00                 	db	0
  1276  007CA1  00                 	db	0
  1277  007CA2  00                 	db	0
  1278  007CA3  00                 	db	0
  1279  007CA4  70                 	db	112
  1280  007CA5  78                 	db	120
  1281  007CA6  D8                 	db	216
  1282  007CA7  C0                 	db	192
  1283  007CA8  C0                 	db	192
  1284  007CA9  D8                 	db	216
  1285  007CAA  78                 	db	120
  1286  007CAB  70                 	db	112
  1287  007CAC  00                 	db	0
  1288  007CAD  00                 	db	0
  1289  007CAE  00                 	db	0
  1290  007CAF  00                 	db	0
  1291  007CB0  0C                 	db	12
  1292  007CB1  0C                 	db	12
  1293  007CB2  0C                 	db	12
  1294  007CB3  7C                 	db	124
  1295  007CB4  FC                 	db	252
  1296  007CB5  CC                 	db	204
  1297  007CB6  CC                 	db	204
  1298  007CB7  CC                 	db	204
  1299  007CB8  CC                 	db	204
  1300  007CB9  FC                 	db	252
  1301  007CBA  7C                 	db	124
  1302  007CBB  00                 	db	0
  1303  007CBC  00                 	db	0
  1304  007CBD  00                 	db	0
  1305  007CBE  00                 	db	0
  1306  007CBF  00                 	db	0
  1307  007CC0  00                 	db	0
  1308  007CC1  00                 	db	0
  1309  007CC2  70                 	db	112
  1310  007CC3  F8                 	db	248
  1311  007CC4  D8                 	db	216
  1312  007CC5  F8                 	db	248
  1313  007CC6  C0                 	db	192
  1314  007CC7  D8                 	db	216
  1315  007CC8  F8                 	db	248
  1316  007CC9  70                 	db	112
  1317  007CCA  00                 	db	0
  1318  007CCB  00                 	db	0
  1319  007CCC  00                 	db	0
  1320  007CCD  00                 	db	0
  1321  007CCE  30                 	db	48
  1322  007CCF  70                 	db	112
  1323  007CD0  60                 	db	96
  1324  007CD1  F0                 	db	240
  1325  007CD2  F0                 	db	240
  1326  007CD3  60                 	db	96
  1327  007CD4  60                 	db	96
  1328  007CD5  60                 	db	96
  1329  007CD6  60                 	db	96
  1330  007CD7  60                 	db	96
  1331  007CD8  60                 	db	96
  1332  007CD9  00                 	db	0
  1333  007CDA  00                 	db	0
  1334  007CDB  00                 	db	0
  1335  007CDC  00                 	db	0
  1336  007CDD  00                 	db	0
  1337  007CDE  00                 	db	0
  1338  007CDF  00                 	db	0
  1339  007CE0  6C                 	db	108
  1340  007CE1  FC                 	db	252
  1341  007CE2  CC                 	db	204
  1342  007CE3  CC                 	db	204
  1343  007CE4  CC                 	db	204
  1344  007CE5  CC                 	db	204
  1345  007CE6  FC                 	db	252
  1346  007CE7  6C                 	db	108
  1347  007CE8  0C                 	db	12
  1348  007CE9  CC                 	db	204
  1349  007CEA  78                 	db	120
  1350  007CEB  00                 	db	0
  1351  007CEC  C0                 	db	192
  1352  007CED  C0                 	db	192
  1353  007CEE  C0                 	db	192
  1354  007CEF  D8                 	db	216
  1355  007CF0  FC                 	db	252
  1356  007CF1  CC                 	db	204
  1357  007CF2  CC                 	db	204
  1358  007CF3  CC                 	db	204
  1359  007CF4  CC                 	db	204
  1360  007CF5  CC                 	db	204
  1361  007CF6  CC                 	db	204
  1362  007CF7  00                 	db	0
  1363  007CF8  00                 	db	0
  1364  007CF9  00                 	db	0
  1365  007CFA  00                 	db	0
  1366  007CFB  C0                 	db	192
  1367  007CFC  C0                 	db	192
  1368  007CFD  00                 	db	0
  1369  007CFE  C0                 	db	192
  1370  007CFF  C0                 	db	192
  1371  007D00  C0                 	db	192
  1372  007D01  C0                 	db	192
  1373  007D02  C0                 	db	192
  1374  007D03  C0                 	db	192
  1375  007D04  C0                 	db	192
  1376  007D05  C0                 	db	192
  1377  007D06  00                 	db	0
  1378  007D07  00                 	db	0
  1379  007D08  00                 	db	0
  1380  007D09  00                 	db	0
  1381  007D0A  30                 	db	48
  1382  007D0B  30                 	db	48
  1383  007D0C  00                 	db	0
  1384  007D0D  30                 	db	48
  1385  007D0E  30                 	db	48
  1386  007D0F  30                 	db	48
  1387  007D10  30                 	db	48
  1388  007D11  30                 	db	48
  1389  007D12  30                 	db	48
  1390  007D13  30                 	db	48
  1391  007D14  30                 	db	48
  1392  007D15  30                 	db	48
  1393  007D16  F0                 	db	240
  1394  007D17  E0                 	db	224
  1395  007D18  00                 	db	0
  1396  007D19  C0                 	db	192
  1397  007D1A  C0                 	db	192
  1398  007D1B  C0                 	db	192
  1399  007D1C  CC                 	db	204
  1400  007D1D  D8                 	db	216
  1401  007D1E  F0                 	db	240
  1402  007D1F  F8                 	db	248
  1403  007D20  D8                 	db	216
  1404  007D21  D8                 	db	216
  1405  007D22  CC                 	db	204
  1406  007D23  CC                 	db	204
  1407  007D24  00                 	db	0
  1408  007D25  00                 	db	0
  1409  007D26  00                 	db	0
  1410  007D27  00                 	db	0
  1411  007D28  C0                 	db	192
  1412  007D29  C0                 	db	192
  1413  007D2A  C0                 	db	192
  1414  007D2B  C0                 	db	192
  1415  007D2C  C0                 	db	192
  1416  007D2D  C0                 	db	192
  1417  007D2E  C0                 	db	192
  1418  007D2F  C0                 	db	192
  1419  007D30  C0                 	db	192
  1420  007D31  C0                 	db	192
  1421  007D32  C0                 	db	192
  1422  007D33  00                 	db	0
  1423  007D34  00                 	db	0
  1424  007D35  00                 	db	0
  1425  007D36  00                 	db	0
  1426  007D37  00                 	db	0
  1427  007D38  00                 	db	0
  1428  007D39  00                 	db	0
  1429  007D3A  00                 	db	0
  1430  007D3B  00                 	db	0
  1431  007D3C  00                 	db	0
  1432  007D3D  00                 	db	0
  1433  007D3E  D9                 	db	217
  1434  007D3F  80                 	db	128
  1435  007D40  FF                 	db	255
  1436  007D41  C0                 	db	192
  1437  007D42  CC                 	db	204
  1438  007D43  C0                 	db	192
  1439  007D44  CC                 	db	204
  1440  007D45  C0                 	db	192
  1441  007D46  CC                 	db	204
  1442  007D47  C0                 	db	192
  1443  007D48  CC                 	db	204
  1444  007D49  C0                 	db	192
  1445  007D4A  CC                 	db	204
  1446  007D4B  C0                 	db	192
  1447  007D4C  CC                 	db	204
  1448  007D4D  C0                 	db	192
  1449  007D4E  00                 	db	0
  1450  007D4F  00                 	db	0
  1451  007D50  00                 	db	0
  1452  007D51  00                 	db	0
  1453  007D52  00                 	db	0
  1454  007D53  00                 	db	0
  1455  007D54  00                 	db	0
  1456  007D55  00                 	db	0
  1457  007D56  00                 	db	0
  1458  007D57  00                 	db	0
  1459  007D58  D8                 	db	216
  1460  007D59  FC                 	db	252
  1461  007D5A  CC                 	db	204
  1462  007D5B  CC                 	db	204
  1463  007D5C  CC                 	db	204
  1464  007D5D  CC                 	db	204
  1465  007D5E  CC                 	db	204
  1466  007D5F  CC                 	db	204
  1467  007D60  00                 	db	0
  1468  007D61  00                 	db	0
  1469  007D62  00                 	db	0
  1470  007D63  00                 	db	0
  1471  007D64  00                 	db	0
  1472  007D65  00                 	db	0
  1473  007D66  00                 	db	0
  1474  007D67  78                 	db	120
  1475  007D68  78                 	db	120
  1476  007D69  CC                 	db	204
  1477  007D6A  CC                 	db	204
  1478  007D6B  CC                 	db	204
  1479  007D6C  CC                 	db	204
  1480  007D6D  78                 	db	120
  1481  007D6E  78                 	db	120
  1482  007D6F  00                 	db	0
  1483  007D70  00                 	db	0
  1484  007D71  00                 	db	0
  1485  007D72  00                 	db	0
  1486  007D73  00                 	db	0
  1487  007D74  00                 	db	0
  1488  007D75  00                 	db	0
  1489  007D76  D8                 	db	216
  1490  007D77  FC                 	db	252
  1491  007D78  CC                 	db	204
  1492  007D79  CC                 	db	204
  1493  007D7A  CC                 	db	204
  1494  007D7B  CC                 	db	204
  1495  007D7C  F8                 	db	248
  1496  007D7D  D8                 	db	216
  1497  007D7E  C0                 	db	192
  1498  007D7F  C0                 	db	192
  1499  007D80  C0                 	db	192
  1500  007D81  00                 	db	0
  1501  007D82  00                 	db	0
  1502  007D83  00                 	db	0
  1503  007D84  00                 	db	0
  1504  007D85  6C                 	db	108
  1505  007D86  FC                 	db	252
  1506  007D87  CC                 	db	204
  1507  007D88  CC                 	db	204
  1508  007D89  CC                 	db	204
  1509  007D8A  CC                 	db	204
  1510  007D8B  FC                 	db	252
  1511  007D8C  6C                 	db	108
  1512  007D8D  0C                 	db	12
  1513  007D8E  0C                 	db	12
  1514  007D8F  0C                 	db	12
  1515  007D90  00                 	db	0
  1516  007D91  00                 	db	0
  1517  007D92  00                 	db	0
  1518  007D93  00                 	db	0
  1519  007D94  D0                 	db	208
  1520  007D95  F0                 	db	240
  1521  007D96  C0                 	db	192
  1522  007D97  C0                 	db	192
  1523  007D98  C0                 	db	192
  1524  007D99  C0                 	db	192
  1525  007D9A  C0                 	db	192
  1526  007D9B  C0                 	db	192
  1527  007D9C  00                 	db	0
  1528  007D9D  00                 	db	0
  1529  007D9E  00                 	db	0
  1530  007D9F  00                 	db	0
  1531  007DA0  00                 	db	0
  1532  007DA1  00                 	db	0
  1533  007DA2  00                 	db	0
  1534  007DA3  70                 	db	112
  1535  007DA4  F8                 	db	248
  1536  007DA5  C8                 	db	200
  1537  007DA6  E0                 	db	224
  1538  007DA7  38                 	db	56
  1539  007DA8  98                 	db	152
  1540  007DA9  F8                 	db	248
  1541  007DAA  70                 	db	112
  1542  007DAB  00                 	db	0
  1543  007DAC  00                 	db	0
  1544  007DAD  00                 	db	0
  1545  007DAE  00                 	db	0
  1546  007DAF  20                 	db	32
  1547  007DB0  60                 	db	96
  1548  007DB1  60                 	db	96
  1549  007DB2  F0                 	db	240
  1550  007DB3  F0                 	db	240
  1551  007DB4  60                 	db	96
  1552  007DB5  60                 	db	96
  1553  007DB6  60                 	db	96
  1554  007DB7  60                 	db	96
  1555  007DB8  70                 	db	112
  1556  007DB9  70                 	db	112
  1557  007DBA  00                 	db	0
  1558  007DBB  00                 	db	0
  1559  007DBC  00                 	db	0
  1560  007DBD  00                 	db	0
  1561  007DBE  00                 	db	0
  1562  007DBF  00                 	db	0
  1563  007DC0  00                 	db	0
  1564  007DC1  CC                 	db	204
  1565  007DC2  CC                 	db	204
  1566  007DC3  CC                 	db	204
  1567  007DC4  CC                 	db	204
  1568  007DC5  CC                 	db	204
  1569  007DC6  CC                 	db	204
  1570  007DC7  FC                 	db	252
  1571  007DC8  6C                 	db	108
  1572  007DC9  00                 	db	0
  1573  007DCA  00                 	db	0
  1574  007DCB  00                 	db	0
  1575  007DCC  00                 	db	0
  1576  007DCD  00                 	db	0
  1577  007DCE  00                 	db	0
  1578  007DCF  00                 	db	0
  1579  007DD0  C6                 	db	198
  1580  007DD1  C6                 	db	198
  1581  007DD2  6C                 	db	108
  1582  007DD3  6C                 	db	108
  1583  007DD4  6C                 	db	108
  1584  007DD5  38                 	db	56
  1585  007DD6  38                 	db	56
  1586  007DD7  38                 	db	56
  1587  007DD8  00                 	db	0
  1588  007DD9  00                 	db	0
  1589  007DDA  00                 	db	0
  1590  007DDB  00                 	db	0
  1591  007DDC  00                 	db	0
  1592  007DDD  00                 	db	0
  1593  007DDE  00                 	db	0
  1594  007DDF  00                 	db	0
  1595  007DE0  00                 	db	0
  1596  007DE1  00                 	db	0
  1597  007DE2  00                 	db	0
  1598  007DE3  DD                 	db	221
  1599  007DE4  80                 	db	128
  1600  007DE5  DD                 	db	221
  1601  007DE6  80                 	db	128
  1602  007DE7  DD                 	db	221
  1603  007DE8  80                 	db	128
  1604  007DE9  D5                 	db	213
  1605  007DEA  80                 	db	128
  1606  007DEB  55                 	db	85
  1607  007DEC  00                 	db	0
  1608  007DED  77                 	db	119
  1609  007DEE  00                 	db	0
  1610  007DEF  77                 	db	119
  1611  007DF0  00                 	db	0
  1612  007DF1  77                 	db	119
  1613  007DF2  00                 	db	0
  1614  007DF3  00                 	db	0
  1615  007DF4  00                 	db	0
  1616  007DF5  00                 	db	0
  1617  007DF6  00                 	db	0
  1618  007DF7  00                 	db	0
  1619  007DF8  00                 	db	0
  1620  007DF9  00                 	db	0
  1621  007DFA  00                 	db	0
  1622  007DFB  00                 	db	0
  1623  007DFC  00                 	db	0
  1624  007DFD  CC                 	db	204
  1625  007DFE  78                 	db	120
  1626  007DFF  78                 	db	120
  1627  007E00  30                 	db	48
  1628  007E01  30                 	db	48
  1629  007E02  78                 	db	120
  1630  007E03  78                 	db	120
  1631  007E04  CC                 	db	204
  1632  007E05  00                 	db	0
  1633  007E06  00                 	db	0
  1634  007E07  00                 	db	0
  1635  007E08  00                 	db	0
  1636  007E09  00                 	db	0
  1637  007E0A  00                 	db	0
  1638  007E0B  00                 	db	0
  1639  007E0C  C6                 	db	198
  1640  007E0D  C6                 	db	198
  1641  007E0E  6C                 	db	108
  1642  007E0F  6C                 	db	108
  1643  007E10  6C                 	db	108
  1644  007E11  38                 	db	56
  1645  007E12  38                 	db	56
  1646  007E13  38                 	db	56
  1647  007E14  30                 	db	48
  1648  007E15  F0                 	db	240
  1649  007E16  E0                 	db	224
  1650  007E17  00                 	db	0
  1651  007E18  00                 	db	0
  1652  007E19  00                 	db	0
  1653  007E1A  00                 	db	0
  1654  007E1B  FC                 	db	252
  1655  007E1C  FC                 	db	252
  1656  007E1D  18                 	db	24
  1657  007E1E  30                 	db	48
  1658  007E1F  30                 	db	48
  1659  007E20  60                 	db	96
  1660  007E21  FC                 	db	252
  1661  007E22  FC                 	db	252
  1662  007E23  00                 	db	0
  1663  007E24  00                 	db	0
  1664  007E25  00                 	db	0
  1665  007E26  00                 	db	0
  1666  007E27  30                 	db	48
  1667  007E28  70                 	db	112
  1668  007E29  60                 	db	96
  1669  007E2A  60                 	db	96
  1670  007E2B  60                 	db	96
  1671  007E2C  60                 	db	96
  1672  007E2D  C0                 	db	192
  1673  007E2E  C0                 	db	192
  1674  007E2F  60                 	db	96
  1675  007E30  60                 	db	96
  1676  007E31  60                 	db	96
  1677  007E32  60                 	db	96
  1678  007E33  70                 	db	112
  1679  007E34  30                 	db	48
  1680  007E35  00                 	db	0
  1681  007E36  C0                 	db	192
  1682  007E37  C0                 	db	192
  1683  007E38  C0                 	db	192
  1684  007E39  C0                 	db	192
  1685  007E3A  C0                 	db	192
  1686  007E3B  C0                 	db	192
  1687  007E3C  C0                 	db	192
  1688  007E3D  C0                 	db	192
  1689  007E3E  C0                 	db	192
  1690  007E3F  C0                 	db	192
  1691  007E40  C0                 	db	192
  1692  007E41  C0                 	db	192
  1693  007E42  C0                 	db	192
  1694  007E43  C0                 	db	192
  1695  007E44  00                 	db	0
  1696  007E45  C0                 	db	192
  1697  007E46  E0                 	db	224
  1698  007E47  60                 	db	96
  1699  007E48  60                 	db	96
  1700  007E49  60                 	db	96
  1701  007E4A  60                 	db	96
  1702  007E4B  30                 	db	48
  1703  007E4C  30                 	db	48
  1704  007E4D  60                 	db	96
  1705  007E4E  60                 	db	96
  1706  007E4F  60                 	db	96
  1707  007E50  60                 	db	96
  1708  007E51  E0                 	db	224
  1709  007E52  C0                 	db	192
  1710  007E53  00                 	db	0
  1711  007E54  00                 	db	0
  1712  007E55  00                 	db	0
  1713  007E56  00                 	db	0
  1714  007E57  00                 	db	0
  1715  007E58  E4                 	db	228
  1716  007E59  FC                 	db	252
  1717  007E5A  9C                 	db	156
  1718  007E5B  00                 	db	0
  1719  007E5C  00                 	db	0
  1720  007E5D  00                 	db	0
  1721  007E5E  00                 	db	0
  1722  007E5F  00                 	db	0
  1723  007E60  00                 	db	0
  1724  007E61  00                 	db	0
  1725  007E62                     __end_of_arialNarrow_12ptBitmaps:
  1726                           	callstack 0
  1727  007E62                     _arialNarrow_12ptDescriptors:
  1728                           	callstack 0
  1729  007E62  08                 	db	8
  1730  007E63  0000               	dw	0
  1731  007E65  02                 	db	2
  1732  007E66  000F               	dw	15
  1733  007E68  05                 	db	5
  1734  007E69  001E               	dw	30
  1735  007E6B  07                 	db	7
  1736  007E6C  002D               	dw	45
  1737  007E6E  07                 	db	7
  1738  007E6F  003C               	dw	60
  1739  007E71  0A                 	db	10
  1740  007E72  004B               	dw	75
  1741  007E74  08                 	db	8
  1742  007E75  0069               	dw	105
  1743  007E77  02                 	db	2
  1744  007E78  0078               	dw	120
  1745  007E7A  04                 	db	4
  1746  007E7B  0087               	dw	135
  1747  007E7D  04                 	db	4
  1748  007E7E  0096               	dw	150
  1749  007E80  05                 	db	5
  1750  007E81  00A5               	dw	165
  1751  007E83  06                 	db	6
  1752  007E84  00B4               	dw	180
  1753  007E86  02                 	db	2
  1754  007E87  00C3               	dw	195
  1755  007E89  04                 	db	4
  1756  007E8A  00D2               	dw	210
  1757  007E8C  02                 	db	2
  1758  007E8D  00E1               	dw	225
  1759  007E8F  04                 	db	4
  1760  007E90  00F0               	dw	240
  1761  007E92  06                 	db	6
  1762  007E93  00FF               	dw	255
  1763  007E95  04                 	db	4
  1764  007E96  010E               	dw	270
  1765  007E98  06                 	db	6
  1766  007E99  011D               	dw	285
  1767  007E9B  06                 	db	6
  1768  007E9C  012C               	dw	300
  1769  007E9E  07                 	db	7
  1770  007E9F  013B               	dw	315
  1771  007EA1  06                 	db	6
  1772  007EA2  014A               	dw	330
  1773  007EA4  05                 	db	5
  1774  007EA5  0159               	dw	345
  1775  007EA7  05                 	db	5
  1776  007EA8  0168               	dw	360
  1777  007EAA  06                 	db	6
  1778  007EAB  0177               	dw	375
  1779  007EAD  06                 	db	6
  1780  007EAE  0186               	dw	390
  1781  007EB0  02                 	db	2
  1782  007EB1  0195               	dw	405
  1783  007EB3  02                 	db	2
  1784  007EB4  01A4               	dw	420
  1785  007EB6  06                 	db	6
  1786  007EB7  01B3               	dw	435
  1787  007EB9  06                 	db	6
  1788  007EBA  01C2               	dw	450
  1789  007EBC  06                 	db	6
  1790  007EBD  01D1               	dw	465
  1791  007EBF  06                 	db	6
  1792  007EC0  01E0               	dw	480
  1793  007EC2  0D                 	db	13
  1794  007EC3  01EF               	dw	495
  1795  007EC5  09                 	db	9
  1796  007EC6  020D               	dw	525
  1797  007EC8  07                 	db	7
  1798  007EC9  022B               	dw	555
  1799  007ECB  08                 	db	8
  1800  007ECC  023A               	dw	570
  1801  007ECE  07                 	db	7
  1802  007ECF  0249               	dw	585
  1803  007ED1  07                 	db	7
  1804  007ED2  0258               	dw	600
  1805  007ED4  06                 	db	6
  1806  007ED5  0267               	dw	615
  1807  007ED7  08                 	db	8
  1808  007ED8  0276               	dw	630
  1809  007EDA  07                 	db	7
  1810  007EDB  0285               	dw	645
  1811  007EDD  02                 	db	2
  1812  007EDE  0294               	dw	660
  1813  007EE0  06                 	db	6
  1814  007EE1  02A3               	dw	675
  1815  007EE3  08                 	db	8
  1816  007EE4  02B2               	dw	690
  1817  007EE6  07                 	db	7
  1818  007EE7  02C1               	dw	705
  1819  007EE9  09                 	db	9
  1820  007EEA  02D0               	dw	720
  1821  007EEC  07                 	db	7
  1822  007EED  02EE               	dw	750
  1823  007EEF  08                 	db	8
  1824  007EF0  02FD               	dw	765
  1825  007EF2  07                 	db	7
  1826  007EF3  030C               	dw	780
  1827  007EF5  09                 	db	9
  1828  007EF6  031B               	dw	795
  1829  007EF8  08                 	db	8
  1830  007EF9  0339               	dw	825
  1831  007EFB  07                 	db	7
  1832  007EFC  0348               	dw	840
  1833  007EFE  08                 	db	8
  1834  007EFF  0357               	dw	855
  1835  007F01  07                 	db	7
  1836  007F02  0366               	dw	870
  1837  007F04  09                 	db	9
  1838  007F05  0375               	dw	885
  1839  007F07  0B                 	db	11
  1840  007F08  0393               	dw	915
  1841  007F0A  09                 	db	9
  1842  007F0B  03B1               	dw	945
  1843  007F0D  08                 	db	8
  1844  007F0E  03CF               	dw	975
  1845  007F10  07                 	db	7
  1846  007F11  03DE               	dw	990
  1847  007F13  03                 	db	3
  1848  007F14  03ED               	dw	1005
  1849  007F16  04                 	db	4
  1850  007F17  03FC               	dw	1020
  1851  007F19  03                 	db	3
  1852  007F1A  040B               	dw	1035
  1853  007F1C  07                 	db	7
  1854  007F1D  041A               	dw	1050
  1855  007F1F  07                 	db	7
  1856  007F20  0429               	dw	1065
  1857  007F22  03                 	db	3
  1858  007F23  0438               	dw	1080
  1859  007F25  06                 	db	6
  1860  007F26  0447               	dw	1095
  1861  007F28  06                 	db	6
  1862  007F29  0456               	dw	1110
  1863  007F2B  05                 	db	5
  1864  007F2C  0465               	dw	1125
  1865  007F2E  06                 	db	6
  1866  007F2F  0474               	dw	1140
  1867  007F31  05                 	db	5
  1868  007F32  0483               	dw	1155
  1869  007F34  04                 	db	4
  1870  007F35  0492               	dw	1170
  1871  007F37  06                 	db	6
  1872  007F38  04A1               	dw	1185
  1873  007F3A  06                 	db	6
  1874  007F3B  04B0               	dw	1200
  1875  007F3D  02                 	db	2
  1876  007F3E  04BF               	dw	1215
  1877  007F40  04                 	db	4
  1878  007F41  04CE               	dw	1230
  1879  007F43  06                 	db	6
  1880  007F44  04DD               	dw	1245
  1881  007F46  02                 	db	2
  1882  007F47  04EC               	dw	1260
  1883  007F49  0A                 	db	10
  1884  007F4A  04FB               	dw	1275
  1885  007F4C  06                 	db	6
  1886  007F4D  0519               	dw	1305
  1887  007F4F  06                 	db	6
  1888  007F50  0528               	dw	1320
  1889  007F52  06                 	db	6
  1890  007F53  0537               	dw	1335
  1891  007F55  06                 	db	6
  1892  007F56  0546               	dw	1350
  1893  007F58  04                 	db	4
  1894  007F59  0555               	dw	1365
  1895  007F5B  05                 	db	5
  1896  007F5C  0564               	dw	1380
  1897  007F5E  04                 	db	4
  1898  007F5F  0573               	dw	1395
  1899  007F61  06                 	db	6
  1900  007F62  0582               	dw	1410
  1901  007F64  07                 	db	7
  1902  007F65  0591               	dw	1425
  1903  007F67  09                 	db	9
  1904  007F68  05A0               	dw	1440
  1905  007F6A  06                 	db	6
  1906  007F6B  05BE               	dw	1470
  1907  007F6D  07                 	db	7
  1908  007F6E  05CD               	dw	1485
  1909  007F70  06                 	db	6
  1910  007F71  05DC               	dw	1500
  1911  007F73  04                 	db	4
  1912  007F74  05EB               	dw	1515
  1913  007F76  02                 	db	2
  1914  007F77  05FA               	dw	1530
  1915  007F79  04                 	db	4
  1916  007F7A  0609               	dw	1545
  1917  007F7C  06                 	db	6
  1918  007F7D  0618               	dw	1560
  1919  007F7F                     __end_of_arialNarrow_12ptDescriptors:
  1920                           	callstack 0
  1921  007F7F                     _arialNarrow_12ptFontInfo:
  1922                           	callstack 0
  1923  007F7F  0F                 	db	15
  1924  007F80  20                 	db	32
  1925  007F81  7E                 	db	126
  1926  007F82  62                 	db	low _arialNarrow_12ptDescriptors
  1927  007F83  7E                 	db	high _arialNarrow_12ptDescriptors
  1928  007F84  3B                 	db	low _arialNarrow_12ptBitmaps
  1929  007F85  78                 	db	high _arialNarrow_12ptBitmaps
  1930  007F86                     __end_of_arialNarrow_12ptFontInfo:
  1931                           	callstack 0
  1932  0000                     _ANSB2	set	31178
  1933  0000                     _ANSB1	set	31177
  1934  0000                     _WPUB	set	3937
  1935  0000                     _PORTBbits	set	3969
  1936  0000                     _ADRESL	set	4035
  1937  0000                     _ADRESH	set	4036
  1938  0000                     _ADCON0	set	4034
  1939  0000                     _TRISA	set	3986
  1940  0000                     _PORTA	set	3968
  1941  0000                     _ADCON2	set	4032
  1942  0000                     _T2CONbits	set	4026
  1943  0000                     _CCPR2L	set	3943
  1944  0000                     _CCP2CONbits	set	3942
  1945  0000                     _PR2	set	4027
  1946  0000                     _TMR0L	set	4054
  1947  0000                     _TMR0H	set	4055
  1948  0000                     _T0CON	set	4053
  1949  0000                     _OSCCON	set	4051
  1950  0000                     _TMR0IF	set	32658
  1951  0000                     _LATB4	set	31828
  1952  0000                     _LATB3	set	31827
  1953  0000                     _LATB1	set	31825
  1954  0000                     _TRISB4	set	31900
  1955  0000                     _TRISB3	set	31899
  1956  0000                     _INTEDG1	set	32653
  1957  0000                     _RBPU	set	32655
  1958  0000                     _TRISB1	set	31897
  1959  0000                     _LATB2	set	31826
  1960  0000                     _TRISB2	set	31898
  1961  0000                     _INT1IF	set	32640
  1962  0000                     _LATC2	set	31834
  1963  0000                     _LATC5	set	31837
  1964  0000                     _TRISC4	set	31908
  1965  0000                     _TRISC3	set	31907
  1966  0000                     _TRISC2	set	31906
  1967  0000                     _TRISC5	set	31909
  1968  0000                     _LATC3	set	31835
  1969  0000                     _LATC4	set	31836
  1970  0000                     _TMR2IF	set	31985
  1971  0000                     _TRISC1	set	31905
  1972  0000                     _TMR0IE	set	32661
  1973  0000                     _LATC0	set	31832
  1974  0000                     _TRISC0	set	31904
  1975  0000                     _INT1IE	set	32643
  1976  0000                     _GIE	set	32663
  1977  0000                     _PLLEN	set	31966
  1978  007F86                     STR_14:
  1979  007F86  50                 	db	80	;'P'
  1980  007F87  4C                 	db	76	;'L'
  1981  007F88  41                 	db	65	;'A'
  1982  007F89  59                 	db	89	;'Y'
  1983  007F8A  45                 	db	69	;'E'
  1984  007F8B  52                 	db	82	;'R'
  1985  007F8C  20                 	db	32
  1986  007F8D  31                 	db	49	;'1'
  1987  007F8E  20                 	db	32
  1988  007F8F  57                 	db	87	;'W'
  1989  007F90  49                 	db	73	;'I'
  1990  007F91  4E                 	db	78	;'N'
  1991  007F92  00                 	db	0
  1992  007F93                     STR_13:
  1993  007F93  50                 	db	80	;'P'
  1994  007F94  4C                 	db	76	;'L'
  1995  007F95  41                 	db	65	;'A'
  1996  007F96  59                 	db	89	;'Y'
  1997  007F97  45                 	db	69	;'E'
  1998  007F98  52                 	db	82	;'R'
  1999  007F99  20                 	db	32
  2000  007F9A  32                 	db	50	;'2'
  2001  007F9B  20                 	db	32
  2002  007F9C  57                 	db	87	;'W'
  2003  007F9D  49                 	db	73	;'I'
  2004  007F9E  4E                 	db	78	;'N'
  2005  007F9F  00                 	db	0
  2006  007FA0                     STR_12:
  2007  007FA0  50                 	db	80	;'P'
  2008  007FA1  41                 	db	65	;'A'
  2009  007FA2  52                 	db	82	;'R'
  2010  007FA3  41                 	db	65	;'A'
  2011  007FA4  4D                 	db	77	;'M'
  2012  007FA5  45                 	db	69	;'E'
  2013  007FA6  54                 	db	84	;'T'
  2014  007FA7  45                 	db	69	;'E'
  2015  007FA8  52                 	db	82	;'R'
  2016  007FA9  53                 	db	83	;'S'
  2017  007FAA  00                 	db	0
  2018  007FAB                     STR_4:
  2019  007FAB  50                 	db	80	;'P'
  2020  007FAC  61                 	db	97	;'a'
  2021  007FAD  72                 	db	114	;'r'
  2022  007FAE  61                 	db	97	;'a'
  2023  007FAF  6D                 	db	109	;'m'
  2024  007FB0  65                 	db	101	;'e'
  2025  007FB1  74                 	db	116	;'t'
  2026  007FB2  72                 	db	114	;'r'
  2027  007FB3  65                 	db	101	;'e'
  2028  007FB4  73                 	db	115	;'s'
  2029  007FB5  00                 	db	0
  2030  007FB6                     STR_1:
  2031  007FB6  4D                 	db	77	;'M'
  2032  007FB7  65                 	db	101	;'e'
  2033  007FB8  6E                 	db	110	;'n'
  2034  007FB9  75                 	db	117	;'u'
  2035  007FBA  53                 	db	83	;'S'
  2036  007FBB  74                 	db	116	;'t'
  2037  007FBC  61                 	db	97	;'a'
  2038  007FBD  72                 	db	114	;'r'
  2039  007FBE  74                 	db	116	;'t'
  2040  007FBF  00                 	db	0
  2041  007FC0                     STR_10:
  2042  007FC0  4E                 	db	78	;'N'
  2043  007FC1  65                 	db	101	;'e'
  2044  007FC2  77                 	db	119	;'w'
  2045  007FC3  20                 	db	32
  2046  007FC4  47                 	db	71	;'G'
  2047  007FC5  61                 	db	97	;'a'
  2048  007FC6  6D                 	db	109	;'m'
  2049  007FC7  65                 	db	101	;'e'
  2050  007FC8  00                 	db	0
  2051  007FC9                     STR_5:
  2052  007FC9  31                 	db	49	;'1'
  2053  007FCA  20                 	db	32
  2054  007FCB  50                 	db	80	;'P'
  2055  007FCC  6C                 	db	108	;'l'
  2056  007FCD  61                 	db	97	;'a'
  2057  007FCE  79                 	db	121	;'y'
  2058  007FCF  65                 	db	101	;'e'
  2059  007FD0  72                 	db	114	;'r'
  2060  007FD1  00                 	db	0
  2061  007FD2                     STR_6:
  2062  007FD2  32                 	db	50	;'2'
  2063  007FD3  20                 	db	32
  2064  007FD4  50                 	db	80	;'P'
  2065  007FD5  6C                 	db	108	;'l'
  2066  007FD6  61                 	db	97	;'a'
  2067  007FD7  79                 	db	121	;'y'
  2068  007FD8  65                 	db	101	;'e'
  2069  007FD9  72                 	db	114	;'r'
  2070  007FDA  00                 	db	0
  2071  007FDB                     STR_11:
  2072  007FDB  57                 	db	87	;'W'
  2073  007FDC  45                 	db	69	;'E'
  2074  007FDD  4C                 	db	76	;'L'
  2075  007FDE  43                 	db	67	;'C'
  2076  007FDF  4F                 	db	79	;'O'
  2077  007FE0  4D                 	db	77	;'M'
  2078  007FE1  45                 	db	69	;'E'
  2079  007FE2  00                 	db	0
  2080  007FE3                     STR_7:
  2081  007FE3  51                 	db	81	;'Q'
  2082  007FE4  55                 	db	85	;'U'
  2083  007FE5  49                 	db	73	;'I'
  2084  007FE6  54                 	db	84	;'T'
  2085  007FE7  54                 	db	84	;'T'
  2086  007FE8  45                 	db	69	;'E'
  2087  007FE9  52                 	db	82	;'R'
  2088  007FEA  00                 	db	0
  2089  007FEB                     STR_15:
  2090  007FEB  58                 	db	88	;'X'
  2091  007FEC  3A                 	db	58	;':'
  2092  007FED  20                 	db	32
  2093  007FEE  25                 	db	37
  2094  007FEF  64                 	db	100	;'d'
  2095  007FF0  00                 	db	0
  2096  007FF1                     STR_16:
  2097  007FF1  59                 	db	89	;'Y'
  2098  007FF2  3A                 	db	58	;':'
  2099  007FF3  20                 	db	32
  2100  007FF4  25                 	db	37
  2101  007FF5  64                 	db	100	;'d'
  2102  007FF6  00                 	db	0
  2103  007FF7                     STR_8:
  2104  007FF7  3C                 	db	60	;'<'
  2105  007FF8  2D                 	db	45
  2106  007FF9  2D                 	db	45
  2107  007FFA  00                 	db	0
  2108  007FFB                     STR_9:
  2109  007FFB  2D                 	db	45
  2110  007FFC  2D                 	db	45
  2111  007FFD  3E                 	db	62	;'>'
  2112  007FFE  00                 	db	0
  2113  007FFF  00                 	db	0	; dummy byte at the end
  2114  0000                     
  2115                           ; #config settings
  2116                           
  2117                           	psect	cinit
  2118  006284                     __pcinit:
  2119                           	callstack 0
  2120  006284                     start_initialization:
  2121                           	callstack 0
  2122  006284                     __initialization:
  2123                           	callstack 0
  2124                           
  2125                           ; Clear objects allocated to BANK1 (239 bytes)
  2126  006284  EE01  F000         	lfsr	0,__pbssBANK1
  2127  006288  0EEF               	movlw	239
  2128  00628A                     clear_0:
  2129  00628A  6AEE               	clrf	postinc0,c
  2130  00628C  06E8               	decf	wreg,f,c
  2131  00628E  E1FD               	bnz	clear_0
  2132                           
  2133                           ; Clear objects allocated to BANK0 (75 bytes)
  2134  006290  EE00  F0B5         	lfsr	0,__pbssBANK0
  2135  006294  0E4B               	movlw	75
  2136  006296                     clear_1:
  2137  006296  6AEE               	clrf	postinc0,c
  2138  006298  06E8               	decf	wreg,f,c
  2139  00629A  E1FD               	bnz	clear_1
  2140                           
  2141                           ; Clear objects allocated to COMRAM (7 bytes)
  2142  00629C  EE00  F047         	lfsr	0,__pbssCOMRAM
  2143  0062A0  0E07               	movlw	7
  2144  0062A2                     clear_2:
  2145  0062A2  6AEE               	clrf	postinc0,c
  2146  0062A4  06E8               	decf	wreg,f,c
  2147  0062A6  E1FD               	bnz	clear_2
  2148  0062A8                     end_of_initialization:
  2149                           	callstack 0
  2150  0062A8                     __end_of__initialization:
  2151                           	callstack 0
  2152  0062A8  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2153  0062AA  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2154  0062AC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2155  0062AE  6EF8               	movwf	tblptru,c
  2156  0062B0  0100               	movlb	0
  2157  0062B2  EF38  F032         	goto	_main	;jump to C main() function
  2158                           
  2159                           	psect	bssCOMRAM
  2160  000047                     __pbssCOMRAM:
  2161                           	callstack 0
  2162  000047                     _width:
  2163                           	callstack 0
  2164  000047                     	ds	2
  2165  000049                     _prec:
  2166                           	callstack 0
  2167  000049                     	ds	2
  2168  00004B                     _flags:
  2169                           	callstack 0
  2170  00004B                     	ds	2
  2171  00004D                     _gameControllerState:
  2172                           	callstack 0
  2173  00004D                     	ds	1
  2174                           
  2175                           	psect	bssBANK0
  2176  0000B5                     __pbssBANK0:
  2177                           	callstack 0
  2178  0000B5                     _theXF:
  2179                           	callstack 0
  2180  0000B5                     	ds	38
  2181  0000DB                     _nout:
  2182                           	callstack 0
  2183  0000DB                     	ds	2
  2184  0000DD                     _displayState:
  2185                           	callstack 0
  2186  0000DD                     	ds	1
  2187  0000DE                     _touchScreenState:
  2188                           	callstack 0
  2189  0000DE                     	ds	1
  2190  0000DF                     _sleepState:
  2191                           	callstack 0
  2192  0000DF                     	ds	1
  2193  0000E0                     _dbuf:
  2194                           	callstack 0
  2195  0000E0                     	ds	32
  2196                           
  2197                           	psect	bssBANK1
  2198  000100                     __pbssBANK1:
  2199                           	callstack 0
  2200  000100                     _g1:
  2201                           	callstack 0
  2202  000100                     	ds	239
  2203                           
  2204                           	psect	cstackBANK1
  2205  0001EF                     __pcstackBANK1:
  2206                           	callstack 0
  2207  0001EF                     Factory_exec@ev:
  2208                           	callstack 0
  2209                           
  2210                           ; 1 bytes @ 0x0
  2211  0001EF                     	ds	1
  2212                           
  2213                           	psect	cstackBANK0
  2214  000060                     __pcstackBANK0:
  2215                           	callstack 0
  2216  000060                     _dtoa$4941:
  2217                           	callstack 0
  2218  000060                     LCD_Bitmap@bfOffBits:
  2219                           	callstack 0
  2220                           
  2221                           ; 4 bytes @ 0x0
  2222  000060                     	ds	2
  2223  000062                     dtoa@p:
  2224                           	callstack 0
  2225                           
  2226                           ; 2 bytes @ 0x2
  2227  000062                     	ds	2
  2228  000064                     LCD_Bitmap@endOfImage:
  2229                           	callstack 0
  2230  000064                     dtoa@w:
  2231                           	callstack 0
  2232                           
  2233                           ; 2 bytes @ 0x4
  2234  000064                     	ds	1
  2235  000065                     LCD_Bitmap@jumpCount:
  2236                           	callstack 0
  2237                           
  2238                           ; 2 bytes @ 0x5
  2239  000065                     	ds	1
  2240  000066                     dtoa@s:
  2241                           	callstack 0
  2242                           
  2243                           ; 2 bytes @ 0x6
  2244  000066                     	ds	1
  2245  000067                     LCD_Bitmap@curYPos:
  2246                           	callstack 0
  2247                           
  2248                           ; 2 bytes @ 0x7
  2249  000067                     	ds	1
  2250  000068                     dtoa@n:
  2251                           	callstack 0
  2252                           
  2253                           ; 8 bytes @ 0x8
  2254  000068                     	ds	1
  2255  000069                     LCD_Bitmap@colorTablePtr:
  2256                           	callstack 0
  2257                           
  2258                           ; 2 bytes @ 0x9
  2259  000069                     	ds	2
  2260  00006B                     LCD_Bitmap@biHeight:
  2261                           	callstack 0
  2262                           
  2263                           ; 2 bytes @ 0xB
  2264  00006B                     	ds	2
  2265  00006D                     LCD_Bitmap@color:
  2266                           	callstack 0
  2267                           
  2268                           ; 2 bytes @ 0xD
  2269  00006D                     	ds	2
  2270  00006F                     LCD_Bitmap@curXPos:
  2271                           	callstack 0
  2272                           
  2273                           ; 2 bytes @ 0xF
  2274  00006F                     	ds	1
  2275  000070                     dtoa@i:
  2276                           	callstack 0
  2277                           
  2278                           ; 2 bytes @ 0x10
  2279  000070                     	ds	1
  2280  000071                     LCD_Bitmap@strPtr:
  2281                           	callstack 0
  2282                           
  2283                           ; 2 bytes @ 0x11
  2284  000071                     	ds	1
  2285  000072                     vfpfcnvrt@ll:
  2286                           	callstack 0
  2287                           
  2288                           ; 8 bytes @ 0x12
  2289  000072                     	ds	1
  2290  000073                     LCD_Bitmap@newY:
  2291                           	callstack 0
  2292                           
  2293                           ; 2 bytes @ 0x13
  2294  000073                     	ds	2
  2295  000075                     LCD_Bitmap@pixelCount:
  2296                           	callstack 0
  2297                           
  2298                           ; 1 bytes @ 0x15
  2299  000075                     	ds	1
  2300  000076                     LCD_Bitmap@biWidth:
  2301                           	callstack 0
  2302                           
  2303                           ; 2 bytes @ 0x16
  2304  000076                     	ds	2
  2305  000078                     LCD_Bitmap@jumpColor:
  2306                           	callstack 0
  2307                           
  2308                           ; 2 bytes @ 0x18
  2309  000078                     	ds	2
  2310  00007A                     ?_vfprintf:
  2311                           	callstack 0
  2312  00007A                     LCD_Bitmap@i:
  2313                           	callstack 0
  2314  00007A                     vfprintf@fp:
  2315                           	callstack 0
  2316                           
  2317                           ; 2 bytes @ 0x1A
  2318  00007A                     	ds	2
  2319  00007C                     LCD_ButtonDraw@button:
  2320                           	callstack 0
  2321  00007C                     vfprintf@fmt:
  2322                           	callstack 0
  2323                           
  2324                           ; 2 bytes @ 0x1C
  2325  00007C                     	ds	2
  2326  00007E                     ??_LCD_ButtonDraw:
  2327  00007E                     vfprintf@ap:
  2328                           	callstack 0
  2329                           
  2330                           ; 2 bytes @ 0x1E
  2331  00007E                     	ds	2
  2332  000080                     vfprintf@cfmt:
  2333                           	callstack 0
  2334                           
  2335                           ; 2 bytes @ 0x20
  2336  000080                     	ds	2
  2337  000082                     ?_sprintf:
  2338                           	callstack 0
  2339  000082                     sprintf@s:
  2340                           	callstack 0
  2341                           
  2342                           ; 2 bytes @ 0x22
  2343  000082                     	ds	2
  2344  000084                     sprintf@fmt:
  2345                           	callstack 0
  2346                           
  2347                           ; 2 bytes @ 0x24
  2348  000084                     	ds	4
  2349  000088                     sprintf@ap:
  2350                           	callstack 0
  2351                           
  2352                           ; 2 bytes @ 0x28
  2353  000088                     	ds	2
  2354  00008A                     LCD_ButtonDraw@tempChar:
  2355                           	callstack 0
  2356  00008A                     sprintf@f:
  2357                           	callstack 0
  2358                           
  2359                           ; 6 bytes @ 0x2A
  2360  00008A                     	ds	1
  2361  00008B                     LCD_ButtonDraw@width:
  2362                           	callstack 0
  2363                           
  2364                           ; 2 bytes @ 0x2B
  2365  00008B                     	ds	2
  2366  00008D                     LCD_ButtonDraw@x1:
  2367                           	callstack 0
  2368                           
  2369                           ; 2 bytes @ 0x2D
  2370  00008D                     	ds	2
  2371  00008F                     LCD_ButtonDraw@x2:
  2372                           	callstack 0
  2373                           
  2374                           ; 2 bytes @ 0x2F
  2375  00008F                     	ds	1
  2376  000090                     Score_draw@s:
  2377                           	callstack 0
  2378  000090                     touchScreenController@g:
  2379                           	callstack 0
  2380                           
  2381                           ; 2 bytes @ 0x30
  2382  000090                     	ds	1
  2383  000091                     LCD_ButtonDraw@y1:
  2384                           	callstack 0
  2385                           
  2386                           ; 2 bytes @ 0x31
  2387  000091                     	ds	1
  2388  000092                     ??_touchScreenController:
  2389  000092                     Menu_inGameDraw@g:
  2390                           	callstack 0
  2391                           
  2392                           ; 2 bytes @ 0x32
  2393  000092                     	ds	1
  2394  000093                     LCD_ButtonDraw@y2:
  2395                           	callstack 0
  2396                           
  2397                           ; 2 bytes @ 0x33
  2398  000093                     	ds	2
  2399  000095                     LCD_ButtonDraw@xText:
  2400                           	callstack 0
  2401                           
  2402                           ; 2 bytes @ 0x35
  2403  000095                     	ds	2
  2404  000097                     LCD_ButtonDraw@yText:
  2405                           	callstack 0
  2406                           
  2407                           ; 2 bytes @ 0x37
  2408  000097                     	ds	1
  2409  000098                     touchScreenController@s:
  2410                           	callstack 0
  2411                           
  2412                           ; 20 bytes @ 0x38
  2413  000098                     	ds	1
  2414  000099                     LCD_ButtonDraw@i:
  2415                           	callstack 0
  2416                           
  2417                           ; 1 bytes @ 0x39
  2418  000099                     	ds	1
  2419  00009A                     LCD_ButtonDraw@bmpPtr:
  2420                           	callstack 0
  2421                           
  2422                           ; 2 bytes @ 0x3A
  2423  00009A                     	ds	2
  2424  00009C                     Menu_welcomeDraw@g:
  2425                           	callstack 0
  2426  00009C                     Menu_parametersDraw@g:
  2427                           	callstack 0
  2428  00009C                     Menu_endGame@g:
  2429                           	callstack 0
  2430                           
  2431                           ; 2 bytes @ 0x3C
  2432  00009C                     	ds	2
  2433  00009E                     displayController@g:
  2434                           	callstack 0
  2435                           
  2436                           ; 2 bytes @ 0x3E
  2437  00009E                     	ds	2
  2438  0000A0                     displayController@ev:
  2439                           	callstack 0
  2440                           
  2441                           ; 1 bytes @ 0x40
  2442  0000A0                     	ds	1
  2443  0000A1                     ??_displayController:
  2444                           
  2445                           ; 1 bytes @ 0x41
  2446  0000A1                     	ds	2
  2447  0000A3                     displayInit@g:
  2448                           	callstack 0
  2449  0000A3                     displaySM@g:
  2450                           	callstack 0
  2451                           
  2452                           ; 2 bytes @ 0x43
  2453  0000A3                     	ds	2
  2454  0000A5                     ??_displaySM:
  2455  0000A5                     sleepInit@g:
  2456                           	callstack 0
  2457                           
  2458                           ; 2 bytes @ 0x45
  2459  0000A5                     	ds	2
  2460  0000A7                     ??_Factory_init:
  2461  0000A7                     displaySM@ev:
  2462                           	callstack 0
  2463                           
  2464                           ; 1 bytes @ 0x47
  2465  0000A7                     	ds	5
  2466  0000AC                     touchScreenController@valueY:
  2467                           	callstack 0
  2468                           
  2469                           ; 2 bytes @ 0x4C
  2470  0000AC                     	ds	2
  2471  0000AE                     touchScreenController@valueX:
  2472                           	callstack 0
  2473                           
  2474                           ; 2 bytes @ 0x4E
  2475  0000AE                     	ds	2
  2476  0000B0                     touchScreenSM@g:
  2477                           	callstack 0
  2478                           
  2479                           ; 2 bytes @ 0x50
  2480  0000B0                     	ds	2
  2481  0000B2                     ??_touchScreenSM:
  2482                           
  2483                           ; 1 bytes @ 0x52
  2484  0000B2                     	ds	2
  2485  0000B4                     touchScreenSM@ev:
  2486                           	callstack 0
  2487                           
  2488                           ; 1 bytes @ 0x54
  2489  0000B4                     	ds	1
  2490                           
  2491                           	psect	cstackCOMRAM
  2492  000001                     __pcstackCOMRAM:
  2493                           	callstack 0
  2494  000001                     ?i2___wmul:
  2495                           	callstack 0
  2496  000001                     ?i2___awmod:
  2497                           	callstack 0
  2498  000001                     i2ENTERCRITICAL@inISR:
  2499                           	callstack 0
  2500  000001                     i2LEAVECRITICAL@inISR:
  2501                           	callstack 0
  2502  000001                     i2___wmul@multiplier:
  2503                           	callstack 0
  2504  000001                     i2___awmod@dividend:
  2505                           	callstack 0
  2506                           
  2507                           ; 2 bytes @ 0x0
  2508  000001                     	ds	1
  2509  000002                     XF_unscheduleTimer@inISR:
  2510                           	callstack 0
  2511  000002                     i2XF_scheduleTimer@tm:
  2512                           	callstack 0
  2513                           
  2514                           ; 2 bytes @ 0x1
  2515  000002                     	ds	1
  2516  000003                     XF_unscheduleTimer@id:
  2517                           	callstack 0
  2518  000003                     i2___wmul@multiplicand:
  2519                           	callstack 0
  2520  000003                     i2___awmod@divisor:
  2521                           	callstack 0
  2522                           
  2523                           ; 2 bytes @ 0x2
  2524  000003                     	ds	1
  2525  000004                     i2XF_scheduleTimer@ev:
  2526                           	callstack 0
  2527                           
  2528                           ; 1 bytes @ 0x3
  2529  000004                     	ds	1
  2530  000005                     i2XF_scheduleTimer@inISR:
  2531                           	callstack 0
  2532  000005                     i2___awmod@counter:
  2533                           	callstack 0
  2534  000005                     i2___wmul@product:
  2535                           	callstack 0
  2536                           
  2537                           ; 2 bytes @ 0x4
  2538  000005                     	ds	1
  2539  000006                     i2XF_scheduleTimer@i:
  2540                           	callstack 0
  2541  000006                     i2___awmod@sign:
  2542                           	callstack 0
  2543                           
  2544                           ; 1 bytes @ 0x5
  2545  000006                     	ds	1
  2546  000007                     i2XF_pushEvent@inISR:
  2547                           	callstack 0
  2548                           
  2549                           ; 1 bytes @ 0x6
  2550  000007                     	ds	1
  2551  000008                     i2XF_pushEvent@ev:
  2552                           	callstack 0
  2553                           
  2554                           ; 1 bytes @ 0x7
  2555  000008                     	ds	1
  2556  000009                     i2XF_pushEvent@temp:
  2557                           	callstack 0
  2558                           
  2559                           ; 1 bytes @ 0x8
  2560  000009                     	ds	1
  2561  00000A                     
  2562                           ; 1 bytes @ 0x9
  2563  00000A                     	ds	2
  2564  00000C                     XF_decrementAndQueueTimers@i:
  2565                           	callstack 0
  2566                           
  2567                           ; 2 bytes @ 0xB
  2568  00000C                     	ds	2
  2569  00000E                     ??_isr:
  2570                           
  2571                           ; 1 bytes @ 0xD
  2572  00000E                     	ds	4
  2573  000012                     ??_LCD_Lowlevel_Init:
  2574  000012                     ??_sleepController:
  2575  000012                     ?_LCD_Read:
  2576                           	callstack 0
  2577  000012                     ?_strlen:
  2578                           	callstack 0
  2579  000012                     ?_RGB2LCD:
  2580                           	callstack 0
  2581  000012                     ?___awdiv:
  2582                           	callstack 0
  2583  000012                     ?___awmod:
  2584                           	callstack 0
  2585  000012                     ?___lwmod:
  2586                           	callstack 0
  2587  000012                     ?___xxtofl:
  2588                           	callstack 0
  2589  000012                     ?___aodiv:
  2590                           	callstack 0
  2591  000012                     ?___aomod:
  2592                           	callstack 0
  2593  000012                     configMeasure@channel:
  2594                           	callstack 0
  2595  000012                     ENTERCRITICAL@inISR:
  2596                           	callstack 0
  2597  000012                     LEAVECRITICAL@inISR:
  2598                           	callstack 0
  2599  000012                     Ball_init@b:
  2600                           	callstack 0
  2601  000012                     Ball_Update@b:
  2602                           	callstack 0
  2603  000012                     Paddle_init@p:
  2604                           	callstack 0
  2605  000012                     Paddle_addX@p:
  2606                           	callstack 0
  2607  000012                     Score_init@s:
  2608                           	callstack 0
  2609  000012                     GameParameters_setBackLight@s:
  2610                           	callstack 0
  2611  000012                     GameParameters_resetPos@s:
  2612                           	callstack 0
  2613  000012                     GameParameters_setX@s:
  2614                           	callstack 0
  2615  000012                     GameParameters_setY@s:
  2616                           	callstack 0
  2617  000012                     LCD_Fill@color:
  2618                           	callstack 0
  2619  000012                     LCD_SliderCreate@posX:
  2620                           	callstack 0
  2621  000012                     LCD_ButtonCreate@posX:
  2622                           	callstack 0
  2623  000012                     LCD_InButton@button:
  2624                           	callstack 0
  2625  000012                     LCD_InSlider@slider:
  2626                           	callstack 0
  2627  000012                     LCD_DrawRect@posX1:
  2628                           	callstack 0
  2629  000012                     RGB2LCD@colorTableEntry:
  2630                           	callstack 0
  2631  000012                     LCD_Read@posX:
  2632                           	callstack 0
  2633  000012                     ___awdiv@dividend:
  2634                           	callstack 0
  2635  000012                     ___awmod@dividend:
  2636                           	callstack 0
  2637  000012                     ___lwmod@dividend:
  2638                           	callstack 0
  2639  000012                     fputc@c:
  2640                           	callstack 0
  2641  000012                     strlen@s:
  2642                           	callstack 0
  2643  000012                     ___xxtofl@val:
  2644                           	callstack 0
  2645  000012                     ___aodiv@dividend:
  2646                           	callstack 0
  2647  000012                     ___aomod@dividend:
  2648                           	callstack 0
  2649                           
  2650                           ; 8 bytes @ 0x11
  2651  000012                     	ds	1
  2652  000013                     XF_scheduleTimer@tm:
  2653                           	callstack 0
  2654  000013                     LCD_Lowlevel_Init@i:
  2655                           	callstack 0
  2656                           
  2657                           ; 4 bytes @ 0x12
  2658  000013                     	ds	1
  2659  000014                     ??_sleepSM:
  2660  000014                     ??_Ball_Update:
  2661  000014                     ??_RGB2LCD:
  2662  000014                     LCD_Fill@colorH:
  2663                           	callstack 0
  2664  000014                     Paddle_init@team:
  2665                           	callstack 0
  2666  000014                     Paddle_addX@value:
  2667                           	callstack 0
  2668  000014                     GameParameters_setBackLight@value:
  2669                           	callstack 0
  2670  000014                     GameParameters_setX@value:
  2671                           	callstack 0
  2672  000014                     GameParameters_setY@value:
  2673                           	callstack 0
  2674  000014                     LCD_SliderCreate@posY:
  2675                           	callstack 0
  2676  000014                     LCD_ButtonCreate@posY:
  2677                           	callstack 0
  2678  000014                     LCD_InButton@posX:
  2679                           	callstack 0
  2680  000014                     LCD_InSlider@posX:
  2681                           	callstack 0
  2682  000014                     LCD_DrawRect@posY1:
  2683                           	callstack 0
  2684  000014                     LCD_Read@posY:
  2685                           	callstack 0
  2686  000014                     ___awdiv@divisor:
  2687                           	callstack 0
  2688  000014                     ___awmod@divisor:
  2689                           	callstack 0
  2690  000014                     ___lwmod@divisor:
  2691                           	callstack 0
  2692  000014                     fputc@fp:
  2693                           	callstack 0
  2694  000014                     strlen@a:
  2695                           	callstack 0
  2696                           
  2697                           ; 2 bytes @ 0x13
  2698  000014                     	ds	1
  2699  000015                     LCD_Fill@colorL:
  2700                           	callstack 0
  2701  000015                     XF_scheduleTimer@ev:
  2702                           	callstack 0
  2703                           
  2704                           ; 1 bytes @ 0x14
  2705  000015                     	ds	1
  2706  000016                     ??_LCD_Read:
  2707  000016                     ??_fputc:
  2708  000016                     ??___xxtofl:
  2709  000016                     sleepSM@ev:
  2710                           	callstack 0
  2711  000016                     XF_scheduleTimer@inISR:
  2712                           	callstack 0
  2713  000016                     ___awdiv@counter:
  2714                           	callstack 0
  2715  000016                     ___awmod@counter:
  2716                           	callstack 0
  2717  000016                     ___lwmod@counter:
  2718                           	callstack 0
  2719  000016                     Paddle_addX@add:
  2720                           	callstack 0
  2721  000016                     LCD_Fill@column:
  2722                           	callstack 0
  2723  000016                     LCD_SliderCreate@width:
  2724                           	callstack 0
  2725  000016                     LCD_ButtonCreate@width:
  2726                           	callstack 0
  2727  000016                     LCD_InButton@posY:
  2728                           	callstack 0
  2729  000016                     LCD_InSlider@posY:
  2730                           	callstack 0
  2731  000016                     LCD_DrawRect@posX2:
  2732                           	callstack 0
  2733                           
  2734                           ; 2 bytes @ 0x15
  2735  000016                     	ds	1
  2736  000017                     ??_LCD_Init:
  2737  000017                     XF_scheduleTimer@i:
  2738                           	callstack 0
  2739  000017                     ___awdiv@sign:
  2740                           	callstack 0
  2741  000017                     ___awmod@sign:
  2742                           	callstack 0
  2743                           
  2744                           ; 1 bytes @ 0x16
  2745  000017                     	ds	1
  2746  000018                     ??_Paddle_addX:
  2747  000018                     ??_LCD_InButton:
  2748  000018                     ??_LCD_InSlider:
  2749  000018                     LCD_Init@i:
  2750                           	callstack 0
  2751  000018                     XF_pushEvent@inISR:
  2752                           	callstack 0
  2753  000018                     XF_popEvent@ev:
  2754                           	callstack 0
  2755  000018                     LCD_Fill@page:
  2756                           	callstack 0
  2757  000018                     LCD_SliderCreate@height:
  2758                           	callstack 0
  2759  000018                     LCD_ButtonCreate@height:
  2760                           	callstack 0
  2761  000018                     LCD_DrawRect@posY2:
  2762                           	callstack 0
  2763  000018                     RGB2LCD@red:
  2764                           	callstack 0
  2765  000018                     LCD_Read@color:
  2766                           	callstack 0
  2767  000018                     backlightController@g:
  2768                           	callstack 0
  2769  000018                     ___awdiv@quotient:
  2770                           	callstack 0
  2771                           
  2772                           ; 2 bytes @ 0x17
  2773  000018                     	ds	1
  2774  000019                     XF_pushEvent@ev:
  2775                           	callstack 0
  2776  000019                     XF_popEvent@inISR:
  2777                           	callstack 0
  2778                           
  2779                           ; 1 bytes @ 0x18
  2780  000019                     	ds	1
  2781  00001A                     ?___wmul:
  2782                           	callstack 0
  2783  00001A                     LCD_DrawRect@fill:
  2784                           	callstack 0
  2785  00001A                     XF_pushEvent@temp:
  2786                           	callstack 0
  2787  00001A                     ___xxtofl@sign:
  2788                           	callstack 0
  2789  00001A                     LCD_SliderCreate@sldColor:
  2790                           	callstack 0
  2791  00001A                     LCD_ButtonCreate@txtColor:
  2792                           	callstack 0
  2793  00001A                     RGB2LCD@green:
  2794                           	callstack 0
  2795  00001A                     LCD_Read@temp16:
  2796                           	callstack 0
  2797  00001A                     ___wmul@multiplier:
  2798                           	callstack 0
  2799  00001A                     ___aodiv@divisor:
  2800                           	callstack 0
  2801  00001A                     ___aomod@divisor:
  2802                           	callstack 0
  2803                           
  2804                           ; 8 bytes @ 0x19
  2805  00001A                     	ds	1
  2806  00001B                     ___xxtofl@exp:
  2807                           	callstack 0
  2808  00001B                     LCD_DrawRect@color:
  2809                           	callstack 0
  2810  00001B                     checkCollision@g:
  2811                           	callstack 0
  2812  00001B                     fputs@s:
  2813                           	callstack 0
  2814                           
  2815                           ; 2 bytes @ 0x1A
  2816  00001B                     	ds	1
  2817  00001C                     LCD_SliderCreate@bgColor:
  2818                           	callstack 0
  2819  00001C                     LCD_ButtonCreate@bgColor:
  2820                           	callstack 0
  2821  00001C                     RGB2LCD@blue:
  2822                           	callstack 0
  2823  00001C                     moovePaddle@g:
  2824                           	callstack 0
  2825  00001C                     ___wmul@multiplicand:
  2826                           	callstack 0
  2827  00001C                     ___xxtofl@arg:
  2828                           	callstack 0
  2829                           
  2830                           ; 4 bytes @ 0x1B
  2831  00001C                     	ds	1
  2832  00001D                     ??_checkCollision:
  2833  00001D                     LCD_DrawRect@j:
  2834                           	callstack 0
  2835  00001D                     fputs@fp:
  2836                           	callstack 0
  2837                           
  2838                           ; 2 bytes @ 0x1C
  2839  00001D                     	ds	1
  2840  00001E                     LCD_SliderCreate@borderColor:
  2841                           	callstack 0
  2842  00001E                     LCD_ButtonCreate@textOrBmp:
  2843                           	callstack 0
  2844  00001E                     RGB2LCD@color:
  2845                           	callstack 0
  2846  00001E                     ___wmul@product:
  2847                           	callstack 0
  2848                           
  2849                           ; 2 bytes @ 0x1D
  2850  00001E                     	ds	1
  2851  00001F                     fputs@c:
  2852                           	callstack 0
  2853  00001F                     LCD_DrawRect@temp:
  2854                           	callstack 0
  2855                           
  2856                           ; 2 bytes @ 0x1E
  2857  00001F                     	ds	1
  2858  000020                     ?___lwdiv:
  2859                           	callstack 0
  2860  000020                     ?___fldiv:
  2861                           	callstack 0
  2862  000020                     LCD_SliderCreate@cursorWidth:
  2863                           	callstack 0
  2864  000020                     LCD_ButtonCreate@font:
  2865                           	callstack 0
  2866  000020                     LCD_DrawText@msg:
  2867                           	callstack 0
  2868  000020                     XF_init@i:
  2869                           	callstack 0
  2870  000020                     ___lwdiv@dividend:
  2871                           	callstack 0
  2872  000020                     fputs@i:
  2873                           	callstack 0
  2874  000020                     ___fldiv@b:
  2875                           	callstack 0
  2876                           
  2877                           ; 4 bytes @ 0x1F
  2878  000020                     	ds	1
  2879  000021                     LCD_DrawRect@colorH:
  2880                           	callstack 0
  2881                           
  2882                           ; 1 bytes @ 0x20
  2883  000021                     	ds	1
  2884  000022                     ?_pad:
  2885                           	callstack 0
  2886  000022                     LCD_DrawRect@colorL:
  2887                           	callstack 0
  2888  000022                     ___aodiv@counter:
  2889                           	callstack 0
  2890  000022                     ___aomod@counter:
  2891                           	callstack 0
  2892  000022                     LCD_SliderCreate@steps:
  2893                           	callstack 0
  2894  000022                     LCD_ButtonCreate@fpPress:
  2895                           	callstack 0
  2896  000022                     LCD_DrawText@font:
  2897                           	callstack 0
  2898  000022                     ___lwdiv@divisor:
  2899                           	callstack 0
  2900  000022                     pad@fp:
  2901                           	callstack 0
  2902                           
  2903                           ; 2 bytes @ 0x21
  2904  000022                     	ds	1
  2905  000023                     ___aodiv@sign:
  2906                           	callstack 0
  2907  000023                     ___aomod@sign:
  2908                           	callstack 0
  2909  000023                     LCD_DrawRect@i:
  2910                           	callstack 0
  2911                           
  2912                           ; 2 bytes @ 0x22
  2913  000023                     	ds	1
  2914  000024                     ?_abs:
  2915                           	callstack 0
  2916  000024                     LCD_DrawText@align:
  2917                           	callstack 0
  2918  000024                     ___lwdiv@counter:
  2919                           	callstack 0
  2920  000024                     LCD_SliderCreate@fpPress:
  2921                           	callstack 0
  2922  000024                     LCD_ButtonCreate@fpReleased:
  2923                           	callstack 0
  2924  000024                     pad@buf:
  2925                           	callstack 0
  2926  000024                     abs@a:
  2927                           	callstack 0
  2928  000024                     ___fldiv@a:
  2929                           	callstack 0
  2930  000024                     ___aodiv@quotient:
  2931                           	callstack 0
  2932                           
  2933                           ; 8 bytes @ 0x23
  2934  000024                     	ds	1
  2935  000025                     Ball_draw@b:
  2936                           	callstack 0
  2937  000025                     Paddle_draw@p:
  2938                           	callstack 0
  2939  000025                     LCD_ButtonUpdate@button:
  2940                           	callstack 0
  2941  000025                     LCD_DrawText@posX:
  2942                           	callstack 0
  2943  000025                     mooveBall@g:
  2944                           	callstack 0
  2945  000025                     ___lwdiv@quotient:
  2946                           	callstack 0
  2947                           
  2948                           ; 2 bytes @ 0x24
  2949  000025                     	ds	1
  2950  000026                     ??_abs:
  2951  000026                     LCD_SliderCreate@slider:
  2952                           	callstack 0
  2953  000026                     LCD_ButtonCreate@fpOut:
  2954                           	callstack 0
  2955  000026                     pad@p:
  2956                           	callstack 0
  2957                           
  2958                           ; 2 bytes @ 0x25
  2959  000026                     	ds	1
  2960  000027                     ??_Ball_draw:
  2961  000027                     ??_Paddle_draw:
  2962  000027                     ??_LCD_ButtonUpdate:
  2963  000027                     LCD_SliderUpdate@slider:
  2964                           	callstack 0
  2965  000027                     LCD_DrawText@posY:
  2966                           	callstack 0
  2967  000027                     LCD_Bitmap@bmpPtr:
  2968                           	callstack 0
  2969                           
  2970                           ; 2 bytes @ 0x26
  2971  000027                     	ds	1
  2972  000028                     ??___fldiv:
  2973  000028                     ??_pad:
  2974  000028                     LCD_ButtonCreate@button:
  2975                           	callstack 0
  2976                           
  2977                           ; 2 bytes @ 0x27
  2978  000028                     	ds	1
  2979  000029                     ??_LCD_SliderUpdate:
  2980  000029                     LCD_DrawText@color:
  2981                           	callstack 0
  2982  000029                     LCD_Bitmap@posX:
  2983                           	callstack 0
  2984  000029                     pad@i:
  2985                           	callstack 0
  2986                           
  2987                           ; 2 bytes @ 0x28
  2988  000029                     	ds	1
  2989  00002A                     LCD_ButtonCreate@index:
  2990                           	callstack 0
  2991                           
  2992                           ; 1 bytes @ 0x29
  2993  00002A                     	ds	1
  2994  00002B                     GameParameters_init@s:
  2995                           	callstack 0
  2996  00002B                     LCD_ButtonUpdate@colorOut:
  2997                           	callstack 0
  2998  00002B                     LCD_DrawText@bg_color:
  2999                           	callstack 0
  3000  00002B                     LCD_Bitmap@posY:
  3001                           	callstack 0
  3002  00002B                     pad@w:
  3003                           	callstack 0
  3004                           
  3005                           ; 2 bytes @ 0x2A
  3006  00002B                     	ds	1
  3007  00002C                     ___fldiv@rem:
  3008                           	callstack 0
  3009                           
  3010                           ; 4 bytes @ 0x2B
  3011  00002C                     	ds	1
  3012  00002D                     ??_LCD_DrawText:
  3013  00002D                     ??_LCD_Bitmap:
  3014  00002D                     ?_dtoa:
  3015                           	callstack 0
  3016  00002D                     LCD_ButtonUpdate@colorIn:
  3017                           	callstack 0
  3018  00002D                     dtoa@fp:
  3019                           	callstack 0
  3020                           
  3021                           ; 2 bytes @ 0x2C
  3022  00002D                     	ds	2
  3023  00002F                     LCD_SliderUpdate@x2:
  3024                           	callstack 0
  3025  00002F                     LCD_ButtonUpdate@x2:
  3026                           	callstack 0
  3027  00002F                     dtoa@d:
  3028                           	callstack 0
  3029                           
  3030                           ; 8 bytes @ 0x2E
  3031  00002F                     	ds	1
  3032  000030                     ___fldiv@sign:
  3033                           	callstack 0
  3034                           
  3035                           ; 1 bytes @ 0x2F
  3036  000030                     	ds	1
  3037  000031                     LCD_SliderUpdate@y1:
  3038                           	callstack 0
  3039  000031                     LCD_ButtonUpdate@y1:
  3040                           	callstack 0
  3041  000031                     ___fldiv@new_exp:
  3042                           	callstack 0
  3043                           
  3044                           ; 2 bytes @ 0x30
  3045  000031                     	ds	2
  3046  000033                     LCD_SliderUpdate@y2:
  3047                           	callstack 0
  3048  000033                     LCD_ButtonUpdate@x1:
  3049                           	callstack 0
  3050  000033                     LCD_DrawText@offset:
  3051                           	callstack 0
  3052  000033                     ___fldiv@grs:
  3053                           	callstack 0
  3054                           
  3055                           ; 4 bytes @ 0x32
  3056  000033                     	ds	2
  3057  000035                     LCD_SliderUpdate@x1:
  3058                           	callstack 0
  3059  000035                     LCD_ButtonUpdate@y2:
  3060                           	callstack 0
  3061  000035                     LCD_DrawText@yOffset:
  3062                           	callstack 0
  3063                           
  3064                           ; 2 bytes @ 0x34
  3065  000035                     	ds	2
  3066  000037                     ??_dtoa:
  3067  000037                     LCD_DrawText@fontByte:
  3068                           	callstack 0
  3069  000037                     ___fldiv@bexp:
  3070                           	callstack 0
  3071  000037                     LCD_SliderDraw@slider:
  3072                           	callstack 0
  3073  000037                     gameControllerController@g:
  3074                           	callstack 0
  3075                           
  3076                           ; 2 bytes @ 0x36
  3077  000037                     	ds	1
  3078  000038                     LCD_DrawText@fontPixel:
  3079                           	callstack 0
  3080  000038                     ___fldiv@aexp:
  3081                           	callstack 0
  3082                           
  3083                           ; 1 bytes @ 0x37
  3084  000038                     	ds	1
  3085  000039                     ??_LCD_SliderDraw:
  3086  000039                     ?___fltol:
  3087                           	callstack 0
  3088  000039                     gameControllerController@ev:
  3089                           	callstack 0
  3090  000039                     LCD_DrawText@posYEnd:
  3091                           	callstack 0
  3092  000039                     ___fltol@f1:
  3093                           	callstack 0
  3094                           
  3095                           ; 4 bytes @ 0x38
  3096  000039                     	ds	1
  3097  00003A                     ??_gameControllerController:
  3098                           
  3099                           ; 1 bytes @ 0x39
  3100  00003A                     	ds	1
  3101  00003B                     LCD_DrawText@posXEnd:
  3102                           	callstack 0
  3103                           
  3104                           ; 2 bytes @ 0x3A
  3105  00003B                     	ds	1
  3106  00003C                     gameControllerInit@g:
  3107                           	callstack 0
  3108  00003C                     gameControllerSM@g:
  3109                           	callstack 0
  3110                           
  3111                           ; 2 bytes @ 0x3B
  3112  00003C                     	ds	1
  3113  00003D                     ??___fltol:
  3114  00003D                     LCD_DrawText@y:
  3115                           	callstack 0
  3116  00003D                     LCD_SliderDraw@x1:
  3117                           	callstack 0
  3118                           
  3119                           ; 2 bytes @ 0x3C
  3120  00003D                     	ds	1
  3121  00003E                     ??_gameControllerSM:
  3122  00003E                     LCD_DrawText@i:
  3123                           	callstack 0
  3124                           
  3125                           ; 1 bytes @ 0x3D
  3126  00003E                     	ds	1
  3127  00003F                     ?_vfpfcnvrt:
  3128                           	callstack 0
  3129  00003F                     LCD_DrawText@tempChar:
  3130                           	callstack 0
  3131  00003F                     LCD_SliderDraw@x2:
  3132                           	callstack 0
  3133  00003F                     vfpfcnvrt@fp:
  3134                           	callstack 0
  3135                           
  3136                           ; 2 bytes @ 0x3E
  3137  00003F                     	ds	1
  3138  000040                     LCD_DrawText@x:
  3139                           	callstack 0
  3140  000040                     gameControllerSM@ev:
  3141                           	callstack 0
  3142                           
  3143                           ; 1 bytes @ 0x3F
  3144  000040                     	ds	1
  3145  000041                     LCD_DrawText@width:
  3146                           	callstack 0
  3147  000041                     ___fltol@sign1:
  3148                           	callstack 0
  3149  000041                     LCD_SliderDraw@y1:
  3150                           	callstack 0
  3151  000041                     vfpfcnvrt@fmt:
  3152                           	callstack 0
  3153                           
  3154                           ; 2 bytes @ 0x40
  3155  000041                     	ds	1
  3156  000042                     ___fltol@exp1:
  3157                           	callstack 0
  3158                           
  3159                           ; 1 bytes @ 0x41
  3160  000042                     	ds	1
  3161  000043                     LCD_SliderDraw@y2:
  3162                           	callstack 0
  3163  000043                     vfpfcnvrt@ap:
  3164                           	callstack 0
  3165                           
  3166                           ; 2 bytes @ 0x42
  3167  000043                     	ds	2
  3168  000045                     ??_vfpfcnvrt:
  3169                           
  3170                           ; 1 bytes @ 0x44
  3171  000045                     	ds	2
  3172  000047                     
  3173                           ; 1 bytes @ 0x46
  3174 ;;
  3175 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3176 ;;
  3177 ;; *************** function _main *****************
  3178 ;; Defined at:
  3179 ;;		line 49 in file "main.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3193 ;;      Params:         0       0       0       0       0       0       0
  3194 ;;      Locals:         0       0       0       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0
  3196 ;;      Totals:         0       0       0       0       0       0       0
  3197 ;;Total ram usage:        0 bytes
  3198 ;; Hardware stack levels required when called: 17
  3199 ;; This function calls:
  3200 ;;		_Factory_exec
  3201 ;;		_Factory_init
  3202 ;; This function is called by:
  3203 ;;		Startup code after reset
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text0
  3208  006470                     __ptext0:
  3209                           	callstack 0
  3210  006470                     _main:
  3211                           	callstack 14
  3212  006470                     
  3213                           ;main.c: 51:     Factory_init();
  3214  006470  EC36  F02A         	call	_Factory_init	;wreg free
  3215  006474                     l812:
  3216                           
  3217                           ;main.c: 53:     {;main.c: 54:         Factory_exec();
  3218  006474  ECD7  F02F         	call	_Factory_exec	;wreg free
  3219  006478  EF3A  F032         	goto	l812
  3220  00647C  EF62  F000         	goto	start
  3221  006480                     __end_of_main:
  3222                           	callstack 0
  3223                           
  3224 ;; *************** function _Factory_init *****************
  3225 ;; Defined at:
  3226 ;;		line 11 in file "class/factory.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;		None
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3240 ;;      Params:         0       0       0       0       0       0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0
  3242 ;;      Temps:          0       2       0       0       0       0       0
  3243 ;;      Totals:         0       2       0       0       0       0       0
  3244 ;;Total ram usage:        2 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; Hardware stack levels required when called: 16
  3247 ;; This function calls:
  3248 ;;		_GameParameters_init
  3249 ;;		_LCD_DrawText
  3250 ;;		_LCD_Fill
  3251 ;;		_LCD_Init
  3252 ;;		_XF_init
  3253 ;;		_sleepInit
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text1
  3260  00546C                     __ptext1:
  3261                           	callstack 0
  3262  00546C                     _Factory_init:
  3263                           	callstack 14
  3264  00546C                     
  3265                           ;class/factory.c: 14:     PLLEN = 1;
  3266  00546C  8C9B               	bsf	3995,6,c	;volatile
  3267  00546E                     
  3268                           ;class/factory.c: 15:     OSCCON = 0b01110000;
  3269  00546E  0E70               	movlw	112
  3270  005470  6ED3               	movwf	211,c	;volatile
  3271  005472                     
  3272                           ;class/factory.c: 16:     _delay((unsigned long)((100)*(64000000L/4000.0)));
  3273  005472  0E09               	movlw	9
  3274  005474  0100               	movlb	0	; () banked
  3275  005476  6FA8               	movwf	(??_Factory_init+1)& (0+255),b
  3276  005478  0E1E               	movlw	30
  3277  00547A  6FA7               	movwf	??_Factory_init& (0+255),b
  3278  00547C  0EE4               	movlw	228
  3279  00547E                     u8087:
  3280  00547E  2EE8               	decfsz	wreg,f,c
  3281  005480  D7FE               	bra	u8087
  3282  005482  2FA7               	decfsz	??_Factory_init& (0+255),f,b
  3283  005484  D7FC               	bra	u8087
  3284  005486  2FA8               	decfsz	(??_Factory_init+1)& (0+255),f,b
  3285  005488  D7FA               	bra	u8087
  3286  00548A  F000               	nop	
  3287  00548C                     
  3288                           ;class/factory.c: 18:     LCD_Init();
  3289  00548C  EC77  F019         	call	_LCD_Init	;wreg free
  3290  005490                     
  3291                           ;class/factory.c: 19:     LCD_Fill(0b0000000000011111);
  3292  005490  0E00               	movlw	0
  3293  005492  6E13               	movwf	(LCD_Fill@color+1)^0,c
  3294  005494  0E1F               	movlw	31
  3295  005496  6E12               	movwf	LCD_Fill@color^0,c
  3296  005498  EC76  F029         	call	_LCD_Fill	;wreg free
  3297  00549C                     
  3298                           ;class/factory.c: 20:     LCD_DrawText("MenuStart",&arialNarrow_12ptFontInfo,A_CENTER,50
      +                          ,50,0b0000000000000000,0b1111111111111111);
  3299  00549C  0EB6               	movlw	low STR_1
  3300  00549E  6E20               	movwf	LCD_DrawText@msg^0,c
  3301  0054A0  0E7F               	movlw	high STR_1
  3302  0054A2  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  3303  0054A4  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  3304  0054A6  6E22               	movwf	LCD_DrawText@font^0,c
  3305  0054A8  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  3306  0054AA  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  3307  0054AC  0E02               	movlw	2
  3308  0054AE  6E24               	movwf	LCD_DrawText@align^0,c
  3309  0054B0  0E00               	movlw	0
  3310  0054B2  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  3311  0054B4  0E32               	movlw	50
  3312  0054B6  6E25               	movwf	LCD_DrawText@posX^0,c
  3313  0054B8  0E00               	movlw	0
  3314  0054BA  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  3315  0054BC  0E32               	movlw	50
  3316  0054BE  6E27               	movwf	LCD_DrawText@posY^0,c
  3317  0054C0  0E00               	movlw	0
  3318  0054C2  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  3319  0054C4  0E00               	movlw	0
  3320  0054C6  6E29               	movwf	LCD_DrawText@color^0,c
  3321  0054C8  0EFF               	movlw	255
  3322  0054CA  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  3323  0054CC  682B               	setf	LCD_DrawText@bg_color^0,c
  3324  0054CE  ECDB  F00E         	call	_LCD_DrawText	;wreg free
  3325  0054D2                     
  3326                           ;class/factory.c: 25:     GIE=1;
  3327  0054D2  8EF2               	bsf	4082,7,c	;volatile
  3328  0054D4                     
  3329                           ;class/factory.c: 26:     INT1IE=0;
  3330  0054D4  96F0               	bcf	4080,3,c	;volatile
  3331  0054D6                     
  3332                           ;class/factory.c: 27:     TRISC0=0;
  3333  0054D6  9094               	bcf	3988,0,c	;volatile
  3334  0054D8                     
  3335                           ;class/factory.c: 28:     LATC0=1;
  3336  0054D8  808B               	bsf	3979,0,c	;volatile
  3337  0054DA                     
  3338                           ;class/factory.c: 31:     T0CON=0b10000110;
  3339  0054DA  0E86               	movlw	134
  3340  0054DC  6ED5               	movwf	213,c	;volatile
  3341  0054DE                     
  3342                           ;class/factory.c: 32:     TMR0H=0xFB;
  3343  0054DE  0EFB               	movlw	251
  3344  0054E0  6ED7               	movwf	215,c	;volatile
  3345  0054E2                     
  3346                           ;class/factory.c: 33:     TMR0L=0x1D;
  3347  0054E2  0E1D               	movlw	29
  3348  0054E4  6ED6               	movwf	214,c	;volatile
  3349  0054E6                     
  3350                           ;class/factory.c: 34:     TMR0IE=1;
  3351  0054E6  8AF2               	bsf	4082,5,c	;volatile
  3352  0054E8                     
  3353                           ;class/factory.c: 37:     TRISC1=0;
  3354  0054E8  9294               	bcf	3988,1,c	;volatile
  3355  0054EA                     
  3356                           ;class/factory.c: 38:     PR2=255;
  3357  0054EA  68BB               	setf	187,c	;volatile
  3358  0054EC                     
  3359                           ;class/factory.c: 39:     CCP2CONbits.CCP2M = 0xC;
  3360  0054EC  5066               	movf	102,w,c	;volatile
  3361  0054EE  0BF0               	andlw	-16
  3362  0054F0  090C               	iorlw	12
  3363  0054F2  6E66               	movwf	102,c	;volatile
  3364  0054F4                     
  3365                           ;class/factory.c: 40:     CCPR2L = 255;
  3366  0054F4  6867               	setf	103,c	;volatile
  3367  0054F6                     
  3368                           ;class/factory.c: 41:     CCP2CONbits.DC2B = 0;
  3369  0054F6  0ECF               	movlw	-49
  3370  0054F8  1666               	andwf	102,f,c	;volatile
  3371  0054FA                     
  3372                           ;class/factory.c: 42:     TMR2IF=0;
  3373  0054FA  929E               	bcf	3998,1,c	;volatile
  3374  0054FC                     
  3375                           ;class/factory.c: 43:     T2CONbits.T2CKPS0 = 1;
  3376  0054FC  80BA               	bsf	186,0,c	;volatile
  3377  0054FE                     
  3378                           ;class/factory.c: 44:     T2CONbits.T2CKPS1 = 0;
  3379  0054FE  92BA               	bcf	186,1,c	;volatile
  3380  005500                     
  3381                           ;class/factory.c: 45:     T2CONbits.TMR2ON = 1;
  3382  005500  84BA               	bsf	186,2,c	;volatile
  3383  005502                     
  3384                           ;class/factory.c: 47:     ADCON2=0b10100110;
  3385  005502  0EA6               	movlw	166
  3386  005504  6EC0               	movwf	192,c	;volatile
  3387  005506                     
  3388                           ;class/factory.c: 50:     XF_init();
  3389  005506  EC93  F02A         	call	_XF_init	;wreg free
  3390  00550A                     
  3391                           ;class/factory.c: 51:     GameParameters_init(&g1);
  3392  00550A  0E00               	movlw	low _g1
  3393  00550C  6E2B               	movwf	GameParameters_init@s^0,c
  3394  00550E  0E01               	movlw	high _g1
  3395  005510  6E2C               	movwf	(GameParameters_init@s+1)^0,c
  3396  005512  EC00  F011         	call	_GameParameters_init	;wreg free
  3397  005516                     
  3398                           ;class/factory.c: 52:     sleepInit(&g1);
  3399  005516  0E00               	movlw	low _g1
  3400  005518  0100               	movlb	0	; () banked
  3401  00551A  6FA5               	movwf	sleepInit@g& (0+255),b
  3402  00551C  0E01               	movlw	high _g1
  3403  00551E  6FA6               	movwf	(sleepInit@g+1)& (0+255),b
  3404  005520  EC70  F031         	call	_sleepInit	;wreg free
  3405  005524  0012               	return		;funcret
  3406  005526                     __end_of_Factory_init:
  3407                           	callstack 0
  3408                           
  3409 ;; *************** function _sleepInit *****************
  3410 ;; Defined at:
  3411 ;;		line 11 in file "stateMachine/sleepSM.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  g               2   69[BANK0 ] PTR struct GameParameter
  3414 ;;		 -> g1(239), 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3426 ;;      Params:         0       2       0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0
  3428 ;;      Temps:          0       0       0       0       0       0       0
  3429 ;;      Totals:         0       2       0       0       0       0       0
  3430 ;;Total ram usage:        2 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; Hardware stack levels required when called: 15
  3433 ;; This function calls:
  3434 ;;		_displayInit
  3435 ;;		_gameControllerInit
  3436 ;;		_sleepController
  3437 ;;		_touchScreenInit
  3438 ;; This function is called by:
  3439 ;;		_Factory_init
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text2
  3444  0062E0                     __ptext2:
  3445                           	callstack 0
  3446  0062E0                     _sleepInit:
  3447                           	callstack 14
  3448  0062E0                     
  3449                           ;stateMachine/sleepSM.c: 11: void sleepInit(GameParameters* g);stateMachine/sleepSM.c: 1
      +                          2: {;stateMachine/sleepSM.c: 13:     sleepState=WAKEUP;
  3450  0062E0  0E00               	movlw	0
  3451  0062E2  0100               	movlb	0	; () banked
  3452  0062E4  6FDF               	movwf	_sleepState& (0+255),b
  3453  0062E6                     
  3454                           ; BSR set to: 0
  3455                           ;stateMachine/sleepSM.c: 14:     displayInit(g);
  3456  0062E6  C0A5  F0A3         	movff	sleepInit@g,displayInit@g
  3457  0062EA  C0A6  F0A4         	movff	sleepInit@g+1,displayInit@g+1
  3458  0062EE  ECDF  F031         	call	_displayInit	;wreg free
  3459  0062F2                     
  3460                           ;stateMachine/sleepSM.c: 15:     gameControllerInit(g);
  3461  0062F2  C0A5  F03C         	movff	sleepInit@g,gameControllerInit@g
  3462  0062F6  C0A6  F03D         	movff	sleepInit@g+1,gameControllerInit@g+1
  3463  0062FA  ECEB  F031         	call	_gameControllerInit	;wreg free
  3464  0062FE                     
  3465                           ;stateMachine/sleepSM.c: 16:     touchScreenInit();
  3466  0062FE  EC40  F032         	call	_touchScreenInit	;wreg free
  3467  006302                     
  3468                           ;stateMachine/sleepSM.c: 17:     sleepController();
  3469  006302  EC27  F031         	call	_sleepController	;wreg free
  3470  006306  0012               	return		;funcret
  3471  006308                     __end_of_sleepInit:
  3472                           	callstack 0
  3473                           
  3474 ;; *************** function _touchScreenInit *****************
  3475 ;; Defined at:
  3476 ;;		line 17 in file "stateMachine/touchScreenSM.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;		None
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3490 ;;      Params:         0       0       0       0       0       0       0
  3491 ;;      Locals:         0       0       0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0       0       0
  3493 ;;      Totals:         0       0       0       0       0       0       0
  3494 ;;Total ram usage:        0 bytes
  3495 ;; Hardware stack levels used: 1
  3496 ;; Hardware stack levels required when called: 5
  3497 ;; This function calls:
  3498 ;;		_configTouch
  3499 ;; This function is called by:
  3500 ;;		_sleepInit
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           	psect	text3
  3505  006480                     __ptext3:
  3506                           	callstack 0
  3507  006480                     _touchScreenInit:
  3508                           	callstack 23
  3509  006480                     
  3510                           ;stateMachine/touchScreenSM.c: 19:     touchScreenState=WAITING;
  3511  006480  0E00               	movlw	0
  3512  006482  0100               	movlb	0	; () banked
  3513  006484  6FDE               	movwf	_touchScreenState& (0+255),b
  3514  006486                     
  3515                           ; BSR set to: 0
  3516                           ;stateMachine/touchScreenSM.c: 20:     configTouch();
  3517  006486  ECD1  F031         	call	_configTouch	;wreg free
  3518  00648A  0012               	return		;funcret
  3519  00648C                     __end_of_touchScreenInit:
  3520                           	callstack 0
  3521                           
  3522 ;; *************** function _gameControllerInit *****************
  3523 ;; Defined at:
  3524 ;;		line 12 in file "stateMachine/gameController.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  g               2   59[COMRAM] PTR struct GameParameter
  3527 ;;		 -> g1(239), 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3539 ;;      Params:         2       0       0       0       0       0       0
  3540 ;;      Locals:         0       0       0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0
  3542 ;;      Totals:         2       0       0       0       0       0       0
  3543 ;;Total ram usage:        2 bytes
  3544 ;; Hardware stack levels used: 1
  3545 ;; Hardware stack levels required when called: 9
  3546 ;; This function calls:
  3547 ;;		_gameControllerController
  3548 ;; This function is called by:
  3549 ;;		_sleepInit
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text4
  3554  0063D6                     __ptext4:
  3555                           	callstack 0
  3556  0063D6                     _gameControllerInit:
  3557                           	callstack 19
  3558  0063D6                     
  3559                           ;stateMachine/gameController.c: 12: void gameControllerInit(GameParameters* g);stateMach
      +                          ine/gameController.c: 13: {;stateMachine/gameController.c: 14:     gameControllerState=N
      +                          OGAME;
  3560  0063D6  0E00               	movlw	0
  3561  0063D8  6E4D               	movwf	_gameControllerState^0,c
  3562  0063DA                     
  3563                           ;stateMachine/gameController.c: 15:     gameControllerController(g,NULLEVENT);
  3564  0063DA  C03C  F037         	movff	gameControllerInit@g,gameControllerController@g
  3565  0063DE  C03D  F038         	movff	gameControllerInit@g+1,gameControllerController@g+1
  3566  0063E2  0E00               	movlw	0
  3567  0063E4  6E39               	movwf	gameControllerController@ev^0,c
  3568  0063E6  ECBF  F014         	call	_gameControllerController	;wreg free
  3569  0063EA  0012               	return		;funcret
  3570  0063EC                     __end_of_gameControllerInit:
  3571                           	callstack 0
  3572                           
  3573 ;; *************** function _displayInit *****************
  3574 ;; Defined at:
  3575 ;;		line 16 in file "stateMachine/display.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  g               2   67[BANK0 ] PTR struct GameParameter
  3578 ;;		 -> g1(239), 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3590 ;;      Params:         0       2       0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0
  3593 ;;      Totals:         0       2       0       0       0       0       0
  3594 ;;Total ram usage:        2 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 14
  3597 ;; This function calls:
  3598 ;;		_displayController
  3599 ;; This function is called by:
  3600 ;;		_sleepInit
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text5
  3605  0063BE                     __ptext5:
  3606                           	callstack 0
  3607  0063BE                     _displayInit:
  3608                           	callstack 14
  3609  0063BE                     
  3610                           ;stateMachine/display.c: 16: void displayInit(GameParameters* g);stateMachine/display.c:
      +                           17: {;stateMachine/display.c: 18:     displayState=WELCOME;
  3611  0063BE  0E00               	movlw	0
  3612  0063C0  0100               	movlb	0	; () banked
  3613  0063C2  6FDD               	movwf	_displayState& (0+255),b
  3614  0063C4                     
  3615                           ; BSR set to: 0
  3616                           ;stateMachine/display.c: 19:     displayController(g,NULLEVENT);
  3617  0063C4  C0A3  F09E         	movff	displayInit@g,displayController@g
  3618  0063C8  C0A4  F09F         	movff	displayInit@g+1,displayController@g+1
  3619  0063CC  0E00               	movlw	0
  3620  0063CE  6FA0               	movwf	displayController@ev& (0+255),b
  3621  0063D0  ECC6  F023         	call	_displayController	;wreg free
  3622  0063D4  0012               	return		;funcret
  3623  0063D6                     __end_of_displayInit:
  3624                           	callstack 0
  3625                           
  3626 ;; *************** function _XF_init *****************
  3627 ;; Defined at:
  3628 ;;		line 25 in file "xf/xf.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  i               2   31[COMRAM] int 
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3642 ;;      Params:         0       0       0       0       0       0       0
  3643 ;;      Locals:         2       0       0       0       0       0       0
  3644 ;;      Temps:          0       0       0       0       0       0       0
  3645 ;;      Totals:         2       0       0       0       0       0       0
  3646 ;;Total ram usage:        2 bytes
  3647 ;; Hardware stack levels used: 1
  3648 ;; Hardware stack levels required when called: 5
  3649 ;; This function calls:
  3650 ;;		___wmul
  3651 ;; This function is called by:
  3652 ;;		_Factory_init
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text6
  3657  005526                     __ptext6:
  3658                           	callstack 0
  3659  005526                     _XF_init:
  3660                           	callstack 24
  3661  005526                     
  3662                           ;xf/xf.c: 27:     int i;;xf/xf.c: 28:     for (i=0; i<12; i++)
  3663  005526  0E00               	movlw	0
  3664  005528  6E21               	movwf	(XF_init@i+1)^0,c
  3665  00552A  0E00               	movlw	0
  3666  00552C  6E20               	movwf	XF_init@i^0,c
  3667  00552E                     l10412:
  3668                           
  3669                           ;xf/xf.c: 29:     {;xf/xf.c: 30:         theXF.eventQueue[i] = NULLEVENT;
  3670  00552E  0ECD               	movlw	low (_theXF+24)
  3671  005530  2420               	addwf	XF_init@i^0,w,c
  3672  005532  6ED9               	movwf	fsr2l,c
  3673  005534  0E00               	movlw	high (_theXF+24)
  3674  005536  2021               	addwfc	(XF_init@i+1)^0,w,c
  3675  005538  6EDA               	movwf	fsr2h,c
  3676  00553A  0E00               	movlw	0
  3677  00553C  6EDF               	movwf	indf2,c
  3678  00553E                     
  3679                           ;xf/xf.c: 31:     }
  3680  00553E  4A20               	infsnz	XF_init@i^0,f,c
  3681  005540  2A21               	incf	(XF_init@i+1)^0,f,c
  3682  005542  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3683  005544  EFAD  F02A         	goto	u7881
  3684  005548  5021               	movf	(XF_init@i+1)^0,w,c
  3685  00554A  E109               	bnz	u7880
  3686  00554C  0E0C               	movlw	12
  3687  00554E  5C20               	subwf	XF_init@i^0,w,c
  3688  005550  A0D8               	btfss	status,0,c
  3689  005552  EFAD  F02A         	goto	u7881
  3690  005556  EFAF  F02A         	goto	u7880
  3691  00555A                     u7881:
  3692  00555A  EF97  F02A         	goto	l10412
  3693  00555E                     u7880:
  3694  00555E                     
  3695                           ;xf/xf.c: 33:     for (i=0; i<8; i++)
  3696  00555E  0E00               	movlw	0
  3697  005560  6E21               	movwf	(XF_init@i+1)^0,c
  3698  005562  0E00               	movlw	0
  3699  005564  6E20               	movwf	XF_init@i^0,c
  3700  005566                     l10424:
  3701                           
  3702                           ;xf/xf.c: 34:     {;xf/xf.c: 35:         theXF.timerList[i].tm = 0;
  3703  005566  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3704  00556A  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3705  00556E  0E00               	movlw	0
  3706  005570  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3707  005572  0E03               	movlw	3
  3708  005574  6E1C               	movwf	___wmul@multiplicand^0,c
  3709  005576  ECAB  F031         	call	___wmul	;wreg free
  3710  00557A  0EB5               	movlw	low _theXF
  3711  00557C  241A               	addwf	?___wmul^0,w,c
  3712  00557E  6ED9               	movwf	fsr2l,c
  3713  005580  0E00               	movlw	high _theXF
  3714  005582  201B               	addwfc	(?___wmul+1)^0,w,c
  3715  005584  6EDA               	movwf	fsr2h,c
  3716  005586  0E00               	movlw	0
  3717  005588  6EDE               	movwf	postinc2,c
  3718  00558A  0E00               	movlw	0
  3719  00558C  6EDD               	movwf	postdec2,c
  3720                           
  3721                           ;xf/xf.c: 36:         theXF.timerList[i].ev = NULLEVENT;
  3722  00558E  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3723  005592  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3724  005596  0E00               	movlw	0
  3725  005598  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3726  00559A  0E03               	movlw	3
  3727  00559C  6E1C               	movwf	___wmul@multiplicand^0,c
  3728  00559E  ECAB  F031         	call	___wmul	;wreg free
  3729  0055A2  0EB7               	movlw	low (_theXF+2)
  3730  0055A4  241A               	addwf	?___wmul^0,w,c
  3731  0055A6  6ED9               	movwf	fsr2l,c
  3732  0055A8  0E00               	movlw	high (_theXF+2)
  3733  0055AA  201B               	addwfc	(?___wmul+1)^0,w,c
  3734  0055AC  6EDA               	movwf	fsr2h,c
  3735  0055AE  0E00               	movlw	0
  3736  0055B0  6EDF               	movwf	indf2,c
  3737  0055B2                     
  3738                           ;xf/xf.c: 37:     }
  3739  0055B2  4A20               	infsnz	XF_init@i^0,f,c
  3740  0055B4  2A21               	incf	(XF_init@i+1)^0,f,c
  3741  0055B6  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3742  0055B8  EFE7  F02A         	goto	u7891
  3743  0055BC  5021               	movf	(XF_init@i+1)^0,w,c
  3744  0055BE  E109               	bnz	u7890
  3745  0055C0  0E08               	movlw	8
  3746  0055C2  5C20               	subwf	XF_init@i^0,w,c
  3747  0055C4  A0D8               	btfss	status,0,c
  3748  0055C6  EFE7  F02A         	goto	u7891
  3749  0055CA  EFE9  F02A         	goto	u7890
  3750  0055CE                     u7891:
  3751  0055CE  EFB3  F02A         	goto	l10424
  3752  0055D2                     u7890:
  3753  0055D2                     
  3754                           ;xf/xf.c: 38:     theXF.in = 0;
  3755  0055D2  0E00               	movlw	0
  3756  0055D4  0100               	movlb	0	; () banked
  3757  0055D6  6FD9               	movwf	(_theXF+36)& (0+255),b
  3758                           
  3759                           ;xf/xf.c: 39:     theXF.out = 0;
  3760  0055D8  0E00               	movlw	0
  3761  0055DA  6FDA               	movwf	(_theXF+37)& (0+255),b
  3762  0055DC                     
  3763                           ; BSR set to: 0
  3764  0055DC  0012               	return		;funcret
  3765  0055DE                     __end_of_XF_init:
  3766                           	callstack 0
  3767                           
  3768 ;; *************** function _LCD_Init *****************
  3769 ;; Defined at:
  3770 ;;		line 20 in file "libraries/lcd_highlevel.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;		None
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  i               1   23[COMRAM] unsigned char 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      void 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0, cstack
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3784 ;;      Params:         0       0       0       0       0       0       0
  3785 ;;      Locals:         1       0       0       0       0       0       0
  3786 ;;      Temps:          1       0       0       0       0       0       0
  3787 ;;      Totals:         2       0       0       0       0       0       0
  3788 ;;Total ram usage:        2 bytes
  3789 ;; Hardware stack levels used: 1
  3790 ;; Hardware stack levels required when called: 5
  3791 ;; This function calls:
  3792 ;;		_LCD_Lowlevel_Init
  3793 ;; This function is called by:
  3794 ;;		_Factory_init
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text7
  3799  0032EE                     __ptext7:
  3800                           	callstack 0
  3801  0032EE                     _LCD_Init:
  3802                           	callstack 24
  3803  0032EE                     
  3804                           ;libraries/lcd_highlevel.c: 22:   uint8_t i;;libraries/lcd_highlevel.c: 86:   LCD_Lowlev
      +                          el_Init();
  3805  0032EE  ECA0  F02C         	call	_LCD_Lowlevel_Init	;wreg free
  3806  0032F2                     
  3807                           ;libraries/lcd_highlevel.c: 87:   PORTA = 0x11; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3808  0032F2  0E11               	movlw	17
  3809  0032F4  6E80               	movwf	128,c	;volatile
  3810  0032F6  988B               	bcf	3979,4,c	;volatile
  3811  0032F8  968B               	bcf	3979,3,c	;volatile
  3812  0032FA  868B               	bsf	3979,3,c	;volatile
  3813  0032FC  888B               	bsf	3979,4,c	;volatile
  3814  0032FE                     
  3815                           ;libraries/lcd_highlevel.c: 88:   for(i=0;i<10;i++)
  3816  0032FE  0E00               	movlw	0
  3817  003300  6E18               	movwf	LCD_Init@i^0,c
  3818  003302                     l4060:
  3819                           
  3820                           ;libraries/lcd_highlevel.c: 89:   {;libraries/lcd_highlevel.c: 90:     _delay((unsigned 
      +                          long)((10)*(64000000L/4000.0)));
  3821  003302  0ED0               	movlw	208
  3822  003304  6E17               	movwf	??_LCD_Init^0,c
  3823  003306  0ECA               	movlw	202
  3824  003308                     u8097:
  3825  003308  2EE8               	decfsz	wreg,f,c
  3826  00330A  D7FE               	bra	u8097
  3827  00330C  2E17               	decfsz	??_LCD_Init^0,f,c
  3828  00330E  D7FC               	bra	u8097
  3829  003310                     
  3830                           ;libraries/lcd_highlevel.c: 91:   }
  3831  003310  2A18               	incf	LCD_Init@i^0,f,c
  3832  003312  0E09               	movlw	9
  3833  003314  6418               	cpfsgt	LCD_Init@i^0,c
  3834  003316  EF8F  F019         	goto	u2451
  3835  00331A  EF91  F019         	goto	u2450
  3836  00331E                     u2451:
  3837  00331E  EF81  F019         	goto	l4060
  3838  003322                     u2450:
  3839  003322                     
  3840                           ;libraries/lcd_highlevel.c: 92:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3841  003322  0E36               	movlw	54
  3842  003324  6E80               	movwf	128,c	;volatile
  3843  003326  988B               	bcf	3979,4,c	;volatile
  3844  003328  968B               	bcf	3979,3,c	;volatile
  3845  00332A  868B               	bsf	3979,3,c	;volatile
  3846  00332C  888B               	bsf	3979,4,c	;volatile
  3847                           
  3848                           ;libraries/lcd_highlevel.c: 93:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
  3849  00332E  0E00               	movlw	0
  3850  003330  6E80               	movwf	128,c	;volatile
  3851  003332  968B               	bcf	3979,3,c	;volatile
  3852  003334  868B               	bsf	3979,3,c	;volatile
  3853                           
  3854                           ;libraries/lcd_highlevel.c: 94:   PORTA = 0x3A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3855  003336  0E3A               	movlw	58
  3856  003338  6E80               	movwf	128,c	;volatile
  3857  00333A  988B               	bcf	3979,4,c	;volatile
  3858  00333C  968B               	bcf	3979,3,c	;volatile
  3859  00333E  868B               	bsf	3979,3,c	;volatile
  3860  003340  888B               	bsf	3979,4,c	;volatile
  3861                           
  3862                           ;libraries/lcd_highlevel.c: 95:   PORTA = 0x55; LATC3 = 0; LATC3 = 1;;
  3863  003342  0E55               	movlw	85
  3864  003344  6E80               	movwf	128,c	;volatile
  3865  003346  968B               	bcf	3979,3,c	;volatile
  3866  003348  868B               	bsf	3979,3,c	;volatile
  3867                           
  3868                           ;libraries/lcd_highlevel.c: 96:   PORTA = 0xB2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3869  00334A  0EB2               	movlw	178
  3870  00334C  6E80               	movwf	128,c	;volatile
  3871  00334E  988B               	bcf	3979,4,c	;volatile
  3872  003350  968B               	bcf	3979,3,c	;volatile
  3873  003352  868B               	bsf	3979,3,c	;volatile
  3874  003354  888B               	bsf	3979,4,c	;volatile
  3875                           
  3876                           ;libraries/lcd_highlevel.c: 97:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3877  003356  0E0C               	movlw	12
  3878  003358  6E80               	movwf	128,c	;volatile
  3879  00335A  968B               	bcf	3979,3,c	;volatile
  3880  00335C  868B               	bsf	3979,3,c	;volatile
  3881                           
  3882                           ;libraries/lcd_highlevel.c: 98:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3883  00335E  0E0C               	movlw	12
  3884  003360  6E80               	movwf	128,c	;volatile
  3885  003362  968B               	bcf	3979,3,c	;volatile
  3886  003364  868B               	bsf	3979,3,c	;volatile
  3887                           
  3888                           ;libraries/lcd_highlevel.c: 99:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3889  003366  0E33               	movlw	51
  3890  003368  6E80               	movwf	128,c	;volatile
  3891  00336A  968B               	bcf	3979,3,c	;volatile
  3892  00336C  868B               	bsf	3979,3,c	;volatile
  3893                           
  3894                           ;libraries/lcd_highlevel.c: 100:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3895  00336E  0E33               	movlw	51
  3896  003370  6E80               	movwf	128,c	;volatile
  3897  003372  968B               	bcf	3979,3,c	;volatile
  3898  003374  868B               	bsf	3979,3,c	;volatile
  3899                           
  3900                           ;libraries/lcd_highlevel.c: 101:   PORTA = 0xB7; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3901  003376  0EB7               	movlw	183
  3902  003378  6E80               	movwf	128,c	;volatile
  3903  00337A  988B               	bcf	3979,4,c	;volatile
  3904  00337C  968B               	bcf	3979,3,c	;volatile
  3905  00337E  868B               	bsf	3979,3,c	;volatile
  3906  003380  888B               	bsf	3979,4,c	;volatile
  3907                           
  3908                           ;libraries/lcd_highlevel.c: 102:   PORTA = 0x35; LATC3 = 0; LATC3 = 1;;
  3909  003382  0E35               	movlw	53
  3910  003384  6E80               	movwf	128,c	;volatile
  3911  003386  968B               	bcf	3979,3,c	;volatile
  3912  003388  868B               	bsf	3979,3,c	;volatile
  3913                           
  3914                           ;libraries/lcd_highlevel.c: 103:   PORTA = 0xBB; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3915  00338A  0EBB               	movlw	187
  3916  00338C  6E80               	movwf	128,c	;volatile
  3917  00338E  988B               	bcf	3979,4,c	;volatile
  3918  003390  968B               	bcf	3979,3,c	;volatile
  3919  003392  868B               	bsf	3979,3,c	;volatile
  3920  003394  888B               	bsf	3979,4,c	;volatile
  3921                           
  3922                           ;libraries/lcd_highlevel.c: 104:   PORTA = 0x2B; LATC3 = 0; LATC3 = 1;;
  3923  003396  0E2B               	movlw	43
  3924  003398  6E80               	movwf	128,c	;volatile
  3925  00339A  968B               	bcf	3979,3,c	;volatile
  3926  00339C  868B               	bsf	3979,3,c	;volatile
  3927                           
  3928                           ;libraries/lcd_highlevel.c: 105:   PORTA = 0xC0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3929  00339E  0EC0               	movlw	192
  3930  0033A0  6E80               	movwf	128,c	;volatile
  3931  0033A2  988B               	bcf	3979,4,c	;volatile
  3932  0033A4  968B               	bcf	3979,3,c	;volatile
  3933  0033A6  868B               	bsf	3979,3,c	;volatile
  3934  0033A8  888B               	bsf	3979,4,c	;volatile
  3935                           
  3936                           ;libraries/lcd_highlevel.c: 106:   PORTA = 0x2C; LATC3 = 0; LATC3 = 1;;
  3937  0033AA  0E2C               	movlw	44
  3938  0033AC  6E80               	movwf	128,c	;volatile
  3939  0033AE  968B               	bcf	3979,3,c	;volatile
  3940  0033B0  868B               	bsf	3979,3,c	;volatile
  3941                           
  3942                           ;libraries/lcd_highlevel.c: 107:   PORTA = 0xC2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3943  0033B2  0EC2               	movlw	194
  3944  0033B4  6E80               	movwf	128,c	;volatile
  3945  0033B6  988B               	bcf	3979,4,c	;volatile
  3946  0033B8  968B               	bcf	3979,3,c	;volatile
  3947  0033BA  868B               	bsf	3979,3,c	;volatile
  3948  0033BC  888B               	bsf	3979,4,c	;volatile
  3949                           
  3950                           ;libraries/lcd_highlevel.c: 108:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  3951  0033BE  0E01               	movlw	1
  3952  0033C0  6E80               	movwf	128,c	;volatile
  3953  0033C2  968B               	bcf	3979,3,c	;volatile
  3954  0033C4  868B               	bsf	3979,3,c	;volatile
  3955  0033C6                     
  3956                           ;libraries/lcd_highlevel.c: 109:   PORTA = 0xFF; LATC3 = 0; LATC3 = 1;;
  3957  0033C6  6880               	setf	128,c	;volatile
  3958  0033C8  968B               	bcf	3979,3,c	;volatile
  3959  0033CA  868B               	bsf	3979,3,c	;volatile
  3960                           
  3961                           ;libraries/lcd_highlevel.c: 110:   PORTA = 0XC3; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3962  0033CC  0EC3               	movlw	195
  3963  0033CE  6E80               	movwf	128,c	;volatile
  3964  0033D0  988B               	bcf	3979,4,c	;volatile
  3965  0033D2  968B               	bcf	3979,3,c	;volatile
  3966  0033D4  868B               	bsf	3979,3,c	;volatile
  3967  0033D6  888B               	bsf	3979,4,c	;volatile
  3968                           
  3969                           ;libraries/lcd_highlevel.c: 111:   PORTA = 0x11; LATC3 = 0; LATC3 = 1;;
  3970  0033D8  0E11               	movlw	17
  3971  0033DA  6E80               	movwf	128,c	;volatile
  3972  0033DC  968B               	bcf	3979,3,c	;volatile
  3973  0033DE  868B               	bsf	3979,3,c	;volatile
  3974                           
  3975                           ;libraries/lcd_highlevel.c: 112:   PORTA = 0xC4; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3976  0033E0  0EC4               	movlw	196
  3977  0033E2  6E80               	movwf	128,c	;volatile
  3978  0033E4  988B               	bcf	3979,4,c	;volatile
  3979  0033E6  968B               	bcf	3979,3,c	;volatile
  3980  0033E8  868B               	bsf	3979,3,c	;volatile
  3981  0033EA  888B               	bsf	3979,4,c	;volatile
  3982                           
  3983                           ;libraries/lcd_highlevel.c: 113:   PORTA = 0x20; LATC3 = 0; LATC3 = 1;;
  3984  0033EC  0E20               	movlw	32
  3985  0033EE  6E80               	movwf	128,c	;volatile
  3986  0033F0  968B               	bcf	3979,3,c	;volatile
  3987  0033F2  868B               	bsf	3979,3,c	;volatile
  3988                           
  3989                           ;libraries/lcd_highlevel.c: 114:   PORTA = 0xC6; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3990  0033F4  0EC6               	movlw	198
  3991  0033F6  6E80               	movwf	128,c	;volatile
  3992  0033F8  988B               	bcf	3979,4,c	;volatile
  3993  0033FA  968B               	bcf	3979,3,c	;volatile
  3994  0033FC  868B               	bsf	3979,3,c	;volatile
  3995  0033FE  888B               	bsf	3979,4,c	;volatile
  3996                           
  3997                           ;libraries/lcd_highlevel.c: 115:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  3998  003400  0E09               	movlw	9
  3999  003402  6E80               	movwf	128,c	;volatile
  4000  003404  968B               	bcf	3979,3,c	;volatile
  4001  003406  868B               	bsf	3979,3,c	;volatile
  4002                           
  4003                           ;libraries/lcd_highlevel.c: 116:   PORTA = 0xD0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4004  003408  0ED0               	movlw	208
  4005  00340A  6E80               	movwf	128,c	;volatile
  4006  00340C  988B               	bcf	3979,4,c	;volatile
  4007  00340E  968B               	bcf	3979,3,c	;volatile
  4008  003410  868B               	bsf	3979,3,c	;volatile
  4009  003412  888B               	bsf	3979,4,c	;volatile
  4010                           
  4011                           ;libraries/lcd_highlevel.c: 117:   PORTA = 0xA4; LATC3 = 0; LATC3 = 1;;
  4012  003414  0EA4               	movlw	164
  4013  003416  6E80               	movwf	128,c	;volatile
  4014  003418  968B               	bcf	3979,3,c	;volatile
  4015  00341A  868B               	bsf	3979,3,c	;volatile
  4016                           
  4017                           ;libraries/lcd_highlevel.c: 118:   PORTA = 0xA1; LATC3 = 0; LATC3 = 1;;
  4018  00341C  0EA1               	movlw	161
  4019  00341E  6E80               	movwf	128,c	;volatile
  4020  003420  968B               	bcf	3979,3,c	;volatile
  4021  003422  868B               	bsf	3979,3,c	;volatile
  4022                           
  4023                           ;libraries/lcd_highlevel.c: 119:   PORTA = 0xE0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4024  003424  0EE0               	movlw	224
  4025  003426  6E80               	movwf	128,c	;volatile
  4026  003428  988B               	bcf	3979,4,c	;volatile
  4027  00342A  968B               	bcf	3979,3,c	;volatile
  4028  00342C  868B               	bsf	3979,3,c	;volatile
  4029  00342E  888B               	bsf	3979,4,c	;volatile
  4030                           
  4031                           ;libraries/lcd_highlevel.c: 120:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  4032  003430  0ED0               	movlw	208
  4033  003432  6E80               	movwf	128,c	;volatile
  4034  003434  968B               	bcf	3979,3,c	;volatile
  4035  003436  868B               	bsf	3979,3,c	;volatile
  4036                           
  4037                           ;libraries/lcd_highlevel.c: 121:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4038  003438  0E00               	movlw	0
  4039  00343A  6E80               	movwf	128,c	;volatile
  4040  00343C  968B               	bcf	3979,3,c	;volatile
  4041  00343E  868B               	bsf	3979,3,c	;volatile
  4042                           
  4043                           ;libraries/lcd_highlevel.c: 122:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  4044  003440  0E05               	movlw	5
  4045  003442  6E80               	movwf	128,c	;volatile
  4046  003444  968B               	bcf	3979,3,c	;volatile
  4047  003446  868B               	bsf	3979,3,c	;volatile
  4048                           
  4049                           ;libraries/lcd_highlevel.c: 123:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  4050  003448  0E0E               	movlw	14
  4051  00344A  6E80               	movwf	128,c	;volatile
  4052  00344C  968B               	bcf	3979,3,c	;volatile
  4053  00344E  868B               	bsf	3979,3,c	;volatile
  4054                           
  4055                           ;libraries/lcd_highlevel.c: 124:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  4056  003450  0E15               	movlw	21
  4057  003452  6E80               	movwf	128,c	;volatile
  4058  003454  968B               	bcf	3979,3,c	;volatile
  4059  003456  868B               	bsf	3979,3,c	;volatile
  4060                           
  4061                           ;libraries/lcd_highlevel.c: 125:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  4062  003458  0E0D               	movlw	13
  4063  00345A  6E80               	movwf	128,c	;volatile
  4064  00345C  968B               	bcf	3979,3,c	;volatile
  4065  00345E  868B               	bsf	3979,3,c	;volatile
  4066                           
  4067                           ;libraries/lcd_highlevel.c: 126:   PORTA = 0x37; LATC3 = 0; LATC3 = 1;;
  4068  003460  0E37               	movlw	55
  4069  003462  6E80               	movwf	128,c	;volatile
  4070  003464  968B               	bcf	3979,3,c	;volatile
  4071  003466  868B               	bsf	3979,3,c	;volatile
  4072                           
  4073                           ;libraries/lcd_highlevel.c: 127:   PORTA = 0x43; LATC3 = 0; LATC3 = 1;;
  4074  003468  0E43               	movlw	67
  4075  00346A  6E80               	movwf	128,c	;volatile
  4076  00346C  968B               	bcf	3979,3,c	;volatile
  4077  00346E  868B               	bsf	3979,3,c	;volatile
  4078                           
  4079                           ;libraries/lcd_highlevel.c: 128:   PORTA = 0x47; LATC3 = 0; LATC3 = 1;;
  4080  003470  0E47               	movlw	71
  4081  003472  6E80               	movwf	128,c	;volatile
  4082  003474  968B               	bcf	3979,3,c	;volatile
  4083  003476  868B               	bsf	3979,3,c	;volatile
  4084                           
  4085                           ;libraries/lcd_highlevel.c: 129:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  4086  003478  0E09               	movlw	9
  4087  00347A  6E80               	movwf	128,c	;volatile
  4088  00347C  968B               	bcf	3979,3,c	;volatile
  4089  00347E  868B               	bsf	3979,3,c	;volatile
  4090                           
  4091                           ;libraries/lcd_highlevel.c: 130:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  4092  003480  0E15               	movlw	21
  4093  003482  6E80               	movwf	128,c	;volatile
  4094  003484  968B               	bcf	3979,3,c	;volatile
  4095  003486  868B               	bsf	3979,3,c	;volatile
  4096                           
  4097                           ;libraries/lcd_highlevel.c: 131:   PORTA = 0x12; LATC3 = 0; LATC3 = 1;;
  4098  003488  0E12               	movlw	18
  4099  00348A  6E80               	movwf	128,c	;volatile
  4100  00348C  968B               	bcf	3979,3,c	;volatile
  4101  00348E  868B               	bsf	3979,3,c	;volatile
  4102                           
  4103                           ;libraries/lcd_highlevel.c: 132:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4104  003490  0E16               	movlw	22
  4105  003492  6E80               	movwf	128,c	;volatile
  4106  003494  968B               	bcf	3979,3,c	;volatile
  4107  003496  868B               	bsf	3979,3,c	;volatile
  4108                           
  4109                           ;libraries/lcd_highlevel.c: 133:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4110  003498  0E19               	movlw	25
  4111  00349A  6E80               	movwf	128,c	;volatile
  4112  00349C  968B               	bcf	3979,3,c	;volatile
  4113  00349E  868B               	bsf	3979,3,c	;volatile
  4114                           
  4115                           ;libraries/lcd_highlevel.c: 134:   PORTA = 0xE1; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4116  0034A0  0EE1               	movlw	225
  4117  0034A2  6E80               	movwf	128,c	;volatile
  4118  0034A4  988B               	bcf	3979,4,c	;volatile
  4119  0034A6  968B               	bcf	3979,3,c	;volatile
  4120  0034A8  868B               	bsf	3979,3,c	;volatile
  4121  0034AA  888B               	bsf	3979,4,c	;volatile
  4122                           
  4123                           ;libraries/lcd_highlevel.c: 135:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  4124  0034AC  0ED0               	movlw	208
  4125  0034AE  6E80               	movwf	128,c	;volatile
  4126  0034B0  968B               	bcf	3979,3,c	;volatile
  4127  0034B2  868B               	bsf	3979,3,c	;volatile
  4128                           
  4129                           ;libraries/lcd_highlevel.c: 136:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4130  0034B4  0E00               	movlw	0
  4131  0034B6  6E80               	movwf	128,c	;volatile
  4132  0034B8  968B               	bcf	3979,3,c	;volatile
  4133  0034BA  868B               	bsf	3979,3,c	;volatile
  4134                           
  4135                           ;libraries/lcd_highlevel.c: 137:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  4136  0034BC  0E05               	movlw	5
  4137  0034BE  6E80               	movwf	128,c	;volatile
  4138  0034C0  968B               	bcf	3979,3,c	;volatile
  4139  0034C2  868B               	bsf	3979,3,c	;volatile
  4140                           
  4141                           ;libraries/lcd_highlevel.c: 138:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  4142  0034C4  0E0D               	movlw	13
  4143  0034C6  6E80               	movwf	128,c	;volatile
  4144  0034C8  968B               	bcf	3979,3,c	;volatile
  4145  0034CA  868B               	bsf	3979,3,c	;volatile
  4146                           
  4147                           ;libraries/lcd_highlevel.c: 139:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  4148  0034CC  0E0C               	movlw	12
  4149  0034CE  6E80               	movwf	128,c	;volatile
  4150  0034D0  968B               	bcf	3979,3,c	;volatile
  4151  0034D2  868B               	bsf	3979,3,c	;volatile
  4152                           
  4153                           ;libraries/lcd_highlevel.c: 140:   PORTA = 0x06; LATC3 = 0; LATC3 = 1;;
  4154  0034D4  0E06               	movlw	6
  4155  0034D6  6E80               	movwf	128,c	;volatile
  4156  0034D8  968B               	bcf	3979,3,c	;volatile
  4157  0034DA  868B               	bsf	3979,3,c	;volatile
  4158                           
  4159                           ;libraries/lcd_highlevel.c: 141:   PORTA = 0x2D; LATC3 = 0; LATC3 = 1;;
  4160  0034DC  0E2D               	movlw	45
  4161  0034DE  6E80               	movwf	128,c	;volatile
  4162  0034E0  968B               	bcf	3979,3,c	;volatile
  4163  0034E2  868B               	bsf	3979,3,c	;volatile
  4164                           
  4165                           ;libraries/lcd_highlevel.c: 142:   PORTA = 0x44; LATC3 = 0; LATC3 = 1;;
  4166  0034E4  0E44               	movlw	68
  4167  0034E6  6E80               	movwf	128,c	;volatile
  4168  0034E8  968B               	bcf	3979,3,c	;volatile
  4169  0034EA  868B               	bsf	3979,3,c	;volatile
  4170                           
  4171                           ;libraries/lcd_highlevel.c: 143:   PORTA = 0x40; LATC3 = 0; LATC3 = 1;;
  4172  0034EC  0E40               	movlw	64
  4173  0034EE  6E80               	movwf	128,c	;volatile
  4174  0034F0  968B               	bcf	3979,3,c	;volatile
  4175  0034F2  868B               	bsf	3979,3,c	;volatile
  4176                           
  4177                           ;libraries/lcd_highlevel.c: 144:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  4178  0034F4  0E0E               	movlw	14
  4179  0034F6  6E80               	movwf	128,c	;volatile
  4180  0034F8  968B               	bcf	3979,3,c	;volatile
  4181  0034FA  868B               	bsf	3979,3,c	;volatile
  4182                           
  4183                           ;libraries/lcd_highlevel.c: 145:   PORTA = 0x1C; LATC3 = 0; LATC3 = 1;;
  4184  0034FC  0E1C               	movlw	28
  4185  0034FE  6E80               	movwf	128,c	;volatile
  4186  003500  968B               	bcf	3979,3,c	;volatile
  4187  003502  868B               	bsf	3979,3,c	;volatile
  4188                           
  4189                           ;libraries/lcd_highlevel.c: 146:   PORTA = 0x18; LATC3 = 0; LATC3 = 1;;
  4190  003504  0E18               	movlw	24
  4191  003506  6E80               	movwf	128,c	;volatile
  4192  003508  968B               	bcf	3979,3,c	;volatile
  4193  00350A  868B               	bsf	3979,3,c	;volatile
  4194                           
  4195                           ;libraries/lcd_highlevel.c: 147:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4196  00350C  0E16               	movlw	22
  4197  00350E  6E80               	movwf	128,c	;volatile
  4198  003510  968B               	bcf	3979,3,c	;volatile
  4199  003512  868B               	bsf	3979,3,c	;volatile
  4200                           
  4201                           ;libraries/lcd_highlevel.c: 148:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4202  003514  0E19               	movlw	25
  4203  003516  6E80               	movwf	128,c	;volatile
  4204  003518  968B               	bcf	3979,3,c	;volatile
  4205  00351A  868B               	bsf	3979,3,c	;volatile
  4206                           
  4207                           ;libraries/lcd_highlevel.c: 149:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4208  00351C  0E2A               	movlw	42
  4209  00351E  6E80               	movwf	128,c	;volatile
  4210  003520  988B               	bcf	3979,4,c	;volatile
  4211  003522  968B               	bcf	3979,3,c	;volatile
  4212  003524  868B               	bsf	3979,3,c	;volatile
  4213  003526  888B               	bsf	3979,4,c	;volatile
  4214                           
  4215                           ;libraries/lcd_highlevel.c: 150:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4216  003528  0E00               	movlw	0
  4217  00352A  6E80               	movwf	128,c	;volatile
  4218  00352C  968B               	bcf	3979,3,c	;volatile
  4219  00352E  868B               	bsf	3979,3,c	;volatile
  4220                           
  4221                           ;libraries/lcd_highlevel.c: 151:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4222  003530  0E00               	movlw	0
  4223  003532  6E80               	movwf	128,c	;volatile
  4224  003534  968B               	bcf	3979,3,c	;volatile
  4225  003536  868B               	bsf	3979,3,c	;volatile
  4226                           
  4227                           ;libraries/lcd_highlevel.c: 152:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4228  003538  0E00               	movlw	0
  4229  00353A  6E80               	movwf	128,c	;volatile
  4230  00353C  968B               	bcf	3979,3,c	;volatile
  4231  00353E  868B               	bsf	3979,3,c	;volatile
  4232                           
  4233                           ;libraries/lcd_highlevel.c: 153:   PORTA = 0xEF; LATC3 = 0; LATC3 = 1;;
  4234  003540  0EEF               	movlw	239
  4235  003542  6E80               	movwf	128,c	;volatile
  4236  003544  968B               	bcf	3979,3,c	;volatile
  4237  003546  868B               	bsf	3979,3,c	;volatile
  4238                           
  4239                           ;libraries/lcd_highlevel.c: 154:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4240  003548  0E2B               	movlw	43
  4241  00354A  6E80               	movwf	128,c	;volatile
  4242  00354C  988B               	bcf	3979,4,c	;volatile
  4243  00354E  968B               	bcf	3979,3,c	;volatile
  4244  003550  868B               	bsf	3979,3,c	;volatile
  4245  003552  888B               	bsf	3979,4,c	;volatile
  4246                           
  4247                           ;libraries/lcd_highlevel.c: 155:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4248  003554  0E00               	movlw	0
  4249  003556  6E80               	movwf	128,c	;volatile
  4250  003558  968B               	bcf	3979,3,c	;volatile
  4251  00355A  868B               	bsf	3979,3,c	;volatile
  4252                           
  4253                           ;libraries/lcd_highlevel.c: 156:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4254  00355C  0E00               	movlw	0
  4255  00355E  6E80               	movwf	128,c	;volatile
  4256  003560  968B               	bcf	3979,3,c	;volatile
  4257  003562  868B               	bsf	3979,3,c	;volatile
  4258                           
  4259                           ;libraries/lcd_highlevel.c: 157:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4260  003564  0E01               	movlw	1
  4261  003566  6E80               	movwf	128,c	;volatile
  4262  003568  968B               	bcf	3979,3,c	;volatile
  4263  00356A  868B               	bsf	3979,3,c	;volatile
  4264                           
  4265                           ;libraries/lcd_highlevel.c: 158:   PORTA = 0x3F; LATC3 = 0; LATC3 = 1;;
  4266  00356C  0E3F               	movlw	63
  4267  00356E  6E80               	movwf	128,c	;volatile
  4268  003570  968B               	bcf	3979,3,c	;volatile
  4269  003572  868B               	bsf	3979,3,c	;volatile
  4270                           
  4271                           ;libraries/lcd_highlevel.c: 159:   PORTA = 0x26; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4272  003574  0E26               	movlw	38
  4273  003576  6E80               	movwf	128,c	;volatile
  4274  003578  988B               	bcf	3979,4,c	;volatile
  4275  00357A  968B               	bcf	3979,3,c	;volatile
  4276  00357C  868B               	bsf	3979,3,c	;volatile
  4277  00357E  888B               	bsf	3979,4,c	;volatile
  4278                           
  4279                           ;libraries/lcd_highlevel.c: 160:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4280  003580  0E01               	movlw	1
  4281  003582  6E80               	movwf	128,c	;volatile
  4282  003584  968B               	bcf	3979,3,c	;volatile
  4283  003586  868B               	bsf	3979,3,c	;volatile
  4284                           
  4285                           ;libraries/lcd_highlevel.c: 161:   PORTA = 0x29; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4286  003588  0E29               	movlw	41
  4287  00358A  6E80               	movwf	128,c	;volatile
  4288  00358C  988B               	bcf	3979,4,c	;volatile
  4289  00358E  968B               	bcf	3979,3,c	;volatile
  4290  003590  868B               	bsf	3979,3,c	;volatile
  4291  003592  888B               	bsf	3979,4,c	;volatile
  4292  003594  0012               	return		;funcret
  4293  003596                     __end_of_LCD_Init:
  4294                           	callstack 0
  4295                           
  4296 ;; *************** function _LCD_Lowlevel_Init *****************
  4297 ;; Defined at:
  4298 ;;		line 17 in file "libraries/lcd_lowlevel.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  i               4   18[COMRAM] unsigned long 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      void 
  4305 ;; Registers used:
  4306 ;;		wreg, status,2, status,0
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4312 ;;      Params:         0       0       0       0       0       0       0
  4313 ;;      Locals:         4       0       0       0       0       0       0
  4314 ;;      Temps:          1       0       0       0       0       0       0
  4315 ;;      Totals:         5       0       0       0       0       0       0
  4316 ;;Total ram usage:        5 bytes
  4317 ;; Hardware stack levels used: 1
  4318 ;; Hardware stack levels required when called: 4
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_LCD_Init
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text8
  4327  005940                     __ptext8:
  4328                           	callstack 0
  4329  005940                     _LCD_Lowlevel_Init:
  4330                           	callstack 24
  4331  005940                     
  4332                           ;libraries/lcd_lowlevel.c: 19:   uint32_t i;;libraries/lcd_lowlevel.c: 20:   TRISC5 = 0;
  4333  005940  9A94               	bcf	3988,5,c	;volatile
  4334                           
  4335                           ;libraries/lcd_lowlevel.c: 21:   TRISC2 = 0;
  4336  005942  9494               	bcf	3988,2,c	;volatile
  4337                           
  4338                           ;libraries/lcd_lowlevel.c: 22:   TRISC3 = 0;
  4339  005944  9694               	bcf	3988,3,c	;volatile
  4340                           
  4341                           ;libraries/lcd_lowlevel.c: 23:   TRISC4 = 0;
  4342  005946  9894               	bcf	3988,4,c	;volatile
  4343  005948                     
  4344                           ;libraries/lcd_lowlevel.c: 25:   TRISA = 0x00;
  4345  005948  0E00               	movlw	0
  4346  00594A  6E92               	movwf	146,c	;volatile
  4347  00594C                     
  4348                           ;libraries/lcd_lowlevel.c: 28:  LATC5 = 0;
  4349  00594C  9A8B               	bcf	3979,5,c	;volatile
  4350  00594E                     
  4351                           ;libraries/lcd_lowlevel.c: 29:  LATC2 = 1;
  4352  00594E  848B               	bsf	3979,2,c	;volatile
  4353  005950                     
  4354                           ;libraries/lcd_lowlevel.c: 30:  LATC3 = 1;
  4355  005950  868B               	bsf	3979,3,c	;volatile
  4356  005952                     
  4357                           ;libraries/lcd_lowlevel.c: 31:  LATC4 = 1;
  4358  005952  888B               	bsf	3979,4,c	;volatile
  4359                           
  4360                           ;libraries/lcd_lowlevel.c: 33:   for(i=0;i<12;i++)
  4361  005954  0E00               	movlw	0
  4362  005956  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4363  005958  0E00               	movlw	0
  4364  00595A  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4365  00595C  0E00               	movlw	0
  4366  00595E  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4367  005960  0E00               	movlw	0
  4368  005962  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4369  005964                     l3906:
  4370                           
  4371                           ;libraries/lcd_lowlevel.c: 34:   {;libraries/lcd_lowlevel.c: 35:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4372  005964  0ED0               	movlw	208
  4373  005966  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4374  005968  0ECA               	movlw	202
  4375  00596A                     u8107:
  4376  00596A  2EE8               	decfsz	wreg,f,c
  4377  00596C  D7FE               	bra	u8107
  4378  00596E  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4379  005970  D7FC               	bra	u8107
  4380  005972                     
  4381                           ;libraries/lcd_lowlevel.c: 36:   }
  4382  005972  0E01               	movlw	1
  4383  005974  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4384  005976  0E00               	movlw	0
  4385  005978  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4386  00597A  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4387  00597C  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4388  00597E  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4389  005980  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4390  005982  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4391  005984  E109               	bnz	u2300
  4392  005986  0E0C               	movlw	12
  4393  005988  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4394  00598A  A0D8               	btfss	status,0,c
  4395  00598C  EFCA  F02C         	goto	u2301
  4396  005990  EFCC  F02C         	goto	u2300
  4397  005994                     u2301:
  4398  005994  EFB2  F02C         	goto	l3906
  4399  005998                     u2300:
  4400  005998                     
  4401                           ;libraries/lcd_lowlevel.c: 38:   for(i=0;i<12;i++)
  4402  005998  0E00               	movlw	0
  4403  00599A  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4404  00599C  0E00               	movlw	0
  4405  00599E  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4406  0059A0  0E00               	movlw	0
  4407  0059A2  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4408  0059A4  0E00               	movlw	0
  4409  0059A6  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4410  0059A8                     l3918:
  4411                           
  4412                           ;libraries/lcd_lowlevel.c: 39:   {;libraries/lcd_lowlevel.c: 40:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4413  0059A8  0ED0               	movlw	208
  4414  0059AA  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4415  0059AC  0ECA               	movlw	202
  4416  0059AE                     u8117:
  4417  0059AE  2EE8               	decfsz	wreg,f,c
  4418  0059B0  D7FE               	bra	u8117
  4419  0059B2  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4420  0059B4  D7FC               	bra	u8117
  4421  0059B6                     
  4422                           ;libraries/lcd_lowlevel.c: 41:   }
  4423  0059B6  0E01               	movlw	1
  4424  0059B8  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4425  0059BA  0E00               	movlw	0
  4426  0059BC  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4427  0059BE  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4428  0059C0  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4429  0059C2  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4430  0059C4  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4431  0059C6  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4432  0059C8  E109               	bnz	u2310
  4433  0059CA  0E0C               	movlw	12
  4434  0059CC  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4435  0059CE  A0D8               	btfss	status,0,c
  4436  0059D0  EFEC  F02C         	goto	u2311
  4437  0059D4  EFEE  F02C         	goto	u2310
  4438  0059D8                     u2311:
  4439  0059D8  EFD4  F02C         	goto	l3918
  4440  0059DC                     u2310:
  4441  0059DC  0012               	return		;funcret
  4442  0059DE                     __end_of_LCD_Lowlevel_Init:
  4443                           	callstack 0
  4444                           
  4445 ;; *************** function _Factory_exec *****************
  4446 ;; Defined at:
  4447 ;;		line 55 in file "class/factory.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;		None
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  ev              1    0[BANK1 ] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4461 ;;      Params:         0       0       0       0       0       0       0
  4462 ;;      Locals:         0       0       1       0       0       0       0
  4463 ;;      Temps:          0       0       0       0       0       0       0
  4464 ;;      Totals:         0       0       1       0       0       0       0
  4465 ;;Total ram usage:        1 bytes
  4466 ;; Hardware stack levels used: 1
  4467 ;; Hardware stack levels required when called: 15
  4468 ;; This function calls:
  4469 ;;		_XF_popEvent
  4470 ;;		_displaySM
  4471 ;;		_gameControllerSM
  4472 ;;		_sleepSM
  4473 ;;		_touchScreenSM
  4474 ;; This function is called by:
  4475 ;;		_main
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text9
  4480  005FAE                     __ptext9:
  4481                           	callstack 0
  4482  005FAE                     _Factory_exec:
  4483                           	callstack 15
  4484  005FAE                     
  4485                           ;class/factory.c: 58:     Event ev;;class/factory.c: 59:     ev = XF_popEvent(0);
  4486  005FAE  0E00               	movlw	0
  4487  005FB0  ECA7  F02F         	call	_XF_popEvent
  4488  005FB4  0101               	movlb	1	; () banked
  4489  005FB6  6FEF               	movwf	Factory_exec@ev& (0+255),b
  4490  005FB8                     
  4491                           ; BSR set to: 1
  4492                           ;class/factory.c: 60:     if (ev != NULLEVENT)
  4493  005FB8  51EF               	movf	Factory_exec@ev& (0+255),w,b
  4494  005FBA  B4D8               	btfsc	status,2,c
  4495  005FBC  EFE2  F02F         	goto	u8071
  4496  005FC0  EFE4  F02F         	goto	u8070
  4497  005FC4                     u8071:
  4498  005FC4  EF01  F030         	goto	l104
  4499  005FC8                     u8070:
  4500  005FC8                     
  4501                           ; BSR set to: 1
  4502                           ;class/factory.c: 61:     {;class/factory.c: 62:         sleepSM(ev);
  4503  005FC8  51EF               	movf	Factory_exec@ev& (0+255),w,b
  4504  005FCA  EC4F  F02C         	call	_sleepSM
  4505  005FCE                     
  4506                           ;class/factory.c: 63:         touchScreenSM(ev,&g1);
  4507  005FCE  0E00               	movlw	low _g1
  4508  005FD0  0100               	movlb	0	; () banked
  4509  005FD2  6FB0               	movwf	touchScreenSM@g& (0+255),b
  4510  005FD4  0E01               	movlw	high _g1
  4511  005FD6  6FB1               	movwf	(touchScreenSM@g+1)& (0+255),b
  4512  005FD8  0101               	movlb	1	; () banked
  4513  005FDA  51EF               	movf	Factory_exec@ev& (0+255),w,b
  4514  005FDC  ECEF  F02C         	call	_touchScreenSM
  4515  005FE0                     
  4516                           ;class/factory.c: 64:         displaySM(ev,&g1);
  4517  005FE0  0E00               	movlw	low _g1
  4518  005FE2  0100               	movlb	0	; () banked
  4519  005FE4  6FA3               	movwf	displaySM@g& (0+255),b
  4520  005FE6  0E01               	movlw	high _g1
  4521  005FE8  6FA4               	movwf	(displaySM@g+1)& (0+255),b
  4522  005FEA  0101               	movlb	1	; () banked
  4523  005FEC  51EF               	movf	Factory_exec@ev& (0+255),w,b
  4524  005FEE  EC48  F024         	call	_displaySM
  4525  005FF2                     
  4526                           ;class/factory.c: 65:         gameControllerSM(ev,&g1);
  4527  005FF2  0E00               	movlw	low _g1
  4528  005FF4  6E3C               	movwf	gameControllerSM@g^0,c
  4529  005FF6  0E01               	movlw	high _g1
  4530  005FF8  6E3D               	movwf	(gameControllerSM@g+1)^0,c
  4531  005FFA  0101               	movlb	1	; () banked
  4532  005FFC  51EF               	movf	Factory_exec@ev& (0+255),w,b
  4533  005FFE  EC4F  F028         	call	_gameControllerSM
  4534  006002                     l104:
  4535  006002  0012               	return		;funcret
  4536  006004                     __end_of_Factory_exec:
  4537                           	callstack 0
  4538                           
  4539 ;; *************** function _touchScreenSM *****************
  4540 ;; Defined at:
  4541 ;;		line 25 in file "stateMachine/touchScreenSM.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  ev              1    wreg     unsigned char 
  4544 ;;  g               2   80[BANK0 ] PTR struct GameParameter
  4545 ;;		 -> g1(239), 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  ev              1   84[BANK0 ] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4557 ;;      Params:         0       2       0       0       0       0       0
  4558 ;;      Locals:         0       1       0       0       0       0       0
  4559 ;;      Temps:          0       2       0       0       0       0       0
  4560 ;;      Totals:         0       5       0       0       0       0       0
  4561 ;;Total ram usage:        5 bytes
  4562 ;; Hardware stack levels used: 1
  4563 ;; Hardware stack levels required when called: 13
  4564 ;; This function calls:
  4565 ;;		_touchScreenController
  4566 ;; This function is called by:
  4567 ;;		_Factory_exec
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text10
  4572  0059DE                     __ptext10:
  4573                           	callstack 0
  4574  0059DE                     _touchScreenSM:
  4575                           	callstack 16
  4576                           
  4577                           ;incstack = 0
  4578                           ;touchScreenSM@ev stored from wreg
  4579  0059DE  0100               	movlb	0	; () banked
  4580  0059E0  6FB4               	movwf	touchScreenSM@ev& (0+255),b
  4581  0059E2                     
  4582                           ;stateMachine/touchScreenSM.c: 25: void touchScreenSM(Event ev, GameParameters* g);state
      +                          Machine/touchScreenSM.c: 26: {;stateMachine/touchScreenSM.c: 27:     switch(touchScreenS
      +                          tate)
  4583  0059E2  EF22  F02D         	goto	l10520
  4584  0059E6                     l10502:
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;stateMachine/touchScreenSM.c: 30:             if(ev==evPress)
  4588  0059E6  05B4               	decf	touchScreenSM@ev& (0+255),w,b
  4589  0059E8  A4D8               	btfss	status,2,c
  4590  0059EA  EFF9  F02C         	goto	u7951
  4591  0059EE  EFFB  F02C         	goto	u7950
  4592  0059F2                     u7951:
  4593  0059F2  EF38  F02D         	goto	l507
  4594  0059F6                     u7950:
  4595  0059F6                     
  4596                           ; BSR set to: 0
  4597                           ;stateMachine/touchScreenSM.c: 31:             {;stateMachine/touchScreenSM.c: 32:      
      +                                     touchScreenState=CALCULATEPOSITION;
  4598  0059F6  0E01               	movlw	1
  4599  0059F8  6FDE               	movwf	_touchScreenState& (0+255),b
  4600  0059FA                     l10506:
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;stateMachine/touchScreenSM.c: 33:                 touchScreenController(g);
  4604  0059FA  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  4605  0059FE  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  4606  005A02  ECCB  F01A         	call	_touchScreenController	;wreg free
  4607  005A06  EF38  F02D         	goto	l507
  4608  005A0A                     l10508:
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;stateMachine/touchScreenSM.c: 37:             if(ev==evRelease)
  4612  005A0A  0E02               	movlw	2
  4613  005A0C  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  4614  005A0E  A4D8               	btfss	status,2,c
  4615  005A10  EF0C  F02D         	goto	u7961
  4616  005A14  EF0E  F02D         	goto	u7960
  4617  005A18                     u7961:
  4618  005A18  EF16  F02D         	goto	l10514
  4619  005A1C                     u7960:
  4620  005A1C                     
  4621                           ; BSR set to: 0
  4622                           ;stateMachine/touchScreenSM.c: 38:             {;stateMachine/touchScreenSM.c: 39:      
      +                                     touchScreenState=WAITING;
  4623  005A1C  0E00               	movlw	0
  4624  005A1E  6FDE               	movwf	_touchScreenState& (0+255),b
  4625  005A20                     
  4626                           ; BSR set to: 0
  4627                           ;stateMachine/touchScreenSM.c: 40:                 touchScreenController(g);
  4628  005A20  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  4629  005A24  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  4630  005A28  ECCB  F01A         	call	_touchScreenController	;wreg free
  4631  005A2C                     l10514:
  4632                           
  4633                           ;stateMachine/touchScreenSM.c: 42:             if(ev==evTimerPos)
  4634  005A2C  0E04               	movlw	4
  4635  005A2E  0100               	movlb	0	; () banked
  4636  005A30  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  4637  005A32  A4D8               	btfss	status,2,c
  4638  005A34  EF1E  F02D         	goto	u7971
  4639  005A38  EF20  F02D         	goto	u7970
  4640  005A3C                     u7971:
  4641  005A3C  EF38  F02D         	goto	l507
  4642  005A40                     u7970:
  4643  005A40  EFFD  F02C         	goto	l10506
  4644  005A44                     l10520:
  4645  005A44  0100               	movlb	0	; () banked
  4646  005A46  51DE               	movf	_touchScreenState& (0+255),w,b
  4647  005A48  6FB2               	movwf	??_touchScreenSM& (0+255),b
  4648  005A4A  6BB3               	clrf	(??_touchScreenSM+1)& (0+255),b
  4649                           
  4650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4651                           ; Switch size 1, requested type "simple"
  4652                           ; Number of cases is 1, Range of values is 0 to 0
  4653                           ; switch strategies available:
  4654                           ; Name         Instructions Cycles
  4655                           ; simple_byte            4     3 (average)
  4656                           ;	Chosen strategy is simple_byte
  4657  005A4C  51B3               	movf	(??_touchScreenSM+1)& (0+255),w,b
  4658  005A4E  0A00               	xorlw	0	; case 0
  4659  005A50  B4D8               	btfsc	status,2,c
  4660  005A52  EF2D  F02D         	goto	l10894
  4661  005A56  EF38  F02D         	goto	l507
  4662  005A5A                     l10894:
  4663                           
  4664                           ; BSR set to: 0
  4665                           ; Switch size 1, requested type "simple"
  4666                           ; Number of cases is 2, Range of values is 0 to 1
  4667                           ; switch strategies available:
  4668                           ; Name         Instructions Cycles
  4669                           ; simple_byte            7     4 (average)
  4670                           ;	Chosen strategy is simple_byte
  4671  005A5A  51B2               	movf	??_touchScreenSM& (0+255),w,b
  4672  005A5C  0A00               	xorlw	0	; case 0
  4673  005A5E  B4D8               	btfsc	status,2,c
  4674  005A60  EFF3  F02C         	goto	l10502
  4675  005A64  0A01               	xorlw	1	; case 1
  4676  005A66  B4D8               	btfsc	status,2,c
  4677  005A68  EF05  F02D         	goto	l10508
  4678  005A6C  EF38  F02D         	goto	l507
  4679  005A70                     l507:
  4680  005A70  0012               	return		;funcret
  4681  005A72                     __end_of_touchScreenSM:
  4682                           	callstack 0
  4683                           
  4684 ;; *************** function _touchScreenController *****************
  4685 ;; Defined at:
  4686 ;;		line 54 in file "stateMachine/touchScreenSM.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  g               2   48[BANK0 ] PTR struct GameParameter
  4689 ;;		 -> g1(239), 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  valueX          2   78[BANK0 ] unsigned short 
  4692 ;;  valueY          2   76[BANK0 ] unsigned short 
  4693 ;;  s              20   56[BANK0 ] unsigned char [20]
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1    wreg      void 
  4696 ;; Registers used:
  4697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4703 ;;      Params:         0       2       0       0       0       0       0
  4704 ;;      Locals:         0      24       0       0       0       0       0
  4705 ;;      Temps:          0       6       0       0       0       0       0
  4706 ;;      Totals:         0      32       0       0       0       0       0
  4707 ;;Total ram usage:       32 bytes
  4708 ;; Hardware stack levels used: 1
  4709 ;; Hardware stack levels required when called: 12
  4710 ;; This function calls:
  4711 ;;		_GameParameters_setX
  4712 ;;		_GameParameters_setY
  4713 ;;		_LCD_DrawText
  4714 ;;		_XF_scheduleTimer
  4715 ;;		___fldiv
  4716 ;;		___fltol
  4717 ;;		___xxtofl
  4718 ;;		_configMeasure
  4719 ;;		_configTouch
  4720 ;;		_sprintf
  4721 ;; This function is called by:
  4722 ;;		_touchScreenSM
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text11
  4727  003596                     __ptext11:
  4728                           	callstack 0
  4729  003596                     _touchScreenController:
  4730                           	callstack 16
  4731  003596                     
  4732                           ;stateMachine/touchScreenSM.c: 54: void touchScreenController(GameParameters* g);stateMa
      +                          chine/touchScreenSM.c: 55: {;stateMachine/touchScreenSM.c: 56:     char s[20];;stateMach
      +                          ine/touchScreenSM.c: 58:     switch(touchScreenState)
  4733  003596  EFEA  F01B         	goto	l10398
  4734  00359A                     l10354:
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;stateMachine/touchScreenSM.c: 63:             configTouch();
  4738  00359A  ECD1  F031         	call	_configTouch	;wreg free
  4739                           
  4740                           ;stateMachine/touchScreenSM.c: 65:             break;
  4741  00359E  EF00  F01C         	goto	l524
  4742  0035A2                     l513:
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;stateMachine/touchScreenSM.c: 70:             INT1IE=0;
  4746  0035A2  96F0               	bcf	4080,3,c	;volatile
  4747  0035A4                     
  4748                           ; BSR set to: 0
  4749                           ;stateMachine/touchScreenSM.c: 71:             configMeasure(0);
  4750  0035A4  0E00               	movlw	0
  4751  0035A6  EC56  F030         	call	_configMeasure
  4752  0035AA                     l514:
  4753  0035AA  B2C2               	btfsc	194,1,c	;volatile
  4754  0035AC  EFDA  F01A         	goto	u7831
  4755  0035B0  EFDC  F01A         	goto	u7830
  4756  0035B4                     u7831:
  4757  0035B4  EFD5  F01A         	goto	l514
  4758  0035B8                     u7830:
  4759  0035B8                     
  4760                           ;stateMachine/touchScreenSM.c: 73:             uint16_t valueX;;stateMachine/touchScreen
      +                          SM.c: 74:             valueX=(ADRESH<<8)+ADRESL;
  4761  0035B8  50C4               	movf	196,w,c	;volatile
  4762  0035BA  0100               	movlb	0	; () banked
  4763  0035BC  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4764  0035BE  6B92               	clrf	??_touchScreenController& (0+255),b
  4765  0035C0  50C3               	movf	195,w,c	;volatile
  4766  0035C2  2592               	addwf	??_touchScreenController& (0+255),w,b
  4767  0035C4  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  4768  0035C6  0E00               	movlw	0
  4769  0035C8  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  4770  0035CA  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  4771                           
  4772                           ;stateMachine/touchScreenSM.c: 75:             if(valueX<=120)
  4773  0035CC  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  4774  0035CE  E107               	bnz	u7841
  4775  0035D0  0E79               	movlw	121
  4776  0035D2  5DAE               	subwf	touchScreenController@valueX& (0+255),w,b
  4777  0035D4  B0D8               	btfsc	status,0,c
  4778  0035D6  EFEF  F01A         	goto	u7841
  4779  0035DA  EFF1  F01A         	goto	u7840
  4780  0035DE                     u7841:
  4781  0035DE  EFF5  F01A         	goto	l10362
  4782  0035E2                     u7840:
  4783  0035E2                     
  4784                           ; BSR set to: 0
  4785                           ;stateMachine/touchScreenSM.c: 76:             {;stateMachine/touchScreenSM.c: 77:      
      +                                     valueX=120;
  4786  0035E2  0E00               	movlw	0
  4787  0035E4  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  4788  0035E6  0E78               	movlw	120
  4789  0035E8  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  4790  0035EA                     l10362:
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;stateMachine/touchScreenSM.c: 79:             valueX=(valueX-120)/2.35;
  4794  0035EA  0E66               	movlw	102
  4795  0035EC  6E24               	movwf	___fldiv@a^0,c
  4796  0035EE  0E66               	movlw	102
  4797  0035F0  6E25               	movwf	(___fldiv@a+1)^0,c
  4798  0035F2  0E16               	movlw	22
  4799  0035F4  6E26               	movwf	(___fldiv@a+2)^0,c
  4800  0035F6  0E40               	movlw	64
  4801  0035F8  6E27               	movwf	(___fldiv@a+3)^0,c
  4802  0035FA  0E88               	movlw	136
  4803  0035FC  6F92               	movwf	??_touchScreenController& (0+255),b
  4804  0035FE  0EFF               	movlw	255
  4805  003600  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4806  003602  C0AE  F094         	movff	touchScreenController@valueX,??_touchScreenController+2
  4807  003606  C0AF  F095         	movff	touchScreenController@valueX+1,??_touchScreenController+3
  4808  00360A  5192               	movf	??_touchScreenController& (0+255),w,b
  4809  00360C  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  4810  00360E  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  4811  003610  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  4812  003612  C094  F012         	movff	??_touchScreenController+2,___xxtofl@val
  4813  003616  C095  F013         	movff	??_touchScreenController+3,___xxtofl@val+1
  4814  00361A  6A14               	clrf	(___xxtofl@val+2)^0,c
  4815  00361C  6A15               	clrf	(___xxtofl@val+3)^0,c
  4816  00361E  0E00               	movlw	0
  4817  003620  EC1C  F01D         	call	___xxtofl
  4818  003624  C012  F020         	movff	?___xxtofl,___fldiv@b
  4819  003628  C013  F021         	movff	?___xxtofl+1,___fldiv@b+1
  4820  00362C  C014  F022         	movff	?___xxtofl+2,___fldiv@b+2
  4821  003630  C015  F023         	movff	?___xxtofl+3,___fldiv@b+3
  4822  003634  ECF2  F012         	call	___fldiv	;wreg free
  4823  003638  C020  F039         	movff	?___fldiv,___fltol@f1
  4824  00363C  C021  F03A         	movff	?___fldiv+1,___fltol@f1+1
  4825  003640  C022  F03B         	movff	?___fldiv+2,___fltol@f1+2
  4826  003644  C023  F03C         	movff	?___fldiv+3,___fltol@f1+3
  4827  003648  EC43  F023         	call	___fltol	;wreg free
  4828  00364C  C039  F0AE         	movff	?___fltol,touchScreenController@valueX
  4829  003650  C03A  F0AF         	movff	?___fltol+1,touchScreenController@valueX+1
  4830  003654                     
  4831                           ;stateMachine/touchScreenSM.c: 80:             valueX=240 -valueX;
  4832  003654  0100               	movlb	0	; () banked
  4833  003656  51AE               	movf	touchScreenController@valueX& (0+255),w,b
  4834  003658  08F0               	sublw	240
  4835  00365A  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  4836  00365C  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  4837  00365E  A0D8               	btfss	status,0,c
  4838  003660  2AE8               	incf	wreg,f,c
  4839  003662  0800               	sublw	0
  4840  003664  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  4841  003666                     
  4842                           ; BSR set to: 0
  4843                           ;stateMachine/touchScreenSM.c: 82:             configMeasure(1);
  4844  003666  0E01               	movlw	1
  4845  003668  EC56  F030         	call	_configMeasure
  4846  00366C                     l518:
  4847  00366C  B2C2               	btfsc	194,1,c	;volatile
  4848  00366E  EF3B  F01B         	goto	u7851
  4849  003672  EF3D  F01B         	goto	u7850
  4850  003676                     u7851:
  4851  003676  EF36  F01B         	goto	l518
  4852  00367A                     u7850:
  4853  00367A                     
  4854                           ;stateMachine/touchScreenSM.c: 84:             uint16_t valueY;;stateMachine/touchScreen
      +                          SM.c: 85:             valueY=(ADRESH<<8)+ADRESL;
  4855  00367A  50C4               	movf	196,w,c	;volatile
  4856  00367C  0100               	movlb	0	; () banked
  4857  00367E  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4858  003680  6B92               	clrf	??_touchScreenController& (0+255),b
  4859  003682  50C3               	movf	195,w,c	;volatile
  4860  003684  2592               	addwf	??_touchScreenController& (0+255),w,b
  4861  003686  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  4862  003688  0E00               	movlw	0
  4863  00368A  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  4864  00368C  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  4865                           
  4866                           ;stateMachine/touchScreenSM.c: 86:             if(valueY<=105)
  4867  00368E  51AD               	movf	(touchScreenController@valueY+1)& (0+255),w,b
  4868  003690  E107               	bnz	u7861
  4869  003692  0E6A               	movlw	106
  4870  003694  5DAC               	subwf	touchScreenController@valueY& (0+255),w,b
  4871  003696  B0D8               	btfsc	status,0,c
  4872  003698  EF50  F01B         	goto	u7861
  4873  00369C  EF52  F01B         	goto	u7860
  4874  0036A0                     u7861:
  4875  0036A0  EF56  F01B         	goto	l10372
  4876  0036A4                     u7860:
  4877  0036A4                     
  4878                           ; BSR set to: 0
  4879                           ;stateMachine/touchScreenSM.c: 87:             {;stateMachine/touchScreenSM.c: 88:      
      +                                     valueY=105;
  4880  0036A4  0E00               	movlw	0
  4881  0036A6  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  4882  0036A8  0E69               	movlw	105
  4883  0036AA  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  4884  0036AC                     l10372:
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;stateMachine/touchScreenSM.c: 90:             valueY=(valueY-105)/2;
  4888  0036AC  0E97               	movlw	151
  4889  0036AE  6F92               	movwf	??_touchScreenController& (0+255),b
  4890  0036B0  0EFF               	movlw	255
  4891  0036B2  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4892  0036B4  C0AC  F094         	movff	touchScreenController@valueY,??_touchScreenController+2
  4893  0036B8  C0AD  F095         	movff	touchScreenController@valueY+1,??_touchScreenController+3
  4894  0036BC  5192               	movf	??_touchScreenController& (0+255),w,b
  4895  0036BE  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  4896  0036C0  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  4897  0036C2  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  4898  0036C4  90D8               	bcf	status,0,c
  4899  0036C6  3195               	rrcf	(??_touchScreenController+3)& (0+255),w,b
  4900  0036C8  6F96               	movwf	(??_touchScreenController+4)& (0+255),b
  4901  0036CA  3194               	rrcf	(??_touchScreenController+2)& (0+255),w,b
  4902  0036CC  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  4903  0036CE  C096  F0AD         	movff	??_touchScreenController+4,touchScreenController@valueY+1
  4904  0036D2                     
  4905                           ; BSR set to: 0
  4906                           ;stateMachine/touchScreenSM.c: 91:             XF_scheduleTimer(9,evTimerPos,0);
  4907  0036D2  0E00               	movlw	0
  4908  0036D4  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  4909  0036D6  0E09               	movlw	9
  4910  0036D8  6E13               	movwf	XF_scheduleTimer@tm^0,c
  4911  0036DA  0E04               	movlw	4
  4912  0036DC  6E15               	movwf	XF_scheduleTimer@ev^0,c
  4913  0036DE  0E00               	movlw	0
  4914  0036E0  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  4915  0036E2  EC32  F02E         	call	_XF_scheduleTimer	;wreg free
  4916  0036E6                     
  4917                           ;stateMachine/touchScreenSM.c: 94:             ADCON0=0b00101001;
  4918  0036E6  0E29               	movlw	41
  4919  0036E8  6EC2               	movwf	194,c	;volatile
  4920  0036EA                     
  4921                           ;stateMachine/touchScreenSM.c: 95:             configTouch();
  4922  0036EA  ECD1  F031         	call	_configTouch	;wreg free
  4923  0036EE                     
  4924                           ;stateMachine/touchScreenSM.c: 96:             INT1IF=0;
  4925  0036EE  90F0               	bcf	4080,0,c	;volatile
  4926  0036F0                     
  4927                           ;stateMachine/touchScreenSM.c: 97:             INT1IE=1;
  4928  0036F0  86F0               	bsf	4080,3,c	;volatile
  4929  0036F2                     
  4930                           ;stateMachine/touchScreenSM.c: 100:             if(PORTBbits.RB1 == 0)
  4931  0036F2  B281               	btfsc	129,1,c	;volatile
  4932  0036F4  EF7E  F01B         	goto	u7871
  4933  0036F8  EF80  F01B         	goto	u7870
  4934  0036FC                     u7871:
  4935  0036FC  EF00  F01C         	goto	l524
  4936  003700                     u7870:
  4937  003700                     
  4938                           ;stateMachine/touchScreenSM.c: 101:             {;stateMachine/touchScreenSM.c: 102:    
      +                                       sprintf(s,"X: %d",valueX);
  4939  003700  0E98               	movlw	low touchScreenController@s
  4940  003702  0100               	movlb	0	; () banked
  4941  003704  6F82               	movwf	sprintf@s& (0+255),b
  4942  003706  0E00               	movlw	high touchScreenController@s
  4943  003708  6F83               	movwf	(sprintf@s+1)& (0+255),b
  4944  00370A  0EEB               	movlw	low STR_15
  4945  00370C  6F84               	movwf	sprintf@fmt& (0+255),b
  4946  00370E  0E7F               	movlw	high STR_15
  4947  003710  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  4948  003712  C0AE  F086         	movff	touchScreenController@valueX,?_sprintf+4
  4949  003716  C0AF  F087         	movff	touchScreenController@valueX+1,?_sprintf+5
  4950  00371A  EC2D  F030         	call	_sprintf	;wreg free
  4951  00371E                     
  4952                           ;stateMachine/touchScreenSM.c: 103:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,200,0b0000000000000000,0b1111111111111111);
  4953  00371E  0E98               	movlw	low touchScreenController@s
  4954  003720  6E20               	movwf	LCD_DrawText@msg^0,c
  4955  003722  0E00               	movlw	high touchScreenController@s
  4956  003724  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  4957  003726  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  4958  003728  6E22               	movwf	LCD_DrawText@font^0,c
  4959  00372A  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4960  00372C  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  4961  00372E  0E01               	movlw	1
  4962  003730  6E24               	movwf	LCD_DrawText@align^0,c
  4963  003732  0E00               	movlw	0
  4964  003734  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  4965  003736  0EC8               	movlw	200
  4966  003738  6E25               	movwf	LCD_DrawText@posX^0,c
  4967  00373A  0E00               	movlw	0
  4968  00373C  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  4969  00373E  0EC8               	movlw	200
  4970  003740  6E27               	movwf	LCD_DrawText@posY^0,c
  4971  003742  0E00               	movlw	0
  4972  003744  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  4973  003746  0E00               	movlw	0
  4974  003748  6E29               	movwf	LCD_DrawText@color^0,c
  4975  00374A  0EFF               	movlw	255
  4976  00374C  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  4977  00374E  682B               	setf	LCD_DrawText@bg_color^0,c
  4978  003750  ECDB  F00E         	call	_LCD_DrawText	;wreg free
  4979  003754                     
  4980                           ;stateMachine/touchScreenSM.c: 104:                 GameParameters_setX(g,valueX);
  4981  003754  C090  F012         	movff	touchScreenController@g,GameParameters_setX@s
  4982  003758  C091  F013         	movff	touchScreenController@g+1,GameParameters_setX@s+1
  4983  00375C  C0AE  F014         	movff	touchScreenController@valueX,GameParameters_setX@value
  4984  003760  C0AF  F015         	movff	touchScreenController@valueX+1,GameParameters_setX@value+1
  4985  003764  EC01  F032         	call	_GameParameters_setX	;wreg free
  4986  003768                     
  4987                           ;stateMachine/touchScreenSM.c: 105:                 sprintf(s,"Y: %d",valueY);
  4988  003768  0E98               	movlw	low touchScreenController@s
  4989  00376A  0100               	movlb	0	; () banked
  4990  00376C  6F82               	movwf	sprintf@s& (0+255),b
  4991  00376E  0E00               	movlw	high touchScreenController@s
  4992  003770  6F83               	movwf	(sprintf@s+1)& (0+255),b
  4993  003772  0EF1               	movlw	low STR_16
  4994  003774  6F84               	movwf	sprintf@fmt& (0+255),b
  4995  003776  0E7F               	movlw	high STR_16
  4996  003778  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  4997  00377A  C0AC  F086         	movff	touchScreenController@valueY,?_sprintf+4
  4998  00377E  C0AD  F087         	movff	touchScreenController@valueY+1,?_sprintf+5
  4999  003782  EC2D  F030         	call	_sprintf	;wreg free
  5000  003786                     
  5001                           ;stateMachine/touchScreenSM.c: 106:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,250,0b0000000000000000,0b1111111111111111);
  5002  003786  0E98               	movlw	low touchScreenController@s
  5003  003788  6E20               	movwf	LCD_DrawText@msg^0,c
  5004  00378A  0E00               	movlw	high touchScreenController@s
  5005  00378C  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  5006  00378E  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  5007  003790  6E22               	movwf	LCD_DrawText@font^0,c
  5008  003792  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  5009  003794  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  5010  003796  0E01               	movlw	1
  5011  003798  6E24               	movwf	LCD_DrawText@align^0,c
  5012  00379A  0E00               	movlw	0
  5013  00379C  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  5014  00379E  0EC8               	movlw	200
  5015  0037A0  6E25               	movwf	LCD_DrawText@posX^0,c
  5016  0037A2  0E00               	movlw	0
  5017  0037A4  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  5018  0037A6  0EFA               	movlw	250
  5019  0037A8  6E27               	movwf	LCD_DrawText@posY^0,c
  5020  0037AA  0E00               	movlw	0
  5021  0037AC  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  5022  0037AE  0E00               	movlw	0
  5023  0037B0  6E29               	movwf	LCD_DrawText@color^0,c
  5024  0037B2  0EFF               	movlw	255
  5025  0037B4  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  5026  0037B6  682B               	setf	LCD_DrawText@bg_color^0,c
  5027  0037B8  ECDB  F00E         	call	_LCD_DrawText	;wreg free
  5028                           
  5029                           ;stateMachine/touchScreenSM.c: 107:                 GameParameters_setY(g,valueY);
  5030  0037BC  C090  F012         	movff	touchScreenController@g,GameParameters_setY@s
  5031  0037C0  C091  F013         	movff	touchScreenController@g+1,GameParameters_setY@s+1
  5032  0037C4  C0AC  F014         	movff	touchScreenController@valueY,GameParameters_setY@value
  5033  0037C8  C0AD  F015         	movff	touchScreenController@valueY+1,GameParameters_setY@value+1
  5034  0037CC  ECF6  F031         	call	_GameParameters_setY	;wreg free
  5035  0037D0  EF00  F01C         	goto	l524
  5036  0037D4                     l10398:
  5037  0037D4  0100               	movlb	0	; () banked
  5038  0037D6  51DE               	movf	_touchScreenState& (0+255),w,b
  5039  0037D8  6F92               	movwf	??_touchScreenController& (0+255),b
  5040  0037DA  6B93               	clrf	(??_touchScreenController+1)& (0+255),b
  5041                           
  5042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5043                           ; Switch size 1, requested type "simple"
  5044                           ; Number of cases is 1, Range of values is 0 to 0
  5045                           ; switch strategies available:
  5046                           ; Name         Instructions Cycles
  5047                           ; simple_byte            4     3 (average)
  5048                           ;	Chosen strategy is simple_byte
  5049  0037DC  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  5050  0037DE  0A00               	xorlw	0	; case 0
  5051  0037E0  B4D8               	btfsc	status,2,c
  5052  0037E2  EFF5  F01B         	goto	l10896
  5053  0037E6  EF00  F01C         	goto	l524
  5054  0037EA                     l10896:
  5055                           
  5056                           ; BSR set to: 0
  5057                           ; Switch size 1, requested type "simple"
  5058                           ; Number of cases is 2, Range of values is 0 to 1
  5059                           ; switch strategies available:
  5060                           ; Name         Instructions Cycles
  5061                           ; simple_byte            7     4 (average)
  5062                           ;	Chosen strategy is simple_byte
  5063  0037EA  5192               	movf	??_touchScreenController& (0+255),w,b
  5064  0037EC  0A00               	xorlw	0	; case 0
  5065  0037EE  B4D8               	btfsc	status,2,c
  5066  0037F0  EFCD  F01A         	goto	l10354
  5067  0037F4  0A01               	xorlw	1	; case 1
  5068  0037F6  B4D8               	btfsc	status,2,c
  5069  0037F8  EFD1  F01A         	goto	l513
  5070  0037FC  EF00  F01C         	goto	l524
  5071  003800                     l524:
  5072  003800  0012               	return		;funcret
  5073  003802                     __end_of_touchScreenController:
  5074                           	callstack 0
  5075                           
  5076 ;; *************** function _configTouch *****************
  5077 ;; Defined at:
  5078 ;;		line 118 in file "stateMachine/touchScreenSM.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;		None
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;		None
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  1    wreg      void 
  5085 ;; Registers used:
  5086 ;;		wreg, status,2
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5092 ;;      Params:         0       0       0       0       0       0       0
  5093 ;;      Locals:         0       0       0       0       0       0       0
  5094 ;;      Temps:          0       0       0       0       0       0       0
  5095 ;;      Totals:         0       0       0       0       0       0       0
  5096 ;;Total ram usage:        0 bytes
  5097 ;; Hardware stack levels used: 1
  5098 ;; Hardware stack levels required when called: 4
  5099 ;; This function calls:
  5100 ;;		Nothing
  5101 ;; This function is called by:
  5102 ;;		_touchScreenInit
  5103 ;;		_touchScreenController
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text12
  5108  0063A2                     __ptext12:
  5109                           	callstack 0
  5110  0063A2                     _configTouch:
  5111                           	callstack 23
  5112  0063A2                     
  5113                           ;stateMachine/touchScreenSM.c: 120:     ANSB1=0;
  5114  0063A2  010F               	movlb	15	; () banked
  5115  0063A4  9339               	bcf	57,1,b	;volatile
  5116                           
  5117                           ;stateMachine/touchScreenSM.c: 121:     ANSB2=0;
  5118  0063A6  9539               	bcf	57,2,b	;volatile
  5119                           
  5120                           ;stateMachine/touchScreenSM.c: 122:     TRISB2=0;
  5121  0063A8  9493               	bcf	3987,2,c	;volatile
  5122                           
  5123                           ;stateMachine/touchScreenSM.c: 123:     LATB2=0;
  5124  0063AA  948A               	bcf	3978,2,c	;volatile
  5125                           
  5126                           ;stateMachine/touchScreenSM.c: 124:     TRISB1=1;
  5127  0063AC  8293               	bsf	3987,1,c	;volatile
  5128                           
  5129                           ;stateMachine/touchScreenSM.c: 125:     RBPU=0;
  5130  0063AE  9EF1               	bcf	4081,7,c	;volatile
  5131  0063B0                     
  5132                           ; BSR set to: 15
  5133                           ;stateMachine/touchScreenSM.c: 126:     WPUB=0b00000010;
  5134  0063B0  0E02               	movlw	2
  5135  0063B2  6E61               	movwf	97,c	;volatile
  5136  0063B4                     
  5137                           ; BSR set to: 15
  5138                           ;stateMachine/touchScreenSM.c: 127:     INTEDG1=0;
  5139  0063B4  9AF1               	bcf	4081,5,c	;volatile
  5140  0063B6                     
  5141                           ; BSR set to: 15
  5142                           ;stateMachine/touchScreenSM.c: 128:     TRISB3=1;
  5143  0063B6  8693               	bsf	3987,3,c	;volatile
  5144  0063B8                     
  5145                           ; BSR set to: 15
  5146                           ;stateMachine/touchScreenSM.c: 129:     TRISB4=1;
  5147  0063B8  8893               	bsf	3987,4,c	;volatile
  5148  0063BA                     
  5149                           ; BSR set to: 15
  5150                           ;stateMachine/touchScreenSM.c: 130:     INT1IE=1;
  5151  0063BA  86F0               	bsf	4080,3,c	;volatile
  5152  0063BC                     
  5153                           ; BSR set to: 15
  5154  0063BC  0012               	return		;funcret
  5155  0063BE                     __end_of_configTouch:
  5156                           	callstack 0
  5157                           
  5158 ;; *************** function _configMeasure *****************
  5159 ;; Defined at:
  5160 ;;		line 132 in file "stateMachine/touchScreenSM.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  channel         1    wreg     _Bool 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;  channel         1   17[COMRAM] _Bool 
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  1    wreg      void 
  5167 ;; Registers used:
  5168 ;;		wreg, status,2, status,0
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5174 ;;      Params:         0       0       0       0       0       0       0
  5175 ;;      Locals:         1       0       0       0       0       0       0
  5176 ;;      Temps:          0       0       0       0       0       0       0
  5177 ;;      Totals:         1       0       0       0       0       0       0
  5178 ;;Total ram usage:        1 bytes
  5179 ;; Hardware stack levels used: 1
  5180 ;; Hardware stack levels required when called: 4
  5181 ;; This function calls:
  5182 ;;		Nothing
  5183 ;; This function is called by:
  5184 ;;		_touchScreenController
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           	psect	text13
  5189  0060AC                     __ptext13:
  5190                           	callstack 0
  5191  0060AC                     _configMeasure:
  5192                           	callstack 23
  5193                           
  5194                           ; BSR set to: 15
  5195                           ;incstack = 0
  5196                           ;configMeasure@channel stored from wreg
  5197  0060AC  6E12               	movwf	configMeasure@channel^0,c
  5198  0060AE                     
  5199                           ;stateMachine/touchScreenSM.c: 132: void configMeasure(_Bool channel);stateMachine/touch
      +                          ScreenSM.c: 133: {;stateMachine/touchScreenSM.c: 134:     if(channel==0)
  5200  0060AE  5012               	movf	configMeasure@channel^0,w,c
  5201  0060B0  A4D8               	btfss	status,2,c
  5202  0060B2  EF5D  F030         	goto	u7261
  5203  0060B6  EF5F  F030         	goto	u7260
  5204  0060BA                     u7261:
  5205  0060BA  EF6A  F030         	goto	l9984
  5206  0060BE                     u7260:
  5207  0060BE                     
  5208                           ;stateMachine/touchScreenSM.c: 135:     {;stateMachine/touchScreenSM.c: 136:         ANS
      +                          B1=0;
  5209  0060BE  010F               	movlb	15	; () banked
  5210  0060C0  9339               	bcf	57,1,b	;volatile
  5211                           
  5212                           ;stateMachine/touchScreenSM.c: 137:         TRISB1=0;
  5213  0060C2  9293               	bcf	3987,1,c	;volatile
  5214                           
  5215                           ;stateMachine/touchScreenSM.c: 138:         LATB1=0;
  5216  0060C4  928A               	bcf	3978,1,c	;volatile
  5217                           
  5218                           ;stateMachine/touchScreenSM.c: 139:         TRISB3=0;
  5219  0060C6  9693               	bcf	3987,3,c	;volatile
  5220                           
  5221                           ;stateMachine/touchScreenSM.c: 140:         LATB3=1;
  5222  0060C8  868A               	bsf	3978,3,c	;volatile
  5223                           
  5224                           ;stateMachine/touchScreenSM.c: 141:         TRISB4=1;
  5225  0060CA  8893               	bsf	3987,4,c	;volatile
  5226                           
  5227                           ;stateMachine/touchScreenSM.c: 142:         TRISB2=1;
  5228  0060CC  8493               	bsf	3987,2,c	;volatile
  5229                           
  5230                           ;stateMachine/touchScreenSM.c: 143:         ANSB2=1;
  5231  0060CE  8539               	bsf	57,2,b	;volatile
  5232  0060D0                     
  5233                           ; BSR set to: 15
  5234                           ;stateMachine/touchScreenSM.c: 144:         ADCON0=0b00100011;
  5235  0060D0  0E23               	movlw	35
  5236  0060D2  6EC2               	movwf	194,c	;volatile
  5237  0060D4                     l9984:
  5238                           
  5239                           ;stateMachine/touchScreenSM.c: 146:     if(channel==1)
  5240  0060D4  0412               	decf	configMeasure@channel^0,w,c
  5241  0060D6  A4D8               	btfss	status,2,c
  5242  0060D8  EF70  F030         	goto	u7271
  5243  0060DC  EF72  F030         	goto	u7270
  5244  0060E0                     u7271:
  5245  0060E0  EF7D  F030         	goto	l532
  5246  0060E4                     u7270:
  5247  0060E4                     
  5248                           ;stateMachine/touchScreenSM.c: 147:     {;stateMachine/touchScreenSM.c: 148:         ANS
      +                          B2=0;
  5249  0060E4  010F               	movlb	15	; () banked
  5250  0060E6  9539               	bcf	57,2,b	;volatile
  5251                           
  5252                           ;stateMachine/touchScreenSM.c: 149:         TRISB2=0;
  5253  0060E8  9493               	bcf	3987,2,c	;volatile
  5254                           
  5255                           ;stateMachine/touchScreenSM.c: 150:         LATB2=0;
  5256  0060EA  948A               	bcf	3978,2,c	;volatile
  5257                           
  5258                           ;stateMachine/touchScreenSM.c: 151:         TRISB4=0;
  5259  0060EC  9893               	bcf	3987,4,c	;volatile
  5260                           
  5261                           ;stateMachine/touchScreenSM.c: 152:         LATB4=1;
  5262  0060EE  888A               	bsf	3978,4,c	;volatile
  5263                           
  5264                           ;stateMachine/touchScreenSM.c: 153:         TRISB3=1;
  5265  0060F0  8693               	bsf	3987,3,c	;volatile
  5266                           
  5267                           ;stateMachine/touchScreenSM.c: 154:         TRISB1=1;
  5268  0060F2  8293               	bsf	3987,1,c	;volatile
  5269                           
  5270                           ;stateMachine/touchScreenSM.c: 155:         ANSB1=1;
  5271  0060F4  8339               	bsf	57,1,b	;volatile
  5272  0060F6                     
  5273                           ; BSR set to: 15
  5274                           ;stateMachine/touchScreenSM.c: 156:         ADCON0=0b00101011;
  5275  0060F6  0E2B               	movlw	43
  5276  0060F8  6EC2               	movwf	194,c	;volatile
  5277  0060FA                     l532:
  5278  0060FA  0012               	return		;funcret
  5279  0060FC                     __end_of_configMeasure:
  5280                           	callstack 0
  5281                           
  5282 ;; *************** function ___xxtofl *****************
  5283 ;; Defined at:
  5284 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  sign            1    wreg     unsigned char 
  5287 ;;  val             4   17[COMRAM] long 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;  sign            1   25[COMRAM] unsigned char 
  5290 ;;  arg             4   27[COMRAM] unsigned long 
  5291 ;;  exp             1   26[COMRAM] unsigned char 
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  4   17[COMRAM] unsigned char 
  5294 ;; Registers used:
  5295 ;;		wreg, status,2, status,0
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5301 ;;      Params:         4       0       0       0       0       0       0
  5302 ;;      Locals:         6       0       0       0       0       0       0
  5303 ;;      Temps:          4       0       0       0       0       0       0
  5304 ;;      Totals:        14       0       0       0       0       0       0
  5305 ;;Total ram usage:       14 bytes
  5306 ;; Hardware stack levels used: 1
  5307 ;; Hardware stack levels required when called: 4
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_touchScreenController
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text14
  5316  003A38                     __ptext14:
  5317                           	callstack 0
  5318  003A38                     ___xxtofl:
  5319                           	callstack 23
  5320                           
  5321                           ;incstack = 0
  5322                           ;___xxtofl@sign stored from wreg
  5323  003A38  6E1A               	movwf	___xxtofl@sign^0,c
  5324  003A3A  501A               	movf	___xxtofl@sign^0,w,c
  5325  003A3C  B4D8               	btfsc	status,2,c
  5326  003A3E  EF23  F01D         	goto	u7731
  5327  003A42  EF25  F01D         	goto	u7730
  5328  003A46                     u7731:
  5329  003A46  EF47  F01D         	goto	l1473
  5330  003A4A                     u7730:
  5331  003A4A  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  5332  003A4C  EF2C  F01D         	goto	u7740
  5333  003A50  EF2A  F01D         	goto	u7741
  5334  003A54                     u7741:
  5335  003A54  EF47  F01D         	goto	l1473
  5336  003A58                     u7740:
  5337  003A58  C012  F016         	movff	___xxtofl@val,??___xxtofl
  5338  003A5C  C013  F017         	movff	___xxtofl@val+1,??___xxtofl+1
  5339  003A60  C014  F018         	movff	___xxtofl@val+2,??___xxtofl+2
  5340  003A64  C015  F019         	movff	___xxtofl@val+3,??___xxtofl+3
  5341  003A68  1E16               	comf	??___xxtofl^0,f,c
  5342  003A6A  1E17               	comf	(??___xxtofl+1)^0,f,c
  5343  003A6C  1E18               	comf	(??___xxtofl+2)^0,f,c
  5344  003A6E  1E19               	comf	(??___xxtofl+3)^0,f,c
  5345  003A70  2A16               	incf	??___xxtofl^0,f,c
  5346  003A72  0E00               	movlw	0
  5347  003A74  2217               	addwfc	(??___xxtofl+1)^0,f,c
  5348  003A76  2218               	addwfc	(??___xxtofl+2)^0,f,c
  5349  003A78  2219               	addwfc	(??___xxtofl+3)^0,f,c
  5350  003A7A  C016  F01C         	movff	??___xxtofl,___xxtofl@arg
  5351  003A7E  C017  F01D         	movff	??___xxtofl+1,___xxtofl@arg+1
  5352  003A82  C018  F01E         	movff	??___xxtofl+2,___xxtofl@arg+2
  5353  003A86  C019  F01F         	movff	??___xxtofl+3,___xxtofl@arg+3
  5354  003A8A  EF4F  F01D         	goto	l10280
  5355  003A8E                     l1473:
  5356  003A8E  C012  F01C         	movff	___xxtofl@val,___xxtofl@arg
  5357  003A92  C013  F01D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5358  003A96  C014  F01E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5359  003A9A  C015  F01F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5360  003A9E                     l10280:
  5361  003A9E  5012               	movf	___xxtofl@val^0,w,c
  5362  003AA0  1013               	iorwf	(___xxtofl@val+1)^0,w,c
  5363  003AA2  1014               	iorwf	(___xxtofl@val+2)^0,w,c
  5364  003AA4  1015               	iorwf	(___xxtofl@val+3)^0,w,c
  5365  003AA6  A4D8               	btfss	status,2,c
  5366  003AA8  EF58  F01D         	goto	u7751
  5367  003AAC  EF5A  F01D         	goto	u7750
  5368  003AB0                     u7751:
  5369  003AB0  EF64  F01D         	goto	l10286
  5370  003AB4                     u7750:
  5371  003AB4  0E00               	movlw	0
  5372  003AB6  6E12               	movwf	?___xxtofl^0,c
  5373  003AB8  0E00               	movlw	0
  5374  003ABA  6E13               	movwf	(?___xxtofl+1)^0,c
  5375  003ABC  0E00               	movlw	0
  5376  003ABE  6E14               	movwf	(?___xxtofl+2)^0,c
  5377  003AC0  0E00               	movlw	0
  5378  003AC2  6E15               	movwf	(?___xxtofl+3)^0,c
  5379  003AC4  EFF5  F01D         	goto	l1476
  5380  003AC8                     l10286:
  5381  003AC8  0E96               	movlw	150
  5382  003ACA  6E1B               	movwf	___xxtofl@exp^0,c
  5383  003ACC  EF6E  F01D         	goto	l10290
  5384  003AD0                     l10288:
  5385  003AD0  2A1B               	incf	___xxtofl@exp^0,f,c
  5386  003AD2  90D8               	bcf	status,0,c
  5387  003AD4  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  5388  003AD6  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  5389  003AD8  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  5390  003ADA  321C               	rrcf	___xxtofl@arg^0,f,c
  5391  003ADC                     l10290:
  5392  003ADC  0E00               	movlw	0
  5393  003ADE  141C               	andwf	___xxtofl@arg^0,w,c
  5394  003AE0  6E16               	movwf	??___xxtofl^0,c
  5395  003AE2  0E00               	movlw	0
  5396  003AE4  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  5397  003AE6  6E17               	movwf	(??___xxtofl+1)^0,c
  5398  003AE8  0E00               	movlw	0
  5399  003AEA  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  5400  003AEC  6E18               	movwf	(??___xxtofl+2)^0,c
  5401  003AEE  0EFE               	movlw	254
  5402  003AF0  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  5403  003AF2  6E19               	movwf	(??___xxtofl+3)^0,c
  5404  003AF4  5016               	movf	??___xxtofl^0,w,c
  5405  003AF6  1017               	iorwf	(??___xxtofl+1)^0,w,c
  5406  003AF8  1018               	iorwf	(??___xxtofl+2)^0,w,c
  5407  003AFA  1019               	iorwf	(??___xxtofl+3)^0,w,c
  5408  003AFC  A4D8               	btfss	status,2,c
  5409  003AFE  EF83  F01D         	goto	u7761
  5410  003B02  EF85  F01D         	goto	u7760
  5411  003B06                     u7761:
  5412  003B06  EF68  F01D         	goto	l10288
  5413  003B0A                     u7760:
  5414  003B0A  EF93  F01D         	goto	l1480
  5415  003B0E                     l10292:
  5416  003B0E  2A1B               	incf	___xxtofl@exp^0,f,c
  5417  003B10  0E01               	movlw	1
  5418  003B12  261C               	addwf	___xxtofl@arg^0,f,c
  5419  003B14  0E00               	movlw	0
  5420  003B16  221D               	addwfc	(___xxtofl@arg+1)^0,f,c
  5421  003B18  221E               	addwfc	(___xxtofl@arg+2)^0,f,c
  5422  003B1A  221F               	addwfc	(___xxtofl@arg+3)^0,f,c
  5423  003B1C  90D8               	bcf	status,0,c
  5424  003B1E  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  5425  003B20  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  5426  003B22  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  5427  003B24  321C               	rrcf	___xxtofl@arg^0,f,c
  5428  003B26                     l1480:
  5429  003B26  0E00               	movlw	0
  5430  003B28  141C               	andwf	___xxtofl@arg^0,w,c
  5431  003B2A  6E16               	movwf	??___xxtofl^0,c
  5432  003B2C  0E00               	movlw	0
  5433  003B2E  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  5434  003B30  6E17               	movwf	(??___xxtofl+1)^0,c
  5435  003B32  0E00               	movlw	0
  5436  003B34  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  5437  003B36  6E18               	movwf	(??___xxtofl+2)^0,c
  5438  003B38  0EFF               	movlw	255
  5439  003B3A  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  5440  003B3C  6E19               	movwf	(??___xxtofl+3)^0,c
  5441  003B3E  5016               	movf	??___xxtofl^0,w,c
  5442  003B40  1017               	iorwf	(??___xxtofl+1)^0,w,c
  5443  003B42  1018               	iorwf	(??___xxtofl+2)^0,w,c
  5444  003B44  1019               	iorwf	(??___xxtofl+3)^0,w,c
  5445  003B46  A4D8               	btfss	status,2,c
  5446  003B48  EFA8  F01D         	goto	u7771
  5447  003B4C  EFAA  F01D         	goto	u7770
  5448  003B50                     u7771:
  5449  003B50  EF87  F01D         	goto	l10292
  5450  003B54                     u7770:
  5451  003B54  EFB2  F01D         	goto	l10300
  5452  003B58                     l10298:
  5453  003B58  061B               	decf	___xxtofl@exp^0,f,c
  5454  003B5A  90D8               	bcf	status,0,c
  5455  003B5C  361C               	rlcf	___xxtofl@arg^0,f,c
  5456  003B5E  361D               	rlcf	(___xxtofl@arg+1)^0,f,c
  5457  003B60  361E               	rlcf	(___xxtofl@arg+2)^0,f,c
  5458  003B62  361F               	rlcf	(___xxtofl@arg+3)^0,f,c
  5459  003B64                     l10300:
  5460  003B64  BE1E               	btfsc	(___xxtofl@arg+2)^0,7,c
  5461  003B66  EFB7  F01D         	goto	u7781
  5462  003B6A  EFB9  F01D         	goto	u7780
  5463  003B6E                     u7781:
  5464  003B6E  EFC1  F01D         	goto	l1487
  5465  003B72                     u7780:
  5466  003B72  0E02               	movlw	2
  5467  003B74  601B               	cpfslt	___xxtofl@exp^0,c
  5468  003B76  EFBF  F01D         	goto	u7791
  5469  003B7A  EFC1  F01D         	goto	u7790
  5470  003B7E                     u7791:
  5471  003B7E  EFAC  F01D         	goto	l10298
  5472  003B82                     u7790:
  5473  003B82                     l1487:
  5474  003B82  B01B               	btfsc	___xxtofl@exp^0,0,c
  5475  003B84  EFC6  F01D         	goto	u7801
  5476  003B88  EFC8  F01D         	goto	u7800
  5477  003B8C                     u7801:
  5478  003B8C  EFC9  F01D         	goto	l10306
  5479  003B90                     u7800:
  5480  003B90  9E1E               	bcf	(___xxtofl@arg+2)^0,7,c
  5481  003B92                     l10306:
  5482  003B92  90D8               	bcf	status,0,c
  5483  003B94  321B               	rrcf	___xxtofl@exp^0,f,c
  5484  003B96  C01B  F016         	movff	___xxtofl@exp,??___xxtofl
  5485  003B9A  6A17               	clrf	(??___xxtofl+1)^0,c
  5486  003B9C  6A18               	clrf	(??___xxtofl+2)^0,c
  5487  003B9E  6A19               	clrf	(??___xxtofl+3)^0,c
  5488  003BA0  C016  F019         	movff	??___xxtofl,??___xxtofl+3
  5489  003BA4  6A18               	clrf	(??___xxtofl+2)^0,c
  5490  003BA6  6A17               	clrf	(??___xxtofl+1)^0,c
  5491  003BA8  6A16               	clrf	??___xxtofl^0,c
  5492  003BAA  5016               	movf	??___xxtofl^0,w,c
  5493  003BAC  121C               	iorwf	___xxtofl@arg^0,f,c
  5494  003BAE  5017               	movf	(??___xxtofl+1)^0,w,c
  5495  003BB0  121D               	iorwf	(___xxtofl@arg+1)^0,f,c
  5496  003BB2  5018               	movf	(??___xxtofl+2)^0,w,c
  5497  003BB4  121E               	iorwf	(___xxtofl@arg+2)^0,f,c
  5498  003BB6  5019               	movf	(??___xxtofl+3)^0,w,c
  5499  003BB8  121F               	iorwf	(___xxtofl@arg+3)^0,f,c
  5500  003BBA  501A               	movf	___xxtofl@sign^0,w,c
  5501  003BBC  B4D8               	btfsc	status,2,c
  5502  003BBE  EFE3  F01D         	goto	u7811
  5503  003BC2  EFE5  F01D         	goto	u7810
  5504  003BC6                     u7811:
  5505  003BC6  EFED  F01D         	goto	l10316
  5506  003BCA                     u7810:
  5507  003BCA  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  5508  003BCC  EFEC  F01D         	goto	u7820
  5509  003BD0  EFEA  F01D         	goto	u7821
  5510  003BD4                     u7821:
  5511  003BD4  EFED  F01D         	goto	l10316
  5512  003BD8                     u7820:
  5513  003BD8  8E1F               	bsf	(___xxtofl@arg+3)^0,7,c
  5514  003BDA                     l10316:
  5515  003BDA  C01C  F012         	movff	___xxtofl@arg,?___xxtofl
  5516  003BDE  C01D  F013         	movff	___xxtofl@arg+1,?___xxtofl+1
  5517  003BE2  C01E  F014         	movff	___xxtofl@arg+2,?___xxtofl+2
  5518  003BE6  C01F  F015         	movff	___xxtofl@arg+3,?___xxtofl+3
  5519  003BEA                     l1476:
  5520  003BEA  0012               	return		;funcret
  5521  003BEC                     __end_of___xxtofl:
  5522                           	callstack 0
  5523                           
  5524 ;; *************** function ___fltol *****************
  5525 ;; Defined at:
  5526 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  f1              4   56[COMRAM] unsigned char 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  exp1            1   65[COMRAM] unsigned char 
  5531 ;;  sign1           1   64[COMRAM] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  4   56[COMRAM] long 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2, status,0
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5541 ;;      Params:         4       0       0       0       0       0       0
  5542 ;;      Locals:         2       0       0       0       0       0       0
  5543 ;;      Temps:          4       0       0       0       0       0       0
  5544 ;;      Totals:        10       0       0       0       0       0       0
  5545 ;;Total ram usage:       10 bytes
  5546 ;; Hardware stack levels used: 1
  5547 ;; Hardware stack levels required when called: 4
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		_touchScreenController
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text15
  5556  004686                     __ptext15:
  5557                           	callstack 0
  5558  004686                     ___fltol:
  5559                           	callstack 23
  5560  004686  343B               	rlcf	(___fltol@f1+2)^0,w,c
  5561  004688  343C               	rlcf	(___fltol@f1+3)^0,w,c
  5562  00468A  6E42               	movwf	___fltol@exp1^0,c
  5563  00468C  5042               	movf	___fltol@exp1^0,w,c
  5564  00468E  A4D8               	btfss	status,2,c
  5565  004690  EF4C  F023         	goto	u7661
  5566  004694  EF4E  F023         	goto	u7660
  5567  004698                     u7661:
  5568  004698  EF58  F023         	goto	l10236
  5569  00469C                     u7660:
  5570  00469C                     l10232:
  5571  00469C  0E00               	movlw	0
  5572  00469E  6E39               	movwf	?___fltol^0,c
  5573  0046A0  0E00               	movlw	0
  5574  0046A2  6E3A               	movwf	(?___fltol+1)^0,c
  5575  0046A4  0E00               	movlw	0
  5576  0046A6  6E3B               	movwf	(?___fltol+2)^0,c
  5577  0046A8  0E00               	movlw	0
  5578  0046AA  6E3C               	movwf	(?___fltol+3)^0,c
  5579  0046AC  EFC5  F023         	goto	l1115
  5580  0046B0                     l10236:
  5581  0046B0  C039  F03D         	movff	___fltol@f1,??___fltol
  5582  0046B4  C03A  F03E         	movff	___fltol@f1+1,??___fltol+1
  5583  0046B8  C03B  F03F         	movff	___fltol@f1+2,??___fltol+2
  5584  0046BC  C03C  F040         	movff	___fltol@f1+3,??___fltol+3
  5585  0046C0  0E20               	movlw	32
  5586  0046C2  EF68  F023         	goto	u7670
  5587  0046C6                     u7675:
  5588  0046C6  90D8               	bcf	status,0,c
  5589  0046C8  3240               	rrcf	(??___fltol+3)^0,f,c
  5590  0046CA  323F               	rrcf	(??___fltol+2)^0,f,c
  5591  0046CC  323E               	rrcf	(??___fltol+1)^0,f,c
  5592  0046CE  323D               	rrcf	??___fltol^0,f,c
  5593  0046D0                     u7670:
  5594  0046D0  2EE8               	decfsz	wreg,f,c
  5595  0046D2  EF63  F023         	goto	u7675
  5596  0046D6  503D               	movf	??___fltol^0,w,c
  5597  0046D8  6E41               	movwf	___fltol@sign1^0,c
  5598  0046DA  8E3B               	bsf	(___fltol@f1+2)^0,7,c
  5599  0046DC  0EFF               	movlw	255
  5600  0046DE  1639               	andwf	___fltol@f1^0,f,c
  5601  0046E0  0EFF               	movlw	255
  5602  0046E2  163A               	andwf	(___fltol@f1+1)^0,f,c
  5603  0046E4  0EFF               	movlw	255
  5604  0046E6  163B               	andwf	(___fltol@f1+2)^0,f,c
  5605  0046E8  0E00               	movlw	0
  5606  0046EA  163C               	andwf	(___fltol@f1+3)^0,f,c
  5607  0046EC  0E96               	movlw	150
  5608  0046EE  5E42               	subwf	___fltol@exp1^0,f,c
  5609  0046F0  BE42               	btfsc	___fltol@exp1^0,7,c
  5610  0046F2  EF7F  F023         	goto	u7680
  5611  0046F6  EF7D  F023         	goto	u7681
  5612  0046FA                     u7681:
  5613  0046FA  EF95  F023         	goto	l10256
  5614  0046FE                     u7680:
  5615  0046FE  5042               	movf	___fltol@exp1^0,w,c
  5616  004700  0A80               	xorlw	128
  5617  004702  0F97               	addlw	151
  5618  004704  B0D8               	btfsc	status,0,c
  5619  004706  EF87  F023         	goto	u7691
  5620  00470A  EF89  F023         	goto	u7690
  5621  00470E                     u7691:
  5622  00470E  EF8B  F023         	goto	l10252
  5623  004712                     u7690:
  5624  004712  EF4E  F023         	goto	l10232
  5625  004716                     l10252:
  5626  004716  90D8               	bcf	status,0,c
  5627  004718  323C               	rrcf	(___fltol@f1+3)^0,f,c
  5628  00471A  323B               	rrcf	(___fltol@f1+2)^0,f,c
  5629  00471C  323A               	rrcf	(___fltol@f1+1)^0,f,c
  5630  00471E  3239               	rrcf	___fltol@f1^0,f,c
  5631  004720  3E42               	incfsz	___fltol@exp1^0,f,c
  5632  004722  EF8B  F023         	goto	l10252
  5633  004726  EFAD  F023         	goto	l10266
  5634  00472A                     l10256:
  5635  00472A  0E1F               	movlw	31
  5636  00472C  6442               	cpfsgt	___fltol@exp1^0,c
  5637  00472E  EF9B  F023         	goto	u7701
  5638  004732  EF9D  F023         	goto	u7700
  5639  004736                     u7701:
  5640  004736  EFA5  F023         	goto	l10264
  5641  00473A                     u7700:
  5642  00473A  EF4E  F023         	goto	l10232
  5643  00473E                     l10262:
  5644  00473E  90D8               	bcf	status,0,c
  5645  004740  3639               	rlcf	___fltol@f1^0,f,c
  5646  004742  363A               	rlcf	(___fltol@f1+1)^0,f,c
  5647  004744  363B               	rlcf	(___fltol@f1+2)^0,f,c
  5648  004746  363C               	rlcf	(___fltol@f1+3)^0,f,c
  5649  004748  0642               	decf	___fltol@exp1^0,f,c
  5650  00474A                     l10264:
  5651  00474A  5042               	movf	___fltol@exp1^0,w,c
  5652  00474C  A4D8               	btfss	status,2,c
  5653  00474E  EFAB  F023         	goto	u7711
  5654  004752  EFAD  F023         	goto	u7710
  5655  004756                     u7711:
  5656  004756  EF9F  F023         	goto	l10262
  5657  00475A                     u7710:
  5658  00475A                     l10266:
  5659  00475A  5041               	movf	___fltol@sign1^0,w,c
  5660  00475C  B4D8               	btfsc	status,2,c
  5661  00475E  EFB3  F023         	goto	u7721
  5662  004762  EFB5  F023         	goto	u7720
  5663  004766                     u7721:
  5664  004766  EFBD  F023         	goto	l10270
  5665  00476A                     u7720:
  5666  00476A  1E3C               	comf	(___fltol@f1+3)^0,f,c
  5667  00476C  1E3B               	comf	(___fltol@f1+2)^0,f,c
  5668  00476E  1E3A               	comf	(___fltol@f1+1)^0,f,c
  5669  004770  6C39               	negf	___fltol@f1^0,c
  5670  004772  0E00               	movlw	0
  5671  004774  223A               	addwfc	(___fltol@f1+1)^0,f,c
  5672  004776  223B               	addwfc	(___fltol@f1+2)^0,f,c
  5673  004778  223C               	addwfc	(___fltol@f1+3)^0,f,c
  5674  00477A                     l10270:
  5675  00477A  C039  F039         	movff	___fltol@f1,?___fltol
  5676  00477E  C03A  F03A         	movff	___fltol@f1+1,?___fltol+1
  5677  004782  C03B  F03B         	movff	___fltol@f1+2,?___fltol+2
  5678  004786  C03C  F03C         	movff	___fltol@f1+3,?___fltol+3
  5679  00478A                     l1115:
  5680  00478A  0012               	return		;funcret
  5681  00478C                     __end_of___fltol:
  5682                           	callstack 0
  5683                           
  5684 ;; *************** function ___fldiv *****************
  5685 ;; Defined at:
  5686 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  b               4   31[COMRAM] long 
  5689 ;;  a               4   35[COMRAM] long 
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;  grs             4   50[COMRAM] unsigned long 
  5692 ;;  rem             4   43[COMRAM] unsigned long 
  5693 ;;  new_exp         2   48[COMRAM] short 
  5694 ;;  aexp            1   55[COMRAM] unsigned char 
  5695 ;;  bexp            1   54[COMRAM] unsigned char 
  5696 ;;  sign            1   47[COMRAM] unsigned char 
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  4   31[COMRAM] unsigned char 
  5699 ;; Registers used:
  5700 ;;		wreg, status,2, status,0
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5706 ;;      Params:         8       0       0       0       0       0       0
  5707 ;;      Locals:        13       0       0       0       0       0       0
  5708 ;;      Temps:          4       0       0       0       0       0       0
  5709 ;;      Totals:        25       0       0       0       0       0       0
  5710 ;;Total ram usage:       25 bytes
  5711 ;; Hardware stack levels used: 1
  5712 ;; Hardware stack levels required when called: 4
  5713 ;; This function calls:
  5714 ;;		Nothing
  5715 ;; This function is called by:
  5716 ;;		_touchScreenController
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720                           	psect	text16
  5721  0025E4                     __ptext16:
  5722                           	callstack 0
  5723  0025E4                     ___fldiv:
  5724                           	callstack 23
  5725  0025E4  5023               	movf	(___fldiv@b+3)^0,w,c
  5726  0025E6  0B80               	andlw	128
  5727  0025E8  6E30               	movwf	___fldiv@sign^0,c
  5728  0025EA  5023               	movf	(___fldiv@b+3)^0,w,c
  5729  0025EC  2423               	addwf	(___fldiv@b+3)^0,w,c
  5730  0025EE  6E37               	movwf	___fldiv@bexp^0,c
  5731  0025F0  AE22               	btfss	(___fldiv@b+2)^0,7,c
  5732  0025F2  EFFD  F012         	goto	u7431
  5733  0025F6  EFFF  F012         	goto	u7430
  5734  0025FA                     u7431:
  5735  0025FA  EF00  F013         	goto	l10098
  5736  0025FE                     u7430:
  5737  0025FE  8037               	bsf	___fldiv@bexp^0,0,c
  5738  002600                     l10098:
  5739  002600  5037               	movf	___fldiv@bexp^0,w,c
  5740  002602  B4D8               	btfsc	status,2,c
  5741  002604  EF06  F013         	goto	u7441
  5742  002608  EF08  F013         	goto	u7440
  5743  00260C                     u7441:
  5744  00260C  EF1D  F013         	goto	l10108
  5745  002610                     u7440:
  5746  002610  2837               	incf	___fldiv@bexp^0,w,c
  5747  002612  A4D8               	btfss	status,2,c
  5748  002614  EF0E  F013         	goto	u7451
  5749  002618  EF10  F013         	goto	u7450
  5750  00261C                     u7451:
  5751  00261C  EF18  F013         	goto	l10104
  5752  002620                     u7450:
  5753  002620  0E00               	movlw	0
  5754  002622  6E20               	movwf	___fldiv@b^0,c
  5755  002624  0E00               	movlw	0
  5756  002626  6E21               	movwf	(___fldiv@b+1)^0,c
  5757  002628  0E00               	movlw	0
  5758  00262A  6E22               	movwf	(___fldiv@b+2)^0,c
  5759  00262C  0E00               	movlw	0
  5760  00262E  6E23               	movwf	(___fldiv@b+3)^0,c
  5761  002630                     l10104:
  5762  002630  8E22               	bsf	(___fldiv@b+2)^0,7,c
  5763  002632  0E00               	movlw	0
  5764  002634  6E23               	movwf	(___fldiv@b+3)^0,c
  5765  002636  EF25  F013         	goto	l10110
  5766  00263A                     l10108:
  5767  00263A  0E00               	movlw	0
  5768  00263C  6E20               	movwf	___fldiv@b^0,c
  5769  00263E  0E00               	movlw	0
  5770  002640  6E21               	movwf	(___fldiv@b+1)^0,c
  5771  002642  0E00               	movlw	0
  5772  002644  6E22               	movwf	(___fldiv@b+2)^0,c
  5773  002646  0E00               	movlw	0
  5774  002648  6E23               	movwf	(___fldiv@b+3)^0,c
  5775  00264A                     l10110:
  5776  00264A  5027               	movf	(___fldiv@a+3)^0,w,c
  5777  00264C  0B80               	andlw	128
  5778  00264E  1A30               	xorwf	___fldiv@sign^0,f,c
  5779  002650  5027               	movf	(___fldiv@a+3)^0,w,c
  5780  002652  2427               	addwf	(___fldiv@a+3)^0,w,c
  5781  002654  6E38               	movwf	___fldiv@aexp^0,c
  5782  002656  AE26               	btfss	(___fldiv@a+2)^0,7,c
  5783  002658  EF30  F013         	goto	u7461
  5784  00265C  EF32  F013         	goto	u7460
  5785  002660                     u7461:
  5786  002660  EF33  F013         	goto	l10118
  5787  002664                     u7460:
  5788  002664  8038               	bsf	___fldiv@aexp^0,0,c
  5789  002666                     l10118:
  5790  002666  5038               	movf	___fldiv@aexp^0,w,c
  5791  002668  B4D8               	btfsc	status,2,c
  5792  00266A  EF39  F013         	goto	u7471
  5793  00266E  EF3B  F013         	goto	u7470
  5794  002672                     u7471:
  5795  002672  EF50  F013         	goto	l10128
  5796  002676                     u7470:
  5797  002676  2838               	incf	___fldiv@aexp^0,w,c
  5798  002678  A4D8               	btfss	status,2,c
  5799  00267A  EF41  F013         	goto	u7481
  5800  00267E  EF43  F013         	goto	u7480
  5801  002682                     u7481:
  5802  002682  EF4B  F013         	goto	l10124
  5803  002686                     u7480:
  5804  002686  0E00               	movlw	0
  5805  002688  6E24               	movwf	___fldiv@a^0,c
  5806  00268A  0E00               	movlw	0
  5807  00268C  6E25               	movwf	(___fldiv@a+1)^0,c
  5808  00268E  0E00               	movlw	0
  5809  002690  6E26               	movwf	(___fldiv@a+2)^0,c
  5810  002692  0E00               	movlw	0
  5811  002694  6E27               	movwf	(___fldiv@a+3)^0,c
  5812  002696                     l10124:
  5813  002696  8E26               	bsf	(___fldiv@a+2)^0,7,c
  5814  002698  0E00               	movlw	0
  5815  00269A  6E27               	movwf	(___fldiv@a+3)^0,c
  5816  00269C  EF58  F013         	goto	l10130
  5817  0026A0                     l10128:
  5818  0026A0  0E00               	movlw	0
  5819  0026A2  6E24               	movwf	___fldiv@a^0,c
  5820  0026A4  0E00               	movlw	0
  5821  0026A6  6E25               	movwf	(___fldiv@a+1)^0,c
  5822  0026A8  0E00               	movlw	0
  5823  0026AA  6E26               	movwf	(___fldiv@a+2)^0,c
  5824  0026AC  0E00               	movlw	0
  5825  0026AE  6E27               	movwf	(___fldiv@a+3)^0,c
  5826  0026B0                     l10130:
  5827  0026B0  5024               	movf	___fldiv@a^0,w,c
  5828  0026B2  1025               	iorwf	(___fldiv@a+1)^0,w,c
  5829  0026B4  1026               	iorwf	(___fldiv@a+2)^0,w,c
  5830  0026B6  1027               	iorwf	(___fldiv@a+3)^0,w,c
  5831  0026B8  A4D8               	btfss	status,2,c
  5832  0026BA  EF61  F013         	goto	u7491
  5833  0026BE  EF63  F013         	goto	u7490
  5834  0026C2                     u7491:
  5835  0026C2  EF7B  F013         	goto	l10142
  5836  0026C6                     u7490:
  5837  0026C6  0E00               	movlw	0
  5838  0026C8  6E20               	movwf	___fldiv@b^0,c
  5839  0026CA  0E00               	movlw	0
  5840  0026CC  6E21               	movwf	(___fldiv@b+1)^0,c
  5841  0026CE  0E00               	movlw	0
  5842  0026D0  6E22               	movwf	(___fldiv@b+2)^0,c
  5843  0026D2  0E00               	movlw	0
  5844  0026D4  6E23               	movwf	(___fldiv@b+3)^0,c
  5845  0026D6  0E80               	movlw	128
  5846  0026D8  1222               	iorwf	(___fldiv@b+2)^0,f,c
  5847  0026DA  0E7F               	movlw	127
  5848  0026DC  1223               	iorwf	(___fldiv@b+3)^0,f,c
  5849  0026DE                     l10136:
  5850  0026DE  5030               	movf	___fldiv@sign^0,w,c
  5851  0026E0  1223               	iorwf	(___fldiv@b+3)^0,f,c
  5852  0026E2  C020  F020         	movff	___fldiv@b,?___fldiv
  5853  0026E6  C021  F021         	movff	___fldiv@b+1,?___fldiv+1
  5854  0026EA  C022  F022         	movff	___fldiv@b+2,?___fldiv+2
  5855  0026EE  C023  F023         	movff	___fldiv@b+3,?___fldiv+3
  5856  0026F2  EFBE  F014         	goto	l1400
  5857  0026F6                     l10142:
  5858  0026F6  5037               	movf	___fldiv@bexp^0,w,c
  5859  0026F8  A4D8               	btfss	status,2,c
  5860  0026FA  EF81  F013         	goto	u7501
  5861  0026FE  EF83  F013         	goto	u7500
  5862  002702                     u7501:
  5863  002702  EF8D  F013         	goto	l10150
  5864  002706                     u7500:
  5865  002706  0E00               	movlw	0
  5866  002708  6E20               	movwf	?___fldiv^0,c
  5867  00270A  0E00               	movlw	0
  5868  00270C  6E21               	movwf	(?___fldiv+1)^0,c
  5869  00270E  0E00               	movlw	0
  5870  002710  6E22               	movwf	(?___fldiv+2)^0,c
  5871  002712  0E00               	movlw	0
  5872  002714  6E23               	movwf	(?___fldiv+3)^0,c
  5873  002716  EFBE  F014         	goto	l1400
  5874  00271A                     l10150:
  5875  00271A  5038               	movf	___fldiv@aexp^0,w,c
  5876  00271C  C037  F028         	movff	___fldiv@bexp,??___fldiv
  5877  002720  6A29               	clrf	(??___fldiv+1)^0,c
  5878  002722  5E28               	subwf	??___fldiv^0,f,c
  5879  002724  0E00               	movlw	0
  5880  002726  5A29               	subwfb	(??___fldiv+1)^0,f,c
  5881  002728  0E7F               	movlw	127
  5882  00272A  2428               	addwf	??___fldiv^0,w,c
  5883  00272C  6E31               	movwf	___fldiv@new_exp^0,c
  5884  00272E  0E00               	movlw	0
  5885  002730  2029               	addwfc	(??___fldiv+1)^0,w,c
  5886  002732  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  5887  002734  C020  F02C         	movff	___fldiv@b,___fldiv@rem
  5888  002738  C021  F02D         	movff	___fldiv@b+1,___fldiv@rem+1
  5889  00273C  C022  F02E         	movff	___fldiv@b+2,___fldiv@rem+2
  5890  002740  C023  F02F         	movff	___fldiv@b+3,___fldiv@rem+3
  5891  002744  0E00               	movlw	0
  5892  002746  6E20               	movwf	___fldiv@b^0,c
  5893  002748  0E00               	movlw	0
  5894  00274A  6E21               	movwf	(___fldiv@b+1)^0,c
  5895  00274C  0E00               	movlw	0
  5896  00274E  6E22               	movwf	(___fldiv@b+2)^0,c
  5897  002750  0E00               	movlw	0
  5898  002752  6E23               	movwf	(___fldiv@b+3)^0,c
  5899  002754  0E00               	movlw	0
  5900  002756  6E33               	movwf	___fldiv@grs^0,c
  5901  002758  0E00               	movlw	0
  5902  00275A  6E34               	movwf	(___fldiv@grs+1)^0,c
  5903  00275C  0E00               	movlw	0
  5904  00275E  6E35               	movwf	(___fldiv@grs+2)^0,c
  5905  002760  0E00               	movlw	0
  5906  002762  6E36               	movwf	(___fldiv@grs+3)^0,c
  5907  002764  0E00               	movlw	0
  5908  002766  6E38               	movwf	___fldiv@aexp^0,c
  5909  002768  EFEE  F013         	goto	l1402
  5910  00276C                     l10160:
  5911  00276C  5038               	movf	___fldiv@aexp^0,w,c
  5912  00276E  B4D8               	btfsc	status,2,c
  5913  002770  EFBC  F013         	goto	u7511
  5914  002774  EFBE  F013         	goto	u7510
  5915  002778                     u7511:
  5916  002778  EFD5  F013         	goto	l10168
  5917  00277C                     u7510:
  5918  00277C  90D8               	bcf	status,0,c
  5919  00277E  362C               	rlcf	___fldiv@rem^0,f,c
  5920  002780  362D               	rlcf	(___fldiv@rem+1)^0,f,c
  5921  002782  362E               	rlcf	(___fldiv@rem+2)^0,f,c
  5922  002784  362F               	rlcf	(___fldiv@rem+3)^0,f,c
  5923  002786  90D8               	bcf	status,0,c
  5924  002788  3620               	rlcf	___fldiv@b^0,f,c
  5925  00278A  3621               	rlcf	(___fldiv@b+1)^0,f,c
  5926  00278C  3622               	rlcf	(___fldiv@b+2)^0,f,c
  5927  00278E  3623               	rlcf	(___fldiv@b+3)^0,f,c
  5928  002790  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  5929  002792  EFCD  F013         	goto	u7521
  5930  002796  EFCF  F013         	goto	u7520
  5931  00279A                     u7521:
  5932  00279A  EFD0  F013         	goto	l1405
  5933  00279E                     u7520:
  5934  00279E  8020               	bsf	___fldiv@b^0,0,c
  5935  0027A0                     l1405:
  5936  0027A0  90D8               	bcf	status,0,c
  5937  0027A2  3633               	rlcf	___fldiv@grs^0,f,c
  5938  0027A4  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  5939  0027A6  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  5940  0027A8  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  5941  0027AA                     l10168:
  5942  0027AA  5024               	movf	___fldiv@a^0,w,c
  5943  0027AC  5C2C               	subwf	___fldiv@rem^0,w,c
  5944  0027AE  5025               	movf	(___fldiv@a+1)^0,w,c
  5945  0027B0  582D               	subwfb	(___fldiv@rem+1)^0,w,c
  5946  0027B2  5026               	movf	(___fldiv@a+2)^0,w,c
  5947  0027B4  582E               	subwfb	(___fldiv@rem+2)^0,w,c
  5948  0027B6  5027               	movf	(___fldiv@a+3)^0,w,c
  5949  0027B8  582F               	subwfb	(___fldiv@rem+3)^0,w,c
  5950  0027BA  A0D8               	btfss	status,0,c
  5951  0027BC  EFE2  F013         	goto	u7531
  5952  0027C0  EFE4  F013         	goto	u7530
  5953  0027C4                     u7531:
  5954  0027C4  EFED  F013         	goto	l10174
  5955  0027C8                     u7530:
  5956  0027C8  8C36               	bsf	(___fldiv@grs+3)^0,6,c
  5957  0027CA  5024               	movf	___fldiv@a^0,w,c
  5958  0027CC  5E2C               	subwf	___fldiv@rem^0,f,c
  5959  0027CE  5025               	movf	(___fldiv@a+1)^0,w,c
  5960  0027D0  5A2D               	subwfb	(___fldiv@rem+1)^0,f,c
  5961  0027D2  5026               	movf	(___fldiv@a+2)^0,w,c
  5962  0027D4  5A2E               	subwfb	(___fldiv@rem+2)^0,f,c
  5963  0027D6  5027               	movf	(___fldiv@a+3)^0,w,c
  5964  0027D8  5A2F               	subwfb	(___fldiv@rem+3)^0,f,c
  5965  0027DA                     l10174:
  5966  0027DA  2A38               	incf	___fldiv@aexp^0,f,c
  5967  0027DC                     l1402:
  5968  0027DC  0E19               	movlw	25
  5969  0027DE  6438               	cpfsgt	___fldiv@aexp^0,c
  5970  0027E0  EFF4  F013         	goto	u7541
  5971  0027E4  EFF6  F013         	goto	u7540
  5972  0027E8                     u7541:
  5973  0027E8  EFB6  F013         	goto	l10160
  5974  0027EC                     u7540:
  5975  0027EC  502C               	movf	___fldiv@rem^0,w,c
  5976  0027EE  102D               	iorwf	(___fldiv@rem+1)^0,w,c
  5977  0027F0  102E               	iorwf	(___fldiv@rem+2)^0,w,c
  5978  0027F2  102F               	iorwf	(___fldiv@rem+3)^0,w,c
  5979  0027F4  B4D8               	btfsc	status,2,c
  5980  0027F6  EFFF  F013         	goto	u7551
  5981  0027FA  EF01  F014         	goto	u7550
  5982  0027FE                     u7551:
  5983  0027FE  EF19  F014         	goto	l10186
  5984  002802                     u7550:
  5985  002802  8033               	bsf	___fldiv@grs^0,0,c
  5986  002804  EF19  F014         	goto	l10186
  5987  002808                     l10180:
  5988  002808  90D8               	bcf	status,0,c
  5989  00280A  3620               	rlcf	___fldiv@b^0,f,c
  5990  00280C  3621               	rlcf	(___fldiv@b+1)^0,f,c
  5991  00280E  3622               	rlcf	(___fldiv@b+2)^0,f,c
  5992  002810  3623               	rlcf	(___fldiv@b+3)^0,f,c
  5993  002812  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  5994  002814  EF0E  F014         	goto	u7561
  5995  002818  EF10  F014         	goto	u7560
  5996  00281C                     u7561:
  5997  00281C  EF11  F014         	goto	l1411
  5998  002820                     u7560:
  5999  002820  8020               	bsf	___fldiv@b^0,0,c
  6000  002822                     l1411:
  6001  002822  90D8               	bcf	status,0,c
  6002  002824  3633               	rlcf	___fldiv@grs^0,f,c
  6003  002826  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  6004  002828  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  6005  00282A  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  6006  00282C  0631               	decf	___fldiv@new_exp^0,f,c
  6007  00282E  A0D8               	btfss	status,0,c
  6008  002830  0632               	decf	(___fldiv@new_exp+1)^0,f,c
  6009  002832                     l10186:
  6010  002832  AE22               	btfss	(___fldiv@b+2)^0,7,c
  6011  002834  EF1E  F014         	goto	u7571
  6012  002838  EF20  F014         	goto	u7570
  6013  00283C                     u7571:
  6014  00283C  EF04  F014         	goto	l10180
  6015  002840                     u7570:
  6016  002840  0E00               	movlw	0
  6017  002842  6E38               	movwf	___fldiv@aexp^0,c
  6018  002844  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  6019  002846  EF27  F014         	goto	u7581
  6020  00284A  EF29  F014         	goto	u7580
  6021  00284E                     u7581:
  6022  00284E  EF4D  F014         	goto	l1413
  6023  002852                     u7580:
  6024  002852  0EFF               	movlw	255
  6025  002854  1433               	andwf	___fldiv@grs^0,w,c
  6026  002856  6E28               	movwf	??___fldiv^0,c
  6027  002858  0EFF               	movlw	255
  6028  00285A  1434               	andwf	(___fldiv@grs+1)^0,w,c
  6029  00285C  6E29               	movwf	(??___fldiv+1)^0,c
  6030  00285E  0EFF               	movlw	255
  6031  002860  1435               	andwf	(___fldiv@grs+2)^0,w,c
  6032  002862  6E2A               	movwf	(??___fldiv+2)^0,c
  6033  002864  0E7F               	movlw	127
  6034  002866  1436               	andwf	(___fldiv@grs+3)^0,w,c
  6035  002868  6E2B               	movwf	(??___fldiv+3)^0,c
  6036  00286A  5028               	movf	??___fldiv^0,w,c
  6037  00286C  1029               	iorwf	(??___fldiv+1)^0,w,c
  6038  00286E  102A               	iorwf	(??___fldiv+2)^0,w,c
  6039  002870  102B               	iorwf	(??___fldiv+3)^0,w,c
  6040  002872  B4D8               	btfsc	status,2,c
  6041  002874  EF3E  F014         	goto	u7591
  6042  002878  EF40  F014         	goto	u7590
  6043  00287C                     u7591:
  6044  00287C  EF44  F014         	goto	l1414
  6045  002880                     u7590:
  6046  002880                     l10194:
  6047  002880  0E01               	movlw	1
  6048  002882  6E38               	movwf	___fldiv@aexp^0,c
  6049  002884  EF4D  F014         	goto	l1413
  6050  002888                     l1414:
  6051  002888  A020               	btfss	___fldiv@b^0,0,c
  6052  00288A  EF49  F014         	goto	u7601
  6053  00288E  EF4B  F014         	goto	u7600
  6054  002892                     u7601:
  6055  002892  EF4D  F014         	goto	l1413
  6056  002896                     u7600:
  6057  002896  EF40  F014         	goto	l10194
  6058  00289A                     l1413:
  6059  00289A  5038               	movf	___fldiv@aexp^0,w,c
  6060  00289C  B4D8               	btfsc	status,2,c
  6061  00289E  EF53  F014         	goto	u7611
  6062  0028A2  EF55  F014         	goto	u7610
  6063  0028A6                     u7611:
  6064  0028A6  EF79  F014         	goto	l10206
  6065  0028AA                     u7610:
  6066  0028AA  0E01               	movlw	1
  6067  0028AC  2620               	addwf	___fldiv@b^0,f,c
  6068  0028AE  0E00               	movlw	0
  6069  0028B0  2221               	addwfc	(___fldiv@b+1)^0,f,c
  6070  0028B2  2222               	addwfc	(___fldiv@b+2)^0,f,c
  6071  0028B4  2223               	addwfc	(___fldiv@b+3)^0,f,c
  6072  0028B6  A023               	btfss	(___fldiv@b+3)^0,0,c
  6073  0028B8  EF60  F014         	goto	u7621
  6074  0028BC  EF62  F014         	goto	u7620
  6075  0028C0                     u7621:
  6076  0028C0  EF79  F014         	goto	l10206
  6077  0028C4                     u7620:
  6078  0028C4  C020  F028         	movff	___fldiv@b,??___fldiv
  6079  0028C8  C021  F029         	movff	___fldiv@b+1,??___fldiv+1
  6080  0028CC  C022  F02A         	movff	___fldiv@b+2,??___fldiv+2
  6081  0028D0  C023  F02B         	movff	___fldiv@b+3,??___fldiv+3
  6082  0028D4  342B               	rlcf	(??___fldiv+3)^0,w,c
  6083  0028D6  322B               	rrcf	(??___fldiv+3)^0,f,c
  6084  0028D8  322A               	rrcf	(??___fldiv+2)^0,f,c
  6085  0028DA  3229               	rrcf	(??___fldiv+1)^0,f,c
  6086  0028DC  3228               	rrcf	??___fldiv^0,f,c
  6087  0028DE  C028  F020         	movff	??___fldiv,___fldiv@b
  6088  0028E2  C029  F021         	movff	??___fldiv+1,___fldiv@b+1
  6089  0028E6  C02A  F022         	movff	??___fldiv+2,___fldiv@b+2
  6090  0028EA  C02B  F023         	movff	??___fldiv+3,___fldiv@b+3
  6091  0028EE  4A31               	infsnz	___fldiv@new_exp^0,f,c
  6092  0028F0  2A32               	incf	(___fldiv@new_exp+1)^0,f,c
  6093  0028F2                     l10206:
  6094  0028F2  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6095  0028F4  EF84  F014         	goto	u7631
  6096  0028F8  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  6097  0028FA  E108               	bnz	u7630
  6098  0028FC  2831               	incf	___fldiv@new_exp^0,w,c
  6099  0028FE  A0D8               	btfss	status,0,c
  6100  002900  EF84  F014         	goto	u7631
  6101  002904  EF86  F014         	goto	u7630
  6102  002908                     u7631:
  6103  002908  EF91  F014         	goto	l10210
  6104  00290C                     u7630:
  6105  00290C  0E00               	movlw	0
  6106  00290E  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  6107  002910  6831               	setf	___fldiv@new_exp^0,c
  6108  002912  0E00               	movlw	0
  6109  002914  6E20               	movwf	___fldiv@b^0,c
  6110  002916  0E00               	movlw	0
  6111  002918  6E21               	movwf	(___fldiv@b+1)^0,c
  6112  00291A  0E00               	movlw	0
  6113  00291C  6E22               	movwf	(___fldiv@b+2)^0,c
  6114  00291E  0E00               	movlw	0
  6115  002920  6E23               	movwf	(___fldiv@b+3)^0,c
  6116  002922                     l10210:
  6117  002922  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6118  002924  EF9E  F014         	goto	u7640
  6119  002928  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  6120  00292A  E106               	bnz	u7641
  6121  00292C  0431               	decf	___fldiv@new_exp^0,w,c
  6122  00292E  B0D8               	btfsc	status,0,c
  6123  002930  EF9C  F014         	goto	u7641
  6124  002934  EF9E  F014         	goto	u7640
  6125  002938                     u7641:
  6126  002938  EFAC  F014         	goto	l10214
  6127  00293C                     u7640:
  6128  00293C  0E00               	movlw	0
  6129  00293E  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  6130  002940  0E00               	movlw	0
  6131  002942  6E31               	movwf	___fldiv@new_exp^0,c
  6132  002944  0E00               	movlw	0
  6133  002946  6E20               	movwf	___fldiv@b^0,c
  6134  002948  0E00               	movlw	0
  6135  00294A  6E21               	movwf	(___fldiv@b+1)^0,c
  6136  00294C  0E00               	movlw	0
  6137  00294E  6E22               	movwf	(___fldiv@b+2)^0,c
  6138  002950  0E00               	movlw	0
  6139  002952  6E23               	movwf	(___fldiv@b+3)^0,c
  6140  002954  0E00               	movlw	0
  6141  002956  6E30               	movwf	___fldiv@sign^0,c
  6142  002958                     l10214:
  6143  002958  C031  F037         	movff	___fldiv@new_exp,___fldiv@bexp
  6144  00295C  A037               	btfss	___fldiv@bexp^0,0,c
  6145  00295E  EFB3  F014         	goto	u7651
  6146  002962  EFB5  F014         	goto	u7650
  6147  002966                     u7651:
  6148  002966  EFB8  F014         	goto	l10220
  6149  00296A                     u7650:
  6150  00296A  8E22               	bsf	(___fldiv@b+2)^0,7,c
  6151  00296C  EFB9  F014         	goto	l10222
  6152  002970                     l10220:
  6153  002970  9E22               	bcf	(___fldiv@b+2)^0,7,c
  6154  002972                     l10222:
  6155  002972  90D8               	bcf	status,0,c
  6156  002974  3037               	rrcf	___fldiv@bexp^0,w,c
  6157  002976  6E23               	movwf	(___fldiv@b+3)^0,c
  6158  002978  EF6F  F013         	goto	l10136
  6159  00297C                     l1400:
  6160  00297C  0012               	return		;funcret
  6161  00297E                     __end_of___fldiv:
  6162                           	callstack 0
  6163                           
  6164 ;; *************** function _XF_scheduleTimer *****************
  6165 ;; Defined at:
  6166 ;;		line 96 in file "xf/xf.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  tm              2   18[COMRAM] unsigned short 
  6169 ;;  ev              1   20[COMRAM] unsigned char 
  6170 ;;  inISR           1   21[COMRAM] _Bool 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;  i               1   22[COMRAM] unsigned char 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  1    wreg      unsigned char 
  6175 ;; Registers used:
  6176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6182 ;;      Params:         4       0       0       0       0       0       0
  6183 ;;      Locals:         1       0       0       0       0       0       0
  6184 ;;      Temps:          0       0       0       0       0       0       0
  6185 ;;      Totals:         5       0       0       0       0       0       0
  6186 ;;Total ram usage:        5 bytes
  6187 ;; Hardware stack levels used: 1
  6188 ;; Hardware stack levels required when called: 5
  6189 ;; This function calls:
  6190 ;;		_ENTERCRITICAL
  6191 ;;		_LEAVECRITICAL
  6192 ;; This function is called by:
  6193 ;;		_touchScreenController
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           	psect	text17
  6198  005C64                     __ptext17:
  6199                           	callstack 0
  6200  005C64                     _XF_scheduleTimer:
  6201                           	callstack 22
  6202  005C64                     
  6203                           ;xf/xf.c: 96: TimerID XF_scheduleTimer(Time tm, Event ev, _Bool inISR);xf/xf.c: 97: {;xf
      +                          /xf.c: 98:     uint8_t i;;xf/xf.c: 100:     ENTERCRITICAL(inISR);
  6204  005C64  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  6205  005C66  EC17  F032         	call	_ENTERCRITICAL
  6206  005C6A                     
  6207                           ;xf/xf.c: 101:     for (i=0; i<8; i++)
  6208  005C6A  0E00               	movlw	0
  6209  005C6C  6E17               	movwf	XF_scheduleTimer@i^0,c
  6210  005C6E                     l9998:
  6211                           
  6212                           ;xf/xf.c: 102:     {;xf/xf.c: 103:         if (theXF.timerList[i].ev == NULLEVENT)
  6213  005C6E  5017               	movf	XF_scheduleTimer@i^0,w,c
  6214  005C70  0D03               	mullw	3
  6215  005C72  0EB7               	movlw	low (_theXF+2)
  6216  005C74  24F3               	addwf	243,w,c
  6217  005C76  6ED9               	movwf	fsr2l,c
  6218  005C78  0E00               	movlw	high (_theXF+2)
  6219  005C7A  20F4               	addwfc	prodh,w,c
  6220  005C7C  6EDA               	movwf	fsr2h,c
  6221  005C7E  50DF               	movf	indf2,w,c
  6222  005C80  A4D8               	btfss	status,2,c
  6223  005C82  EF45  F02E         	goto	u7281
  6224  005C86  EF47  F02E         	goto	u7280
  6225  005C8A                     u7281:
  6226  005C8A  EF5F  F02E         	goto	l10002
  6227  005C8E                     u7280:
  6228  005C8E                     
  6229                           ;xf/xf.c: 104:         {;xf/xf.c: 105:             theXF.timerList[i].tm = tm;
  6230  005C8E  5017               	movf	XF_scheduleTimer@i^0,w,c
  6231  005C90  0D03               	mullw	3
  6232  005C92  0EB5               	movlw	low _theXF
  6233  005C94  24F3               	addwf	243,w,c
  6234  005C96  6ED9               	movwf	fsr2l,c
  6235  005C98  0E00               	movlw	high _theXF
  6236  005C9A  20F4               	addwfc	prodh,w,c
  6237  005C9C  6EDA               	movwf	fsr2h,c
  6238  005C9E  C013  FFDE         	movff	XF_scheduleTimer@tm,postinc2
  6239  005CA2  C014  FFDD         	movff	XF_scheduleTimer@tm+1,postdec2
  6240                           
  6241                           ;xf/xf.c: 106:             theXF.timerList[i].ev = ev;
  6242  005CA6  5017               	movf	XF_scheduleTimer@i^0,w,c
  6243  005CA8  0D03               	mullw	3
  6244  005CAA  0EB7               	movlw	low (_theXF+2)
  6245  005CAC  24F3               	addwf	243,w,c
  6246  005CAE  6ED9               	movwf	fsr2l,c
  6247  005CB0  0E00               	movlw	high (_theXF+2)
  6248  005CB2  20F4               	addwfc	prodh,w,c
  6249  005CB4  6EDA               	movwf	fsr2h,c
  6250  005CB6  C015  FFDF         	movff	XF_scheduleTimer@ev,indf2
  6251                           
  6252                           ;xf/xf.c: 107:             break;
  6253  005CBA  EF68  F02E         	goto	l10006
  6254  005CBE                     l10002:
  6255                           
  6256                           ;xf/xf.c: 109:     }
  6257  005CBE  2A17               	incf	XF_scheduleTimer@i^0,f,c
  6258  005CC0  0E07               	movlw	7
  6259  005CC2  6417               	cpfsgt	XF_scheduleTimer@i^0,c
  6260  005CC4  EF66  F02E         	goto	u7291
  6261  005CC8  EF68  F02E         	goto	u7290
  6262  005CCC                     u7291:
  6263  005CCC  EF37  F02E         	goto	l9998
  6264  005CD0                     u7290:
  6265  005CD0                     l10006:
  6266                           
  6267                           ;xf/xf.c: 114:     LEAVECRITICAL(inISR);
  6268  005CD0  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  6269  005CD2  EC0C  F032         	call	_LEAVECRITICAL
  6270  005CD6  0012               	return		;funcret
  6271  005CD8                     __end_of_XF_scheduleTimer:
  6272                           	callstack 0
  6273                           
  6274 ;; *************** function _GameParameters_setY *****************
  6275 ;; Defined at:
  6276 ;;		line 52 in file "class/gameParameters.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  s               2   17[COMRAM] PTR struct GameParameter
  6279 ;;		 -> g1(239), 
  6280 ;;  value           2   19[COMRAM] unsigned short 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;		None
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  1    wreg      void 
  6285 ;; Registers used:
  6286 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6292 ;;      Params:         4       0       0       0       0       0       0
  6293 ;;      Locals:         0       0       0       0       0       0       0
  6294 ;;      Temps:          0       0       0       0       0       0       0
  6295 ;;      Totals:         4       0       0       0       0       0       0
  6296 ;;Total ram usage:        4 bytes
  6297 ;; Hardware stack levels used: 1
  6298 ;; Hardware stack levels required when called: 4
  6299 ;; This function calls:
  6300 ;;		Nothing
  6301 ;; This function is called by:
  6302 ;;		_touchScreenController
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text18
  6307  0063EC                     __ptext18:
  6308                           	callstack 0
  6309  0063EC                     _GameParameters_setY:
  6310                           	callstack 23
  6311  0063EC                     
  6312                           ;class/gameParameters.c: 52: void GameParameters_setY(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 53: {;class/gameParameters.c: 54:     s->y=value;
  6313  0063EC  EE20 F006          	lfsr	2,6
  6314  0063F0  5012               	movf	GameParameters_setY@s^0,w,c
  6315  0063F2  26D9               	addwf	fsr2l,f,c
  6316  0063F4  5013               	movf	(GameParameters_setY@s+1)^0,w,c
  6317  0063F6  22DA               	addwfc	fsr2h,f,c
  6318  0063F8  C014  FFDE         	movff	GameParameters_setY@value,postinc2
  6319  0063FC  C015  FFDD         	movff	GameParameters_setY@value+1,postdec2
  6320  006400  0012               	return		;funcret
  6321  006402                     __end_of_GameParameters_setY:
  6322                           	callstack 0
  6323                           
  6324 ;; *************** function _GameParameters_setX *****************
  6325 ;; Defined at:
  6326 ;;		line 48 in file "class/gameParameters.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  s               2   17[COMRAM] PTR struct GameParameter
  6329 ;;		 -> g1(239), 
  6330 ;;  value           2   19[COMRAM] unsigned short 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;		None
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  1    wreg      void 
  6335 ;; Registers used:
  6336 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6342 ;;      Params:         4       0       0       0       0       0       0
  6343 ;;      Locals:         0       0       0       0       0       0       0
  6344 ;;      Temps:          0       0       0       0       0       0       0
  6345 ;;      Totals:         4       0       0       0       0       0       0
  6346 ;;Total ram usage:        4 bytes
  6347 ;; Hardware stack levels used: 1
  6348 ;; Hardware stack levels required when called: 4
  6349 ;; This function calls:
  6350 ;;		Nothing
  6351 ;; This function is called by:
  6352 ;;		_touchScreenController
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text19
  6357  006402                     __ptext19:
  6358                           	callstack 0
  6359  006402                     _GameParameters_setX:
  6360                           	callstack 23
  6361  006402                     
  6362                           ;class/gameParameters.c: 48: void GameParameters_setX(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 49: {;class/gameParameters.c: 50:     s->x=value;
  6363  006402  EE20 F004          	lfsr	2,4
  6364  006406  5012               	movf	GameParameters_setX@s^0,w,c
  6365  006408  26D9               	addwf	fsr2l,f,c
  6366  00640A  5013               	movf	(GameParameters_setX@s+1)^0,w,c
  6367  00640C  22DA               	addwfc	fsr2h,f,c
  6368  00640E  C014  FFDE         	movff	GameParameters_setX@value,postinc2
  6369  006412  C015  FFDD         	movff	GameParameters_setX@value+1,postdec2
  6370  006416  0012               	return		;funcret
  6371  006418                     __end_of_GameParameters_setX:
  6372                           	callstack 0
  6373                           
  6374 ;; *************** function _sleepSM *****************
  6375 ;; Defined at:
  6376 ;;		line 19 in file "stateMachine/sleepSM.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  ev              1    wreg     unsigned char 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  ev              1   21[COMRAM] unsigned char 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      void 
  6383 ;; Registers used:
  6384 ;;		wreg, status,2, status,0, cstack
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6390 ;;      Params:         0       0       0       0       0       0       0
  6391 ;;      Locals:         1       0       0       0       0       0       0
  6392 ;;      Temps:          2       0       0       0       0       0       0
  6393 ;;      Totals:         3       0       0       0       0       0       0
  6394 ;;Total ram usage:        3 bytes
  6395 ;; Hardware stack levels used: 1
  6396 ;; Hardware stack levels required when called: 5
  6397 ;; This function calls:
  6398 ;;		_sleepController
  6399 ;; This function is called by:
  6400 ;;		_Factory_exec
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text20
  6405  00589E                     __ptext20:
  6406                           	callstack 0
  6407  00589E                     _sleepSM:
  6408                           	callstack 24
  6409                           
  6410                           ;incstack = 0
  6411                           ;sleepSM@ev stored from wreg
  6412  00589E  6E16               	movwf	sleepSM@ev^0,c
  6413  0058A0                     
  6414                           ;stateMachine/sleepSM.c: 19: void sleepSM(Event ev);stateMachine/sleepSM.c: 20: {;stateM
      +                          achine/sleepSM.c: 21:    switch(sleepState)
  6415  0058A0  EF85  F02C         	goto	l10492
  6416  0058A4                     l10466:
  6417                           
  6418                           ; BSR set to: 0
  6419                           ;stateMachine/sleepSM.c: 24:             if(ev==evTimer30)
  6420  0058A4  0E03               	movlw	3
  6421  0058A6  1816               	xorwf	sleepSM@ev^0,w,c
  6422  0058A8  A4D8               	btfss	status,2,c
  6423  0058AA  EF59  F02C         	goto	u7911
  6424  0058AE  EF5B  F02C         	goto	u7910
  6425  0058B2                     u7911:
  6426  0058B2  EF9F  F02C         	goto	l426
  6427  0058B6                     u7910:
  6428  0058B6                     
  6429                           ; BSR set to: 0
  6430                           ;stateMachine/sleepSM.c: 25:             {;stateMachine/sleepSM.c: 26:                sl
      +                          eepState=BACKLIGHTOFF;
  6431  0058B6  0E01               	movlw	1
  6432  0058B8  6FDF               	movwf	_sleepState& (0+255),b
  6433  0058BA                     l10470:
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;stateMachine/sleepSM.c: 27:                sleepController();
  6437  0058BA  EC27  F031         	call	_sleepController	;wreg free
  6438  0058BE  EF9F  F02C         	goto	l426
  6439  0058C2                     l10472:
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;stateMachine/sleepSM.c: 31:             if(ev==evTimer30)
  6443  0058C2  0E03               	movlw	3
  6444  0058C4  1816               	xorwf	sleepSM@ev^0,w,c
  6445  0058C6  A4D8               	btfss	status,2,c
  6446  0058C8  EF68  F02C         	goto	u7921
  6447  0058CC  EF6A  F02C         	goto	u7920
  6448  0058D0                     u7921:
  6449  0058D0  EF6E  F02C         	goto	l10478
  6450  0058D4                     u7920:
  6451  0058D4                     
  6452                           ; BSR set to: 0
  6453                           ;stateMachine/sleepSM.c: 32:             {;stateMachine/sleepSM.c: 33:                sl
      +                          eepState=SLEEP;
  6454  0058D4  0E02               	movlw	2
  6455  0058D6  6FDF               	movwf	_sleepState& (0+255),b
  6456  0058D8                     
  6457                           ; BSR set to: 0
  6458                           ;stateMachine/sleepSM.c: 34:                sleepController();
  6459  0058D8  EC27  F031         	call	_sleepController	;wreg free
  6460  0058DC                     l10478:
  6461                           
  6462                           ;stateMachine/sleepSM.c: 36:             if(ev==evPress)
  6463  0058DC  0416               	decf	sleepSM@ev^0,w,c
  6464  0058DE  A4D8               	btfss	status,2,c
  6465  0058E0  EF74  F02C         	goto	u7931
  6466  0058E4  EF76  F02C         	goto	u7930
  6467  0058E8                     u7931:
  6468  0058E8  EF9F  F02C         	goto	l426
  6469  0058EC                     u7930:
  6470  0058EC                     l10480:
  6471                           
  6472                           ;stateMachine/sleepSM.c: 37:             {;stateMachine/sleepSM.c: 38:                sl
      +                          eepState=WAKEUP;
  6473  0058EC  0E00               	movlw	0
  6474  0058EE  0100               	movlb	0	; () banked
  6475  0058F0  6FDF               	movwf	_sleepState& (0+255),b
  6476  0058F2  EF5D  F02C         	goto	l10470
  6477  0058F6                     l10484:
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;stateMachine/sleepSM.c: 43:             if(ev==evPress)
  6481  0058F6  0416               	decf	sleepSM@ev^0,w,c
  6482  0058F8  A4D8               	btfss	status,2,c
  6483  0058FA  EF81  F02C         	goto	u7941
  6484  0058FE  EF83  F02C         	goto	u7940
  6485  005902                     u7941:
  6486  005902  EF9F  F02C         	goto	l426
  6487  005906                     u7940:
  6488  005906  EF76  F02C         	goto	l10480
  6489  00590A                     l10492:
  6490  00590A  0100               	movlb	0	; () banked
  6491  00590C  51DF               	movf	_sleepState& (0+255),w,b
  6492  00590E  6E14               	movwf	??_sleepSM^0,c
  6493  005910  6A15               	clrf	(??_sleepSM+1)^0,c
  6494                           
  6495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6496                           ; Switch size 1, requested type "simple"
  6497                           ; Number of cases is 1, Range of values is 0 to 0
  6498                           ; switch strategies available:
  6499                           ; Name         Instructions Cycles
  6500                           ; simple_byte            4     3 (average)
  6501                           ;	Chosen strategy is simple_byte
  6502  005912  5015               	movf	(??_sleepSM+1)^0,w,c
  6503  005914  0A00               	xorlw	0	; case 0
  6504  005916  B4D8               	btfsc	status,2,c
  6505  005918  EF90  F02C         	goto	l10898
  6506  00591C  EF9F  F02C         	goto	l426
  6507  005920                     l10898:
  6508                           
  6509                           ; BSR set to: 0
  6510                           ; Switch size 1, requested type "simple"
  6511                           ; Number of cases is 3, Range of values is 0 to 2
  6512                           ; switch strategies available:
  6513                           ; Name         Instructions Cycles
  6514                           ; simple_byte           10     6 (average)
  6515                           ;	Chosen strategy is simple_byte
  6516  005920  5014               	movf	??_sleepSM^0,w,c
  6517  005922  0A00               	xorlw	0	; case 0
  6518  005924  B4D8               	btfsc	status,2,c
  6519  005926  EF52  F02C         	goto	l10466
  6520  00592A  0A01               	xorlw	1	; case 1
  6521  00592C  B4D8               	btfsc	status,2,c
  6522  00592E  EF61  F02C         	goto	l10472
  6523  005932  0A03               	xorlw	3	; case 2
  6524  005934  B4D8               	btfsc	status,2,c
  6525  005936  EF7B  F02C         	goto	l10484
  6526  00593A  EF9F  F02C         	goto	l426
  6527  00593E                     l426:
  6528  00593E  0012               	return		;funcret
  6529  005940                     __end_of_sleepSM:
  6530                           	callstack 0
  6531                           
  6532 ;; *************** function _sleepController *****************
  6533 ;; Defined at:
  6534 ;;		line 53 in file "stateMachine/sleepSM.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;		None
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;		None
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  1    wreg      void 
  6541 ;; Registers used:
  6542 ;;		wreg, status,2, status,0
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6548 ;;      Params:         0       0       0       0       0       0       0
  6549 ;;      Locals:         0       0       0       0       0       0       0
  6550 ;;      Temps:          2       0       0       0       0       0       0
  6551 ;;      Totals:         2       0       0       0       0       0       0
  6552 ;;Total ram usage:        2 bytes
  6553 ;; Hardware stack levels used: 1
  6554 ;; Hardware stack levels required when called: 4
  6555 ;; This function calls:
  6556 ;;		Nothing
  6557 ;; This function is called by:
  6558 ;;		_sleepInit
  6559 ;;		_sleepSM
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           	psect	text21
  6564  00624E                     __ptext21:
  6565                           	callstack 0
  6566  00624E                     _sleepController:
  6567                           	callstack 24
  6568  00624E  0100               	movlb	0	; () banked
  6569  006250  51DF               	movf	_sleepState& (0+255),w,b
  6570  006252  6E12               	movwf	??_sleepController^0,c
  6571  006254  6A13               	clrf	(??_sleepController+1)^0,c
  6572                           
  6573                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6574                           ; Switch size 1, requested type "simple"
  6575                           ; Number of cases is 1, Range of values is 0 to 0
  6576                           ; switch strategies available:
  6577                           ; Name         Instructions Cycles
  6578                           ; simple_byte            4     3 (average)
  6579                           ;	Chosen strategy is simple_byte
  6580  006256  5013               	movf	(??_sleepController+1)^0,w,c
  6581  006258  0A00               	xorlw	0	; case 0
  6582  00625A  B4D8               	btfsc	status,2,c
  6583  00625C  EF32  F031         	goto	l10900
  6584  006260  EF41  F031         	goto	l435
  6585  006264                     l10900:
  6586                           
  6587                           ; BSR set to: 0
  6588                           ; Switch size 1, requested type "simple"
  6589                           ; Number of cases is 3, Range of values is 0 to 2
  6590                           ; switch strategies available:
  6591                           ; Name         Instructions Cycles
  6592                           ; simple_byte           10     6 (average)
  6593                           ;	Chosen strategy is simple_byte
  6594  006264  5012               	movf	??_sleepController^0,w,c
  6595  006266  0A00               	xorlw	0	; case 0
  6596  006268  B4D8               	btfsc	status,2,c
  6597  00626A  EF41  F031         	goto	l435
  6598  00626E  0A01               	xorlw	1	; case 1
  6599  006270  B4D8               	btfsc	status,2,c
  6600  006272  EF41  F031         	goto	l435
  6601  006276  0A03               	xorlw	3	; case 2
  6602  006278  B4D8               	btfsc	status,2,c
  6603  00627A  EF41  F031         	goto	l435
  6604  00627E  EF41  F031         	goto	l435
  6605  006282                     l435:
  6606                           
  6607                           ; BSR set to: 0
  6608  006282  0012               	return		;funcret
  6609  006284                     __end_of_sleepController:
  6610                           	callstack 0
  6611                           
  6612 ;; *************** function _gameControllerSM *****************
  6613 ;; Defined at:
  6614 ;;		line 17 in file "stateMachine/gameController.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;  ev              1    wreg     unsigned char 
  6617 ;;  g               2   59[COMRAM] PTR struct GameParameter
  6618 ;;		 -> g1(239), 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;  ev              1   63[COMRAM] unsigned char 
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  1    wreg      void 
  6623 ;; Registers used:
  6624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6630 ;;      Params:         2       0       0       0       0       0       0
  6631 ;;      Locals:         1       0       0       0       0       0       0
  6632 ;;      Temps:          2       0       0       0       0       0       0
  6633 ;;      Totals:         5       0       0       0       0       0       0
  6634 ;;Total ram usage:        5 bytes
  6635 ;; Hardware stack levels used: 1
  6636 ;; Hardware stack levels required when called: 9
  6637 ;; This function calls:
  6638 ;;		_gameControllerController
  6639 ;; This function is called by:
  6640 ;;		_Factory_exec
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text22
  6645  00509E                     __ptext22:
  6646                           	callstack 0
  6647  00509E                     _gameControllerSM:
  6648                           	callstack 20
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;incstack = 0
  6652                           ;gameControllerSM@ev stored from wreg
  6653  00509E  6E40               	movwf	gameControllerSM@ev^0,c
  6654  0050A0                     
  6655                           ;stateMachine/gameController.c: 17: void gameControllerSM(Event ev,GameParameters* g);st
      +                          ateMachine/gameController.c: 18: {;stateMachine/gameController.c: 19:    switch(gameCont
      +                          rollerState)
  6656  0050A0  EF91  F028         	goto	l10600
  6657  0050A4                     l10574:
  6658                           
  6659                           ;stateMachine/gameController.c: 22:             gameControllerController(g,NULLEVENT);
  6660  0050A4  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  6661  0050A8  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  6662  0050AC  0E00               	movlw	0
  6663  0050AE  6E39               	movwf	gameControllerController@ev^0,c
  6664  0050B0  ECBF  F014         	call	_gameControllerController	;wreg free
  6665  0050B4                     
  6666                           ;stateMachine/gameController.c: 23:             if(ev==evParameters)
  6667  0050B4  0E07               	movlw	7
  6668  0050B6  1840               	xorwf	gameControllerSM@ev^0,w,c
  6669  0050B8  A4D8               	btfss	status,2,c
  6670  0050BA  EF61  F028         	goto	u8041
  6671  0050BE  EF63  F028         	goto	u8040
  6672  0050C2                     u8041:
  6673  0050C2  EF65  F028         	goto	l10580
  6674  0050C6                     u8040:
  6675  0050C6                     
  6676                           ;stateMachine/gameController.c: 24:             {;stateMachine/gameController.c: 25:    
      +                                       gameControllerState=PARAMETERS;
  6677  0050C6  0E01               	movlw	1
  6678  0050C8  6E4D               	movwf	_gameControllerState^0,c
  6679  0050CA                     l10580:
  6680                           
  6681                           ;stateMachine/gameController.c: 27:             if(ev==evOnePlayer)
  6682  0050CA  0E05               	movlw	5
  6683  0050CC  1840               	xorwf	gameControllerSM@ev^0,w,c
  6684  0050CE  A4D8               	btfss	status,2,c
  6685  0050D0  EF6C  F028         	goto	u8051
  6686  0050D4  EF6E  F028         	goto	u8050
  6687  0050D8                     u8051:
  6688  0050D8  EFB2  F028         	goto	l633
  6689  0050DC                     u8050:
  6690  0050DC                     
  6691                           ;stateMachine/gameController.c: 28:             {;stateMachine/gameController.c: 29:    
      +                                       gameControllerState=LOCAL;
  6692  0050DC  0E02               	movlw	2
  6693  0050DE  6E4D               	movwf	_gameControllerState^0,c
  6694  0050E0  EFB2  F028         	goto	l633
  6695  0050E4                     l10588:
  6696                           
  6697                           ;stateMachine/gameController.c: 37:             gameControllerController(g,NULLEVENT);
  6698  0050E4  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  6699  0050E8  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  6700  0050EC  0E00               	movlw	0
  6701  0050EE  6E39               	movwf	gameControllerController@ev^0,c
  6702  0050F0  ECBF  F014         	call	_gameControllerController	;wreg free
  6703  0050F4                     
  6704                           ;stateMachine/gameController.c: 38:             if(ev==evLeaveParam)
  6705  0050F4  0E08               	movlw	8
  6706  0050F6  1840               	xorwf	gameControllerSM@ev^0,w,c
  6707  0050F8  A4D8               	btfss	status,2,c
  6708  0050FA  EF81  F028         	goto	u8061
  6709  0050FE  EF83  F028         	goto	u8060
  6710  005102                     u8061:
  6711  005102  EFB2  F028         	goto	l633
  6712  005106                     u8060:
  6713  005106                     
  6714                           ;stateMachine/gameController.c: 39:             {;stateMachine/gameController.c: 40:    
      +                                       gameControllerState=NOGAME;
  6715  005106  0E00               	movlw	0
  6716  005108  6E4D               	movwf	_gameControllerState^0,c
  6717  00510A  EFB2  F028         	goto	l633
  6718  00510E                     l10594:
  6719                           
  6720                           ;stateMachine/gameController.c: 44:             gameControllerController(g,ev);
  6721  00510E  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  6722  005112  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  6723  005116  C040  F039         	movff	gameControllerSM@ev,gameControllerController@ev
  6724  00511A  ECBF  F014         	call	_gameControllerController	;wreg free
  6725                           
  6726                           ;stateMachine/gameController.c: 45:             break;
  6727  00511E  EFB2  F028         	goto	l633
  6728  005122                     l10600:
  6729  005122  504D               	movf	_gameControllerState^0,w,c
  6730  005124  6E3E               	movwf	??_gameControllerSM^0,c
  6731  005126  6A3F               	clrf	(??_gameControllerSM+1)^0,c
  6732                           
  6733                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6734                           ; Switch size 1, requested type "simple"
  6735                           ; Number of cases is 1, Range of values is 0 to 0
  6736                           ; switch strategies available:
  6737                           ; Name         Instructions Cycles
  6738                           ; simple_byte            4     3 (average)
  6739                           ;	Chosen strategy is simple_byte
  6740  005128  503F               	movf	(??_gameControllerSM+1)^0,w,c
  6741  00512A  0A00               	xorlw	0	; case 0
  6742  00512C  B4D8               	btfsc	status,2,c
  6743  00512E  EF9B  F028         	goto	l10902
  6744  005132  EFB2  F028         	goto	l633
  6745  005136                     l10902:
  6746                           
  6747                           ; Switch size 1, requested type "simple"
  6748                           ; Number of cases is 5, Range of values is 0 to 4
  6749                           ; switch strategies available:
  6750                           ; Name         Instructions Cycles
  6751                           ; simple_byte           16     9 (average)
  6752                           ;	Chosen strategy is simple_byte
  6753  005136  503E               	movf	??_gameControllerSM^0,w,c
  6754  005138  0A00               	xorlw	0	; case 0
  6755  00513A  B4D8               	btfsc	status,2,c
  6756  00513C  EF52  F028         	goto	l10574
  6757  005140  0A01               	xorlw	1	; case 1
  6758  005142  B4D8               	btfsc	status,2,c
  6759  005144  EF72  F028         	goto	l10588
  6760  005148  0A03               	xorlw	3	; case 2
  6761  00514A  B4D8               	btfsc	status,2,c
  6762  00514C  EF87  F028         	goto	l10594
  6763  005150  0A01               	xorlw	1	; case 3
  6764  005152  B4D8               	btfsc	status,2,c
  6765  005154  EFB2  F028         	goto	l633
  6766  005158  0A07               	xorlw	7	; case 4
  6767  00515A  B4D8               	btfsc	status,2,c
  6768  00515C  EF87  F028         	goto	l10594
  6769  005160  EFB2  F028         	goto	l633
  6770  005164                     l633:
  6771  005164  0012               	return		;funcret
  6772  005166                     __end_of_gameControllerSM:
  6773                           	callstack 0
  6774                           
  6775 ;; *************** function _gameControllerController *****************
  6776 ;; Defined at:
  6777 ;;		line 56 in file "stateMachine/gameController.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;  g               2   54[COMRAM] PTR struct GameParameter
  6780 ;;		 -> g1(239), 
  6781 ;;  ev              1   56[COMRAM] unsigned char 
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;		None
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  1    wreg      void 
  6786 ;; Registers used:
  6787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6793 ;;      Params:         3       0       0       0       0       0       0
  6794 ;;      Locals:         0       0       0       0       0       0       0
  6795 ;;      Temps:          2       0       0       0       0       0       0
  6796 ;;      Totals:         5       0       0       0       0       0       0
  6797 ;;Total ram usage:        5 bytes
  6798 ;; Hardware stack levels used: 1
  6799 ;; Hardware stack levels required when called: 8
  6800 ;; This function calls:
  6801 ;;		_GameParameters_init
  6802 ;;		_GameParameters_resetPos
  6803 ;;		_LCD_InButton
  6804 ;;		_LCD_InSlider
  6805 ;;		_LCD_SliderUpdate
  6806 ;;		_XF_pushEvent
  6807 ;;		_backlightController
  6808 ;;		_mooveBall
  6809 ;;		_moovePaddle
  6810 ;; This function is called by:
  6811 ;;		_gameControllerInit
  6812 ;;		_gameControllerSM
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text23
  6817  00297E                     __ptext23:
  6818                           	callstack 0
  6819  00297E                     _gameControllerController:
  6820                           	callstack 19
  6821  00297E                     
  6822                           ;stateMachine/gameController.c: 56: void gameControllerController(GameParameters* g,Even
      +                          t ev);stateMachine/gameController.c: 57: {;stateMachine/gameController.c: 58:     switch
      +                          (gameControllerState)
  6823  00297E  EF47  F016         	goto	l10086
  6824  002982                     l10044:
  6825                           
  6826                           ;stateMachine/gameController.c: 61:             if(LCD_InButton(&(g->btnParam),g->x,g->y
      +                          ))
  6827  002982  0E08               	movlw	8
  6828  002984  2437               	addwf	gameControllerController@g^0,w,c
  6829  002986  6E12               	movwf	LCD_InButton@button^0,c
  6830  002988  0E00               	movlw	0
  6831  00298A  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6832  00298C  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6833  00298E  EE20 F004          	lfsr	2,4
  6834  002992  5037               	movf	gameControllerController@g^0,w,c
  6835  002994  26D9               	addwf	fsr2l,f,c
  6836  002996  5038               	movf	(gameControllerController@g+1)^0,w,c
  6837  002998  22DA               	addwfc	fsr2h,f,c
  6838  00299A  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6839  00299E  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6840  0029A2  EE20 F006          	lfsr	2,6
  6841  0029A6  5037               	movf	gameControllerController@g^0,w,c
  6842  0029A8  26D9               	addwf	fsr2l,f,c
  6843  0029AA  5038               	movf	(gameControllerController@g+1)^0,w,c
  6844  0029AC  22DA               	addwfc	fsr2h,f,c
  6845  0029AE  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6846  0029B2  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6847  0029B6  EC36  F026         	call	_LCD_InButton	;wreg free
  6848  0029BA  0900               	iorlw	0
  6849  0029BC  B4D8               	btfsc	status,2,c
  6850  0029BE  EFE3  F014         	goto	u7341
  6851  0029C2  EFE5  F014         	goto	u7340
  6852  0029C6                     u7341:
  6853  0029C6  EFF0  F014         	goto	l638
  6854  0029CA                     u7340:
  6855  0029CA                     
  6856                           ;stateMachine/gameController.c: 62:             {;stateMachine/gameController.c: 63:    
      +                                       XF_pushEvent(evParameters,0);
  6857  0029CA  0E00               	movlw	0
  6858  0029CC  6E18               	movwf	XF_pushEvent@inISR^0,c
  6859  0029CE  0E07               	movlw	7
  6860  0029D0  ECE0  F02E         	call	_XF_pushEvent
  6861                           
  6862                           ;stateMachine/gameController.c: 64:                 GameParameters_resetPos(g);;
  6863  0029D4  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6864  0029D8  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6865  0029DC  EC5B  F031         	call	_GameParameters_resetPos	;wreg free
  6866  0029E0                     l638:
  6867                           
  6868                           ;stateMachine/gameController.c: 66:             if(LCD_InButton(&(g->btnOnePlayer),g->x,
      +                          g->y))
  6869  0029E0  0E20               	movlw	32
  6870  0029E2  2437               	addwf	gameControllerController@g^0,w,c
  6871  0029E4  6E12               	movwf	LCD_InButton@button^0,c
  6872  0029E6  0E00               	movlw	0
  6873  0029E8  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6874  0029EA  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6875  0029EC  EE20 F004          	lfsr	2,4
  6876  0029F0  5037               	movf	gameControllerController@g^0,w,c
  6877  0029F2  26D9               	addwf	fsr2l,f,c
  6878  0029F4  5038               	movf	(gameControllerController@g+1)^0,w,c
  6879  0029F6  22DA               	addwfc	fsr2h,f,c
  6880  0029F8  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6881  0029FC  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6882  002A00  EE20 F006          	lfsr	2,6
  6883  002A04  5037               	movf	gameControllerController@g^0,w,c
  6884  002A06  26D9               	addwf	fsr2l,f,c
  6885  002A08  5038               	movf	(gameControllerController@g+1)^0,w,c
  6886  002A0A  22DA               	addwfc	fsr2h,f,c
  6887  002A0C  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6888  002A10  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6889  002A14  EC36  F026         	call	_LCD_InButton	;wreg free
  6890  002A18  0900               	iorlw	0
  6891  002A1A  B4D8               	btfsc	status,2,c
  6892  002A1C  EF12  F015         	goto	u7351
  6893  002A20  EF14  F015         	goto	u7350
  6894  002A24                     u7351:
  6895  002A24  EF1F  F015         	goto	l639
  6896  002A28                     u7350:
  6897  002A28                     
  6898                           ;stateMachine/gameController.c: 67:             {;stateMachine/gameController.c: 68:    
      +                                       XF_pushEvent(evOnePlayer,0);
  6899  002A28  0E00               	movlw	0
  6900  002A2A  6E18               	movwf	XF_pushEvent@inISR^0,c
  6901  002A2C  0E05               	movlw	5
  6902  002A2E  ECE0  F02E         	call	_XF_pushEvent
  6903                           
  6904                           ;stateMachine/gameController.c: 69:                 GameParameters_resetPos(g);;
  6905  002A32  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6906  002A36  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6907  002A3A  EC5B  F031         	call	_GameParameters_resetPos	;wreg free
  6908  002A3E                     l639:
  6909                           
  6910                           ;stateMachine/gameController.c: 71:             if(LCD_InButton(&(g->btnTwoPlayer),g->x,
      +                          g->y))
  6911  002A3E  0E38               	movlw	56
  6912  002A40  2437               	addwf	gameControllerController@g^0,w,c
  6913  002A42  6E12               	movwf	LCD_InButton@button^0,c
  6914  002A44  0E00               	movlw	0
  6915  002A46  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6916  002A48  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6917  002A4A  EE20 F004          	lfsr	2,4
  6918  002A4E  5037               	movf	gameControllerController@g^0,w,c
  6919  002A50  26D9               	addwf	fsr2l,f,c
  6920  002A52  5038               	movf	(gameControllerController@g+1)^0,w,c
  6921  002A54  22DA               	addwfc	fsr2h,f,c
  6922  002A56  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6923  002A5A  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6924  002A5E  EE20 F006          	lfsr	2,6
  6925  002A62  5037               	movf	gameControllerController@g^0,w,c
  6926  002A64  26D9               	addwf	fsr2l,f,c
  6927  002A66  5038               	movf	(gameControllerController@g+1)^0,w,c
  6928  002A68  22DA               	addwfc	fsr2h,f,c
  6929  002A6A  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6930  002A6E  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6931  002A72  EC36  F026         	call	_LCD_InButton	;wreg free
  6932  002A76  0900               	iorlw	0
  6933  002A78  B4D8               	btfsc	status,2,c
  6934  002A7A  EF41  F015         	goto	u7361
  6935  002A7E  EF43  F015         	goto	u7360
  6936  002A82                     u7361:
  6937  002A82  EF68  F016         	goto	l655
  6938  002A86                     u7360:
  6939  002A86                     
  6940                           ;stateMachine/gameController.c: 72:             {;stateMachine/gameController.c: 73:    
      +                                       XF_pushEvent(evTwoPlayer,0);
  6941  002A86  0E00               	movlw	0
  6942  002A88  6E18               	movwf	XF_pushEvent@inISR^0,c
  6943  002A8A  0E06               	movlw	6
  6944  002A8C  ECE0  F02E         	call	_XF_pushEvent
  6945                           
  6946                           ;stateMachine/gameController.c: 74:                 GameParameters_resetPos(g);
  6947  002A90  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6948  002A94  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6949  002A98  EC5B  F031         	call	_GameParameters_resetPos	;wreg free
  6950  002A9C  EF68  F016         	goto	l655
  6951  002AA0                     l10052:
  6952                           
  6953                           ;stateMachine/gameController.c: 78:             if(LCD_InSlider(&(g->sldParam),g->x,g->y
      +                          ))
  6954  002AA0  0EB0               	movlw	176
  6955  002AA2  2437               	addwf	gameControllerController@g^0,w,c
  6956  002AA4  6E12               	movwf	LCD_InSlider@slider^0,c
  6957  002AA6  0E00               	movlw	0
  6958  002AA8  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6959  002AAA  6E13               	movwf	(LCD_InSlider@slider+1)^0,c
  6960  002AAC  EE20 F004          	lfsr	2,4
  6961  002AB0  5037               	movf	gameControllerController@g^0,w,c
  6962  002AB2  26D9               	addwf	fsr2l,f,c
  6963  002AB4  5038               	movf	(gameControllerController@g+1)^0,w,c
  6964  002AB6  22DA               	addwfc	fsr2h,f,c
  6965  002AB8  CFDE F014          	movff	postinc2,LCD_InSlider@posX
  6966  002ABC  CFDD F015          	movff	postdec2,LCD_InSlider@posX+1
  6967  002AC0  EE20 F006          	lfsr	2,6
  6968  002AC4  5037               	movf	gameControllerController@g^0,w,c
  6969  002AC6  26D9               	addwf	fsr2l,f,c
  6970  002AC8  5038               	movf	(gameControllerController@g+1)^0,w,c
  6971  002ACA  22DA               	addwfc	fsr2h,f,c
  6972  002ACC  CFDE F016          	movff	postinc2,LCD_InSlider@posY
  6973  002AD0  CFDD F017          	movff	postdec2,LCD_InSlider@posY+1
  6974  002AD4  ECA5  F026         	call	_LCD_InSlider	;wreg free
  6975  002AD8  0900               	iorlw	0
  6976  002ADA  B4D8               	btfsc	status,2,c
  6977  002ADC  EF72  F015         	goto	u7371
  6978  002AE0  EF74  F015         	goto	u7370
  6979  002AE4                     u7371:
  6980  002AE4  EF88  F015         	goto	l10058
  6981  002AE8                     u7370:
  6982  002AE8                     
  6983                           ;stateMachine/gameController.c: 79:             {;stateMachine/gameController.c: 80:    
      +                                       backlightController(g);
  6984  002AE8  C037  F018         	movff	gameControllerController@g,backlightController@g
  6985  002AEC  C038  F019         	movff	gameControllerController@g+1,backlightController@g+1
  6986  002AF0  EC8C  F00C         	call	_backlightController	;wreg free
  6987                           
  6988                           ;stateMachine/gameController.c: 81:                 LCD_SliderUpdate(&(g->sldParam));
  6989  002AF4  0EB0               	movlw	176
  6990  002AF6  2437               	addwf	gameControllerController@g^0,w,c
  6991  002AF8  6E27               	movwf	LCD_SliderUpdate@slider^0,c
  6992  002AFA  0E00               	movlw	0
  6993  002AFC  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6994  002AFE  6E28               	movwf	(LCD_SliderUpdate@slider+1)^0,c
  6995  002B00  EC21  F00A         	call	_LCD_SliderUpdate	;wreg free
  6996  002B04                     
  6997                           ;stateMachine/gameController.c: 82:                 GameParameters_resetPos(g);
  6998  002B04  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6999  002B08  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  7000  002B0C  EC5B  F031         	call	_GameParameters_resetPos	;wreg free
  7001  002B10                     l10058:
  7002                           
  7003                           ;stateMachine/gameController.c: 84:             if(LCD_InButton(&(g->btnLeaveParam),g->x
      +                          ,g->y))
  7004  002B10  0E50               	movlw	80
  7005  002B12  2437               	addwf	gameControllerController@g^0,w,c
  7006  002B14  6E12               	movwf	LCD_InButton@button^0,c
  7007  002B16  0E00               	movlw	0
  7008  002B18  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  7009  002B1A  6E13               	movwf	(LCD_InButton@button+1)^0,c
  7010  002B1C  EE20 F004          	lfsr	2,4
  7011  002B20  5037               	movf	gameControllerController@g^0,w,c
  7012  002B22  26D9               	addwf	fsr2l,f,c
  7013  002B24  5038               	movf	(gameControllerController@g+1)^0,w,c
  7014  002B26  22DA               	addwfc	fsr2h,f,c
  7015  002B28  CFDE F014          	movff	postinc2,LCD_InButton@posX
  7016  002B2C  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  7017  002B30  EE20 F006          	lfsr	2,6
  7018  002B34  5037               	movf	gameControllerController@g^0,w,c
  7019  002B36  26D9               	addwf	fsr2l,f,c
  7020  002B38  5038               	movf	(gameControllerController@g+1)^0,w,c
  7021  002B3A  22DA               	addwfc	fsr2h,f,c
  7022  002B3C  CFDE F016          	movff	postinc2,LCD_InButton@posY
  7023  002B40  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  7024  002B44  EC36  F026         	call	_LCD_InButton	;wreg free
  7025  002B48  0900               	iorlw	0
  7026  002B4A  B4D8               	btfsc	status,2,c
  7027  002B4C  EFAA  F015         	goto	u7381
  7028  002B50  EFAC  F015         	goto	u7380
  7029  002B54                     u7381:
  7030  002B54  EF68  F016         	goto	l655
  7031  002B58                     u7380:
  7032  002B58                     
  7033                           ;stateMachine/gameController.c: 85:             {;stateMachine/gameController.c: 86:    
      +                                       XF_pushEvent(evLeaveParam,0);
  7034  002B58  0E00               	movlw	0
  7035  002B5A  6E18               	movwf	XF_pushEvent@inISR^0,c
  7036  002B5C  0E08               	movlw	8
  7037  002B5E  ECE0  F02E         	call	_XF_pushEvent
  7038                           
  7039                           ;stateMachine/gameController.c: 87:                 GameParameters_resetPos(g);
  7040  002B62  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  7041  002B66  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  7042  002B6A  EC5B  F031         	call	_GameParameters_resetPos	;wreg free
  7043  002B6E  EF68  F016         	goto	l655
  7044  002B72                     l10062:
  7045                           
  7046                           ;stateMachine/gameController.c: 91:             if (ev==evPress)
  7047  002B72  0439               	decf	gameControllerController@ev^0,w,c
  7048  002B74  A4D8               	btfss	status,2,c
  7049  002B76  EFBF  F015         	goto	u7391
  7050  002B7A  EFC1  F015         	goto	u7390
  7051  002B7E                     u7391:
  7052  002B7E  EFC9  F015         	goto	l10066
  7053  002B82                     u7390:
  7054  002B82                     
  7055                           ;stateMachine/gameController.c: 92:             {;stateMachine/gameController.c: 93:    
      +                                       moovePaddle(g);
  7056  002B82  C037  F01C         	movff	gameControllerController@g,moovePaddle@g
  7057  002B86  C038  F01D         	movff	gameControllerController@g+1,moovePaddle@g+1
  7058  002B8A  EC45  F025         	call	_moovePaddle	;wreg free
  7059                           
  7060                           ;stateMachine/gameController.c: 95:             }
  7061  002B8E  EF68  F016         	goto	l655
  7062  002B92                     l10066:
  7063  002B92  0E0A               	movlw	10
  7064  002B94  1839               	xorwf	gameControllerController@ev^0,w,c
  7065  002B96  A4D8               	btfss	status,2,c
  7066  002B98  EFD0  F015         	goto	u7401
  7067  002B9C  EFD2  F015         	goto	u7400
  7068  002BA0                     u7401:
  7069  002BA0  EF68  F016         	goto	l655
  7070  002BA4                     u7400:
  7071  002BA4                     
  7072                           ;stateMachine/gameController.c: 97:             {;stateMachine/gameController.c: 98:    
      +                                       mooveBall(g);
  7073  002BA4  C037  F025         	movff	gameControllerController@g,mooveBall@g
  7074  002BA8  C038  F026         	movff	gameControllerController@g+1,mooveBall@g+1
  7075  002BAC  EC84  F031         	call	_mooveBall	;wreg free
  7076  002BB0                     
  7077                           ;stateMachine/gameController.c: 100:                 if(g->b.x+50>=239)
  7078  002BB0  EE20 F0C9          	lfsr	2,201
  7079  002BB4  5037               	movf	gameControllerController@g^0,w,c
  7080  002BB6  26D9               	addwf	fsr2l,f,c
  7081  002BB8  5038               	movf	(gameControllerController@g+1)^0,w,c
  7082  002BBA  22DA               	addwfc	fsr2h,f,c
  7083  002BBC  CFDE F03A          	movff	postinc2,??_gameControllerController
  7084  002BC0  CFDD F03B          	movff	postdec2,??_gameControllerController+1
  7085  002BC4  0E32               	movlw	50
  7086  002BC6  263A               	addwf	??_gameControllerController^0,f,c
  7087  002BC8  0E00               	movlw	0
  7088  002BCA  223B               	addwfc	(??_gameControllerController+1)^0,f,c
  7089  002BCC  503B               	movf	(??_gameControllerController+1)^0,w,c
  7090  002BCE  E109               	bnz	u7410
  7091  002BD0  0EEF               	movlw	239
  7092  002BD2  5C3A               	subwf	??_gameControllerController^0,w,c
  7093  002BD4  A0D8               	btfss	status,0,c
  7094  002BD6  EFEF  F015         	goto	u7411
  7095  002BDA  EFF1  F015         	goto	u7410
  7096  002BDE                     u7411:
  7097  002BDE  EFFD  F015         	goto	l10074
  7098  002BE2                     u7410:
  7099  002BE2                     
  7100                           ;stateMachine/gameController.c: 101:                 {;stateMachine/gameController.c: 10
      +                          2:                     g->p2.x=239-50;
  7101  002BE2  EE20 F0DF          	lfsr	2,223
  7102  002BE6  5037               	movf	gameControllerController@g^0,w,c
  7103  002BE8  26D9               	addwf	fsr2l,f,c
  7104  002BEA  5038               	movf	(gameControllerController@g+1)^0,w,c
  7105  002BEC  22DA               	addwfc	fsr2h,f,c
  7106  002BEE  0EBD               	movlw	189
  7107  002BF0  6EDE               	movwf	postinc2,c
  7108  002BF2  0E00               	movlw	0
  7109  002BF4  6EDD               	movwf	postdec2,c
  7110                           
  7111                           ;stateMachine/gameController.c: 103:                 }
  7112  002BF6  EF0D  F016         	goto	l10076
  7113  002BFA                     l10074:
  7114                           
  7115                           ;stateMachine/gameController.c: 105:                 {;stateMachine/gameController.c: 10
      +                          6:                     g->p2.x=g->b.x;
  7116  002BFA  EE20 F0C9          	lfsr	2,201
  7117  002BFE  5037               	movf	gameControllerController@g^0,w,c
  7118  002C00  26D9               	addwf	fsr2l,f,c
  7119  002C02  5038               	movf	(gameControllerController@g+1)^0,w,c
  7120  002C04  22DA               	addwfc	fsr2h,f,c
  7121  002C06  EE10 F0DF          	lfsr	1,223
  7122  002C0A  5037               	movf	gameControllerController@g^0,w,c
  7123  002C0C  26E1               	addwf	fsr1l,f,c
  7124  002C0E  5038               	movf	(gameControllerController@g+1)^0,w,c
  7125  002C10  22E2               	addwfc	fsr1h,f,c
  7126  002C12  CFDE FFE6          	movff	postinc2,postinc1
  7127  002C16  CFDD FFE5          	movff	postdec2,postdec1
  7128  002C1A                     l10076:
  7129                           
  7130                           ;stateMachine/gameController.c: 108:                 XF_pushEvent(evRedrawPaddle2,0);
  7131  002C1A  0E00               	movlw	0
  7132  002C1C  6E18               	movwf	XF_pushEvent@inISR^0,c
  7133  002C1E  0E0C               	movlw	12
  7134  002C20  ECE0  F02E         	call	_XF_pushEvent
  7135  002C24  EF68  F016         	goto	l655
  7136  002C28                     l10078:
  7137                           
  7138                           ;stateMachine/gameController.c: 114:             if(LCD_InButton(&(g->btnNewGame),g->x,g
      +                          ->y))
  7139  002C28  0E80               	movlw	128
  7140  002C2A  2437               	addwf	gameControllerController@g^0,w,c
  7141  002C2C  6E12               	movwf	LCD_InButton@button^0,c
  7142  002C2E  0E00               	movlw	0
  7143  002C30  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  7144  002C32  6E13               	movwf	(LCD_InButton@button+1)^0,c
  7145  002C34  EE20 F004          	lfsr	2,4
  7146  002C38  5037               	movf	gameControllerController@g^0,w,c
  7147  002C3A  26D9               	addwf	fsr2l,f,c
  7148  002C3C  5038               	movf	(gameControllerController@g+1)^0,w,c
  7149  002C3E  22DA               	addwfc	fsr2h,f,c
  7150  002C40  CFDE F014          	movff	postinc2,LCD_InButton@posX
  7151  002C44  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  7152  002C48  EE20 F006          	lfsr	2,6
  7153  002C4C  5037               	movf	gameControllerController@g^0,w,c
  7154  002C4E  26D9               	addwf	fsr2l,f,c
  7155  002C50  5038               	movf	(gameControllerController@g+1)^0,w,c
  7156  002C52  22DA               	addwfc	fsr2h,f,c
  7157  002C54  CFDE F016          	movff	postinc2,LCD_InButton@posY
  7158  002C58  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  7159  002C5C  EC36  F026         	call	_LCD_InButton	;wreg free
  7160  002C60  0900               	iorlw	0
  7161  002C62  B4D8               	btfsc	status,2,c
  7162  002C64  EF36  F016         	goto	u7421
  7163  002C68  EF38  F016         	goto	u7420
  7164  002C6C                     u7421:
  7165  002C6C  EF68  F016         	goto	l655
  7166  002C70                     u7420:
  7167  002C70                     
  7168                           ;stateMachine/gameController.c: 115:             {;stateMachine/gameController.c: 116:  
      +                                         GameParameters_init(g);
  7169  002C70  C037  F02B         	movff	gameControllerController@g,GameParameters_init@s
  7170  002C74  C038  F02C         	movff	gameControllerController@g+1,GameParameters_init@s+1
  7171  002C78  EC00  F011         	call	_GameParameters_init	;wreg free
  7172                           
  7173                           ;stateMachine/gameController.c: 117:                 XF_pushEvent(evNewGame,0);
  7174  002C7C  0E00               	movlw	0
  7175  002C7E  6E18               	movwf	XF_pushEvent@inISR^0,c
  7176  002C80  0E0F               	movlw	15
  7177  002C82  ECE0  F02E         	call	_XF_pushEvent
  7178  002C86                     
  7179                           ;stateMachine/gameController.c: 118:                 gameControllerState=NOGAME;
  7180  002C86  0E00               	movlw	0
  7181  002C88  6E4D               	movwf	_gameControllerState^0,c
  7182  002C8A  EF68  F016         	goto	l655
  7183  002C8E                     l10086:
  7184  002C8E  504D               	movf	_gameControllerState^0,w,c
  7185  002C90  6E3A               	movwf	??_gameControllerController^0,c
  7186  002C92  6A3B               	clrf	(??_gameControllerController+1)^0,c
  7187                           
  7188                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7189                           ; Switch size 1, requested type "simple"
  7190                           ; Number of cases is 1, Range of values is 0 to 0
  7191                           ; switch strategies available:
  7192                           ; Name         Instructions Cycles
  7193                           ; simple_byte            4     3 (average)
  7194                           ;	Chosen strategy is simple_byte
  7195  002C94  503B               	movf	(??_gameControllerController+1)^0,w,c
  7196  002C96  0A00               	xorlw	0	; case 0
  7197  002C98  B4D8               	btfsc	status,2,c
  7198  002C9A  EF51  F016         	goto	l10904
  7199  002C9E  EF68  F016         	goto	l655
  7200  002CA2                     l10904:
  7201                           
  7202                           ; Switch size 1, requested type "simple"
  7203                           ; Number of cases is 5, Range of values is 0 to 4
  7204                           ; switch strategies available:
  7205                           ; Name         Instructions Cycles
  7206                           ; simple_byte           16     9 (average)
  7207                           ;	Chosen strategy is simple_byte
  7208  002CA2  503A               	movf	??_gameControllerController^0,w,c
  7209  002CA4  0A00               	xorlw	0	; case 0
  7210  002CA6  B4D8               	btfsc	status,2,c
  7211  002CA8  EFC1  F014         	goto	l10044
  7212  002CAC  0A01               	xorlw	1	; case 1
  7213  002CAE  B4D8               	btfsc	status,2,c
  7214  002CB0  EF50  F015         	goto	l10052
  7215  002CB4  0A03               	xorlw	3	; case 2
  7216  002CB6  B4D8               	btfsc	status,2,c
  7217  002CB8  EFB9  F015         	goto	l10062
  7218  002CBC  0A01               	xorlw	1	; case 3
  7219  002CBE  B4D8               	btfsc	status,2,c
  7220  002CC0  EF68  F016         	goto	l655
  7221  002CC4  0A07               	xorlw	7	; case 4
  7222  002CC6  B4D8               	btfsc	status,2,c
  7223  002CC8  EF14  F016         	goto	l10078
  7224  002CCC  EF68  F016         	goto	l655
  7225  002CD0                     l655:
  7226  002CD0  0012               	return		;funcret
  7227  002CD2                     __end_of_gameControllerController:
  7228                           	callstack 0
  7229                           
  7230 ;; *************** function _moovePaddle *****************
  7231 ;; Defined at:
  7232 ;;		line 127 in file "stateMachine/gameController.c"
  7233 ;; Parameters:    Size  Location     Type
  7234 ;;  g               2   27[COMRAM] PTR struct GameParameter
  7235 ;;		 -> g1(239), 
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;		None
  7238 ;; Return value:  Size  Location     Type
  7239 ;;                  1    wreg      void 
  7240 ;; Registers used:
  7241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7242 ;; Tracked objects:
  7243 ;;		On entry : 0/0
  7244 ;;		On exit  : 0/0
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7247 ;;      Params:         2       0       0       0       0       0       0
  7248 ;;      Locals:         0       0       0       0       0       0       0
  7249 ;;      Temps:          0       0       0       0       0       0       0
  7250 ;;      Totals:         2       0       0       0       0       0       0
  7251 ;;Total ram usage:        2 bytes
  7252 ;; Hardware stack levels used: 1
  7253 ;; Hardware stack levels required when called: 6
  7254 ;; This function calls:
  7255 ;;		_GameParameters_resetPos
  7256 ;;		_LCD_InButton
  7257 ;;		_Paddle_addX
  7258 ;;		_XF_pushEvent
  7259 ;; This function is called by:
  7260 ;;		_gameControllerController
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text24
  7265  004A8A                     __ptext24:
  7266                           	callstack 0
  7267  004A8A                     _moovePaddle:
  7268                           	callstack 20
  7269  004A8A                     
  7270                           ;stateMachine/gameController.c: 127: void moovePaddle(GameParameters* g);stateMachine/ga
      +                          meController.c: 128: {;stateMachine/gameController.c: 129:     if(LCD_InButton(&(g->btnL
      +                          eft),g->x,g->y))
  7271  004A8A  0E68               	movlw	104
  7272  004A8C  241C               	addwf	moovePaddle@g^0,w,c
  7273  004A8E  6E12               	movwf	LCD_InButton@button^0,c
  7274  004A90  0E00               	movlw	0
  7275  004A92  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7276  004A94  6E13               	movwf	(LCD_InButton@button+1)^0,c
  7277  004A96  EE20 F004          	lfsr	2,4
  7278  004A9A  501C               	movf	moovePaddle@g^0,w,c
  7279  004A9C  26D9               	addwf	fsr2l,f,c
  7280  004A9E  501D               	movf	(moovePaddle@g+1)^0,w,c
  7281  004AA0  22DA               	addwfc	fsr2h,f,c
  7282  004AA2  CFDE F014          	movff	postinc2,LCD_InButton@posX
  7283  004AA6  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  7284  004AAA  EE20 F006          	lfsr	2,6
  7285  004AAE  501C               	movf	moovePaddle@g^0,w,c
  7286  004AB0  26D9               	addwf	fsr2l,f,c
  7287  004AB2  501D               	movf	(moovePaddle@g+1)^0,w,c
  7288  004AB4  22DA               	addwfc	fsr2h,f,c
  7289  004AB6  CFDE F016          	movff	postinc2,LCD_InButton@posY
  7290  004ABA  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  7291  004ABE  EC36  F026         	call	_LCD_InButton	;wreg free
  7292  004AC2  0900               	iorlw	0
  7293  004AC4  B4D8               	btfsc	status,2,c
  7294  004AC6  EF67  F025         	goto	u7241
  7295  004ACA  EF69  F025         	goto	u7240
  7296  004ACE                     u7241:
  7297  004ACE  EF7F  F025         	goto	l658
  7298  004AD2                     u7240:
  7299  004AD2                     
  7300                           ;stateMachine/gameController.c: 130:     {;stateMachine/gameController.c: 131:         G
      +                          ameParameters_resetPos(g);
  7301  004AD2  C01C  F012         	movff	moovePaddle@g,GameParameters_resetPos@s
  7302  004AD6  C01D  F013         	movff	moovePaddle@g+1,GameParameters_resetPos@s+1
  7303  004ADA  EC5B  F031         	call	_GameParameters_resetPos	;wreg free
  7304                           
  7305                           ;stateMachine/gameController.c: 132:         Paddle_addX(&g->p1,8,0);
  7306  004ADE  0ED5               	movlw	213
  7307  004AE0  241C               	addwf	moovePaddle@g^0,w,c
  7308  004AE2  6E12               	movwf	Paddle_addX@p^0,c
  7309  004AE4  0E00               	movlw	0
  7310  004AE6  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7311  004AE8  6E13               	movwf	(Paddle_addX@p+1)^0,c
  7312  004AEA  0E00               	movlw	0
  7313  004AEC  6E15               	movwf	(Paddle_addX@value+1)^0,c
  7314  004AEE  0E08               	movlw	8
  7315  004AF0  6E14               	movwf	Paddle_addX@value^0,c
  7316  004AF2  0E00               	movlw	0
  7317  004AF4  6E17               	movwf	(Paddle_addX@add+1)^0,c
  7318  004AF6  0E00               	movlw	0
  7319  004AF8  6E16               	movwf	Paddle_addX@add^0,c
  7320  004AFA  EC14  F027         	call	_Paddle_addX	;wreg free
  7321  004AFE                     l658:
  7322                           
  7323                           ;stateMachine/gameController.c: 134:     if(LCD_InButton(&(g->btnRight),g->x,g->y))
  7324  004AFE  0E98               	movlw	152
  7325  004B00  241C               	addwf	moovePaddle@g^0,w,c
  7326  004B02  6E12               	movwf	LCD_InButton@button^0,c
  7327  004B04  0E00               	movlw	0
  7328  004B06  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7329  004B08  6E13               	movwf	(LCD_InButton@button+1)^0,c
  7330  004B0A  EE20 F004          	lfsr	2,4
  7331  004B0E  501C               	movf	moovePaddle@g^0,w,c
  7332  004B10  26D9               	addwf	fsr2l,f,c
  7333  004B12  501D               	movf	(moovePaddle@g+1)^0,w,c
  7334  004B14  22DA               	addwfc	fsr2h,f,c
  7335  004B16  CFDE F014          	movff	postinc2,LCD_InButton@posX
  7336  004B1A  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  7337  004B1E  EE20 F006          	lfsr	2,6
  7338  004B22  501C               	movf	moovePaddle@g^0,w,c
  7339  004B24  26D9               	addwf	fsr2l,f,c
  7340  004B26  501D               	movf	(moovePaddle@g+1)^0,w,c
  7341  004B28  22DA               	addwfc	fsr2h,f,c
  7342  004B2A  CFDE F016          	movff	postinc2,LCD_InButton@posY
  7343  004B2E  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  7344  004B32  EC36  F026         	call	_LCD_InButton	;wreg free
  7345  004B36  0900               	iorlw	0
  7346  004B38  B4D8               	btfsc	status,2,c
  7347  004B3A  EFA1  F025         	goto	u7251
  7348  004B3E  EFA3  F025         	goto	u7250
  7349  004B42                     u7251:
  7350  004B42  EFB9  F025         	goto	l659
  7351  004B46                     u7250:
  7352  004B46                     
  7353                           ;stateMachine/gameController.c: 135:     {;stateMachine/gameController.c: 136:         G
      +                          ameParameters_resetPos(g);
  7354  004B46  C01C  F012         	movff	moovePaddle@g,GameParameters_resetPos@s
  7355  004B4A  C01D  F013         	movff	moovePaddle@g+1,GameParameters_resetPos@s+1
  7356  004B4E  EC5B  F031         	call	_GameParameters_resetPos	;wreg free
  7357                           
  7358                           ;stateMachine/gameController.c: 137:         Paddle_addX(&g->p1,8,1);
  7359  004B52  0ED5               	movlw	213
  7360  004B54  241C               	addwf	moovePaddle@g^0,w,c
  7361  004B56  6E12               	movwf	Paddle_addX@p^0,c
  7362  004B58  0E00               	movlw	0
  7363  004B5A  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7364  004B5C  6E13               	movwf	(Paddle_addX@p+1)^0,c
  7365  004B5E  0E00               	movlw	0
  7366  004B60  6E15               	movwf	(Paddle_addX@value+1)^0,c
  7367  004B62  0E08               	movlw	8
  7368  004B64  6E14               	movwf	Paddle_addX@value^0,c
  7369  004B66  0E00               	movlw	0
  7370  004B68  6E17               	movwf	(Paddle_addX@add+1)^0,c
  7371  004B6A  0E01               	movlw	1
  7372  004B6C  6E16               	movwf	Paddle_addX@add^0,c
  7373  004B6E  EC14  F027         	call	_Paddle_addX	;wreg free
  7374  004B72                     l659:
  7375                           
  7376                           ;stateMachine/gameController.c: 139:     XF_pushEvent(evRedrawPaddle1,0);
  7377  004B72  0E00               	movlw	0
  7378  004B74  6E18               	movwf	XF_pushEvent@inISR^0,c
  7379  004B76  0E0B               	movlw	11
  7380  004B78  ECE0  F02E         	call	_XF_pushEvent
  7381  004B7C  0012               	return		;funcret
  7382  004B7E                     __end_of_moovePaddle:
  7383                           	callstack 0
  7384                           
  7385 ;; *************** function _Paddle_addX *****************
  7386 ;; Defined at:
  7387 ;;		line 21 in file "class/paddle.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  p               2   17[COMRAM] PTR struct Paddle
  7390 ;;		 -> g1(239), 
  7391 ;;  value           2   19[COMRAM] unsigned short 
  7392 ;;  add             2   21[COMRAM] unsigned short 
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;		None
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  1    wreg      void 
  7397 ;; Registers used:
  7398 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7404 ;;      Params:         6       0       0       0       0       0       0
  7405 ;;      Locals:         0       0       0       0       0       0       0
  7406 ;;      Temps:          2       0       0       0       0       0       0
  7407 ;;      Totals:         8       0       0       0       0       0       0
  7408 ;;Total ram usage:        8 bytes
  7409 ;; Hardware stack levels used: 1
  7410 ;; Hardware stack levels required when called: 4
  7411 ;; This function calls:
  7412 ;;		Nothing
  7413 ;; This function is called by:
  7414 ;;		_moovePaddle
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text25
  7419  004E28                     __ptext25:
  7420                           	callstack 0
  7421  004E28                     _Paddle_addX:
  7422                           	callstack 21
  7423  004E28                     
  7424                           ;class/paddle.c: 21: void Paddle_addX(struct Paddle* p,uint16_t value,uint16_t add);clas
      +                          s/paddle.c: 22: {;class/paddle.c: 23:     if(add==1)
  7425  004E28  0416               	decf	Paddle_addX@add^0,w,c
  7426  004E2A  1017               	iorwf	(Paddle_addX@add+1)^0,w,c
  7427  004E2C  A4D8               	btfss	status,2,c
  7428  004E2E  EF1B  F027         	goto	u6631
  7429  004E32  EF1D  F027         	goto	u6630
  7430  004E36                     u6631:
  7431  004E36  EF52  F027         	goto	l9452
  7432  004E3A                     u6630:
  7433  004E3A                     
  7434                           ;class/paddle.c: 24:     {;class/paddle.c: 25:         p->x=(p->x)+value;
  7435  004E3A  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7436  004E3E  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7437  004E42  CFDE F018          	movff	postinc2,??_Paddle_addX
  7438  004E46  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  7439  004E4A  5014               	movf	Paddle_addX@value^0,w,c
  7440  004E4C  2618               	addwf	??_Paddle_addX^0,f,c
  7441  004E4E  5015               	movf	(Paddle_addX@value+1)^0,w,c
  7442  004E50  2219               	addwfc	(??_Paddle_addX+1)^0,f,c
  7443  004E52  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7444  004E56  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7445  004E5A  C018  FFDE         	movff	??_Paddle_addX,postinc2
  7446  004E5E  C019  FFDD         	movff	??_Paddle_addX+1,postdec2
  7447                           
  7448                           ;class/paddle.c: 26:         if((p->x+50)>239)
  7449  004E62  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7450  004E66  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7451  004E6A  CFDE F018          	movff	postinc2,??_Paddle_addX
  7452  004E6E  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  7453  004E72  0E32               	movlw	50
  7454  004E74  2618               	addwf	??_Paddle_addX^0,f,c
  7455  004E76  0E00               	movlw	0
  7456  004E78  2219               	addwfc	(??_Paddle_addX+1)^0,f,c
  7457  004E7A  5019               	movf	(??_Paddle_addX+1)^0,w,c
  7458  004E7C  E109               	bnz	u6640
  7459  004E7E  0EF0               	movlw	240
  7460  004E80  5C18               	subwf	??_Paddle_addX^0,w,c
  7461  004E82  A0D8               	btfss	status,0,c
  7462  004E84  EF46  F027         	goto	u6641
  7463  004E88  EF48  F027         	goto	u6640
  7464  004E8C                     u6641:
  7465  004E8C  EF80  F027         	goto	l26
  7466  004E90                     u6640:
  7467  004E90                     
  7468                           ;class/paddle.c: 27:         {;class/paddle.c: 28:             p->x=239-(50);
  7469  004E90  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7470  004E94  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7471  004E98  0EBD               	movlw	189
  7472  004E9A  6EDE               	movwf	postinc2,c
  7473  004E9C  0E00               	movlw	0
  7474  004E9E  6EDD               	movwf	postdec2,c
  7475  004EA0  EF80  F027         	goto	l26
  7476  004EA4                     l9452:
  7477                           
  7478                           ;class/paddle.c: 32:     {;class/paddle.c: 33:         if((p->x)<9)
  7479  004EA4  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7480  004EA8  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7481  004EAC  0E01               	movlw	1
  7482  004EAE  50DB               	movf	plusw2,w,c
  7483  004EB0  E107               	bnz	u6651
  7484  004EB2  0E09               	movlw	9
  7485  004EB4  5CDE               	subwf	postinc2,w,c
  7486  004EB6  B0D8               	btfsc	status,0,c
  7487  004EB8  EF60  F027         	goto	u6651
  7488  004EBC  EF62  F027         	goto	u6650
  7489  004EC0                     u6651:
  7490  004EC0  EF6C  F027         	goto	l9456
  7491  004EC4                     u6650:
  7492  004EC4                     
  7493                           ;class/paddle.c: 34:         {;class/paddle.c: 35:             p->x=0;
  7494  004EC4  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7495  004EC8  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7496  004ECC  0E00               	movlw	0
  7497  004ECE  6EDE               	movwf	postinc2,c
  7498  004ED0  0E00               	movlw	0
  7499  004ED2  6EDD               	movwf	postdec2,c
  7500                           
  7501                           ;class/paddle.c: 36:         }
  7502  004ED4  EF80  F027         	goto	l26
  7503  004ED8                     l9456:
  7504                           
  7505                           ;class/paddle.c: 38:         {;class/paddle.c: 39:             p->x=(p->x)-value;
  7506  004ED8  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7507  004EDC  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7508  004EE0  CFDE F018          	movff	postinc2,??_Paddle_addX
  7509  004EE4  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  7510  004EE8  5014               	movf	Paddle_addX@value^0,w,c
  7511  004EEA  5E18               	subwf	??_Paddle_addX^0,f,c
  7512  004EEC  5015               	movf	(Paddle_addX@value+1)^0,w,c
  7513  004EEE  5A19               	subwfb	(??_Paddle_addX+1)^0,f,c
  7514  004EF0  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7515  004EF4  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7516  004EF8  C018  FFDE         	movff	??_Paddle_addX,postinc2
  7517  004EFC  C019  FFDD         	movff	??_Paddle_addX+1,postdec2
  7518  004F00                     l26:
  7519  004F00  0012               	return		;funcret
  7520  004F02                     __end_of_Paddle_addX:
  7521                           	callstack 0
  7522                           
  7523 ;; *************** function _LCD_InButton *****************
  7524 ;; Defined at:
  7525 ;;		line 514 in file "libraries/lcd_highlevel.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;  button          2   17[COMRAM] PTR struct .
  7528 ;;		 -> g1(239), 
  7529 ;;  posX            2   19[COMRAM] unsigned short 
  7530 ;;  posY            2   21[COMRAM] unsigned short 
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;		None
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  1    wreg      unsigned char 
  7535 ;; Registers used:
  7536 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7542 ;;      Params:         6       0       0       0       0       0       0
  7543 ;;      Locals:         0       0       0       0       0       0       0
  7544 ;;      Temps:          4       0       0       0       0       0       0
  7545 ;;      Totals:        10       0       0       0       0       0       0
  7546 ;;Total ram usage:       10 bytes
  7547 ;; Hardware stack levels used: 1
  7548 ;; Hardware stack levels required when called: 4
  7549 ;; This function calls:
  7550 ;;		Nothing
  7551 ;; This function is called by:
  7552 ;;		_gameControllerController
  7553 ;;		_moovePaddle
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	text26
  7558  004C6C                     __ptext26:
  7559                           	callstack 0
  7560  004C6C                     _LCD_InButton:
  7561                           	callstack 21
  7562  004C6C                     
  7563                           ;libraries/lcd_highlevel.c: 514: uint8_t LCD_InButton(btn_t * button, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 515: {;libraries/lcd_highlevel.c: 517:   if(posX 
      +                          < button->posX)
  7564  004C6C  C012  FFD9         	movff	LCD_InButton@button,fsr2l
  7565  004C70  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
  7566  004C74  50DE               	movf	postinc2,w,c
  7567  004C76  5C14               	subwf	LCD_InButton@posX^0,w,c
  7568  004C78  50DE               	movf	postinc2,w,c
  7569  004C7A  5815               	subwfb	(LCD_InButton@posX+1)^0,w,c
  7570  004C7C  B0D8               	btfsc	status,0,c
  7571  004C7E  EF43  F026         	goto	u6731
  7572  004C82  EF45  F026         	goto	u6730
  7573  004C86                     u6731:
  7574  004C86  EF48  F026         	goto	l9676
  7575  004C8A                     u6730:
  7576  004C8A                     l9672:
  7577                           
  7578                           ;libraries/lcd_highlevel.c: 518:   {;libraries/lcd_highlevel.c: 519:     return 0;
  7579  004C8A  0E00               	movlw	0
  7580  004C8C  EFA4  F026         	goto	l265
  7581  004C90                     l9676:
  7582                           
  7583                           ;libraries/lcd_highlevel.c: 522:   if(posX > (button->posX + button->width))
  7584  004C90  EE20 F004          	lfsr	2,4
  7585  004C94  5012               	movf	LCD_InButton@button^0,w,c
  7586  004C96  26D9               	addwf	fsr2l,f,c
  7587  004C98  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7588  004C9A  22DA               	addwfc	fsr2h,f,c
  7589  004C9C  CFDE F018          	movff	postinc2,??_LCD_InButton
  7590  004CA0  CFDD F019          	movff	postdec2,??_LCD_InButton+1
  7591  004CA4  C012  FFD9         	movff	LCD_InButton@button,fsr2l
  7592  004CA8  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
  7593  004CAC  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
  7594  004CB0  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
  7595  004CB4  5018               	movf	??_LCD_InButton^0,w,c
  7596  004CB6  261A               	addwf	(??_LCD_InButton+2)^0,f,c
  7597  004CB8  5019               	movf	(??_LCD_InButton+1)^0,w,c
  7598  004CBA  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
  7599  004CBC  5014               	movf	LCD_InButton@posX^0,w,c
  7600  004CBE  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
  7601  004CC0  5015               	movf	(LCD_InButton@posX+1)^0,w,c
  7602  004CC2  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
  7603  004CC4  B0D8               	btfsc	status,0,c
  7604  004CC6  EF67  F026         	goto	u6741
  7605  004CCA  EF69  F026         	goto	u6740
  7606  004CCE                     u6741:
  7607  004CCE  EF6B  F026         	goto	l9682
  7608  004CD2                     u6740:
  7609  004CD2  EF45  F026         	goto	l9672
  7610  004CD6                     l9682:
  7611                           
  7612                           ;libraries/lcd_highlevel.c: 527:   if(posY < button->posY)
  7613  004CD6  EE20 F002          	lfsr	2,2
  7614  004CDA  5012               	movf	LCD_InButton@button^0,w,c
  7615  004CDC  26D9               	addwf	fsr2l,f,c
  7616  004CDE  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7617  004CE0  22DA               	addwfc	fsr2h,f,c
  7618  004CE2  50DE               	movf	postinc2,w,c
  7619  004CE4  5C16               	subwf	LCD_InButton@posY^0,w,c
  7620  004CE6  50DE               	movf	postinc2,w,c
  7621  004CE8  5817               	subwfb	(LCD_InButton@posY+1)^0,w,c
  7622  004CEA  B0D8               	btfsc	status,0,c
  7623  004CEC  EF7A  F026         	goto	u6751
  7624  004CF0  EF7C  F026         	goto	u6750
  7625  004CF4                     u6751:
  7626  004CF4  EF7E  F026         	goto	l9688
  7627  004CF8                     u6750:
  7628  004CF8  EF45  F026         	goto	l9672
  7629  004CFC                     l9688:
  7630                           
  7631                           ;libraries/lcd_highlevel.c: 532:   if(posY > (button->posY + button->height))
  7632  004CFC  EE20 F006          	lfsr	2,6
  7633  004D00  5012               	movf	LCD_InButton@button^0,w,c
  7634  004D02  26D9               	addwf	fsr2l,f,c
  7635  004D04  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7636  004D06  22DA               	addwfc	fsr2h,f,c
  7637  004D08  CFDE F018          	movff	postinc2,??_LCD_InButton
  7638  004D0C  CFDD F019          	movff	postdec2,??_LCD_InButton+1
  7639  004D10  EE20 F002          	lfsr	2,2
  7640  004D14  5012               	movf	LCD_InButton@button^0,w,c
  7641  004D16  26D9               	addwf	fsr2l,f,c
  7642  004D18  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7643  004D1A  22DA               	addwfc	fsr2h,f,c
  7644  004D1C  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
  7645  004D20  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
  7646  004D24  5018               	movf	??_LCD_InButton^0,w,c
  7647  004D26  261A               	addwf	(??_LCD_InButton+2)^0,f,c
  7648  004D28  5019               	movf	(??_LCD_InButton+1)^0,w,c
  7649  004D2A  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
  7650  004D2C  5016               	movf	LCD_InButton@posY^0,w,c
  7651  004D2E  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
  7652  004D30  5017               	movf	(LCD_InButton@posY+1)^0,w,c
  7653  004D32  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
  7654  004D34  B0D8               	btfsc	status,0,c
  7655  004D36  EF9F  F026         	goto	u6761
  7656  004D3A  EFA1  F026         	goto	u6760
  7657  004D3E                     u6761:
  7658  004D3E  EFA3  F026         	goto	l9694
  7659  004D42                     u6760:
  7660  004D42  EF45  F026         	goto	l9672
  7661  004D46                     l9694:
  7662                           
  7663                           ;libraries/lcd_highlevel.c: 536:   return 1;
  7664  004D46  0E01               	movlw	1
  7665  004D48                     l265:
  7666  004D48  0012               	return		;funcret
  7667  004D4A                     __end_of_LCD_InButton:
  7668                           	callstack 0
  7669                           
  7670 ;; *************** function _GameParameters_resetPos *****************
  7671 ;; Defined at:
  7672 ;;		line 43 in file "class/gameParameters.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  s               2   17[COMRAM] PTR struct GameParameter
  7675 ;;		 -> g1(239), 
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;		None
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  1    wreg      void 
  7680 ;; Registers used:
  7681 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7687 ;;      Params:         2       0       0       0       0       0       0
  7688 ;;      Locals:         0       0       0       0       0       0       0
  7689 ;;      Temps:          0       0       0       0       0       0       0
  7690 ;;      Totals:         2       0       0       0       0       0       0
  7691 ;;Total ram usage:        2 bytes
  7692 ;; Hardware stack levels used: 1
  7693 ;; Hardware stack levels required when called: 4
  7694 ;; This function calls:
  7695 ;;		Nothing
  7696 ;; This function is called by:
  7697 ;;		_gameControllerController
  7698 ;;		_moovePaddle
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           	psect	text27
  7703  0062B6                     __ptext27:
  7704                           	callstack 0
  7705  0062B6                     _GameParameters_resetPos:
  7706                           	callstack 21
  7707  0062B6                     
  7708                           ;class/gameParameters.c: 43: void GameParameters_resetPos(struct GameParameters* s);clas
      +                          s/gameParameters.c: 44: {;class/gameParameters.c: 45:     s->x=0;
  7709  0062B6  EE20 F004          	lfsr	2,4
  7710  0062BA  5012               	movf	GameParameters_resetPos@s^0,w,c
  7711  0062BC  26D9               	addwf	fsr2l,f,c
  7712  0062BE  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
  7713  0062C0  22DA               	addwfc	fsr2h,f,c
  7714  0062C2  0E00               	movlw	0
  7715  0062C4  6EDE               	movwf	postinc2,c
  7716  0062C6  0E00               	movlw	0
  7717  0062C8  6EDD               	movwf	postdec2,c
  7718                           
  7719                           ;class/gameParameters.c: 46:     s->y=0;
  7720  0062CA  EE20 F006          	lfsr	2,6
  7721  0062CE  5012               	movf	GameParameters_resetPos@s^0,w,c
  7722  0062D0  26D9               	addwf	fsr2l,f,c
  7723  0062D2  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
  7724  0062D4  22DA               	addwfc	fsr2h,f,c
  7725  0062D6  0E00               	movlw	0
  7726  0062D8  6EDE               	movwf	postinc2,c
  7727  0062DA  0E00               	movlw	0
  7728  0062DC  6EDD               	movwf	postdec2,c
  7729  0062DE  0012               	return		;funcret
  7730  0062E0                     __end_of_GameParameters_resetPos:
  7731                           	callstack 0
  7732                           
  7733 ;; *************** function _mooveBall *****************
  7734 ;; Defined at:
  7735 ;;		line 141 in file "stateMachine/gameController.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  g               2   36[COMRAM] PTR struct GameParameter
  7738 ;;		 -> g1(239), 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;		None
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  1    wreg      void 
  7743 ;; Registers used:
  7744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7750 ;;      Params:         2       0       0       0       0       0       0
  7751 ;;      Locals:         0       0       0       0       0       0       0
  7752 ;;      Temps:          0       0       0       0       0       0       0
  7753 ;;      Totals:         2       0       0       0       0       0       0
  7754 ;;Total ram usage:        2 bytes
  7755 ;; Hardware stack levels used: 1
  7756 ;; Hardware stack levels required when called: 7
  7757 ;; This function calls:
  7758 ;;		_Ball_Update
  7759 ;;		_XF_pushEvent
  7760 ;;		_checkCollision
  7761 ;; This function is called by:
  7762 ;;		_gameControllerController
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text28
  7767  006308                     __ptext28:
  7768                           	callstack 0
  7769  006308                     _mooveBall:
  7770                           	callstack 19
  7771  006308                     
  7772                           ;stateMachine/gameController.c: 141: void mooveBall(GameParameters* g);stateMachine/game
      +                          Controller.c: 142: {;stateMachine/gameController.c: 143:     checkCollision(g);
  7773  006308  C025  F01B         	movff	mooveBall@g,checkCollision@g
  7774  00630C  C026  F01C         	movff	mooveBall@g+1,checkCollision@g+1
  7775  006310  EC64  F000         	call	_checkCollision	;wreg free
  7776                           
  7777                           ;stateMachine/gameController.c: 144:     Ball_Update(&g->b);
  7778  006314  0EC9               	movlw	201
  7779  006316  2425               	addwf	mooveBall@g^0,w,c
  7780  006318  6E12               	movwf	Ball_Update@b^0,c
  7781  00631A  0E00               	movlw	0
  7782  00631C  2026               	addwfc	(mooveBall@g+1)^0,w,c
  7783  00631E  6E13               	movwf	(Ball_Update@b+1)^0,c
  7784  006320  EC39  F02D         	call	_Ball_Update	;wreg free
  7785                           
  7786                           ;stateMachine/gameController.c: 145:     XF_pushEvent(evRedrawBall,0);
  7787  006324  0E00               	movlw	0
  7788  006326  6E18               	movwf	XF_pushEvent@inISR^0,c
  7789  006328  0E0D               	movlw	13
  7790  00632A  ECE0  F02E         	call	_XF_pushEvent
  7791  00632E  0012               	return		;funcret
  7792  006330                     __end_of_mooveBall:
  7793                           	callstack 0
  7794                           
  7795 ;; *************** function _checkCollision *****************
  7796 ;; Defined at:
  7797 ;;		line 147 in file "stateMachine/gameController.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;  g               2   26[COMRAM] PTR struct GameParameter
  7800 ;;		 -> g1(239), 
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;  s              20    0        unsigned char [20]
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  1    wreg      void 
  7805 ;; Registers used:
  7806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7812 ;;      Params:         2       0       0       0       0       0       0
  7813 ;;      Locals:         0       0       0       0       0       0       0
  7814 ;;      Temps:          8       0       0       0       0       0       0
  7815 ;;      Totals:        10       0       0       0       0       0       0
  7816 ;;Total ram usage:       10 bytes
  7817 ;; Hardware stack levels used: 1
  7818 ;; Hardware stack levels required when called: 6
  7819 ;; This function calls:
  7820 ;;		_XF_pushEvent
  7821 ;; This function is called by:
  7822 ;;		_mooveBall
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           	psect	text29
  7827  0000C8                     __ptext29:
  7828                           	callstack 0
  7829  0000C8                     _checkCollision:
  7830                           	callstack 19
  7831  0000C8                     
  7832                           ;stateMachine/gameController.c: 147: void checkCollision(GameParameters* g);stateMachine
      +                          /gameController.c: 148: {;stateMachine/gameController.c: 149:     char s[20];;stateMachi
      +                          ne/gameController.c: 151:     if(g->b.y+4>=g->p1.y-1)
  7833  0000C8  0EFF               	movlw	255
  7834  0000CA  6E1D               	movwf	??_checkCollision^0,c
  7835  0000CC  0EFF               	movlw	255
  7836  0000CE  6E1E               	movwf	(??_checkCollision+1)^0,c
  7837  0000D0  EE20 F0D7          	lfsr	2,215
  7838  0000D4  501B               	movf	checkCollision@g^0,w,c
  7839  0000D6  26D9               	addwf	fsr2l,f,c
  7840  0000D8  501C               	movf	(checkCollision@g+1)^0,w,c
  7841  0000DA  22DA               	addwfc	fsr2h,f,c
  7842  0000DC  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7843  0000E0  CFDD F020          	movff	postdec2,??_checkCollision+3
  7844  0000E4  501D               	movf	??_checkCollision^0,w,c
  7845  0000E6  261F               	addwf	(??_checkCollision+2)^0,f,c
  7846  0000E8  501E               	movf	(??_checkCollision+1)^0,w,c
  7847  0000EA  2220               	addwfc	(??_checkCollision+3)^0,f,c
  7848  0000EC  EE20 F0CB          	lfsr	2,203
  7849  0000F0  501B               	movf	checkCollision@g^0,w,c
  7850  0000F2  26D9               	addwf	fsr2l,f,c
  7851  0000F4  501C               	movf	(checkCollision@g+1)^0,w,c
  7852  0000F6  22DA               	addwfc	fsr2h,f,c
  7853  0000F8  CFDE F021          	movff	postinc2,??_checkCollision+4
  7854  0000FC  CFDD F022          	movff	postdec2,??_checkCollision+5
  7855  000100  0E04               	movlw	4
  7856  000102  2621               	addwf	(??_checkCollision+4)^0,f,c
  7857  000104  0E00               	movlw	0
  7858  000106  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7859  000108  501F               	movf	(??_checkCollision+2)^0,w,c
  7860  00010A  5C21               	subwf	(??_checkCollision+4)^0,w,c
  7861  00010C  5020               	movf	(??_checkCollision+3)^0,w,c
  7862  00010E  5822               	subwfb	(??_checkCollision+5)^0,w,c
  7863  000110  A0D8               	btfss	status,0,c
  7864  000112  EF8D  F000         	goto	u6771
  7865  000116  EF8F  F000         	goto	u6770
  7866  00011A                     u6771:
  7867  00011A  EF1B  F002         	goto	l9724
  7868  00011E                     u6770:
  7869  00011E                     
  7870                           ;stateMachine/gameController.c: 152:     {;stateMachine/gameController.c: 153:         i
      +                          f(g->b.x+4>g->p1.x)
  7871  00011E  EE20 F0C9          	lfsr	2,201
  7872  000122  501B               	movf	checkCollision@g^0,w,c
  7873  000124  26D9               	addwf	fsr2l,f,c
  7874  000126  501C               	movf	(checkCollision@g+1)^0,w,c
  7875  000128  22DA               	addwfc	fsr2h,f,c
  7876  00012A  CFDE F01D          	movff	postinc2,??_checkCollision
  7877  00012E  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7878  000132  0E04               	movlw	4
  7879  000134  261D               	addwf	??_checkCollision^0,f,c
  7880  000136  0E00               	movlw	0
  7881  000138  221E               	addwfc	(??_checkCollision+1)^0,f,c
  7882  00013A  EE20 F0D5          	lfsr	2,213
  7883  00013E  501B               	movf	checkCollision@g^0,w,c
  7884  000140  26D9               	addwf	fsr2l,f,c
  7885  000142  501C               	movf	(checkCollision@g+1)^0,w,c
  7886  000144  22DA               	addwfc	fsr2h,f,c
  7887  000146  501D               	movf	??_checkCollision^0,w,c
  7888  000148  5CDE               	subwf	postinc2,w,c
  7889  00014A  501E               	movf	(??_checkCollision+1)^0,w,c
  7890  00014C  58DE               	subwfb	postinc2,w,c
  7891  00014E  B0D8               	btfsc	status,0,c
  7892  000150  EFAC  F000         	goto	u6781
  7893  000154  EFAE  F000         	goto	u6780
  7894  000158                     u6781:
  7895  000158  EF1B  F002         	goto	l9724
  7896  00015C                     u6780:
  7897  00015C                     
  7898                           ;stateMachine/gameController.c: 154:         {;stateMachine/gameController.c: 155:      
      +                                 if(g->b.x-4<g->p1.x+50)
  7899  00015C  EE20 F0D5          	lfsr	2,213
  7900  000160  501B               	movf	checkCollision@g^0,w,c
  7901  000162  26D9               	addwf	fsr2l,f,c
  7902  000164  501C               	movf	(checkCollision@g+1)^0,w,c
  7903  000166  22DA               	addwfc	fsr2h,f,c
  7904  000168  CFDE F01D          	movff	postinc2,??_checkCollision
  7905  00016C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7906  000170  0E32               	movlw	50
  7907  000172  261D               	addwf	??_checkCollision^0,f,c
  7908  000174  0E00               	movlw	0
  7909  000176  221E               	addwfc	(??_checkCollision+1)^0,f,c
  7910  000178  0EFC               	movlw	252
  7911  00017A  6E1F               	movwf	(??_checkCollision+2)^0,c
  7912  00017C  0EFF               	movlw	255
  7913  00017E  6E20               	movwf	(??_checkCollision+3)^0,c
  7914  000180  EE20 F0C9          	lfsr	2,201
  7915  000184  501B               	movf	checkCollision@g^0,w,c
  7916  000186  26D9               	addwf	fsr2l,f,c
  7917  000188  501C               	movf	(checkCollision@g+1)^0,w,c
  7918  00018A  22DA               	addwfc	fsr2h,f,c
  7919  00018C  CFDE F021          	movff	postinc2,??_checkCollision+4
  7920  000190  CFDD F022          	movff	postdec2,??_checkCollision+5
  7921  000194  501F               	movf	(??_checkCollision+2)^0,w,c
  7922  000196  2621               	addwf	(??_checkCollision+4)^0,f,c
  7923  000198  5020               	movf	(??_checkCollision+3)^0,w,c
  7924  00019A  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7925  00019C  501D               	movf	??_checkCollision^0,w,c
  7926  00019E  5C21               	subwf	(??_checkCollision+4)^0,w,c
  7927  0001A0  501E               	movf	(??_checkCollision+1)^0,w,c
  7928  0001A2  5822               	subwfb	(??_checkCollision+5)^0,w,c
  7929  0001A4  B0D8               	btfsc	status,0,c
  7930  0001A6  EFD7  F000         	goto	u6791
  7931  0001AA  EFD9  F000         	goto	u6790
  7932  0001AE                     u6791:
  7933  0001AE  EF1B  F002         	goto	l9724
  7934  0001B2                     u6790:
  7935  0001B2                     
  7936                           ;stateMachine/gameController.c: 156:             {;stateMachine/gameController.c: 157:  
      +                                         if(g->b.x-g->p1.x<10)
  7937  0001B2  EE20 F0D5          	lfsr	2,213
  7938  0001B6  501B               	movf	checkCollision@g^0,w,c
  7939  0001B8  26D9               	addwf	fsr2l,f,c
  7940  0001BA  501C               	movf	(checkCollision@g+1)^0,w,c
  7941  0001BC  22DA               	addwfc	fsr2h,f,c
  7942  0001BE  CFDE F01D          	movff	postinc2,??_checkCollision
  7943  0001C2  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7944  0001C6  EE20 F0C9          	lfsr	2,201
  7945  0001CA  501B               	movf	checkCollision@g^0,w,c
  7946  0001CC  26D9               	addwf	fsr2l,f,c
  7947  0001CE  501C               	movf	(checkCollision@g+1)^0,w,c
  7948  0001D0  22DA               	addwfc	fsr2h,f,c
  7949  0001D2  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7950  0001D6  CFDD F020          	movff	postdec2,??_checkCollision+3
  7951  0001DA  501D               	movf	??_checkCollision^0,w,c
  7952  0001DC  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  7953  0001DE  501E               	movf	(??_checkCollision+1)^0,w,c
  7954  0001E0  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  7955  0001E2  5020               	movf	(??_checkCollision+3)^0,w,c
  7956  0001E4  E107               	bnz	u6801
  7957  0001E6  0E0A               	movlw	10
  7958  0001E8  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  7959  0001EA  B0D8               	btfsc	status,0,c
  7960  0001EC  EFFA  F000         	goto	u6801
  7961  0001F0  EFFC  F000         	goto	u6800
  7962  0001F4                     u6801:
  7963  0001F4  EF20  F001         	goto	l9708
  7964  0001F8                     u6800:
  7965  0001F8                     
  7966                           ;stateMachine/gameController.c: 158:                 {;stateMachine/gameController.c: 16
      +                          0:                     g->b.dy=-g->b.dy;
  7967  0001F8  EE20 F0D3          	lfsr	2,211
  7968  0001FC  501B               	movf	checkCollision@g^0,w,c
  7969  0001FE  26D9               	addwf	fsr2l,f,c
  7970  000200  501C               	movf	(checkCollision@g+1)^0,w,c
  7971  000202  22DA               	addwfc	fsr2h,f,c
  7972  000204  CFDE F01D          	movff	postinc2,??_checkCollision
  7973  000208  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7974  00020C  1E1D               	comf	??_checkCollision^0,f,c
  7975  00020E  1E1E               	comf	(??_checkCollision+1)^0,f,c
  7976  000210  4A1D               	infsnz	??_checkCollision^0,f,c
  7977  000212  2A1E               	incf	(??_checkCollision+1)^0,f,c
  7978  000214  EE20 F0D3          	lfsr	2,211
  7979  000218  501B               	movf	checkCollision@g^0,w,c
  7980  00021A  26D9               	addwf	fsr2l,f,c
  7981  00021C  501C               	movf	(checkCollision@g+1)^0,w,c
  7982  00021E  22DA               	addwfc	fsr2h,f,c
  7983  000220  C01D  FFDE         	movff	??_checkCollision,postinc2
  7984  000224  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  7985                           
  7986                           ;stateMachine/gameController.c: 161:                     g->b.dx=-2;
  7987  000228  EE20 F0D1          	lfsr	2,209
  7988  00022C  501B               	movf	checkCollision@g^0,w,c
  7989  00022E  26D9               	addwf	fsr2l,f,c
  7990  000230  501C               	movf	(checkCollision@g+1)^0,w,c
  7991  000232  22DA               	addwfc	fsr2h,f,c
  7992  000234  0EFE               	movlw	254
  7993  000236  6EDE               	movwf	postinc2,c
  7994  000238  0EFF               	movlw	255
  7995  00023A  6EDD               	movwf	postdec2,c
  7996                           
  7997                           ;stateMachine/gameController.c: 162:                 }
  7998  00023C  EF0D  F002         	goto	l670
  7999  000240                     l9708:
  8000  000240  EE20 F0D5          	lfsr	2,213
  8001  000244  501B               	movf	checkCollision@g^0,w,c
  8002  000246  26D9               	addwf	fsr2l,f,c
  8003  000248  501C               	movf	(checkCollision@g+1)^0,w,c
  8004  00024A  22DA               	addwfc	fsr2h,f,c
  8005  00024C  CFDE F01D          	movff	postinc2,??_checkCollision
  8006  000250  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8007  000254  EE20 F0C9          	lfsr	2,201
  8008  000258  501B               	movf	checkCollision@g^0,w,c
  8009  00025A  26D9               	addwf	fsr2l,f,c
  8010  00025C  501C               	movf	(checkCollision@g+1)^0,w,c
  8011  00025E  22DA               	addwfc	fsr2h,f,c
  8012  000260  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8013  000264  CFDD F020          	movff	postdec2,??_checkCollision+3
  8014  000268  501D               	movf	??_checkCollision^0,w,c
  8015  00026A  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8016  00026C  501E               	movf	(??_checkCollision+1)^0,w,c
  8017  00026E  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8018  000270  5020               	movf	(??_checkCollision+3)^0,w,c
  8019  000272  E107               	bnz	u6811
  8020  000274  0E14               	movlw	20
  8021  000276  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8022  000278  B0D8               	btfsc	status,0,c
  8023  00027A  EF41  F001         	goto	u6811
  8024  00027E  EF43  F001         	goto	u6810
  8025  000282                     u6811:
  8026  000282  EF67  F001         	goto	l9712
  8027  000286                     u6810:
  8028  000286                     
  8029                           ;stateMachine/gameController.c: 164:                 {;stateMachine/gameController.c: 16
      +                          6:                     g->b.dy=-g->b.dy;
  8030  000286  EE20 F0D3          	lfsr	2,211
  8031  00028A  501B               	movf	checkCollision@g^0,w,c
  8032  00028C  26D9               	addwf	fsr2l,f,c
  8033  00028E  501C               	movf	(checkCollision@g+1)^0,w,c
  8034  000290  22DA               	addwfc	fsr2h,f,c
  8035  000292  CFDE F01D          	movff	postinc2,??_checkCollision
  8036  000296  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8037  00029A  1E1D               	comf	??_checkCollision^0,f,c
  8038  00029C  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8039  00029E  4A1D               	infsnz	??_checkCollision^0,f,c
  8040  0002A0  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8041  0002A2  EE20 F0D3          	lfsr	2,211
  8042  0002A6  501B               	movf	checkCollision@g^0,w,c
  8043  0002A8  26D9               	addwf	fsr2l,f,c
  8044  0002AA  501C               	movf	(checkCollision@g+1)^0,w,c
  8045  0002AC  22DA               	addwfc	fsr2h,f,c
  8046  0002AE  C01D  FFDE         	movff	??_checkCollision,postinc2
  8047  0002B2  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8048                           
  8049                           ;stateMachine/gameController.c: 167:                     g->b.dx=-1;
  8050  0002B6  EE20 F0D1          	lfsr	2,209
  8051  0002BA  501B               	movf	checkCollision@g^0,w,c
  8052  0002BC  26D9               	addwf	fsr2l,f,c
  8053  0002BE  501C               	movf	(checkCollision@g+1)^0,w,c
  8054  0002C0  22DA               	addwfc	fsr2h,f,c
  8055  0002C2  0EFF               	movlw	255
  8056  0002C4  6EDE               	movwf	postinc2,c
  8057  0002C6  0EFF               	movlw	255
  8058  0002C8  6EDD               	movwf	postdec2,c
  8059                           
  8060                           ;stateMachine/gameController.c: 168:                 }
  8061  0002CA  EF0D  F002         	goto	l670
  8062  0002CE                     l9712:
  8063  0002CE  EE20 F0D5          	lfsr	2,213
  8064  0002D2  501B               	movf	checkCollision@g^0,w,c
  8065  0002D4  26D9               	addwf	fsr2l,f,c
  8066  0002D6  501C               	movf	(checkCollision@g+1)^0,w,c
  8067  0002D8  22DA               	addwfc	fsr2h,f,c
  8068  0002DA  CFDE F01D          	movff	postinc2,??_checkCollision
  8069  0002DE  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8070  0002E2  EE20 F0C9          	lfsr	2,201
  8071  0002E6  501B               	movf	checkCollision@g^0,w,c
  8072  0002E8  26D9               	addwf	fsr2l,f,c
  8073  0002EA  501C               	movf	(checkCollision@g+1)^0,w,c
  8074  0002EC  22DA               	addwfc	fsr2h,f,c
  8075  0002EE  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8076  0002F2  CFDD F020          	movff	postdec2,??_checkCollision+3
  8077  0002F6  501D               	movf	??_checkCollision^0,w,c
  8078  0002F8  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8079  0002FA  501E               	movf	(??_checkCollision+1)^0,w,c
  8080  0002FC  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8081  0002FE  5020               	movf	(??_checkCollision+3)^0,w,c
  8082  000300  E107               	bnz	u6821
  8083  000302  0E1E               	movlw	30
  8084  000304  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8085  000306  B0D8               	btfsc	status,0,c
  8086  000308  EF88  F001         	goto	u6821
  8087  00030C  EF8A  F001         	goto	u6820
  8088  000310                     u6821:
  8089  000310  EFA4  F001         	goto	l9716
  8090  000314                     u6820:
  8091  000314                     
  8092                           ;stateMachine/gameController.c: 172:                     g->b.dy=-g->b.dy;
  8093  000314  EE20 F0D3          	lfsr	2,211
  8094  000318  501B               	movf	checkCollision@g^0,w,c
  8095  00031A  26D9               	addwf	fsr2l,f,c
  8096  00031C  501C               	movf	(checkCollision@g+1)^0,w,c
  8097  00031E  22DA               	addwfc	fsr2h,f,c
  8098  000320  CFDE F01D          	movff	postinc2,??_checkCollision
  8099  000324  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8100  000328  1E1D               	comf	??_checkCollision^0,f,c
  8101  00032A  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8102  00032C  4A1D               	infsnz	??_checkCollision^0,f,c
  8103  00032E  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8104  000330  EE20 F0D3          	lfsr	2,211
  8105  000334  501B               	movf	checkCollision@g^0,w,c
  8106  000336  26D9               	addwf	fsr2l,f,c
  8107  000338  501C               	movf	(checkCollision@g+1)^0,w,c
  8108  00033A  22DA               	addwfc	fsr2h,f,c
  8109  00033C  C01D  FFDE         	movff	??_checkCollision,postinc2
  8110  000340  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8111                           
  8112                           ;stateMachine/gameController.c: 173:                 }
  8113  000344  EF0D  F002         	goto	l670
  8114  000348                     l9716:
  8115  000348  EE20 F0D5          	lfsr	2,213
  8116  00034C  501B               	movf	checkCollision@g^0,w,c
  8117  00034E  26D9               	addwf	fsr2l,f,c
  8118  000350  501C               	movf	(checkCollision@g+1)^0,w,c
  8119  000352  22DA               	addwfc	fsr2h,f,c
  8120  000354  CFDE F01D          	movff	postinc2,??_checkCollision
  8121  000358  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8122  00035C  EE20 F0C9          	lfsr	2,201
  8123  000360  501B               	movf	checkCollision@g^0,w,c
  8124  000362  26D9               	addwf	fsr2l,f,c
  8125  000364  501C               	movf	(checkCollision@g+1)^0,w,c
  8126  000366  22DA               	addwfc	fsr2h,f,c
  8127  000368  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8128  00036C  CFDD F020          	movff	postdec2,??_checkCollision+3
  8129  000370  501D               	movf	??_checkCollision^0,w,c
  8130  000372  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8131  000374  501E               	movf	(??_checkCollision+1)^0,w,c
  8132  000376  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8133  000378  5020               	movf	(??_checkCollision+3)^0,w,c
  8134  00037A  E107               	bnz	u6831
  8135  00037C  0E28               	movlw	40
  8136  00037E  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8137  000380  B0D8               	btfsc	status,0,c
  8138  000382  EFC5  F001         	goto	u6831
  8139  000386  EFC7  F001         	goto	u6830
  8140  00038A                     u6831:
  8141  00038A  EFEB  F001         	goto	l9720
  8142  00038E                     u6830:
  8143  00038E                     
  8144                           ;stateMachine/gameController.c: 175:                 {;stateMachine/gameController.c: 17
      +                          7:                     g->b.dy=-g->b.dy;
  8145  00038E  EE20 F0D3          	lfsr	2,211
  8146  000392  501B               	movf	checkCollision@g^0,w,c
  8147  000394  26D9               	addwf	fsr2l,f,c
  8148  000396  501C               	movf	(checkCollision@g+1)^0,w,c
  8149  000398  22DA               	addwfc	fsr2h,f,c
  8150  00039A  CFDE F01D          	movff	postinc2,??_checkCollision
  8151  00039E  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8152  0003A2  1E1D               	comf	??_checkCollision^0,f,c
  8153  0003A4  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8154  0003A6  4A1D               	infsnz	??_checkCollision^0,f,c
  8155  0003A8  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8156  0003AA  EE20 F0D3          	lfsr	2,211
  8157  0003AE  501B               	movf	checkCollision@g^0,w,c
  8158  0003B0  26D9               	addwf	fsr2l,f,c
  8159  0003B2  501C               	movf	(checkCollision@g+1)^0,w,c
  8160  0003B4  22DA               	addwfc	fsr2h,f,c
  8161  0003B6  C01D  FFDE         	movff	??_checkCollision,postinc2
  8162  0003BA  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8163                           
  8164                           ;stateMachine/gameController.c: 178:                     g->b.dx=1;
  8165  0003BE  EE20 F0D1          	lfsr	2,209
  8166  0003C2  501B               	movf	checkCollision@g^0,w,c
  8167  0003C4  26D9               	addwf	fsr2l,f,c
  8168  0003C6  501C               	movf	(checkCollision@g+1)^0,w,c
  8169  0003C8  22DA               	addwfc	fsr2h,f,c
  8170  0003CA  0E01               	movlw	1
  8171  0003CC  6EDE               	movwf	postinc2,c
  8172  0003CE  0E00               	movlw	0
  8173  0003D0  6EDD               	movwf	postdec2,c
  8174                           
  8175                           ;stateMachine/gameController.c: 179:                 }
  8176  0003D2  EF0D  F002         	goto	l670
  8177  0003D6                     l9720:
  8178                           
  8179                           ;stateMachine/gameController.c: 181:                 {;stateMachine/gameController.c: 18
      +                          3:                     g->b.dy=-g->b.dy;
  8180  0003D6  EE20 F0D3          	lfsr	2,211
  8181  0003DA  501B               	movf	checkCollision@g^0,w,c
  8182  0003DC  26D9               	addwf	fsr2l,f,c
  8183  0003DE  501C               	movf	(checkCollision@g+1)^0,w,c
  8184  0003E0  22DA               	addwfc	fsr2h,f,c
  8185  0003E2  CFDE F01D          	movff	postinc2,??_checkCollision
  8186  0003E6  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8187  0003EA  1E1D               	comf	??_checkCollision^0,f,c
  8188  0003EC  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8189  0003EE  4A1D               	infsnz	??_checkCollision^0,f,c
  8190  0003F0  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8191  0003F2  EE20 F0D3          	lfsr	2,211
  8192  0003F6  501B               	movf	checkCollision@g^0,w,c
  8193  0003F8  26D9               	addwf	fsr2l,f,c
  8194  0003FA  501C               	movf	(checkCollision@g+1)^0,w,c
  8195  0003FC  22DA               	addwfc	fsr2h,f,c
  8196  0003FE  C01D  FFDE         	movff	??_checkCollision,postinc2
  8197  000402  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8198                           
  8199                           ;stateMachine/gameController.c: 184:                     g->b.dx=2;
  8200  000406  EE20 F0D1          	lfsr	2,209
  8201  00040A  501B               	movf	checkCollision@g^0,w,c
  8202  00040C  26D9               	addwf	fsr2l,f,c
  8203  00040E  501C               	movf	(checkCollision@g+1)^0,w,c
  8204  000410  22DA               	addwfc	fsr2h,f,c
  8205  000412  0E02               	movlw	2
  8206  000414  6EDE               	movwf	postinc2,c
  8207  000416  0E00               	movlw	0
  8208  000418  6EDD               	movwf	postdec2,c
  8209  00041A                     l670:
  8210                           
  8211                           ;stateMachine/gameController.c: 188:                 g->s1.homeScore++;
  8212  00041A  EE20 F0E9          	lfsr	2,233
  8213  00041E  501B               	movf	checkCollision@g^0,w,c
  8214  000420  26D9               	addwf	fsr2l,f,c
  8215  000422  501C               	movf	(checkCollision@g+1)^0,w,c
  8216  000424  22DA               	addwfc	fsr2h,f,c
  8217  000426  2ADE               	incf	postinc2,f,c
  8218  000428  0E00               	movlw	0
  8219  00042A  22DD               	addwfc	postdec2,f,c
  8220  00042C                     
  8221                           ;stateMachine/gameController.c: 189:                 XF_pushEvent(evRedrawScore,0);
  8222  00042C  0E00               	movlw	0
  8223  00042E  6E18               	movwf	XF_pushEvent@inISR^0,c
  8224  000430  0E0E               	movlw	14
  8225  000432  ECE0  F02E         	call	_XF_pushEvent
  8226  000436                     l9724:
  8227                           
  8228                           ;stateMachine/gameController.c: 195:     if(g->b.y-4<=g->p2.y+10 +1)
  8229  000436  0EFC               	movlw	252
  8230  000438  6E1D               	movwf	??_checkCollision^0,c
  8231  00043A  0EFF               	movlw	255
  8232  00043C  6E1E               	movwf	(??_checkCollision+1)^0,c
  8233  00043E  EE20 F0CB          	lfsr	2,203
  8234  000442  501B               	movf	checkCollision@g^0,w,c
  8235  000444  26D9               	addwf	fsr2l,f,c
  8236  000446  501C               	movf	(checkCollision@g+1)^0,w,c
  8237  000448  22DA               	addwfc	fsr2h,f,c
  8238  00044A  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8239  00044E  CFDD F020          	movff	postdec2,??_checkCollision+3
  8240  000452  501D               	movf	??_checkCollision^0,w,c
  8241  000454  261F               	addwf	(??_checkCollision+2)^0,f,c
  8242  000456  501E               	movf	(??_checkCollision+1)^0,w,c
  8243  000458  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8244  00045A  EE20 F0E1          	lfsr	2,225
  8245  00045E  501B               	movf	checkCollision@g^0,w,c
  8246  000460  26D9               	addwf	fsr2l,f,c
  8247  000462  501C               	movf	(checkCollision@g+1)^0,w,c
  8248  000464  22DA               	addwfc	fsr2h,f,c
  8249  000466  CFDE F021          	movff	postinc2,??_checkCollision+4
  8250  00046A  CFDD F022          	movff	postdec2,??_checkCollision+5
  8251  00046E  0E0B               	movlw	11
  8252  000470  2621               	addwf	(??_checkCollision+4)^0,f,c
  8253  000472  0E00               	movlw	0
  8254  000474  2222               	addwfc	(??_checkCollision+5)^0,f,c
  8255  000476  501F               	movf	(??_checkCollision+2)^0,w,c
  8256  000478  5C21               	subwf	(??_checkCollision+4)^0,w,c
  8257  00047A  5020               	movf	(??_checkCollision+3)^0,w,c
  8258  00047C  5822               	subwfb	(??_checkCollision+5)^0,w,c
  8259  00047E  A0D8               	btfss	status,0,c
  8260  000480  EF44  F002         	goto	u6841
  8261  000484  EF46  F002         	goto	u6840
  8262  000488                     u6841:
  8263  000488  EFD2  F003         	goto	l9750
  8264  00048C                     u6840:
  8265  00048C                     
  8266                           ;stateMachine/gameController.c: 196:     {;stateMachine/gameController.c: 197:         i
      +                          f(g->b.x+4>g->p2.x)
  8267  00048C  EE20 F0C9          	lfsr	2,201
  8268  000490  501B               	movf	checkCollision@g^0,w,c
  8269  000492  26D9               	addwf	fsr2l,f,c
  8270  000494  501C               	movf	(checkCollision@g+1)^0,w,c
  8271  000496  22DA               	addwfc	fsr2h,f,c
  8272  000498  CFDE F01D          	movff	postinc2,??_checkCollision
  8273  00049C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8274  0004A0  0E04               	movlw	4
  8275  0004A2  261D               	addwf	??_checkCollision^0,f,c
  8276  0004A4  0E00               	movlw	0
  8277  0004A6  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8278  0004A8  EE20 F0DF          	lfsr	2,223
  8279  0004AC  501B               	movf	checkCollision@g^0,w,c
  8280  0004AE  26D9               	addwf	fsr2l,f,c
  8281  0004B0  501C               	movf	(checkCollision@g+1)^0,w,c
  8282  0004B2  22DA               	addwfc	fsr2h,f,c
  8283  0004B4  501D               	movf	??_checkCollision^0,w,c
  8284  0004B6  5CDE               	subwf	postinc2,w,c
  8285  0004B8  501E               	movf	(??_checkCollision+1)^0,w,c
  8286  0004BA  58DE               	subwfb	postinc2,w,c
  8287  0004BC  B0D8               	btfsc	status,0,c
  8288  0004BE  EF63  F002         	goto	u6851
  8289  0004C2  EF65  F002         	goto	u6850
  8290  0004C6                     u6851:
  8291  0004C6  EFD2  F003         	goto	l9750
  8292  0004CA                     u6850:
  8293  0004CA                     
  8294                           ;stateMachine/gameController.c: 198:         {;stateMachine/gameController.c: 199:      
      +                                 if(g->b.x-4<g->p2.x+50)
  8295  0004CA  EE20 F0DF          	lfsr	2,223
  8296  0004CE  501B               	movf	checkCollision@g^0,w,c
  8297  0004D0  26D9               	addwf	fsr2l,f,c
  8298  0004D2  501C               	movf	(checkCollision@g+1)^0,w,c
  8299  0004D4  22DA               	addwfc	fsr2h,f,c
  8300  0004D6  CFDE F01D          	movff	postinc2,??_checkCollision
  8301  0004DA  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8302  0004DE  0E32               	movlw	50
  8303  0004E0  261D               	addwf	??_checkCollision^0,f,c
  8304  0004E2  0E00               	movlw	0
  8305  0004E4  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8306  0004E6  0EFC               	movlw	252
  8307  0004E8  6E1F               	movwf	(??_checkCollision+2)^0,c
  8308  0004EA  0EFF               	movlw	255
  8309  0004EC  6E20               	movwf	(??_checkCollision+3)^0,c
  8310  0004EE  EE20 F0C9          	lfsr	2,201
  8311  0004F2  501B               	movf	checkCollision@g^0,w,c
  8312  0004F4  26D9               	addwf	fsr2l,f,c
  8313  0004F6  501C               	movf	(checkCollision@g+1)^0,w,c
  8314  0004F8  22DA               	addwfc	fsr2h,f,c
  8315  0004FA  CFDE F021          	movff	postinc2,??_checkCollision+4
  8316  0004FE  CFDD F022          	movff	postdec2,??_checkCollision+5
  8317  000502  501F               	movf	(??_checkCollision+2)^0,w,c
  8318  000504  2621               	addwf	(??_checkCollision+4)^0,f,c
  8319  000506  5020               	movf	(??_checkCollision+3)^0,w,c
  8320  000508  2222               	addwfc	(??_checkCollision+5)^0,f,c
  8321  00050A  501D               	movf	??_checkCollision^0,w,c
  8322  00050C  5C21               	subwf	(??_checkCollision+4)^0,w,c
  8323  00050E  501E               	movf	(??_checkCollision+1)^0,w,c
  8324  000510  5822               	subwfb	(??_checkCollision+5)^0,w,c
  8325  000512  B0D8               	btfsc	status,0,c
  8326  000514  EF8E  F002         	goto	u6861
  8327  000518  EF90  F002         	goto	u6860
  8328  00051C                     u6861:
  8329  00051C  EFD2  F003         	goto	l9750
  8330  000520                     u6860:
  8331  000520                     
  8332                           ;stateMachine/gameController.c: 200:             {;stateMachine/gameController.c: 201:  
      +                                         if(g->b.x-g->p2.x<10)
  8333  000520  EE20 F0DF          	lfsr	2,223
  8334  000524  501B               	movf	checkCollision@g^0,w,c
  8335  000526  26D9               	addwf	fsr2l,f,c
  8336  000528  501C               	movf	(checkCollision@g+1)^0,w,c
  8337  00052A  22DA               	addwfc	fsr2h,f,c
  8338  00052C  CFDE F01D          	movff	postinc2,??_checkCollision
  8339  000530  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8340  000534  EE20 F0C9          	lfsr	2,201
  8341  000538  501B               	movf	checkCollision@g^0,w,c
  8342  00053A  26D9               	addwf	fsr2l,f,c
  8343  00053C  501C               	movf	(checkCollision@g+1)^0,w,c
  8344  00053E  22DA               	addwfc	fsr2h,f,c
  8345  000540  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8346  000544  CFDD F020          	movff	postdec2,??_checkCollision+3
  8347  000548  501D               	movf	??_checkCollision^0,w,c
  8348  00054A  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8349  00054C  501E               	movf	(??_checkCollision+1)^0,w,c
  8350  00054E  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8351  000550  5020               	movf	(??_checkCollision+3)^0,w,c
  8352  000552  E107               	bnz	u6871
  8353  000554  0E0A               	movlw	10
  8354  000556  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8355  000558  B0D8               	btfsc	status,0,c
  8356  00055A  EFB1  F002         	goto	u6871
  8357  00055E  EFB3  F002         	goto	u6870
  8358  000562                     u6871:
  8359  000562  EFD7  F002         	goto	l9734
  8360  000566                     u6870:
  8361  000566                     
  8362                           ;stateMachine/gameController.c: 202:                 {;stateMachine/gameController.c: 20
      +                          4:                     g->b.dy=-g->b.dy;
  8363  000566  EE20 F0D3          	lfsr	2,211
  8364  00056A  501B               	movf	checkCollision@g^0,w,c
  8365  00056C  26D9               	addwf	fsr2l,f,c
  8366  00056E  501C               	movf	(checkCollision@g+1)^0,w,c
  8367  000570  22DA               	addwfc	fsr2h,f,c
  8368  000572  CFDE F01D          	movff	postinc2,??_checkCollision
  8369  000576  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8370  00057A  1E1D               	comf	??_checkCollision^0,f,c
  8371  00057C  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8372  00057E  4A1D               	infsnz	??_checkCollision^0,f,c
  8373  000580  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8374  000582  EE20 F0D3          	lfsr	2,211
  8375  000586  501B               	movf	checkCollision@g^0,w,c
  8376  000588  26D9               	addwf	fsr2l,f,c
  8377  00058A  501C               	movf	(checkCollision@g+1)^0,w,c
  8378  00058C  22DA               	addwfc	fsr2h,f,c
  8379  00058E  C01D  FFDE         	movff	??_checkCollision,postinc2
  8380  000592  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8381                           
  8382                           ;stateMachine/gameController.c: 205:                     g->b.dx=-2;
  8383  000596  EE20 F0D1          	lfsr	2,209
  8384  00059A  501B               	movf	checkCollision@g^0,w,c
  8385  00059C  26D9               	addwf	fsr2l,f,c
  8386  00059E  501C               	movf	(checkCollision@g+1)^0,w,c
  8387  0005A0  22DA               	addwfc	fsr2h,f,c
  8388  0005A2  0EFE               	movlw	254
  8389  0005A4  6EDE               	movwf	postinc2,c
  8390  0005A6  0EFF               	movlw	255
  8391  0005A8  6EDD               	movwf	postdec2,c
  8392                           
  8393                           ;stateMachine/gameController.c: 206:                 }
  8394  0005AA  EFC4  F003         	goto	l681
  8395  0005AE                     l9734:
  8396  0005AE  EE20 F0DF          	lfsr	2,223
  8397  0005B2  501B               	movf	checkCollision@g^0,w,c
  8398  0005B4  26D9               	addwf	fsr2l,f,c
  8399  0005B6  501C               	movf	(checkCollision@g+1)^0,w,c
  8400  0005B8  22DA               	addwfc	fsr2h,f,c
  8401  0005BA  CFDE F01D          	movff	postinc2,??_checkCollision
  8402  0005BE  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8403  0005C2  EE20 F0C9          	lfsr	2,201
  8404  0005C6  501B               	movf	checkCollision@g^0,w,c
  8405  0005C8  26D9               	addwf	fsr2l,f,c
  8406  0005CA  501C               	movf	(checkCollision@g+1)^0,w,c
  8407  0005CC  22DA               	addwfc	fsr2h,f,c
  8408  0005CE  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8409  0005D2  CFDD F020          	movff	postdec2,??_checkCollision+3
  8410  0005D6  501D               	movf	??_checkCollision^0,w,c
  8411  0005D8  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8412  0005DA  501E               	movf	(??_checkCollision+1)^0,w,c
  8413  0005DC  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8414  0005DE  5020               	movf	(??_checkCollision+3)^0,w,c
  8415  0005E0  E107               	bnz	u6881
  8416  0005E2  0E14               	movlw	20
  8417  0005E4  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8418  0005E6  B0D8               	btfsc	status,0,c
  8419  0005E8  EFF8  F002         	goto	u6881
  8420  0005EC  EFFA  F002         	goto	u6880
  8421  0005F0                     u6881:
  8422  0005F0  EF1E  F003         	goto	l9738
  8423  0005F4                     u6880:
  8424  0005F4                     
  8425                           ;stateMachine/gameController.c: 208:                 {;stateMachine/gameController.c: 21
      +                          0:                     g->b.dy=-g->b.dy;
  8426  0005F4  EE20 F0D3          	lfsr	2,211
  8427  0005F8  501B               	movf	checkCollision@g^0,w,c
  8428  0005FA  26D9               	addwf	fsr2l,f,c
  8429  0005FC  501C               	movf	(checkCollision@g+1)^0,w,c
  8430  0005FE  22DA               	addwfc	fsr2h,f,c
  8431  000600  CFDE F01D          	movff	postinc2,??_checkCollision
  8432  000604  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8433  000608  1E1D               	comf	??_checkCollision^0,f,c
  8434  00060A  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8435  00060C  4A1D               	infsnz	??_checkCollision^0,f,c
  8436  00060E  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8437  000610  EE20 F0D3          	lfsr	2,211
  8438  000614  501B               	movf	checkCollision@g^0,w,c
  8439  000616  26D9               	addwf	fsr2l,f,c
  8440  000618  501C               	movf	(checkCollision@g+1)^0,w,c
  8441  00061A  22DA               	addwfc	fsr2h,f,c
  8442  00061C  C01D  FFDE         	movff	??_checkCollision,postinc2
  8443  000620  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8444                           
  8445                           ;stateMachine/gameController.c: 211:                     g->b.dx=-1;
  8446  000624  EE20 F0D1          	lfsr	2,209
  8447  000628  501B               	movf	checkCollision@g^0,w,c
  8448  00062A  26D9               	addwf	fsr2l,f,c
  8449  00062C  501C               	movf	(checkCollision@g+1)^0,w,c
  8450  00062E  22DA               	addwfc	fsr2h,f,c
  8451  000630  0EFF               	movlw	255
  8452  000632  6EDE               	movwf	postinc2,c
  8453  000634  0EFF               	movlw	255
  8454  000636  6EDD               	movwf	postdec2,c
  8455                           
  8456                           ;stateMachine/gameController.c: 212:                 }
  8457  000638  EFC4  F003         	goto	l681
  8458  00063C                     l9738:
  8459  00063C  EE20 F0DF          	lfsr	2,223
  8460  000640  501B               	movf	checkCollision@g^0,w,c
  8461  000642  26D9               	addwf	fsr2l,f,c
  8462  000644  501C               	movf	(checkCollision@g+1)^0,w,c
  8463  000646  22DA               	addwfc	fsr2h,f,c
  8464  000648  CFDE F01D          	movff	postinc2,??_checkCollision
  8465  00064C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8466  000650  EE20 F0C9          	lfsr	2,201
  8467  000654  501B               	movf	checkCollision@g^0,w,c
  8468  000656  26D9               	addwf	fsr2l,f,c
  8469  000658  501C               	movf	(checkCollision@g+1)^0,w,c
  8470  00065A  22DA               	addwfc	fsr2h,f,c
  8471  00065C  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8472  000660  CFDD F020          	movff	postdec2,??_checkCollision+3
  8473  000664  501D               	movf	??_checkCollision^0,w,c
  8474  000666  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8475  000668  501E               	movf	(??_checkCollision+1)^0,w,c
  8476  00066A  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8477  00066C  5020               	movf	(??_checkCollision+3)^0,w,c
  8478  00066E  E107               	bnz	u6891
  8479  000670  0E1E               	movlw	30
  8480  000672  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8481  000674  B0D8               	btfsc	status,0,c
  8482  000676  EF3F  F003         	goto	u6891
  8483  00067A  EF41  F003         	goto	u6890
  8484  00067E                     u6891:
  8485  00067E  EF5B  F003         	goto	l9742
  8486  000682                     u6890:
  8487  000682                     
  8488                           ;stateMachine/gameController.c: 216:                     g->b.dy=-g->b.dy;
  8489  000682  EE20 F0D3          	lfsr	2,211
  8490  000686  501B               	movf	checkCollision@g^0,w,c
  8491  000688  26D9               	addwf	fsr2l,f,c
  8492  00068A  501C               	movf	(checkCollision@g+1)^0,w,c
  8493  00068C  22DA               	addwfc	fsr2h,f,c
  8494  00068E  CFDE F01D          	movff	postinc2,??_checkCollision
  8495  000692  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8496  000696  1E1D               	comf	??_checkCollision^0,f,c
  8497  000698  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8498  00069A  4A1D               	infsnz	??_checkCollision^0,f,c
  8499  00069C  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8500  00069E  EE20 F0D3          	lfsr	2,211
  8501  0006A2  501B               	movf	checkCollision@g^0,w,c
  8502  0006A4  26D9               	addwf	fsr2l,f,c
  8503  0006A6  501C               	movf	(checkCollision@g+1)^0,w,c
  8504  0006A8  22DA               	addwfc	fsr2h,f,c
  8505  0006AA  C01D  FFDE         	movff	??_checkCollision,postinc2
  8506  0006AE  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8507                           
  8508                           ;stateMachine/gameController.c: 217:                 }
  8509  0006B2  EFC4  F003         	goto	l681
  8510  0006B6                     l9742:
  8511  0006B6  EE20 F0DF          	lfsr	2,223
  8512  0006BA  501B               	movf	checkCollision@g^0,w,c
  8513  0006BC  26D9               	addwf	fsr2l,f,c
  8514  0006BE  501C               	movf	(checkCollision@g+1)^0,w,c
  8515  0006C0  22DA               	addwfc	fsr2h,f,c
  8516  0006C2  CFDE F01D          	movff	postinc2,??_checkCollision
  8517  0006C6  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8518  0006CA  EE20 F0C9          	lfsr	2,201
  8519  0006CE  501B               	movf	checkCollision@g^0,w,c
  8520  0006D0  26D9               	addwf	fsr2l,f,c
  8521  0006D2  501C               	movf	(checkCollision@g+1)^0,w,c
  8522  0006D4  22DA               	addwfc	fsr2h,f,c
  8523  0006D6  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8524  0006DA  CFDD F020          	movff	postdec2,??_checkCollision+3
  8525  0006DE  501D               	movf	??_checkCollision^0,w,c
  8526  0006E0  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8527  0006E2  501E               	movf	(??_checkCollision+1)^0,w,c
  8528  0006E4  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8529  0006E6  5020               	movf	(??_checkCollision+3)^0,w,c
  8530  0006E8  E107               	bnz	u6901
  8531  0006EA  0E28               	movlw	40
  8532  0006EC  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8533  0006EE  B0D8               	btfsc	status,0,c
  8534  0006F0  EF7C  F003         	goto	u6901
  8535  0006F4  EF7E  F003         	goto	u6900
  8536  0006F8                     u6901:
  8537  0006F8  EFA2  F003         	goto	l9746
  8538  0006FC                     u6900:
  8539  0006FC                     
  8540                           ;stateMachine/gameController.c: 219:                 {;stateMachine/gameController.c: 22
      +                          1:                     g->b.dy=-g->b.dy;
  8541  0006FC  EE20 F0D3          	lfsr	2,211
  8542  000700  501B               	movf	checkCollision@g^0,w,c
  8543  000702  26D9               	addwf	fsr2l,f,c
  8544  000704  501C               	movf	(checkCollision@g+1)^0,w,c
  8545  000706  22DA               	addwfc	fsr2h,f,c
  8546  000708  CFDE F01D          	movff	postinc2,??_checkCollision
  8547  00070C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8548  000710  1E1D               	comf	??_checkCollision^0,f,c
  8549  000712  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8550  000714  4A1D               	infsnz	??_checkCollision^0,f,c
  8551  000716  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8552  000718  EE20 F0D3          	lfsr	2,211
  8553  00071C  501B               	movf	checkCollision@g^0,w,c
  8554  00071E  26D9               	addwf	fsr2l,f,c
  8555  000720  501C               	movf	(checkCollision@g+1)^0,w,c
  8556  000722  22DA               	addwfc	fsr2h,f,c
  8557  000724  C01D  FFDE         	movff	??_checkCollision,postinc2
  8558  000728  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8559                           
  8560                           ;stateMachine/gameController.c: 222:                     g->b.dx=1;
  8561  00072C  EE20 F0D1          	lfsr	2,209
  8562  000730  501B               	movf	checkCollision@g^0,w,c
  8563  000732  26D9               	addwf	fsr2l,f,c
  8564  000734  501C               	movf	(checkCollision@g+1)^0,w,c
  8565  000736  22DA               	addwfc	fsr2h,f,c
  8566  000738  0E01               	movlw	1
  8567  00073A  6EDE               	movwf	postinc2,c
  8568  00073C  0E00               	movlw	0
  8569  00073E  6EDD               	movwf	postdec2,c
  8570                           
  8571                           ;stateMachine/gameController.c: 223:                 }
  8572  000740  EFC4  F003         	goto	l681
  8573  000744                     l9746:
  8574                           
  8575                           ;stateMachine/gameController.c: 225:                 {;stateMachine/gameController.c: 22
      +                          7:                     g->b.dy=-g->b.dy;
  8576  000744  EE20 F0D3          	lfsr	2,211
  8577  000748  501B               	movf	checkCollision@g^0,w,c
  8578  00074A  26D9               	addwf	fsr2l,f,c
  8579  00074C  501C               	movf	(checkCollision@g+1)^0,w,c
  8580  00074E  22DA               	addwfc	fsr2h,f,c
  8581  000750  CFDE F01D          	movff	postinc2,??_checkCollision
  8582  000754  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8583  000758  1E1D               	comf	??_checkCollision^0,f,c
  8584  00075A  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8585  00075C  4A1D               	infsnz	??_checkCollision^0,f,c
  8586  00075E  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8587  000760  EE20 F0D3          	lfsr	2,211
  8588  000764  501B               	movf	checkCollision@g^0,w,c
  8589  000766  26D9               	addwf	fsr2l,f,c
  8590  000768  501C               	movf	(checkCollision@g+1)^0,w,c
  8591  00076A  22DA               	addwfc	fsr2h,f,c
  8592  00076C  C01D  FFDE         	movff	??_checkCollision,postinc2
  8593  000770  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8594                           
  8595                           ;stateMachine/gameController.c: 228:                     g->b.dx=2;
  8596  000774  EE20 F0D1          	lfsr	2,209
  8597  000778  501B               	movf	checkCollision@g^0,w,c
  8598  00077A  26D9               	addwf	fsr2l,f,c
  8599  00077C  501C               	movf	(checkCollision@g+1)^0,w,c
  8600  00077E  22DA               	addwfc	fsr2h,f,c
  8601  000780  0E02               	movlw	2
  8602  000782  6EDE               	movwf	postinc2,c
  8603  000784  0E00               	movlw	0
  8604  000786  6EDD               	movwf	postdec2,c
  8605  000788                     l681:
  8606                           
  8607                           ;stateMachine/gameController.c: 231:                 g->s1.awayScore++;
  8608  000788  EE20 F0EB          	lfsr	2,235
  8609  00078C  501B               	movf	checkCollision@g^0,w,c
  8610  00078E  26D9               	addwf	fsr2l,f,c
  8611  000790  501C               	movf	(checkCollision@g+1)^0,w,c
  8612  000792  22DA               	addwfc	fsr2h,f,c
  8613  000794  2ADE               	incf	postinc2,f,c
  8614  000796  0E00               	movlw	0
  8615  000798  22DD               	addwfc	postdec2,f,c
  8616  00079A                     
  8617                           ;stateMachine/gameController.c: 232:                 XF_pushEvent(evRedrawScore,0);
  8618  00079A  0E00               	movlw	0
  8619  00079C  6E18               	movwf	XF_pushEvent@inISR^0,c
  8620  00079E  0E0E               	movlw	14
  8621  0007A0  ECE0  F02E         	call	_XF_pushEvent
  8622  0007A4                     l9750:
  8623                           
  8624                           ;stateMachine/gameController.c: 237:     if(g->b.x+4>=239)
  8625  0007A4  EE20 F0C9          	lfsr	2,201
  8626  0007A8  501B               	movf	checkCollision@g^0,w,c
  8627  0007AA  26D9               	addwf	fsr2l,f,c
  8628  0007AC  501C               	movf	(checkCollision@g+1)^0,w,c
  8629  0007AE  22DA               	addwfc	fsr2h,f,c
  8630  0007B0  CFDE F01D          	movff	postinc2,??_checkCollision
  8631  0007B4  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8632  0007B8  0E04               	movlw	4
  8633  0007BA  261D               	addwf	??_checkCollision^0,f,c
  8634  0007BC  0E00               	movlw	0
  8635  0007BE  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8636  0007C0  501E               	movf	(??_checkCollision+1)^0,w,c
  8637  0007C2  E109               	bnz	u6910
  8638  0007C4  0EEF               	movlw	239
  8639  0007C6  5C1D               	subwf	??_checkCollision^0,w,c
  8640  0007C8  A0D8               	btfss	status,0,c
  8641  0007CA  EFE9  F003         	goto	u6911
  8642  0007CE  EFEB  F003         	goto	u6910
  8643  0007D2                     u6911:
  8644  0007D2  EF03  F004         	goto	l688
  8645  0007D6                     u6910:
  8646  0007D6                     
  8647                           ;stateMachine/gameController.c: 238:     {;stateMachine/gameController.c: 239:         g
      +                          ->b.dx=-g->b.dx;
  8648  0007D6  EE20 F0D1          	lfsr	2,209
  8649  0007DA  501B               	movf	checkCollision@g^0,w,c
  8650  0007DC  26D9               	addwf	fsr2l,f,c
  8651  0007DE  501C               	movf	(checkCollision@g+1)^0,w,c
  8652  0007E0  22DA               	addwfc	fsr2h,f,c
  8653  0007E2  CFDE F01D          	movff	postinc2,??_checkCollision
  8654  0007E6  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8655  0007EA  1E1D               	comf	??_checkCollision^0,f,c
  8656  0007EC  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8657  0007EE  4A1D               	infsnz	??_checkCollision^0,f,c
  8658  0007F0  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8659  0007F2  EE20 F0D1          	lfsr	2,209
  8660  0007F6  501B               	movf	checkCollision@g^0,w,c
  8661  0007F8  26D9               	addwf	fsr2l,f,c
  8662  0007FA  501C               	movf	(checkCollision@g+1)^0,w,c
  8663  0007FC  22DA               	addwfc	fsr2h,f,c
  8664  0007FE  C01D  FFDE         	movff	??_checkCollision,postinc2
  8665  000802  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8666  000806                     l688:
  8667                           
  8668                           ;stateMachine/gameController.c: 241:     if(g->b.x-4<=0)
  8669  000806  0EFC               	movlw	252
  8670  000808  6E1D               	movwf	??_checkCollision^0,c
  8671  00080A  0EFF               	movlw	255
  8672  00080C  6E1E               	movwf	(??_checkCollision+1)^0,c
  8673  00080E  EE20 F0C9          	lfsr	2,201
  8674  000812  501B               	movf	checkCollision@g^0,w,c
  8675  000814  26D9               	addwf	fsr2l,f,c
  8676  000816  501C               	movf	(checkCollision@g+1)^0,w,c
  8677  000818  22DA               	addwfc	fsr2h,f,c
  8678  00081A  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8679  00081E  CFDD F020          	movff	postdec2,??_checkCollision+3
  8680  000822  501D               	movf	??_checkCollision^0,w,c
  8681  000824  261F               	addwf	(??_checkCollision+2)^0,f,c
  8682  000826  501E               	movf	(??_checkCollision+1)^0,w,c
  8683  000828  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8684  00082A  501F               	movf	(??_checkCollision+2)^0,w,c
  8685  00082C  1020               	iorwf	(??_checkCollision+3)^0,w,c
  8686  00082E  A4D8               	btfss	status,2,c
  8687  000830  EF1C  F004         	goto	u6921
  8688  000834  EF1E  F004         	goto	u6920
  8689  000838                     u6921:
  8690  000838  EF36  F004         	goto	l689
  8691  00083C                     u6920:
  8692  00083C                     
  8693                           ;stateMachine/gameController.c: 242:     {;stateMachine/gameController.c: 243:         g
      +                          ->b.dx=-g->b.dx;
  8694  00083C  EE20 F0D1          	lfsr	2,209
  8695  000840  501B               	movf	checkCollision@g^0,w,c
  8696  000842  26D9               	addwf	fsr2l,f,c
  8697  000844  501C               	movf	(checkCollision@g+1)^0,w,c
  8698  000846  22DA               	addwfc	fsr2h,f,c
  8699  000848  CFDE F01D          	movff	postinc2,??_checkCollision
  8700  00084C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8701  000850  1E1D               	comf	??_checkCollision^0,f,c
  8702  000852  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8703  000854  4A1D               	infsnz	??_checkCollision^0,f,c
  8704  000856  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8705  000858  EE20 F0D1          	lfsr	2,209
  8706  00085C  501B               	movf	checkCollision@g^0,w,c
  8707  00085E  26D9               	addwf	fsr2l,f,c
  8708  000860  501C               	movf	(checkCollision@g+1)^0,w,c
  8709  000862  22DA               	addwfc	fsr2h,f,c
  8710  000864  C01D  FFDE         	movff	??_checkCollision,postinc2
  8711  000868  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8712  00086C                     l689:
  8713                           
  8714                           ;stateMachine/gameController.c: 246:     if(g->b.y-4<=g->p2.y-5)
  8715  00086C  0EFC               	movlw	252
  8716  00086E  6E1D               	movwf	??_checkCollision^0,c
  8717  000870  0EFF               	movlw	255
  8718  000872  6E1E               	movwf	(??_checkCollision+1)^0,c
  8719  000874  EE20 F0CB          	lfsr	2,203
  8720  000878  501B               	movf	checkCollision@g^0,w,c
  8721  00087A  26D9               	addwf	fsr2l,f,c
  8722  00087C  501C               	movf	(checkCollision@g+1)^0,w,c
  8723  00087E  22DA               	addwfc	fsr2h,f,c
  8724  000880  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8725  000884  CFDD F020          	movff	postdec2,??_checkCollision+3
  8726  000888  501D               	movf	??_checkCollision^0,w,c
  8727  00088A  261F               	addwf	(??_checkCollision+2)^0,f,c
  8728  00088C  501E               	movf	(??_checkCollision+1)^0,w,c
  8729  00088E  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8730  000890  0EFB               	movlw	251
  8731  000892  6E21               	movwf	(??_checkCollision+4)^0,c
  8732  000894  0EFF               	movlw	255
  8733  000896  6E22               	movwf	(??_checkCollision+5)^0,c
  8734  000898  EE20 F0E1          	lfsr	2,225
  8735  00089C  501B               	movf	checkCollision@g^0,w,c
  8736  00089E  26D9               	addwf	fsr2l,f,c
  8737  0008A0  501C               	movf	(checkCollision@g+1)^0,w,c
  8738  0008A2  22DA               	addwfc	fsr2h,f,c
  8739  0008A4  CFDE F023          	movff	postinc2,??_checkCollision+6
  8740  0008A8  CFDD F024          	movff	postdec2,??_checkCollision+7
  8741  0008AC  5021               	movf	(??_checkCollision+4)^0,w,c
  8742  0008AE  2623               	addwf	(??_checkCollision+6)^0,f,c
  8743  0008B0  5022               	movf	(??_checkCollision+5)^0,w,c
  8744  0008B2  2224               	addwfc	(??_checkCollision+7)^0,f,c
  8745  0008B4  501F               	movf	(??_checkCollision+2)^0,w,c
  8746  0008B6  5C23               	subwf	(??_checkCollision+6)^0,w,c
  8747  0008B8  5020               	movf	(??_checkCollision+3)^0,w,c
  8748  0008BA  5824               	subwfb	(??_checkCollision+7)^0,w,c
  8749  0008BC  A0D8               	btfss	status,0,c
  8750  0008BE  EF63  F004         	goto	u6931
  8751  0008C2  EF65  F004         	goto	u6930
  8752  0008C6                     u6931:
  8753  0008C6  EF76  F004         	goto	l9762
  8754  0008CA                     u6930:
  8755  0008CA                     
  8756                           ;stateMachine/gameController.c: 247:     {;stateMachine/gameController.c: 249:         X
      +                          F_pushEvent(evEndGame,0);
  8757  0008CA  0E00               	movlw	0
  8758  0008CC  6E18               	movwf	XF_pushEvent@inISR^0,c
  8759  0008CE  0E09               	movlw	9
  8760  0008D0  ECE0  F02E         	call	_XF_pushEvent
  8761  0008D4                     
  8762                           ;stateMachine/gameController.c: 250:         g->s1.awayScore=0;
  8763  0008D4  EE20 F0EB          	lfsr	2,235
  8764  0008D8  501B               	movf	checkCollision@g^0,w,c
  8765  0008DA  26D9               	addwf	fsr2l,f,c
  8766  0008DC  501C               	movf	(checkCollision@g+1)^0,w,c
  8767  0008DE  22DA               	addwfc	fsr2h,f,c
  8768  0008E0  0E00               	movlw	0
  8769  0008E2  6EDE               	movwf	postinc2,c
  8770  0008E4  0E00               	movlw	0
  8771  0008E6  6EDD               	movwf	postdec2,c
  8772  0008E8                     
  8773                           ;stateMachine/gameController.c: 251:         gameControllerState=ENDGAME;
  8774  0008E8  0E04               	movlw	4
  8775  0008EA  6E4D               	movwf	_gameControllerState^0,c
  8776  0008EC                     l9762:
  8777                           
  8778                           ;stateMachine/gameController.c: 253:     if(g->b.y+4>=g->p1.y+5)
  8779  0008EC  EE20 F0D7          	lfsr	2,215
  8780  0008F0  501B               	movf	checkCollision@g^0,w,c
  8781  0008F2  26D9               	addwf	fsr2l,f,c
  8782  0008F4  501C               	movf	(checkCollision@g+1)^0,w,c
  8783  0008F6  22DA               	addwfc	fsr2h,f,c
  8784  0008F8  CFDE F01D          	movff	postinc2,??_checkCollision
  8785  0008FC  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8786  000900  0E05               	movlw	5
  8787  000902  261D               	addwf	??_checkCollision^0,f,c
  8788  000904  0E00               	movlw	0
  8789  000906  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8790  000908  EE20 F0CB          	lfsr	2,203
  8791  00090C  501B               	movf	checkCollision@g^0,w,c
  8792  00090E  26D9               	addwf	fsr2l,f,c
  8793  000910  501C               	movf	(checkCollision@g+1)^0,w,c
  8794  000912  22DA               	addwfc	fsr2h,f,c
  8795  000914  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8796  000918  CFDD F020          	movff	postdec2,??_checkCollision+3
  8797  00091C  0E04               	movlw	4
  8798  00091E  261F               	addwf	(??_checkCollision+2)^0,f,c
  8799  000920  0E00               	movlw	0
  8800  000922  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8801  000924  501D               	movf	??_checkCollision^0,w,c
  8802  000926  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8803  000928  501E               	movf	(??_checkCollision+1)^0,w,c
  8804  00092A  5820               	subwfb	(??_checkCollision+3)^0,w,c
  8805  00092C  A0D8               	btfss	status,0,c
  8806  00092E  EF9B  F004         	goto	u6941
  8807  000932  EF9D  F004         	goto	u6940
  8808  000936                     u6941:
  8809  000936  EFAE  F004         	goto	l692
  8810  00093A                     u6940:
  8811  00093A                     
  8812                           ;stateMachine/gameController.c: 254:     {;stateMachine/gameController.c: 256:         X
      +                          F_pushEvent(evEndGame,0);
  8813  00093A  0E00               	movlw	0
  8814  00093C  6E18               	movwf	XF_pushEvent@inISR^0,c
  8815  00093E  0E09               	movlw	9
  8816  000940  ECE0  F02E         	call	_XF_pushEvent
  8817  000944                     
  8818                           ;stateMachine/gameController.c: 257:         g->s1.homeScore=0;
  8819  000944  EE20 F0E9          	lfsr	2,233
  8820  000948  501B               	movf	checkCollision@g^0,w,c
  8821  00094A  26D9               	addwf	fsr2l,f,c
  8822  00094C  501C               	movf	(checkCollision@g+1)^0,w,c
  8823  00094E  22DA               	addwfc	fsr2h,f,c
  8824  000950  0E00               	movlw	0
  8825  000952  6EDE               	movwf	postinc2,c
  8826  000954  0E00               	movlw	0
  8827  000956  6EDD               	movwf	postdec2,c
  8828  000958                     
  8829                           ;stateMachine/gameController.c: 258:         gameControllerState=ENDGAME;
  8830  000958  0E04               	movlw	4
  8831  00095A  6E4D               	movwf	_gameControllerState^0,c
  8832  00095C                     l692:
  8833  00095C  0012               	return		;funcret
  8834  00095E                     __end_of_checkCollision:
  8835                           	callstack 0
  8836                           
  8837 ;; *************** function _XF_pushEvent *****************
  8838 ;; Defined at:
  8839 ;;		line 49 in file "xf/xf.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;  ev              1    wreg     unsigned char 
  8842 ;;  inISR           1   23[COMRAM] _Bool 
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;  ev              1   24[COMRAM] unsigned char 
  8845 ;;  temp            1   25[COMRAM] unsigned char 
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  1    wreg      _Bool 
  8848 ;; Registers used:
  8849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8855 ;;      Params:         1       0       0       0       0       0       0
  8856 ;;      Locals:         2       0       0       0       0       0       0
  8857 ;;      Temps:          0       0       0       0       0       0       0
  8858 ;;      Totals:         3       0       0       0       0       0       0
  8859 ;;Total ram usage:        3 bytes
  8860 ;; Hardware stack levels used: 1
  8861 ;; Hardware stack levels required when called: 5
  8862 ;; This function calls:
  8863 ;;		_ENTERCRITICAL
  8864 ;;		_LEAVECRITICAL
  8865 ;;		___awmod
  8866 ;; This function is called by:
  8867 ;;		_gameControllerController
  8868 ;;		_moovePaddle
  8869 ;;		_mooveBall
  8870 ;;		_checkCollision
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           	psect	text30
  8875  005DC0                     __ptext30:
  8876                           	callstack 0
  8877  005DC0                     _XF_pushEvent:
  8878                           	callstack 20
  8879                           
  8880                           ;incstack = 0
  8881                           ;XF_pushEvent@ev stored from wreg
  8882  005DC0  6E19               	movwf	XF_pushEvent@ev^0,c
  8883  005DC2                     
  8884                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
  8885  005DC2  5018               	movf	XF_pushEvent@inISR^0,w,c
  8886  005DC4  EC17  F032         	call	_ENTERCRITICAL
  8887  005DC8                     
  8888                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
  8889  005DC8  0E01               	movlw	1
  8890  005DCA  0100               	movlb	0	; () banked
  8891  005DCC  25D9               	addwf	(_theXF+36)& (0+255),w,b
  8892  005DCE  6E12               	movwf	___awmod@dividend^0,c
  8893  005DD0  6A13               	clrf	(___awmod@dividend+1)^0,c
  8894  005DD2  0E00               	movlw	0
  8895  005DD4  2213               	addwfc	(___awmod@dividend+1)^0,f,c
  8896  005DD6  0E00               	movlw	0
  8897  005DD8  6E15               	movwf	(___awmod@divisor+1)^0,c
  8898  005DDA  0E0C               	movlw	12
  8899  005DDC  6E14               	movwf	___awmod@divisor^0,c
  8900  005DDE  EC9F  F02B         	call	___awmod	;wreg free
  8901  005DE2  5012               	movf	?___awmod^0,w,c
  8902  005DE4  6E1A               	movwf	XF_pushEvent@temp^0,c
  8903  005DE6                     
  8904                           ;xf/xf.c: 55:     if(temp == theXF.out)
  8905  005DE6  501A               	movf	XF_pushEvent@temp^0,w,c
  8906  005DE8  0100               	movlb	0	; () banked
  8907  005DEA  19DA               	xorwf	(_theXF+37)& (0+255),w,b
  8908  005DEC  A4D8               	btfss	status,2,c
  8909  005DEE  EFFB  F02E         	goto	u6601
  8910  005DF2  EFFD  F02E         	goto	u6600
  8911  005DF6                     u6601:
  8912  005DF6  EF03  F02F         	goto	l9398
  8913  005DFA                     u6600:
  8914  005DFA                     
  8915                           ; BSR set to: 0
  8916                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
  8917  005DFA  5018               	movf	XF_pushEvent@inISR^0,w,c
  8918  005DFC  EC0C  F032         	call	_LEAVECRITICAL
  8919  005E00                     
  8920                           ;xf/xf.c: 58:       return 0;
  8921  005E00  0E00               	movlw	0
  8922  005E02  EF11  F02F         	goto	l737
  8923  005E06                     l9398:
  8924                           
  8925                           ; BSR set to: 0
  8926                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
  8927  005E06  0ECD               	movlw	low (_theXF+24)
  8928  005E08  25D9               	addwf	(_theXF+36)& (0+255),w,b
  8929  005E0A  6ED9               	movwf	fsr2l,c
  8930  005E0C  6ADA               	clrf	fsr2h,c
  8931  005E0E  0E00               	movlw	high (_theXF+24)
  8932  005E10  22DA               	addwfc	fsr2h,f,c
  8933  005E12  C019  FFDF         	movff	XF_pushEvent@ev,indf2
  8934  005E16                     
  8935                           ; BSR set to: 0
  8936                           ;xf/xf.c: 61:     theXF.in = temp;
  8937  005E16  C01A  F0D9         	movff	XF_pushEvent@temp,_theXF+36
  8938  005E1A                     
  8939                           ; BSR set to: 0
  8940                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
  8941  005E1A  5018               	movf	XF_pushEvent@inISR^0,w,c
  8942  005E1C  EC0C  F032         	call	_LEAVECRITICAL
  8943  005E20                     
  8944                           ;xf/xf.c: 63:     return 1;
  8945  005E20  0E01               	movlw	1
  8946  005E22                     l737:
  8947  005E22  0012               	return		;funcret
  8948  005E24                     __end_of_XF_pushEvent:
  8949                           	callstack 0
  8950                           
  8951 ;; *************** function _Ball_Update *****************
  8952 ;; Defined at:
  8953 ;;		line 12 in file "class/ball.c"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;  b               2   17[COMRAM] PTR struct Ball
  8956 ;;		 -> g1(239), 
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;		None
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  1    wreg      void 
  8961 ;; Registers used:
  8962 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8968 ;;      Params:         2       0       0       0       0       0       0
  8969 ;;      Locals:         0       0       0       0       0       0       0
  8970 ;;      Temps:          4       0       0       0       0       0       0
  8971 ;;      Totals:         6       0       0       0       0       0       0
  8972 ;;Total ram usage:        6 bytes
  8973 ;; Hardware stack levels used: 1
  8974 ;; Hardware stack levels required when called: 4
  8975 ;; This function calls:
  8976 ;;		Nothing
  8977 ;; This function is called by:
  8978 ;;		_mooveBall
  8979 ;; This function uses a non-reentrant model
  8980 ;;
  8981                           
  8982                           	psect	text31
  8983  005A72                     __ptext31:
  8984                           	callstack 0
  8985  005A72                     _Ball_Update:
  8986                           	callstack 21
  8987  005A72                     
  8988                           ;class/ball.c: 12: void Ball_Update(struct Ball* b);class/ball.c: 13: {;class/ball.c: 14
      +                          :     b->x=b->x+b->dx;
  8989  005A72  EE20 F008          	lfsr	2,8
  8990  005A76  5012               	movf	Ball_Update@b^0,w,c
  8991  005A78  26D9               	addwf	fsr2l,f,c
  8992  005A7A  5013               	movf	(Ball_Update@b+1)^0,w,c
  8993  005A7C  22DA               	addwfc	fsr2h,f,c
  8994  005A7E  CFDE F014          	movff	postinc2,??_Ball_Update
  8995  005A82  CFDD F015          	movff	postdec2,??_Ball_Update+1
  8996  005A86  C012  FFD9         	movff	Ball_Update@b,fsr2l
  8997  005A8A  C013  FFDA         	movff	Ball_Update@b+1,fsr2h
  8998  005A8E  CFDE F016          	movff	postinc2,??_Ball_Update+2
  8999  005A92  CFDD F017          	movff	postdec2,??_Ball_Update+3
  9000  005A96  5014               	movf	??_Ball_Update^0,w,c
  9001  005A98  2616               	addwf	(??_Ball_Update+2)^0,f,c
  9002  005A9A  5015               	movf	(??_Ball_Update+1)^0,w,c
  9003  005A9C  2217               	addwfc	(??_Ball_Update+3)^0,f,c
  9004  005A9E  C012  FFD9         	movff	Ball_Update@b,fsr2l
  9005  005AA2  C013  FFDA         	movff	Ball_Update@b+1,fsr2h
  9006  005AA6  C016  FFDE         	movff	??_Ball_Update+2,postinc2
  9007  005AAA  C017  FFDD         	movff	??_Ball_Update+3,postdec2
  9008                           
  9009                           ;class/ball.c: 15:     b->y=b->y+b->dy;
  9010  005AAE  EE20 F00A          	lfsr	2,10
  9011  005AB2  5012               	movf	Ball_Update@b^0,w,c
  9012  005AB4  26D9               	addwf	fsr2l,f,c
  9013  005AB6  5013               	movf	(Ball_Update@b+1)^0,w,c
  9014  005AB8  22DA               	addwfc	fsr2h,f,c
  9015  005ABA  CFDE F014          	movff	postinc2,??_Ball_Update
  9016  005ABE  CFDD F015          	movff	postdec2,??_Ball_Update+1
  9017  005AC2  EE20 F002          	lfsr	2,2
  9018  005AC6  5012               	movf	Ball_Update@b^0,w,c
  9019  005AC8  26D9               	addwf	fsr2l,f,c
  9020  005ACA  5013               	movf	(Ball_Update@b+1)^0,w,c
  9021  005ACC  22DA               	addwfc	fsr2h,f,c
  9022  005ACE  CFDE F016          	movff	postinc2,??_Ball_Update+2
  9023  005AD2  CFDD F017          	movff	postdec2,??_Ball_Update+3
  9024  005AD6  5014               	movf	??_Ball_Update^0,w,c
  9025  005AD8  2616               	addwf	(??_Ball_Update+2)^0,f,c
  9026  005ADA  5015               	movf	(??_Ball_Update+1)^0,w,c
  9027  005ADC  2217               	addwfc	(??_Ball_Update+3)^0,f,c
  9028  005ADE  EE20 F002          	lfsr	2,2
  9029  005AE2  5012               	movf	Ball_Update@b^0,w,c
  9030  005AE4  26D9               	addwf	fsr2l,f,c
  9031  005AE6  5013               	movf	(Ball_Update@b+1)^0,w,c
  9032  005AE8  22DA               	addwfc	fsr2h,f,c
  9033  005AEA  C016  FFDE         	movff	??_Ball_Update+2,postinc2
  9034  005AEE  C017  FFDD         	movff	??_Ball_Update+3,postdec2
  9035  005AF2  0012               	return		;funcret
  9036  005AF4                     __end_of_Ball_Update:
  9037                           	callstack 0
  9038                           
  9039 ;; *************** function _backlightController *****************
  9040 ;; Defined at:
  9041 ;;		line 262 in file "stateMachine/gameController.c"
  9042 ;; Parameters:    Size  Location     Type
  9043 ;;  g               2   23[COMRAM] PTR struct GameParameter
  9044 ;;		 -> g1(239), 
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;		None
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  1    wreg      void 
  9049 ;; Registers used:
  9050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9056 ;;      Params:         2       0       0       0       0       0       0
  9057 ;;      Locals:         0       0       0       0       0       0       0
  9058 ;;      Temps:          2       0       0       0       0       0       0
  9059 ;;      Totals:         4       0       0       0       0       0       0
  9060 ;;Total ram usage:        4 bytes
  9061 ;; Hardware stack levels used: 1
  9062 ;; Hardware stack levels required when called: 5
  9063 ;; This function calls:
  9064 ;;		_GameParameters_setBackLight
  9065 ;; This function is called by:
  9066 ;;		_gameControllerController
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           
  9070                           	psect	text32
  9071  001918                     __ptext32:
  9072                           	callstack 0
  9073  001918                     _backlightController:
  9074                           	callstack 21
  9075  001918                     
  9076                           ;stateMachine/gameController.c: 262: void backlightController(GameParameters* g);stateMa
      +                          chine/gameController.c: 263: {;stateMachine/gameController.c: 264:     if(((g->x)>=50)&&
      +                          ((g->x)<64))
  9077  001918  EE20 F004          	lfsr	2,4
  9078  00191C  5018               	movf	backlightController@g^0,w,c
  9079  00191E  26D9               	addwf	fsr2l,f,c
  9080  001920  5019               	movf	(backlightController@g+1)^0,w,c
  9081  001922  22DA               	addwfc	fsr2h,f,c
  9082  001924  0E01               	movlw	1
  9083  001926  50DB               	movf	plusw2,w,c
  9084  001928  E109               	bnz	u7000
  9085  00192A  0E32               	movlw	50
  9086  00192C  5CDE               	subwf	postinc2,w,c
  9087  00192E  A0D8               	btfss	status,0,c
  9088  001930  EF9C  F00C         	goto	u7001
  9089  001934  EF9E  F00C         	goto	u7000
  9090  001938                     u7001:
  9091  001938  EFBC  F00C         	goto	l9886
  9092  00193C                     u7000:
  9093  00193C  EE20 F004          	lfsr	2,4
  9094  001940  5018               	movf	backlightController@g^0,w,c
  9095  001942  26D9               	addwf	fsr2l,f,c
  9096  001944  5019               	movf	(backlightController@g+1)^0,w,c
  9097  001946  22DA               	addwfc	fsr2h,f,c
  9098  001948  0E01               	movlw	1
  9099  00194A  50DB               	movf	plusw2,w,c
  9100  00194C  E107               	bnz	u7011
  9101  00194E  0E40               	movlw	64
  9102  001950  5CDE               	subwf	postinc2,w,c
  9103  001952  B0D8               	btfsc	status,0,c
  9104  001954  EFAE  F00C         	goto	u7011
  9105  001958  EFB0  F00C         	goto	u7010
  9106  00195C                     u7011:
  9107  00195C  EFBC  F00C         	goto	l9886
  9108  001960                     u7010:
  9109  001960                     
  9110                           ;stateMachine/gameController.c: 265:     {;stateMachine/gameController.c: 266:         G
      +                          ameParameters_setBackLight(g,0);
  9111  001960  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9112  001964  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9113  001968  0E00               	movlw	0
  9114  00196A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9115  00196C  0E00               	movlw	0
  9116  00196E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9117  001970  ECA5  F030         	call	_GameParameters_setBackLight	;wreg free
  9118                           
  9119                           ;stateMachine/gameController.c: 267:     }
  9120  001974  EFCC  F00E         	goto	l9952
  9121  001978                     l9886:
  9122  001978  EE20 F004          	lfsr	2,4
  9123  00197C  5018               	movf	backlightController@g^0,w,c
  9124  00197E  26D9               	addwf	fsr2l,f,c
  9125  001980  5019               	movf	(backlightController@g+1)^0,w,c
  9126  001982  22DA               	addwfc	fsr2h,f,c
  9127  001984  0E01               	movlw	1
  9128  001986  50DB               	movf	plusw2,w,c
  9129  001988  E109               	bnz	u7020
  9130  00198A  0E40               	movlw	64
  9131  00198C  5CDE               	subwf	postinc2,w,c
  9132  00198E  A0D8               	btfss	status,0,c
  9133  001990  EFCC  F00C         	goto	u7021
  9134  001994  EFCE  F00C         	goto	u7020
  9135  001998                     u7021:
  9136  001998  EFEC  F00C         	goto	l9892
  9137  00199C                     u7020:
  9138  00199C  EE20 F004          	lfsr	2,4
  9139  0019A0  5018               	movf	backlightController@g^0,w,c
  9140  0019A2  26D9               	addwf	fsr2l,f,c
  9141  0019A4  5019               	movf	(backlightController@g+1)^0,w,c
  9142  0019A6  22DA               	addwfc	fsr2h,f,c
  9143  0019A8  0E01               	movlw	1
  9144  0019AA  50DB               	movf	plusw2,w,c
  9145  0019AC  E107               	bnz	u7031
  9146  0019AE  0E4E               	movlw	78
  9147  0019B0  5CDE               	subwf	postinc2,w,c
  9148  0019B2  B0D8               	btfsc	status,0,c
  9149  0019B4  EFDE  F00C         	goto	u7031
  9150  0019B8  EFE0  F00C         	goto	u7030
  9151  0019BC                     u7031:
  9152  0019BC  EFEC  F00C         	goto	l9892
  9153  0019C0                     u7030:
  9154  0019C0                     
  9155                           ;stateMachine/gameController.c: 269:     {;stateMachine/gameController.c: 270:         G
      +                          ameParameters_setBackLight(g,1);
  9156  0019C0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9157  0019C4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9158  0019C8  0E00               	movlw	0
  9159  0019CA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9160  0019CC  0E01               	movlw	1
  9161  0019CE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9162  0019D0  ECA5  F030         	call	_GameParameters_setBackLight	;wreg free
  9163                           
  9164                           ;stateMachine/gameController.c: 271:     }
  9165  0019D4  EFCC  F00E         	goto	l9952
  9166  0019D8                     l9892:
  9167  0019D8  EE20 F004          	lfsr	2,4
  9168  0019DC  5018               	movf	backlightController@g^0,w,c
  9169  0019DE  26D9               	addwf	fsr2l,f,c
  9170  0019E0  5019               	movf	(backlightController@g+1)^0,w,c
  9171  0019E2  22DA               	addwfc	fsr2h,f,c
  9172  0019E4  0E01               	movlw	1
  9173  0019E6  50DB               	movf	plusw2,w,c
  9174  0019E8  E109               	bnz	u7040
  9175  0019EA  0E4E               	movlw	78
  9176  0019EC  5CDE               	subwf	postinc2,w,c
  9177  0019EE  A0D8               	btfss	status,0,c
  9178  0019F0  EFFC  F00C         	goto	u7041
  9179  0019F4  EFFE  F00C         	goto	u7040
  9180  0019F8                     u7041:
  9181  0019F8  EF1C  F00D         	goto	l9898
  9182  0019FC                     u7040:
  9183  0019FC  EE20 F004          	lfsr	2,4
  9184  001A00  5018               	movf	backlightController@g^0,w,c
  9185  001A02  26D9               	addwf	fsr2l,f,c
  9186  001A04  5019               	movf	(backlightController@g+1)^0,w,c
  9187  001A06  22DA               	addwfc	fsr2h,f,c
  9188  001A08  0E01               	movlw	1
  9189  001A0A  50DB               	movf	plusw2,w,c
  9190  001A0C  E107               	bnz	u7051
  9191  001A0E  0E5C               	movlw	92
  9192  001A10  5CDE               	subwf	postinc2,w,c
  9193  001A12  B0D8               	btfsc	status,0,c
  9194  001A14  EF0E  F00D         	goto	u7051
  9195  001A18  EF10  F00D         	goto	u7050
  9196  001A1C                     u7051:
  9197  001A1C  EF1C  F00D         	goto	l9898
  9198  001A20                     u7050:
  9199  001A20                     
  9200                           ;stateMachine/gameController.c: 273:     {;stateMachine/gameController.c: 274:         G
      +                          ameParameters_setBackLight(g,2);
  9201  001A20  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9202  001A24  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9203  001A28  0E00               	movlw	0
  9204  001A2A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9205  001A2C  0E02               	movlw	2
  9206  001A2E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9207  001A30  ECA5  F030         	call	_GameParameters_setBackLight	;wreg free
  9208                           
  9209                           ;stateMachine/gameController.c: 275:     }
  9210  001A34  EFCC  F00E         	goto	l9952
  9211  001A38                     l9898:
  9212  001A38  EE20 F004          	lfsr	2,4
  9213  001A3C  5018               	movf	backlightController@g^0,w,c
  9214  001A3E  26D9               	addwf	fsr2l,f,c
  9215  001A40  5019               	movf	(backlightController@g+1)^0,w,c
  9216  001A42  22DA               	addwfc	fsr2h,f,c
  9217  001A44  0E01               	movlw	1
  9218  001A46  50DB               	movf	plusw2,w,c
  9219  001A48  E109               	bnz	u7060
  9220  001A4A  0E5C               	movlw	92
  9221  001A4C  5CDE               	subwf	postinc2,w,c
  9222  001A4E  A0D8               	btfss	status,0,c
  9223  001A50  EF2C  F00D         	goto	u7061
  9224  001A54  EF2E  F00D         	goto	u7060
  9225  001A58                     u7061:
  9226  001A58  EF4C  F00D         	goto	l9904
  9227  001A5C                     u7060:
  9228  001A5C  EE20 F004          	lfsr	2,4
  9229  001A60  5018               	movf	backlightController@g^0,w,c
  9230  001A62  26D9               	addwf	fsr2l,f,c
  9231  001A64  5019               	movf	(backlightController@g+1)^0,w,c
  9232  001A66  22DA               	addwfc	fsr2h,f,c
  9233  001A68  0E01               	movlw	1
  9234  001A6A  50DB               	movf	plusw2,w,c
  9235  001A6C  E107               	bnz	u7071
  9236  001A6E  0E6A               	movlw	106
  9237  001A70  5CDE               	subwf	postinc2,w,c
  9238  001A72  B0D8               	btfsc	status,0,c
  9239  001A74  EF3E  F00D         	goto	u7071
  9240  001A78  EF40  F00D         	goto	u7070
  9241  001A7C                     u7071:
  9242  001A7C  EF4C  F00D         	goto	l9904
  9243  001A80                     u7070:
  9244  001A80                     
  9245                           ;stateMachine/gameController.c: 277:     {;stateMachine/gameController.c: 278:         G
      +                          ameParameters_setBackLight(g,3);
  9246  001A80  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9247  001A84  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9248  001A88  0E00               	movlw	0
  9249  001A8A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9250  001A8C  0E03               	movlw	3
  9251  001A8E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9252  001A90  ECA5  F030         	call	_GameParameters_setBackLight	;wreg free
  9253                           
  9254                           ;stateMachine/gameController.c: 279:     }
  9255  001A94  EFCC  F00E         	goto	l9952
  9256  001A98                     l9904:
  9257  001A98  EE20 F004          	lfsr	2,4
  9258  001A9C  5018               	movf	backlightController@g^0,w,c
  9259  001A9E  26D9               	addwf	fsr2l,f,c
  9260  001AA0  5019               	movf	(backlightController@g+1)^0,w,c
  9261  001AA2  22DA               	addwfc	fsr2h,f,c
  9262  001AA4  0E01               	movlw	1
  9263  001AA6  50DB               	movf	plusw2,w,c
  9264  001AA8  E109               	bnz	u7080
  9265  001AAA  0E6A               	movlw	106
  9266  001AAC  5CDE               	subwf	postinc2,w,c
  9267  001AAE  A0D8               	btfss	status,0,c
  9268  001AB0  EF5C  F00D         	goto	u7081
  9269  001AB4  EF5E  F00D         	goto	u7080
  9270  001AB8                     u7081:
  9271  001AB8  EF7C  F00D         	goto	l9910
  9272  001ABC                     u7080:
  9273  001ABC  EE20 F004          	lfsr	2,4
  9274  001AC0  5018               	movf	backlightController@g^0,w,c
  9275  001AC2  26D9               	addwf	fsr2l,f,c
  9276  001AC4  5019               	movf	(backlightController@g+1)^0,w,c
  9277  001AC6  22DA               	addwfc	fsr2h,f,c
  9278  001AC8  0E01               	movlw	1
  9279  001ACA  50DB               	movf	plusw2,w,c
  9280  001ACC  E107               	bnz	u7091
  9281  001ACE  0E78               	movlw	120
  9282  001AD0  5CDE               	subwf	postinc2,w,c
  9283  001AD2  B0D8               	btfsc	status,0,c
  9284  001AD4  EF6E  F00D         	goto	u7091
  9285  001AD8  EF70  F00D         	goto	u7090
  9286  001ADC                     u7091:
  9287  001ADC  EF7C  F00D         	goto	l9910
  9288  001AE0                     u7090:
  9289  001AE0                     
  9290                           ;stateMachine/gameController.c: 281:     {;stateMachine/gameController.c: 282:         G
      +                          ameParameters_setBackLight(g,4);
  9291  001AE0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9292  001AE4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9293  001AE8  0E00               	movlw	0
  9294  001AEA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9295  001AEC  0E04               	movlw	4
  9296  001AEE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9297  001AF0  ECA5  F030         	call	_GameParameters_setBackLight	;wreg free
  9298                           
  9299                           ;stateMachine/gameController.c: 283:     }
  9300  001AF4  EFCC  F00E         	goto	l9952
  9301  001AF8                     l9910:
  9302  001AF8  EE20 F004          	lfsr	2,4
  9303  001AFC  5018               	movf	backlightController@g^0,w,c
  9304  001AFE  26D9               	addwf	fsr2l,f,c
  9305  001B00  5019               	movf	(backlightController@g+1)^0,w,c
  9306  001B02  22DA               	addwfc	fsr2h,f,c
  9307  001B04  0E01               	movlw	1
  9308  001B06  50DB               	movf	plusw2,w,c
  9309  001B08  E109               	bnz	u7100
  9310  001B0A  0E78               	movlw	120
  9311  001B0C  5CDE               	subwf	postinc2,w,c
  9312  001B0E  A0D8               	btfss	status,0,c
  9313  001B10  EF8C  F00D         	goto	u7101
  9314  001B14  EF8E  F00D         	goto	u7100
  9315  001B18                     u7101:
  9316  001B18  EFAC  F00D         	goto	l9916
  9317  001B1C                     u7100:
  9318  001B1C  EE20 F004          	lfsr	2,4
  9319  001B20  5018               	movf	backlightController@g^0,w,c
  9320  001B22  26D9               	addwf	fsr2l,f,c
  9321  001B24  5019               	movf	(backlightController@g+1)^0,w,c
  9322  001B26  22DA               	addwfc	fsr2h,f,c
  9323  001B28  0E01               	movlw	1
  9324  001B2A  50DB               	movf	plusw2,w,c
  9325  001B2C  E107               	bnz	u7111
  9326  001B2E  0E86               	movlw	134
  9327  001B30  5CDE               	subwf	postinc2,w,c
  9328  001B32  B0D8               	btfsc	status,0,c
  9329  001B34  EF9E  F00D         	goto	u7111
  9330  001B38  EFA0  F00D         	goto	u7110
  9331  001B3C                     u7111:
  9332  001B3C  EFAC  F00D         	goto	l9916
  9333  001B40                     u7110:
  9334  001B40                     
  9335                           ;stateMachine/gameController.c: 285:     {;stateMachine/gameController.c: 286:         G
      +                          ameParameters_setBackLight(g,5);
  9336  001B40  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9337  001B44  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9338  001B48  0E00               	movlw	0
  9339  001B4A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9340  001B4C  0E05               	movlw	5
  9341  001B4E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9342  001B50  ECA5  F030         	call	_GameParameters_setBackLight	;wreg free
  9343                           
  9344                           ;stateMachine/gameController.c: 287:     }
  9345  001B54  EFCC  F00E         	goto	l9952
  9346  001B58                     l9916:
  9347  001B58  EE20 F004          	lfsr	2,4
  9348  001B5C  5018               	movf	backlightController@g^0,w,c
  9349  001B5E  26D9               	addwf	fsr2l,f,c
  9350  001B60  5019               	movf	(backlightController@g+1)^0,w,c
  9351  001B62  22DA               	addwfc	fsr2h,f,c
  9352  001B64  0E01               	movlw	1
  9353  001B66  50DB               	movf	plusw2,w,c
  9354  001B68  E109               	bnz	u7120
  9355  001B6A  0E86               	movlw	134
  9356  001B6C  5CDE               	subwf	postinc2,w,c
  9357  001B6E  A0D8               	btfss	status,0,c
  9358  001B70  EFBC  F00D         	goto	u7121
  9359  001B74  EFBE  F00D         	goto	u7120
  9360  001B78                     u7121:
  9361  001B78  EFDC  F00D         	goto	l9922
  9362  001B7C                     u7120:
  9363  001B7C  EE20 F004          	lfsr	2,4
  9364  001B80  5018               	movf	backlightController@g^0,w,c
  9365  001B82  26D9               	addwf	fsr2l,f,c
  9366  001B84  5019               	movf	(backlightController@g+1)^0,w,c
  9367  001B86  22DA               	addwfc	fsr2h,f,c
  9368  001B88  0E01               	movlw	1
  9369  001B8A  50DB               	movf	plusw2,w,c
  9370  001B8C  E107               	bnz	u7131
  9371  001B8E  0E96               	movlw	150
  9372  001B90  5CDE               	subwf	postinc2,w,c
  9373  001B92  B0D8               	btfsc	status,0,c
  9374  001B94  EFCE  F00D         	goto	u7131
  9375  001B98  EFD0  F00D         	goto	u7130
  9376  001B9C                     u7131:
  9377  001B9C  EFDC  F00D         	goto	l9922
  9378  001BA0                     u7130:
  9379  001BA0                     
  9380                           ;stateMachine/gameController.c: 289:     {;stateMachine/gameController.c: 290:         G
      +                          ameParameters_setBackLight(g,6);
  9381  001BA0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9382  001BA4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9383  001BA8  0E00               	movlw	0
  9384  001BAA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9385  001BAC  0E06               	movlw	6
  9386  001BAE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9387  001BB0  ECA5  F030         	call	_GameParameters_setBackLight	;wreg free
  9388                           
  9389                           ;stateMachine/gameController.c: 291:     }
  9390  001BB4  EFCC  F00E         	goto	l9952
  9391  001BB8                     l9922:
  9392  001BB8  EE20 F004          	lfsr	2,4
  9393  001BBC  5018               	movf	backlightController@g^0,w,c
  9394  001BBE  26D9               	addwf	fsr2l,f,c
  9395  001BC0  5019               	movf	(backlightController@g+1)^0,w,c
  9396  001BC2  22DA               	addwfc	fsr2h,f,c
  9397  001BC4  0E01               	movlw	1
  9398  001BC6  50DB               	movf	plusw2,w,c
  9399  001BC8  E109               	bnz	u7140
  9400  001BCA  0E96               	movlw	150
  9401  001BCC  5CDE               	subwf	postinc2,w,c
  9402  001BCE  A0D8               	btfss	status,0,c
  9403  001BD0  EFEC  F00D         	goto	u7141
  9404  001BD4  EFEE  F00D         	goto	u7140
  9405  001BD8                     u7141:
  9406  001BD8  EF0C  F00E         	goto	l9928
  9407  001BDC                     u7140:
  9408  001BDC  EE20 F004          	lfsr	2,4
  9409  001BE0  5018               	movf	backlightController@g^0,w,c
  9410  001BE2  26D9               	addwf	fsr2l,f,c
  9411  001BE4  5019               	movf	(backlightController@g+1)^0,w,c
  9412  001BE6  22DA               	addwfc	fsr2h,f,c
  9413  001BE8  0E01               	movlw	1
  9414  001BEA  50DB               	movf	plusw2,w,c
  9415  001BEC  E107               	bnz	u7151
  9416  001BEE  0EA4               	movlw	164
  9417  001BF0  5CDE               	subwf	postinc2,w,c
  9418  001BF2  B0D8               	btfsc	status,0,c
  9419  001BF4  EFFE  F00D         	goto	u7151
  9420  001BF8  EF00  F00E         	goto	u7150
  9421  001BFC                     u7151:
  9422  001BFC  EF0C  F00E         	goto	l9928
  9423  001C00                     u7150:
  9424  001C00                     
  9425                           ;stateMachine/gameController.c: 293:     {;stateMachine/gameController.c: 294:         G
      +                          ameParameters_setBackLight(g,7);
  9426  001C00  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9427  001C04  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9428  001C08  0E00               	movlw	0
  9429  001C0A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9430  001C0C  0E07               	movlw	7
  9431  001C0E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9432  001C10  ECA5  F030         	call	_GameParameters_setBackLight	;wreg free
  9433                           
  9434                           ;stateMachine/gameController.c: 295:     }
  9435  001C14  EFCC  F00E         	goto	l9952
  9436  001C18                     l9928:
  9437  001C18  EE20 F004          	lfsr	2,4
  9438  001C1C  5018               	movf	backlightController@g^0,w,c
  9439  001C1E  26D9               	addwf	fsr2l,f,c
  9440  001C20  5019               	movf	(backlightController@g+1)^0,w,c
  9441  001C22  22DA               	addwfc	fsr2h,f,c
  9442  001C24  0E01               	movlw	1
  9443  001C26  50DB               	movf	plusw2,w,c
  9444  001C28  E109               	bnz	u7160
  9445  001C2A  0EA4               	movlw	164
  9446  001C2C  5CDE               	subwf	postinc2,w,c
  9447  001C2E  A0D8               	btfss	status,0,c
  9448  001C30  EF1C  F00E         	goto	u7161
  9449  001C34  EF1E  F00E         	goto	u7160
  9450  001C38                     u7161:
  9451  001C38  EF3C  F00E         	goto	l9934
  9452  001C3C                     u7160:
  9453  001C3C  EE20 F004          	lfsr	2,4
  9454  001C40  5018               	movf	backlightController@g^0,w,c
  9455  001C42  26D9               	addwf	fsr2l,f,c
  9456  001C44  5019               	movf	(backlightController@g+1)^0,w,c
  9457  001C46  22DA               	addwfc	fsr2h,f,c
  9458  001C48  0E01               	movlw	1
  9459  001C4A  50DB               	movf	plusw2,w,c
  9460  001C4C  E107               	bnz	u7171
  9461  001C4E  0EB2               	movlw	178
  9462  001C50  5CDE               	subwf	postinc2,w,c
  9463  001C52  B0D8               	btfsc	status,0,c
  9464  001C54  EF2E  F00E         	goto	u7171
  9465  001C58  EF30  F00E         	goto	u7170
  9466  001C5C                     u7171:
  9467  001C5C  EF3C  F00E         	goto	l9934
  9468  001C60                     u7170:
  9469  001C60                     
  9470                           ;stateMachine/gameController.c: 297:     {;stateMachine/gameController.c: 298:         G
      +                          ameParameters_setBackLight(g,8);
  9471  001C60  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9472  001C64  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9473  001C68  0E00               	movlw	0
  9474  001C6A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9475  001C6C  0E08               	movlw	8
  9476  001C6E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9477  001C70  ECA5  F030         	call	_GameParameters_setBackLight	;wreg free
  9478                           
  9479                           ;stateMachine/gameController.c: 299:     }
  9480  001C74  EFCC  F00E         	goto	l9952
  9481  001C78                     l9934:
  9482  001C78  EE20 F004          	lfsr	2,4
  9483  001C7C  5018               	movf	backlightController@g^0,w,c
  9484  001C7E  26D9               	addwf	fsr2l,f,c
  9485  001C80  5019               	movf	(backlightController@g+1)^0,w,c
  9486  001C82  22DA               	addwfc	fsr2h,f,c
  9487  001C84  0E01               	movlw	1
  9488  001C86  50DB               	movf	plusw2,w,c
  9489  001C88  E109               	bnz	u7180
  9490  001C8A  0EB2               	movlw	178
  9491  001C8C  5CDE               	subwf	postinc2,w,c
  9492  001C8E  A0D8               	btfss	status,0,c
  9493  001C90  EF4C  F00E         	goto	u7181
  9494  001C94  EF4E  F00E         	goto	u7180
  9495  001C98                     u7181:
  9496  001C98  EF6C  F00E         	goto	l9940
  9497  001C9C                     u7180:
  9498  001C9C  EE20 F004          	lfsr	2,4
  9499  001CA0  5018               	movf	backlightController@g^0,w,c
  9500  001CA2  26D9               	addwf	fsr2l,f,c
  9501  001CA4  5019               	movf	(backlightController@g+1)^0,w,c
  9502  001CA6  22DA               	addwfc	fsr2h,f,c
  9503  001CA8  0E01               	movlw	1
  9504  001CAA  50DB               	movf	plusw2,w,c
  9505  001CAC  E107               	bnz	u7191
  9506  001CAE  0EC0               	movlw	192
  9507  001CB0  5CDE               	subwf	postinc2,w,c
  9508  001CB2  B0D8               	btfsc	status,0,c
  9509  001CB4  EF5E  F00E         	goto	u7191
  9510  001CB8  EF60  F00E         	goto	u7190
  9511  001CBC                     u7191:
  9512  001CBC  EF6C  F00E         	goto	l9940
  9513  001CC0                     u7190:
  9514  001CC0                     
  9515                           ;stateMachine/gameController.c: 301:     {;stateMachine/gameController.c: 302:         G
      +                          ameParameters_setBackLight(g,9);
  9516  001CC0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9517  001CC4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9518  001CC8  0E00               	movlw	0
  9519  001CCA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9520  001CCC  0E09               	movlw	9
  9521  001CCE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9522  001CD0  ECA5  F030         	call	_GameParameters_setBackLight	;wreg free
  9523                           
  9524                           ;stateMachine/gameController.c: 303:     }
  9525  001CD4  EFCC  F00E         	goto	l9952
  9526  001CD8                     l9940:
  9527  001CD8  EE20 F004          	lfsr	2,4
  9528  001CDC  5018               	movf	backlightController@g^0,w,c
  9529  001CDE  26D9               	addwf	fsr2l,f,c
  9530  001CE0  5019               	movf	(backlightController@g+1)^0,w,c
  9531  001CE2  22DA               	addwfc	fsr2h,f,c
  9532  001CE4  0E01               	movlw	1
  9533  001CE6  50DB               	movf	plusw2,w,c
  9534  001CE8  E109               	bnz	u7200
  9535  001CEA  0EC0               	movlw	192
  9536  001CEC  5CDE               	subwf	postinc2,w,c
  9537  001CEE  A0D8               	btfss	status,0,c
  9538  001CF0  EF7C  F00E         	goto	u7201
  9539  001CF4  EF7E  F00E         	goto	u7200
  9540  001CF8                     u7201:
  9541  001CF8  EF9C  F00E         	goto	l9946
  9542  001CFC                     u7200:
  9543  001CFC  EE20 F004          	lfsr	2,4
  9544  001D00  5018               	movf	backlightController@g^0,w,c
  9545  001D02  26D9               	addwf	fsr2l,f,c
  9546  001D04  5019               	movf	(backlightController@g+1)^0,w,c
  9547  001D06  22DA               	addwfc	fsr2h,f,c
  9548  001D08  0E01               	movlw	1
  9549  001D0A  50DB               	movf	plusw2,w,c
  9550  001D0C  E107               	bnz	u7211
  9551  001D0E  0ECE               	movlw	206
  9552  001D10  5CDE               	subwf	postinc2,w,c
  9553  001D12  B0D8               	btfsc	status,0,c
  9554  001D14  EF8E  F00E         	goto	u7211
  9555  001D18  EF90  F00E         	goto	u7210
  9556  001D1C                     u7211:
  9557  001D1C  EF9C  F00E         	goto	l9946
  9558  001D20                     u7210:
  9559  001D20                     
  9560                           ;stateMachine/gameController.c: 305:     {;stateMachine/gameController.c: 306:         G
      +                          ameParameters_setBackLight(g,10);
  9561  001D20  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9562  001D24  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9563  001D28  0E00               	movlw	0
  9564  001D2A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9565  001D2C  0E0A               	movlw	10
  9566  001D2E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9567  001D30  ECA5  F030         	call	_GameParameters_setBackLight	;wreg free
  9568                           
  9569                           ;stateMachine/gameController.c: 307:     }
  9570  001D34  EFCC  F00E         	goto	l9952
  9571  001D38                     l9946:
  9572  001D38  EE20 F004          	lfsr	2,4
  9573  001D3C  5018               	movf	backlightController@g^0,w,c
  9574  001D3E  26D9               	addwf	fsr2l,f,c
  9575  001D40  5019               	movf	(backlightController@g+1)^0,w,c
  9576  001D42  22DA               	addwfc	fsr2h,f,c
  9577  001D44  0E01               	movlw	1
  9578  001D46  50DB               	movf	plusw2,w,c
  9579  001D48  E109               	bnz	u7220
  9580  001D4A  0ECE               	movlw	206
  9581  001D4C  5CDE               	subwf	postinc2,w,c
  9582  001D4E  A0D8               	btfss	status,0,c
  9583  001D50  EFAC  F00E         	goto	u7221
  9584  001D54  EFAE  F00E         	goto	u7220
  9585  001D58                     u7221:
  9586  001D58  EFCC  F00E         	goto	l712
  9587  001D5C                     u7220:
  9588  001D5C  EE20 F004          	lfsr	2,4
  9589  001D60  5018               	movf	backlightController@g^0,w,c
  9590  001D62  26D9               	addwf	fsr2l,f,c
  9591  001D64  5019               	movf	(backlightController@g+1)^0,w,c
  9592  001D66  22DA               	addwfc	fsr2h,f,c
  9593  001D68  0E01               	movlw	1
  9594  001D6A  50DB               	movf	plusw2,w,c
  9595  001D6C  E107               	bnz	u7231
  9596  001D6E  0ED7               	movlw	215
  9597  001D70  5CDE               	subwf	postinc2,w,c
  9598  001D72  B0D8               	btfsc	status,0,c
  9599  001D74  EFBE  F00E         	goto	u7231
  9600  001D78  EFC0  F00E         	goto	u7230
  9601  001D7C                     u7231:
  9602  001D7C  EFCC  F00E         	goto	l712
  9603  001D80                     u7230:
  9604  001D80                     
  9605                           ;stateMachine/gameController.c: 309:     {;stateMachine/gameController.c: 310:         G
      +                          ameParameters_setBackLight(g,11);
  9606  001D80  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9607  001D84  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9608  001D88  0E00               	movlw	0
  9609  001D8A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9610  001D8C  0E0B               	movlw	11
  9611  001D8E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9612  001D90  ECA5  F030         	call	_GameParameters_setBackLight	;wreg free
  9613  001D94  EFCC  F00E         	goto	l9952
  9614  001D98                     l712:
  9615  001D98                     l9952:
  9616                           
  9617                           ;stateMachine/gameController.c: 312:     g->sldParam.value=g->backlight;
  9618  001D98  C018  FFD9         	movff	backlightController@g,fsr2l
  9619  001D9C  C019  FFDA         	movff	backlightController@g+1,fsr2h
  9620  001DA0  EE10 F0C1          	lfsr	1,193
  9621  001DA4  5018               	movf	backlightController@g^0,w,c
  9622  001DA6  26E1               	addwf	fsr1l,f,c
  9623  001DA8  5019               	movf	(backlightController@g+1)^0,w,c
  9624  001DAA  22E2               	addwfc	fsr1h,f,c
  9625  001DAC  CFDE FFE6          	movff	postinc2,postinc1
  9626  001DB0  CFDD FFE5          	movff	postdec2,postdec1
  9627  001DB4  0012               	return		;funcret
  9628  001DB6                     __end_of_backlightController:
  9629                           	callstack 0
  9630                           
  9631 ;; *************** function _GameParameters_setBackLight *****************
  9632 ;; Defined at:
  9633 ;;		line 23 in file "class/gameParameters.c"
  9634 ;; Parameters:    Size  Location     Type
  9635 ;;  s               2   17[COMRAM] PTR struct GameParameter
  9636 ;;		 -> g1(239), 
  9637 ;;  value           2   19[COMRAM] unsigned short 
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;		None
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  1    wreg      void 
  9642 ;; Registers used:
  9643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9649 ;;      Params:         4       0       0       0       0       0       0
  9650 ;;      Locals:         0       0       0       0       0       0       0
  9651 ;;      Temps:          2       0       0       0       0       0       0
  9652 ;;      Totals:         6       0       0       0       0       0       0
  9653 ;;Total ram usage:        6 bytes
  9654 ;; Hardware stack levels used: 1
  9655 ;; Hardware stack levels required when called: 4
  9656 ;; This function calls:
  9657 ;;		Nothing
  9658 ;; This function is called by:
  9659 ;;		_backlightController
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           
  9663                           	psect	text33
  9664  00614A                     __ptext33:
  9665                           	callstack 0
  9666  00614A                     _GameParameters_setBackLight:
  9667                           	callstack 21
  9668  00614A                     
  9669                           ;class/gameParameters.c: 23: void GameParameters_setBackLight(struct GameParameters* s, 
      +                          uint16_t value);class/gameParameters.c: 24: {;class/gameParameters.c: 25:     s->backlig
      +                          ht = value;
  9670  00614A  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9671  00614E  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9672  006152  C014  FFDE         	movff	GameParameters_setBackLight@value,postinc2
  9673  006156  C015  FFDD         	movff	GameParameters_setBackLight@value+1,postdec2
  9674  00615A                     
  9675                           ;class/gameParameters.c: 26:     if(s->backlight==11)
  9676  00615A  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9677  00615E  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9678  006162  0E0B               	movlw	11
  9679  006164  18DE               	xorwf	postinc2,w,c
  9680  006166  10DE               	iorwf	postinc2,w,c
  9681  006168  A4D8               	btfss	status,2,c
  9682  00616A  EFB9  F030         	goto	u6681
  9683  00616E  EFBB  F030         	goto	u6680
  9684  006172                     u6681:
  9685  006172  EFBE  F030         	goto	l9608
  9686  006176                     u6680:
  9687  006176                     
  9688                           ;class/gameParameters.c: 27:     {;class/gameParameters.c: 28:         CCPR2L = 255;
  9689  006176  6867               	setf	103,c	;volatile
  9690                           
  9691                           ;class/gameParameters.c: 29:     }
  9692  006178  EFC6  F030         	goto	l144
  9693  00617C                     l9608:
  9694                           
  9695                           ;class/gameParameters.c: 31:     {;class/gameParameters.c: 32:         CCPR2L=(s->backli
      +                          ght)*23;
  9696  00617C  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9697  006180  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9698  006184  50DF               	movf	indf2,w,c
  9699  006186  0D17               	mullw	23
  9700  006188  CFF3 FF67          	movff	prodl,3943	;volatile
  9701  00618C                     l144:
  9702  00618C  0012               	return		;funcret
  9703  00618E                     __end_of_GameParameters_setBackLight:
  9704                           	callstack 0
  9705                           
  9706 ;; *************** function _LCD_InSlider *****************
  9707 ;; Defined at:
  9708 ;;		line 546 in file "libraries/lcd_highlevel.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;  slider          2   17[COMRAM] PTR struct .
  9711 ;;		 -> g1(239), 
  9712 ;;  posX            2   19[COMRAM] unsigned short 
  9713 ;;  posY            2   21[COMRAM] unsigned short 
  9714 ;; Auto vars:     Size  Location     Type
  9715 ;;		None
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  1    wreg      unsigned char 
  9718 ;; Registers used:
  9719 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9725 ;;      Params:         6       0       0       0       0       0       0
  9726 ;;      Locals:         0       0       0       0       0       0       0
  9727 ;;      Temps:          4       0       0       0       0       0       0
  9728 ;;      Totals:        10       0       0       0       0       0       0
  9729 ;;Total ram usage:       10 bytes
  9730 ;; Hardware stack levels used: 1
  9731 ;; Hardware stack levels required when called: 4
  9732 ;; This function calls:
  9733 ;;		Nothing
  9734 ;; This function is called by:
  9735 ;;		_gameControllerController
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739                           	psect	text34
  9740  004D4A                     __ptext34:
  9741                           	callstack 0
  9742  004D4A                     _LCD_InSlider:
  9743                           	callstack 22
  9744  004D4A                     
  9745                           ;libraries/lcd_highlevel.c: 546: uint8_t LCD_InSlider(sld_t * slider, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 547: {;libraries/lcd_highlevel.c: 549:   if(posX 
      +                          < slider->posX)
  9746  004D4A  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
  9747  004D4E  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
  9748  004D52  50DE               	movf	postinc2,w,c
  9749  004D54  5C14               	subwf	LCD_InSlider@posX^0,w,c
  9750  004D56  50DE               	movf	postinc2,w,c
  9751  004D58  5815               	subwfb	(LCD_InSlider@posX+1)^0,w,c
  9752  004D5A  B0D8               	btfsc	status,0,c
  9753  004D5C  EFB2  F026         	goto	u6961
  9754  004D60  EFB4  F026         	goto	u6960
  9755  004D64                     u6961:
  9756  004D64  EFB7  F026         	goto	l9858
  9757  004D68                     u6960:
  9758  004D68                     l9854:
  9759                           
  9760                           ;libraries/lcd_highlevel.c: 550:   {;libraries/lcd_highlevel.c: 551:     return 0;
  9761  004D68  0E00               	movlw	0
  9762  004D6A  EF13  F027         	goto	l272
  9763  004D6E                     l9858:
  9764                           
  9765                           ;libraries/lcd_highlevel.c: 554:   if(posX > (slider->posX + slider->width))
  9766  004D6E  EE20 F004          	lfsr	2,4
  9767  004D72  5012               	movf	LCD_InSlider@slider^0,w,c
  9768  004D74  26D9               	addwf	fsr2l,f,c
  9769  004D76  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9770  004D78  22DA               	addwfc	fsr2h,f,c
  9771  004D7A  CFDE F018          	movff	postinc2,??_LCD_InSlider
  9772  004D7E  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
  9773  004D82  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
  9774  004D86  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
  9775  004D8A  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
  9776  004D8E  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
  9777  004D92  5018               	movf	??_LCD_InSlider^0,w,c
  9778  004D94  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
  9779  004D96  5019               	movf	(??_LCD_InSlider+1)^0,w,c
  9780  004D98  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
  9781  004D9A  5014               	movf	LCD_InSlider@posX^0,w,c
  9782  004D9C  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
  9783  004D9E  5015               	movf	(LCD_InSlider@posX+1)^0,w,c
  9784  004DA0  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
  9785  004DA2  B0D8               	btfsc	status,0,c
  9786  004DA4  EFD6  F026         	goto	u6971
  9787  004DA8  EFD8  F026         	goto	u6970
  9788  004DAC                     u6971:
  9789  004DAC  EFDA  F026         	goto	l9864
  9790  004DB0                     u6970:
  9791  004DB0  EFB4  F026         	goto	l9854
  9792  004DB4                     l9864:
  9793                           
  9794                           ;libraries/lcd_highlevel.c: 559:   if(posY < slider->posY)
  9795  004DB4  EE20 F002          	lfsr	2,2
  9796  004DB8  5012               	movf	LCD_InSlider@slider^0,w,c
  9797  004DBA  26D9               	addwf	fsr2l,f,c
  9798  004DBC  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9799  004DBE  22DA               	addwfc	fsr2h,f,c
  9800  004DC0  50DE               	movf	postinc2,w,c
  9801  004DC2  5C16               	subwf	LCD_InSlider@posY^0,w,c
  9802  004DC4  50DE               	movf	postinc2,w,c
  9803  004DC6  5817               	subwfb	(LCD_InSlider@posY+1)^0,w,c
  9804  004DC8  B0D8               	btfsc	status,0,c
  9805  004DCA  EFE9  F026         	goto	u6981
  9806  004DCE  EFEB  F026         	goto	u6980
  9807  004DD2                     u6981:
  9808  004DD2  EFED  F026         	goto	l9870
  9809  004DD6                     u6980:
  9810  004DD6  EFB4  F026         	goto	l9854
  9811  004DDA                     l9870:
  9812                           
  9813                           ;libraries/lcd_highlevel.c: 564:   if(posY > (slider->posY + slider->height))
  9814  004DDA  EE20 F006          	lfsr	2,6
  9815  004DDE  5012               	movf	LCD_InSlider@slider^0,w,c
  9816  004DE0  26D9               	addwf	fsr2l,f,c
  9817  004DE2  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9818  004DE4  22DA               	addwfc	fsr2h,f,c
  9819  004DE6  CFDE F018          	movff	postinc2,??_LCD_InSlider
  9820  004DEA  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
  9821  004DEE  EE20 F002          	lfsr	2,2
  9822  004DF2  5012               	movf	LCD_InSlider@slider^0,w,c
  9823  004DF4  26D9               	addwf	fsr2l,f,c
  9824  004DF6  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9825  004DF8  22DA               	addwfc	fsr2h,f,c
  9826  004DFA  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
  9827  004DFE  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
  9828  004E02  5018               	movf	??_LCD_InSlider^0,w,c
  9829  004E04  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
  9830  004E06  5019               	movf	(??_LCD_InSlider+1)^0,w,c
  9831  004E08  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
  9832  004E0A  5016               	movf	LCD_InSlider@posY^0,w,c
  9833  004E0C  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
  9834  004E0E  5017               	movf	(LCD_InSlider@posY+1)^0,w,c
  9835  004E10  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
  9836  004E12  B0D8               	btfsc	status,0,c
  9837  004E14  EF0E  F027         	goto	u6991
  9838  004E18  EF10  F027         	goto	u6990
  9839  004E1C                     u6991:
  9840  004E1C  EF12  F027         	goto	l9876
  9841  004E20                     u6990:
  9842  004E20  EFB4  F026         	goto	l9854
  9843  004E24                     l9876:
  9844                           
  9845                           ;libraries/lcd_highlevel.c: 568:   return 1;
  9846  004E24  0E01               	movlw	1
  9847  004E26                     l272:
  9848  004E26  0012               	return		;funcret
  9849  004E28                     __end_of_LCD_InSlider:
  9850                           	callstack 0
  9851                           
  9852 ;; *************** function _GameParameters_init *****************
  9853 ;; Defined at:
  9854 ;;		line 3 in file "class/gameParameters.c"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;  s               2   42[COMRAM] PTR struct GameParameter
  9857 ;;		 -> g1(239), 
  9858 ;; Auto vars:     Size  Location     Type
  9859 ;;		None
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  1    wreg      void 
  9862 ;; Registers used:
  9863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9864 ;; Tracked objects:
  9865 ;;		On entry : 0/0
  9866 ;;		On exit  : 0/0
  9867 ;;		Unchanged: 0/0
  9868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9869 ;;      Params:         2       0       0       0       0       0       0
  9870 ;;      Locals:         0       0       0       0       0       0       0
  9871 ;;      Temps:          0       0       0       0       0       0       0
  9872 ;;      Totals:         2       0       0       0       0       0       0
  9873 ;;Total ram usage:        2 bytes
  9874 ;; Hardware stack levels used: 1
  9875 ;; Hardware stack levels required when called: 5
  9876 ;; This function calls:
  9877 ;;		_Ball_init
  9878 ;;		_LCD_ButtonCreate
  9879 ;;		_LCD_SliderCreate
  9880 ;;		_Paddle_init
  9881 ;;		_Score_init
  9882 ;; This function is called by:
  9883 ;;		_Factory_init
  9884 ;;		_gameControllerController
  9885 ;; This function uses a non-reentrant model
  9886 ;;
  9887                           
  9888                           	psect	text35
  9889  002200                     __ptext35:
  9890                           	callstack 0
  9891  002200                     _GameParameters_init:
  9892                           	callstack 21
  9893  002200                     
  9894                           ;class/gameParameters.c: 3: void GameParameters_init(struct GameParameters* s);class/gam
      +                          eParameters.c: 4: {;class/gameParameters.c: 5:     s->backlight = 11;
  9895  002200  C02B  FFD9         	movff	GameParameters_init@s,fsr2l
  9896  002204  C02C  FFDA         	movff	GameParameters_init@s+1,fsr2h
  9897  002208  0E0B               	movlw	11
  9898  00220A  6EDE               	movwf	postinc2,c
  9899  00220C  0E00               	movlw	0
  9900  00220E  6EDD               	movwf	postdec2,c
  9901  002210                     
  9902                           ;class/gameParameters.c: 6:     CCPR2L = 255;
  9903  002210  6867               	setf	103,c	;volatile
  9904  002212                     
  9905                           ;class/gameParameters.c: 7:     s->player = 0;
  9906  002212  EE20 F002          	lfsr	2,2
  9907  002216  502B               	movf	GameParameters_init@s^0,w,c
  9908  002218  26D9               	addwf	fsr2l,f,c
  9909  00221A  502C               	movf	(GameParameters_init@s+1)^0,w,c
  9910  00221C  22DA               	addwfc	fsr2h,f,c
  9911  00221E  0E00               	movlw	0
  9912  002220  6EDE               	movwf	postinc2,c
  9913  002222  0E00               	movlw	0
  9914  002224  6EDD               	movwf	postdec2,c
  9915  002226                     
  9916                           ;class/gameParameters.c: 8:     s->x=0;
  9917  002226  EE20 F004          	lfsr	2,4
  9918  00222A  502B               	movf	GameParameters_init@s^0,w,c
  9919  00222C  26D9               	addwf	fsr2l,f,c
  9920  00222E  502C               	movf	(GameParameters_init@s+1)^0,w,c
  9921  002230  22DA               	addwfc	fsr2h,f,c
  9922  002232  0E00               	movlw	0
  9923  002234  6EDE               	movwf	postinc2,c
  9924  002236  0E00               	movlw	0
  9925  002238  6EDD               	movwf	postdec2,c
  9926  00223A                     
  9927                           ;class/gameParameters.c: 9:     s->y=0;
  9928  00223A  EE20 F006          	lfsr	2,6
  9929  00223E  502B               	movf	GameParameters_init@s^0,w,c
  9930  002240  26D9               	addwf	fsr2l,f,c
  9931  002242  502C               	movf	(GameParameters_init@s+1)^0,w,c
  9932  002244  22DA               	addwfc	fsr2h,f,c
  9933  002246  0E00               	movlw	0
  9934  002248  6EDE               	movwf	postinc2,c
  9935  00224A  0E00               	movlw	0
  9936  00224C  6EDD               	movwf	postdec2,c
  9937  00224E                     
  9938                           ;class/gameParameters.c: 10:     Score_init(&s->s1);
  9939  00224E  0EE9               	movlw	233
  9940  002250  242B               	addwf	GameParameters_init@s^0,w,c
  9941  002252  6E12               	movwf	Score_init@s^0,c
  9942  002254  0E00               	movlw	0
  9943  002256  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9944  002258  6E13               	movwf	(Score_init@s+1)^0,c
  9945  00225A  EC98  F031         	call	_Score_init	;wreg free
  9946  00225E                     
  9947                           ;class/gameParameters.c: 11:     Ball_init(&(s->b));
  9948  00225E  0EC9               	movlw	201
  9949  002260  242B               	addwf	GameParameters_init@s^0,w,c
  9950  002262  6E12               	movwf	Ball_init@b^0,c
  9951  002264  0E00               	movlw	0
  9952  002266  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9953  002268  6E13               	movwf	(Ball_init@b+1)^0,c
  9954  00226A  ECF7  F02D         	call	_Ball_init	;wreg free
  9955  00226E                     
  9956                           ;class/gameParameters.c: 12:     Paddle_init(&(s->p1),0);
  9957  00226E  0ED5               	movlw	213
  9958  002270  242B               	addwf	GameParameters_init@s^0,w,c
  9959  002272  6E12               	movwf	Paddle_init@p^0,c
  9960  002274  0E00               	movlw	0
  9961  002276  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9962  002278  6E13               	movwf	(Paddle_init@p+1)^0,c
  9963  00227A  0E00               	movlw	0
  9964  00227C  6E15               	movwf	(Paddle_init@team+1)^0,c
  9965  00227E  0E00               	movlw	0
  9966  002280  6E14               	movwf	Paddle_init@team^0,c
  9967  002282  ECEF  F02A         	call	_Paddle_init	;wreg free
  9968  002286                     
  9969                           ;class/gameParameters.c: 13:     Paddle_init(&(s->p2),1);
  9970  002286  0EDF               	movlw	223
  9971  002288  242B               	addwf	GameParameters_init@s^0,w,c
  9972  00228A  6E12               	movwf	Paddle_init@p^0,c
  9973  00228C  0E00               	movlw	0
  9974  00228E  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9975  002290  6E13               	movwf	(Paddle_init@p+1)^0,c
  9976  002292  0E00               	movlw	0
  9977  002294  6E15               	movwf	(Paddle_init@team+1)^0,c
  9978  002296  0E01               	movlw	1
  9979  002298  6E14               	movwf	Paddle_init@team^0,c
  9980  00229A  ECEF  F02A         	call	_Paddle_init	;wreg free
  9981  00229E                     
  9982                           ;class/gameParameters.c: 14:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"Parametres",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s
      +                          ->btnParam),1);
  9983  00229E  0E00               	movlw	0
  9984  0022A0  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  9985  0022A2  0E82               	movlw	130
  9986  0022A4  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  9987  0022A6  0E00               	movlw	0
  9988  0022A8  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  9989  0022AA  0E32               	movlw	50
  9990  0022AC  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  9991  0022AE  0E00               	movlw	0
  9992  0022B0  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  9993  0022B2  0E5A               	movlw	90
  9994  0022B4  6E16               	movwf	LCD_ButtonCreate@width^0,c
  9995  0022B6  0E00               	movlw	0
  9996  0022B8  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  9997  0022BA  0E14               	movlw	20
  9998  0022BC  6E18               	movwf	LCD_ButtonCreate@height^0,c
  9999  0022BE  0EFF               	movlw	255
 10000  0022C0  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10001  0022C2  681A               	setf	LCD_ButtonCreate@txtColor^0,c
 10002  0022C4  0E00               	movlw	0
 10003  0022C6  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10004  0022C8  0E00               	movlw	0
 10005  0022CA  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
 10006  0022CC  0EAB               	movlw	low STR_4
 10007  0022CE  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10008  0022D0  0E7F               	movlw	high STR_4
 10009  0022D2  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10010  0022D4  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10011  0022D6  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10012  0022D8  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10013  0022DA  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10014  0022DC  0E00               	movlw	0
 10015  0022DE  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10016  0022E0  0E00               	movlw	0
 10017  0022E2  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10018  0022E4  0E00               	movlw	0
 10019  0022E6  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10020  0022E8  0E00               	movlw	0
 10021  0022EA  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10022  0022EC  0E00               	movlw	0
 10023  0022EE  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10024  0022F0  0E00               	movlw	0
 10025  0022F2  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10026  0022F4  0E08               	movlw	8
 10027  0022F6  242B               	addwf	GameParameters_init@s^0,w,c
 10028  0022F8  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10029  0022FA  0E00               	movlw	0
 10030  0022FC  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10031  0022FE  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10032  002300  0E01               	movlw	1
 10033  002302  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10034  002304  ECC8  F024         	call	_LCD_ButtonCreate	;wreg free
 10035  002308                     
 10036                           ;class/gameParameters.c: 15:     LCD_ButtonCreate(10,250,70,20,0b1111111111111111,0b0000
      +                          000000000000,"1 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->
      +                          btnOnePlayer),2);
 10037  002308  0E00               	movlw	0
 10038  00230A  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10039  00230C  0E0A               	movlw	10
 10040  00230E  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10041  002310  0E00               	movlw	0
 10042  002312  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10043  002314  0EFA               	movlw	250
 10044  002316  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10045  002318  0E00               	movlw	0
 10046  00231A  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10047  00231C  0E46               	movlw	70
 10048  00231E  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10049  002320  0E00               	movlw	0
 10050  002322  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10051  002324  0E14               	movlw	20
 10052  002326  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10053  002328  0EFF               	movlw	255
 10054  00232A  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10055  00232C  681A               	setf	LCD_ButtonCreate@txtColor^0,c
 10056  00232E  0E00               	movlw	0
 10057  002330  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10058  002332  0E00               	movlw	0
 10059  002334  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
 10060  002336  0EC9               	movlw	low STR_5
 10061  002338  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10062  00233A  0E7F               	movlw	high STR_5
 10063  00233C  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10064  00233E  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10065  002340  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10066  002342  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10067  002344  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10068  002346  0E00               	movlw	0
 10069  002348  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10070  00234A  0E00               	movlw	0
 10071  00234C  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10072  00234E  0E00               	movlw	0
 10073  002350  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10074  002352  0E00               	movlw	0
 10075  002354  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10076  002356  0E00               	movlw	0
 10077  002358  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10078  00235A  0E00               	movlw	0
 10079  00235C  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10080  00235E  0E20               	movlw	32
 10081  002360  242B               	addwf	GameParameters_init@s^0,w,c
 10082  002362  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10083  002364  0E00               	movlw	0
 10084  002366  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10085  002368  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10086  00236A  0E02               	movlw	2
 10087  00236C  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10088  00236E  ECC8  F024         	call	_LCD_ButtonCreate	;wreg free
 10089  002372                     
 10090                           ;class/gameParameters.c: 16:     LCD_ButtonCreate(150,250,70,20,0b1111111111111111,0b000
      +                          0000000000000,"2 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s-
      +                          >btnTwoPlayer),3);
 10091  002372  0E00               	movlw	0
 10092  002374  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10093  002376  0E96               	movlw	150
 10094  002378  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10095  00237A  0E00               	movlw	0
 10096  00237C  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10097  00237E  0EFA               	movlw	250
 10098  002380  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10099  002382  0E00               	movlw	0
 10100  002384  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10101  002386  0E46               	movlw	70
 10102  002388  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10103  00238A  0E00               	movlw	0
 10104  00238C  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10105  00238E  0E14               	movlw	20
 10106  002390  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10107  002392  0EFF               	movlw	255
 10108  002394  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10109  002396  681A               	setf	LCD_ButtonCreate@txtColor^0,c
 10110  002398  0E00               	movlw	0
 10111  00239A  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10112  00239C  0E00               	movlw	0
 10113  00239E  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
 10114  0023A0  0ED2               	movlw	low STR_6
 10115  0023A2  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10116  0023A4  0E7F               	movlw	high STR_6
 10117  0023A6  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10118  0023A8  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10119  0023AA  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10120  0023AC  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10121  0023AE  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10122  0023B0  0E00               	movlw	0
 10123  0023B2  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10124  0023B4  0E00               	movlw	0
 10125  0023B6  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10126  0023B8  0E00               	movlw	0
 10127  0023BA  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10128  0023BC  0E00               	movlw	0
 10129  0023BE  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10130  0023C0  0E00               	movlw	0
 10131  0023C2  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10132  0023C4  0E00               	movlw	0
 10133  0023C6  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10134  0023C8  0E38               	movlw	56
 10135  0023CA  242B               	addwf	GameParameters_init@s^0,w,c
 10136  0023CC  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10137  0023CE  0E00               	movlw	0
 10138  0023D0  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10139  0023D2  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10140  0023D4  0E03               	movlw	3
 10141  0023D6  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10142  0023D8  ECC8  F024         	call	_LCD_ButtonCreate	;wreg free
 10143  0023DC                     
 10144                           ;class/gameParameters.c: 17:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"QUITTER",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->b
      +                          tnLeaveParam),4);
 10145  0023DC  0E00               	movlw	0
 10146  0023DE  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10147  0023E0  0E82               	movlw	130
 10148  0023E2  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10149  0023E4  0E00               	movlw	0
 10150  0023E6  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10151  0023E8  0E32               	movlw	50
 10152  0023EA  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10153  0023EC  0E00               	movlw	0
 10154  0023EE  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10155  0023F0  0E5A               	movlw	90
 10156  0023F2  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10157  0023F4  0E00               	movlw	0
 10158  0023F6  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10159  0023F8  0E14               	movlw	20
 10160  0023FA  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10161  0023FC  0EFF               	movlw	255
 10162  0023FE  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10163  002400  681A               	setf	LCD_ButtonCreate@txtColor^0,c
 10164  002402  0E00               	movlw	0
 10165  002404  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10166  002406  0E00               	movlw	0
 10167  002408  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
 10168  00240A  0EE3               	movlw	low STR_7
 10169  00240C  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10170  00240E  0E7F               	movlw	high STR_7
 10171  002410  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10172  002412  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10173  002414  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10174  002416  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10175  002418  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10176  00241A  0E00               	movlw	0
 10177  00241C  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10178  00241E  0E00               	movlw	0
 10179  002420  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10180  002422  0E00               	movlw	0
 10181  002424  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10182  002426  0E00               	movlw	0
 10183  002428  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10184  00242A  0E00               	movlw	0
 10185  00242C  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10186  00242E  0E00               	movlw	0
 10187  002430  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10188  002432  0E50               	movlw	80
 10189  002434  242B               	addwf	GameParameters_init@s^0,w,c
 10190  002436  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10191  002438  0E00               	movlw	0
 10192  00243A  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10193  00243C  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10194  00243E  0E04               	movlw	4
 10195  002440  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10196  002442  ECC8  F024         	call	_LCD_ButtonCreate	;wreg free
 10197  002446                     
 10198                           ;class/gameParameters.c: 18:     LCD_ButtonCreate(10,220,70,50,0b0000000000000000,0b1111
      +                          111111111111,"<--",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnLe
      +                          ft),5);
 10199  002446  0E00               	movlw	0
 10200  002448  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10201  00244A  0E0A               	movlw	10
 10202  00244C  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10203  00244E  0E00               	movlw	0
 10204  002450  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10205  002452  0EDC               	movlw	220
 10206  002454  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10207  002456  0E00               	movlw	0
 10208  002458  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10209  00245A  0E46               	movlw	70
 10210  00245C  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10211  00245E  0E00               	movlw	0
 10212  002460  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10213  002462  0E32               	movlw	50
 10214  002464  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10215  002466  0E00               	movlw	0
 10216  002468  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10217  00246A  0E00               	movlw	0
 10218  00246C  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
 10219  00246E  0EFF               	movlw	255
 10220  002470  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10221  002472  681C               	setf	LCD_ButtonCreate@bgColor^0,c
 10222  002474  0EF7               	movlw	low STR_8
 10223  002476  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10224  002478  0E7F               	movlw	high STR_8
 10225  00247A  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10226  00247C  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10227  00247E  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10228  002480  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10229  002482  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10230  002484  0E00               	movlw	0
 10231  002486  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10232  002488  0E00               	movlw	0
 10233  00248A  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10234  00248C  0E00               	movlw	0
 10235  00248E  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10236  002490  0E00               	movlw	0
 10237  002492  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10238  002494  0E00               	movlw	0
 10239  002496  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10240  002498  0E00               	movlw	0
 10241  00249A  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10242  00249C  0E68               	movlw	104
 10243  00249E  242B               	addwf	GameParameters_init@s^0,w,c
 10244  0024A0  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10245  0024A2  0E00               	movlw	0
 10246  0024A4  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10247  0024A6  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10248  0024A8  0E05               	movlw	5
 10249  0024AA  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10250  0024AC  ECC8  F024         	call	_LCD_ButtonCreate	;wreg free
 10251  0024B0                     
 10252                           ;class/gameParameters.c: 19:     LCD_ButtonCreate(150,220,70,50,0b0000000000000000,0b111
      +                          1111111111111,"-->",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnR
      +                          ight),6);
 10253  0024B0  0E00               	movlw	0
 10254  0024B2  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10255  0024B4  0E96               	movlw	150
 10256  0024B6  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10257  0024B8  0E00               	movlw	0
 10258  0024BA  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10259  0024BC  0EDC               	movlw	220
 10260  0024BE  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10261  0024C0  0E00               	movlw	0
 10262  0024C2  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10263  0024C4  0E46               	movlw	70
 10264  0024C6  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10265  0024C8  0E00               	movlw	0
 10266  0024CA  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10267  0024CC  0E32               	movlw	50
 10268  0024CE  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10269  0024D0  0E00               	movlw	0
 10270  0024D2  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10271  0024D4  0E00               	movlw	0
 10272  0024D6  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
 10273  0024D8  0EFF               	movlw	255
 10274  0024DA  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10275  0024DC  681C               	setf	LCD_ButtonCreate@bgColor^0,c
 10276  0024DE  0EFB               	movlw	low STR_9
 10277  0024E0  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10278  0024E2  0E7F               	movlw	high STR_9
 10279  0024E4  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10280  0024E6  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10281  0024E8  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10282  0024EA  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10283  0024EC  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10284  0024EE  0E00               	movlw	0
 10285  0024F0  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10286  0024F2  0E00               	movlw	0
 10287  0024F4  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10288  0024F6  0E00               	movlw	0
 10289  0024F8  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10290  0024FA  0E00               	movlw	0
 10291  0024FC  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10292  0024FE  0E00               	movlw	0
 10293  002500  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10294  002502  0E00               	movlw	0
 10295  002504  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10296  002506  0E98               	movlw	152
 10297  002508  242B               	addwf	GameParameters_init@s^0,w,c
 10298  00250A  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10299  00250C  0E00               	movlw	0
 10300  00250E  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10301  002510  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10302  002512  0E06               	movlw	6
 10303  002514  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10304  002516  ECC8  F024         	call	_LCD_ButtonCreate	;wreg free
 10305  00251A                     
 10306                           ;class/gameParameters.c: 20:     LCD_ButtonCreate(150,220,70,50,0b0000000000000000,0b111
      +                          1111111111111,"New Game",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s-
      +                          >btnNewGame),6);
 10307  00251A  0E00               	movlw	0
 10308  00251C  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10309  00251E  0E96               	movlw	150
 10310  002520  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10311  002522  0E00               	movlw	0
 10312  002524  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10313  002526  0EDC               	movlw	220
 10314  002528  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10315  00252A  0E00               	movlw	0
 10316  00252C  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10317  00252E  0E46               	movlw	70
 10318  002530  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10319  002532  0E00               	movlw	0
 10320  002534  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10321  002536  0E32               	movlw	50
 10322  002538  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10323  00253A  0E00               	movlw	0
 10324  00253C  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10325  00253E  0E00               	movlw	0
 10326  002540  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
 10327  002542  0EFF               	movlw	255
 10328  002544  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10329  002546  681C               	setf	LCD_ButtonCreate@bgColor^0,c
 10330  002548  0EC0               	movlw	low STR_10
 10331  00254A  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10332  00254C  0E7F               	movlw	high STR_10
 10333  00254E  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10334  002550  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10335  002552  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10336  002554  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10337  002556  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10338  002558  0E00               	movlw	0
 10339  00255A  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10340  00255C  0E00               	movlw	0
 10341  00255E  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10342  002560  0E00               	movlw	0
 10343  002562  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10344  002564  0E00               	movlw	0
 10345  002566  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10346  002568  0E00               	movlw	0
 10347  00256A  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10348  00256C  0E00               	movlw	0
 10349  00256E  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10350  002570  0E80               	movlw	128
 10351  002572  242B               	addwf	GameParameters_init@s^0,w,c
 10352  002574  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10353  002576  0E00               	movlw	0
 10354  002578  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10355  00257A  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10356  00257C  0E06               	movlw	6
 10357  00257E  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10358  002580  ECC8  F024         	call	_LCD_ButtonCreate	;wreg free
 10359  002584                     
 10360                           ;class/gameParameters.c: 21:     LCD_SliderCreate(50,100,165,20,0b0000000000000000,0b111
      +                          1111111111111,0b1111100000000000,0,11,((void*)0),&(s->sldParam));
 10361  002584  0E00               	movlw	0
 10362  002586  6E13               	movwf	(LCD_SliderCreate@posX+1)^0,c
 10363  002588  0E32               	movlw	50
 10364  00258A  6E12               	movwf	LCD_SliderCreate@posX^0,c
 10365  00258C  0E00               	movlw	0
 10366  00258E  6E15               	movwf	(LCD_SliderCreate@posY+1)^0,c
 10367  002590  0E64               	movlw	100
 10368  002592  6E14               	movwf	LCD_SliderCreate@posY^0,c
 10369  002594  0E00               	movlw	0
 10370  002596  6E17               	movwf	(LCD_SliderCreate@width+1)^0,c
 10371  002598  0EA5               	movlw	165
 10372  00259A  6E16               	movwf	LCD_SliderCreate@width^0,c
 10373  00259C  0E00               	movlw	0
 10374  00259E  6E19               	movwf	(LCD_SliderCreate@height+1)^0,c
 10375  0025A0  0E14               	movlw	20
 10376  0025A2  6E18               	movwf	LCD_SliderCreate@height^0,c
 10377  0025A4  0E00               	movlw	0
 10378  0025A6  6E1B               	movwf	(LCD_SliderCreate@sldColor+1)^0,c
 10379  0025A8  0E00               	movlw	0
 10380  0025AA  6E1A               	movwf	LCD_SliderCreate@sldColor^0,c
 10381  0025AC  0EFF               	movlw	255
 10382  0025AE  6E1D               	movwf	(LCD_SliderCreate@bgColor+1)^0,c
 10383  0025B0  681C               	setf	LCD_SliderCreate@bgColor^0,c
 10384  0025B2  0EF8               	movlw	248
 10385  0025B4  6E1F               	movwf	(LCD_SliderCreate@borderColor+1)^0,c
 10386  0025B6  0E00               	movlw	0
 10387  0025B8  6E1E               	movwf	LCD_SliderCreate@borderColor^0,c
 10388  0025BA  0E00               	movlw	0
 10389  0025BC  6E21               	movwf	(LCD_SliderCreate@cursorWidth+1)^0,c
 10390  0025BE  0E00               	movlw	0
 10391  0025C0  6E20               	movwf	LCD_SliderCreate@cursorWidth^0,c
 10392  0025C2  0E00               	movlw	0
 10393  0025C4  6E23               	movwf	(LCD_SliderCreate@steps+1)^0,c
 10394  0025C6  0E0B               	movlw	11
 10395  0025C8  6E22               	movwf	LCD_SliderCreate@steps^0,c
 10396  0025CA  0E00               	movlw	0
 10397  0025CC  6E24               	movwf	LCD_SliderCreate@fpPress^0,c
 10398  0025CE  0E00               	movlw	0
 10399  0025D0  6E25               	movwf	(LCD_SliderCreate@fpPress+1)^0,c
 10400  0025D2  0EB0               	movlw	176
 10401  0025D4  242B               	addwf	GameParameters_init@s^0,w,c
 10402  0025D6  6E26               	movwf	LCD_SliderCreate@slider^0,c
 10403  0025D8  0E00               	movlw	0
 10404  0025DA  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10405  0025DC  6E27               	movwf	(LCD_SliderCreate@slider+1)^0,c
 10406  0025DE  ECBF  F025         	call	_LCD_SliderCreate	;wreg free
 10407  0025E2  0012               	return		;funcret
 10408  0025E4                     __end_of_GameParameters_init:
 10409                           	callstack 0
 10410                           
 10411 ;; *************** function _Score_init *****************
 10412 ;; Defined at:
 10413 ;;		line 3 in file "class/score.c"
 10414 ;; Parameters:    Size  Location     Type
 10415 ;;  s               2   17[COMRAM] PTR struct Score
 10416 ;;		 -> g1(239), 
 10417 ;; Auto vars:     Size  Location     Type
 10418 ;;		None
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  1    wreg      void 
 10421 ;; Registers used:
 10422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10423 ;; Tracked objects:
 10424 ;;		On entry : 0/0
 10425 ;;		On exit  : 0/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10428 ;;      Params:         2       0       0       0       0       0       0
 10429 ;;      Locals:         0       0       0       0       0       0       0
 10430 ;;      Temps:          0       0       0       0       0       0       0
 10431 ;;      Totals:         2       0       0       0       0       0       0
 10432 ;;Total ram usage:        2 bytes
 10433 ;; Hardware stack levels used: 1
 10434 ;; Hardware stack levels required when called: 4
 10435 ;; This function calls:
 10436 ;;		Nothing
 10437 ;; This function is called by:
 10438 ;;		_GameParameters_init
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           	psect	text36
 10443  006330                     __ptext36:
 10444                           	callstack 0
 10445  006330                     _Score_init:
 10446                           	callstack 21
 10447  006330                     
 10448                           ;class/score.c: 3: void Score_init(struct Score* s);class/score.c: 4: {;class/score.c: 5
      +                          :     s->homeScore = 0;
 10449  006330  C012  FFD9         	movff	Score_init@s,fsr2l
 10450  006334  C013  FFDA         	movff	Score_init@s+1,fsr2h
 10451  006338  0E00               	movlw	0
 10452  00633A  6EDE               	movwf	postinc2,c
 10453  00633C  0E00               	movlw	0
 10454  00633E  6EDD               	movwf	postdec2,c
 10455  006340                     
 10456                           ;class/score.c: 6:     s->awayScore = 0;
 10457  006340  EE20 F002          	lfsr	2,2
 10458  006344  5012               	movf	Score_init@s^0,w,c
 10459  006346  26D9               	addwf	fsr2l,f,c
 10460  006348  5013               	movf	(Score_init@s+1)^0,w,c
 10461  00634A  22DA               	addwfc	fsr2h,f,c
 10462  00634C  0E00               	movlw	0
 10463  00634E  6EDE               	movwf	postinc2,c
 10464  006350  0E00               	movlw	0
 10465  006352  6EDD               	movwf	postdec2,c
 10466  006354  0012               	return		;funcret
 10467  006356                     __end_of_Score_init:
 10468                           	callstack 0
 10469                           
 10470 ;; *************** function _Paddle_init *****************
 10471 ;; Defined at:
 10472 ;;		line 3 in file "class/paddle.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;  p               2   17[COMRAM] PTR struct Paddle
 10475 ;;		 -> g1(239), 
 10476 ;;  team            2   19[COMRAM] unsigned short 
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;		None
 10479 ;; Return value:  Size  Location     Type
 10480 ;;                  1    wreg      void 
 10481 ;; Registers used:
 10482 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10483 ;; Tracked objects:
 10484 ;;		On entry : 0/0
 10485 ;;		On exit  : 0/0
 10486 ;;		Unchanged: 0/0
 10487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10488 ;;      Params:         4       0       0       0       0       0       0
 10489 ;;      Locals:         0       0       0       0       0       0       0
 10490 ;;      Temps:          0       0       0       0       0       0       0
 10491 ;;      Totals:         4       0       0       0       0       0       0
 10492 ;;Total ram usage:        4 bytes
 10493 ;; Hardware stack levels used: 1
 10494 ;; Hardware stack levels required when called: 4
 10495 ;; This function calls:
 10496 ;;		Nothing
 10497 ;; This function is called by:
 10498 ;;		_GameParameters_init
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           	psect	text37
 10503  0055DE                     __ptext37:
 10504                           	callstack 0
 10505  0055DE                     _Paddle_init:
 10506                           	callstack 21
 10507  0055DE                     
 10508                           ;class/paddle.c: 3: void Paddle_init(struct Paddle* p,uint16_t team);class/paddle.c: 4: 
      +                          {;class/paddle.c: 5:     p->oldx=0;
 10509  0055DE  EE20 F004          	lfsr	2,4
 10510  0055E2  5012               	movf	Paddle_init@p^0,w,c
 10511  0055E4  26D9               	addwf	fsr2l,f,c
 10512  0055E6  5013               	movf	(Paddle_init@p+1)^0,w,c
 10513  0055E8  22DA               	addwfc	fsr2h,f,c
 10514  0055EA  0E00               	movlw	0
 10515  0055EC  6EDE               	movwf	postinc2,c
 10516  0055EE  0E00               	movlw	0
 10517  0055F0  6EDD               	movwf	postdec2,c
 10518                           
 10519                           ;class/paddle.c: 6:     p->oldy=0;
 10520  0055F2  EE20 F006          	lfsr	2,6
 10521  0055F6  5012               	movf	Paddle_init@p^0,w,c
 10522  0055F8  26D9               	addwf	fsr2l,f,c
 10523  0055FA  5013               	movf	(Paddle_init@p+1)^0,w,c
 10524  0055FC  22DA               	addwfc	fsr2h,f,c
 10525  0055FE  0E00               	movlw	0
 10526  005600  6EDE               	movwf	postinc2,c
 10527  005602  0E00               	movlw	0
 10528  005604  6EDD               	movwf	postdec2,c
 10529  005606                     
 10530                           ;class/paddle.c: 7:     if(team)
 10531  005606  5014               	movf	Paddle_init@team^0,w,c
 10532  005608  1015               	iorwf	(Paddle_init@team+1)^0,w,c
 10533  00560A  B4D8               	btfsc	status,2,c
 10534  00560C  EF0A  F02B         	goto	u6621
 10535  005610  EF0C  F02B         	goto	u6620
 10536  005614                     u6621:
 10537  005614  EF2A  F02B         	goto	l9440
 10538  005618                     u6620:
 10539  005618                     
 10540                           ;class/paddle.c: 8:     {;class/paddle.c: 9:         p->x = 90;
 10541  005618  C012  FFD9         	movff	Paddle_init@p,fsr2l
 10542  00561C  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
 10543  005620  0E5A               	movlw	90
 10544  005622  6EDE               	movwf	postinc2,c
 10545  005624  0E00               	movlw	0
 10546  005626  6EDD               	movwf	postdec2,c
 10547  005628                     
 10548                           ;class/paddle.c: 10:         p->y = 20;
 10549  005628  EE20 F002          	lfsr	2,2
 10550  00562C  5012               	movf	Paddle_init@p^0,w,c
 10551  00562E  26D9               	addwf	fsr2l,f,c
 10552  005630  5013               	movf	(Paddle_init@p+1)^0,w,c
 10553  005632  22DA               	addwfc	fsr2h,f,c
 10554  005634  0E14               	movlw	20
 10555  005636  6EDE               	movwf	postinc2,c
 10556  005638  0E00               	movlw	0
 10557  00563A  6EDD               	movwf	postdec2,c
 10558  00563C                     
 10559                           ;class/paddle.c: 11:         p->color = 0b1111111111111111;
 10560  00563C  EE20 F008          	lfsr	2,8
 10561  005640  5012               	movf	Paddle_init@p^0,w,c
 10562  005642  26D9               	addwf	fsr2l,f,c
 10563  005644  5013               	movf	(Paddle_init@p+1)^0,w,c
 10564  005646  22DA               	addwfc	fsr2h,f,c
 10565  005648  0EFF               	movlw	255
 10566  00564A  6EDE               	movwf	postinc2,c
 10567  00564C  0EFF               	movlw	255
 10568  00564E  6EDD               	movwf	postdec2,c
 10569                           
 10570                           ;class/paddle.c: 12:     }
 10571  005650  EF46  F02B         	goto	l18
 10572  005654                     l9440:
 10573                           
 10574                           ;class/paddle.c: 14:     {;class/paddle.c: 15:         p->x = 90;
 10575  005654  C012  FFD9         	movff	Paddle_init@p,fsr2l
 10576  005658  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
 10577  00565C  0E5A               	movlw	90
 10578  00565E  6EDE               	movwf	postinc2,c
 10579  005660  0E00               	movlw	0
 10580  005662  6EDD               	movwf	postdec2,c
 10581  005664                     
 10582                           ;class/paddle.c: 16:         p->y = 280;
 10583  005664  EE20 F002          	lfsr	2,2
 10584  005668  5012               	movf	Paddle_init@p^0,w,c
 10585  00566A  26D9               	addwf	fsr2l,f,c
 10586  00566C  5013               	movf	(Paddle_init@p+1)^0,w,c
 10587  00566E  22DA               	addwfc	fsr2h,f,c
 10588  005670  0E18               	movlw	24
 10589  005672  6EDE               	movwf	postinc2,c
 10590  005674  0E01               	movlw	1
 10591  005676  6EDD               	movwf	postdec2,c
 10592  005678                     
 10593                           ;class/paddle.c: 17:         p->color = 0b1111111111111111;
 10594  005678  EE20 F008          	lfsr	2,8
 10595  00567C  5012               	movf	Paddle_init@p^0,w,c
 10596  00567E  26D9               	addwf	fsr2l,f,c
 10597  005680  5013               	movf	(Paddle_init@p+1)^0,w,c
 10598  005682  22DA               	addwfc	fsr2h,f,c
 10599  005684  0EFF               	movlw	255
 10600  005686  6EDE               	movwf	postinc2,c
 10601  005688  0EFF               	movlw	255
 10602  00568A  6EDD               	movwf	postdec2,c
 10603  00568C                     l18:
 10604  00568C  0012               	return		;funcret
 10605  00568E                     __end_of_Paddle_init:
 10606                           	callstack 0
 10607                           
 10608 ;; *************** function _LCD_SliderCreate *****************
 10609 ;; Defined at:
 10610 ;;		line 291 in file "libraries/lcd_highlevel.c"
 10611 ;; Parameters:    Size  Location     Type
 10612 ;;  posX            2   17[COMRAM] unsigned short 
 10613 ;;  posY            2   19[COMRAM] unsigned short 
 10614 ;;  width           2   21[COMRAM] unsigned short 
 10615 ;;  height          2   23[COMRAM] unsigned short 
 10616 ;;  sldColor        2   25[COMRAM] unsigned short 
 10617 ;;  bgColor         2   27[COMRAM] unsigned short 
 10618 ;;  borderColor     2   29[COMRAM] unsigned short 
 10619 ;;  cursorWidth     2   31[COMRAM] unsigned short 
 10620 ;;  steps           2   33[COMRAM] unsigned short 
 10621 ;;  fpPress         2   35[COMRAM] PTR FTN()void 
 10622 ;;		 -> Absolute function(1), 
 10623 ;;  slider          2   37[COMRAM] PTR struct .
 10624 ;;		 -> g1(239), 
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;		None
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  1    wreg      void 
 10629 ;; Registers used:
 10630 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10636 ;;      Params:        22       0       0       0       0       0       0
 10637 ;;      Locals:         0       0       0       0       0       0       0
 10638 ;;      Temps:          0       0       0       0       0       0       0
 10639 ;;      Totals:        22       0       0       0       0       0       0
 10640 ;;Total ram usage:       22 bytes
 10641 ;; Hardware stack levels used: 1
 10642 ;; Hardware stack levels required when called: 4
 10643 ;; This function calls:
 10644 ;;		Nothing
 10645 ;; This function is called by:
 10646 ;;		_GameParameters_init
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           	psect	text38
 10651  004B7E                     __ptext38:
 10652                           	callstack 0
 10653  004B7E                     _LCD_SliderCreate:
 10654                           	callstack 21
 10655  004B7E                     
 10656                           ;libraries/lcd_highlevel.c: 291: void LCD_SliderCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 292:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 293:                       uint16_t sldColor, uint16_t bgColor, u
      +                          int16_t borderColor,;libraries/lcd_highlevel.c: 294:                       uint16_t curs
      +                          orWidth,;libraries/lcd_highlevel.c: 295:                       uint16_t steps,;libraries
      +                          /lcd_highlevel.c: 296:                       void (* fpPress)(),;libraries/lcd_highlevel
      +                          .c: 297:                       sld_t * slider)
 10657  004B7E  C026  FFD9         	movff	LCD_SliderCreate@slider,fsr2l
 10658  004B82  C027  FFDA         	movff	LCD_SliderCreate@slider+1,fsr2h
 10659  004B86  C012  FFDE         	movff	LCD_SliderCreate@posX,postinc2
 10660  004B8A  C013  FFDD         	movff	LCD_SliderCreate@posX+1,postdec2
 10661  004B8E                     
 10662                           ;libraries/lcd_highlevel.c: 300:   slider->posY = posY;
 10663  004B8E  EE20 F002          	lfsr	2,2
 10664  004B92  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10665  004B94  26D9               	addwf	fsr2l,f,c
 10666  004B96  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10667  004B98  22DA               	addwfc	fsr2h,f,c
 10668  004B9A  C014  FFDE         	movff	LCD_SliderCreate@posY,postinc2
 10669  004B9E  C015  FFDD         	movff	LCD_SliderCreate@posY+1,postdec2
 10670  004BA2                     
 10671                           ;libraries/lcd_highlevel.c: 301:   slider->height = height;
 10672  004BA2  EE20 F006          	lfsr	2,6
 10673  004BA6  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10674  004BA8  26D9               	addwf	fsr2l,f,c
 10675  004BAA  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10676  004BAC  22DA               	addwfc	fsr2h,f,c
 10677  004BAE  C018  FFDE         	movff	LCD_SliderCreate@height,postinc2
 10678  004BB2  C019  FFDD         	movff	LCD_SliderCreate@height+1,postdec2
 10679  004BB6                     
 10680                           ;libraries/lcd_highlevel.c: 302:   slider->width = width;
 10681  004BB6  EE20 F004          	lfsr	2,4
 10682  004BBA  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10683  004BBC  26D9               	addwf	fsr2l,f,c
 10684  004BBE  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10685  004BC0  22DA               	addwfc	fsr2h,f,c
 10686  004BC2  C016  FFDE         	movff	LCD_SliderCreate@width,postinc2
 10687  004BC6  C017  FFDD         	movff	LCD_SliderCreate@width+1,postdec2
 10688  004BCA                     
 10689                           ;libraries/lcd_highlevel.c: 303:   slider->sldColor = sldColor;
 10690  004BCA  EE20 F008          	lfsr	2,8
 10691  004BCE  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10692  004BD0  26D9               	addwf	fsr2l,f,c
 10693  004BD2  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10694  004BD4  22DA               	addwfc	fsr2h,f,c
 10695  004BD6  C01A  FFDE         	movff	LCD_SliderCreate@sldColor,postinc2
 10696  004BDA  C01B  FFDD         	movff	LCD_SliderCreate@sldColor+1,postdec2
 10697  004BDE                     
 10698                           ;libraries/lcd_highlevel.c: 304:   slider->bgColor = bgColor;
 10699  004BDE  EE20 F00A          	lfsr	2,10
 10700  004BE2  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10701  004BE4  26D9               	addwf	fsr2l,f,c
 10702  004BE6  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10703  004BE8  22DA               	addwfc	fsr2h,f,c
 10704  004BEA  C01C  FFDE         	movff	LCD_SliderCreate@bgColor,postinc2
 10705  004BEE  C01D  FFDD         	movff	LCD_SliderCreate@bgColor+1,postdec2
 10706  004BF2                     
 10707                           ;libraries/lcd_highlevel.c: 305:   slider->borderColor = borderColor;
 10708  004BF2  EE20 F00C          	lfsr	2,12
 10709  004BF6  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10710  004BF8  26D9               	addwf	fsr2l,f,c
 10711  004BFA  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10712  004BFC  22DA               	addwfc	fsr2h,f,c
 10713  004BFE  C01E  FFDE         	movff	LCD_SliderCreate@borderColor,postinc2
 10714  004C02  C01F  FFDD         	movff	LCD_SliderCreate@borderColor+1,postdec2
 10715  004C06                     
 10716                           ;libraries/lcd_highlevel.c: 306:   slider->cursorWidth = cursorWidth;
 10717  004C06  EE20 F00E          	lfsr	2,14
 10718  004C0A  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10719  004C0C  26D9               	addwf	fsr2l,f,c
 10720  004C0E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10721  004C10  22DA               	addwfc	fsr2h,f,c
 10722  004C12  C020  FFDE         	movff	LCD_SliderCreate@cursorWidth,postinc2
 10723  004C16  C021  FFDD         	movff	LCD_SliderCreate@cursorWidth+1,postdec2
 10724  004C1A                     
 10725                           ;libraries/lcd_highlevel.c: 307:   slider->fpPress = fpPress;
 10726  004C1A  EE20 F017          	lfsr	2,23
 10727  004C1E  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10728  004C20  26D9               	addwf	fsr2l,f,c
 10729  004C22  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10730  004C24  22DA               	addwfc	fsr2h,f,c
 10731  004C26  C024  FFDE         	movff	LCD_SliderCreate@fpPress,postinc2
 10732  004C2A  C025  FFDD         	movff	LCD_SliderCreate@fpPress+1,postdec2
 10733  004C2E                     
 10734                           ;libraries/lcd_highlevel.c: 308:   slider->steps = steps;
 10735  004C2E  EE20 F015          	lfsr	2,21
 10736  004C32  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10737  004C34  26D9               	addwf	fsr2l,f,c
 10738  004C36  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10739  004C38  22DA               	addwfc	fsr2h,f,c
 10740  004C3A  C022  FFDE         	movff	LCD_SliderCreate@steps,postinc2
 10741  004C3E  C023  FFDD         	movff	LCD_SliderCreate@steps+1,postdec2
 10742  004C42                     
 10743                           ;libraries/lcd_highlevel.c: 309:   slider->value = 0;
 10744  004C42  EE20 F011          	lfsr	2,17
 10745  004C46  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10746  004C48  26D9               	addwf	fsr2l,f,c
 10747  004C4A  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10748  004C4C  22DA               	addwfc	fsr2h,f,c
 10749  004C4E  0E00               	movlw	0
 10750  004C50  6EDE               	movwf	postinc2,c
 10751  004C52  0E00               	movlw	0
 10752  004C54  6EDD               	movwf	postdec2,c
 10753  004C56                     
 10754                           ;libraries/lcd_highlevel.c: 310:   slider->oldValue = 0;
 10755  004C56  EE20 F013          	lfsr	2,19
 10756  004C5A  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10757  004C5C  26D9               	addwf	fsr2l,f,c
 10758  004C5E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10759  004C60  22DA               	addwfc	fsr2h,f,c
 10760  004C62  0E00               	movlw	0
 10761  004C64  6EDE               	movwf	postinc2,c
 10762  004C66  0E00               	movlw	0
 10763  004C68  6EDD               	movwf	postdec2,c
 10764  004C6A  0012               	return		;funcret
 10765  004C6C                     __end_of_LCD_SliderCreate:
 10766                           	callstack 0
 10767                           
 10768 ;; *************** function _LCD_ButtonCreate *****************
 10769 ;; Defined at:
 10770 ;;		line 396 in file "libraries/lcd_highlevel.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;  posX            2   17[COMRAM] unsigned short 
 10773 ;;  posY            2   19[COMRAM] unsigned short 
 10774 ;;  width           2   21[COMRAM] unsigned short 
 10775 ;;  height          2   23[COMRAM] unsigned short 
 10776 ;;  txtColor        2   25[COMRAM] unsigned short 
 10777 ;;  bgColor         2   27[COMRAM] unsigned short 
 10778 ;;  textOrBmp       2   29[COMRAM] PTR const unsigned char 
 10779 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 10780 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 10781 ;;  font            2   31[COMRAM] PTR struct .
 10782 ;;		 -> arialNarrow_12ptFontInfo(7), 
 10783 ;;  fpPress         2   33[COMRAM] PTR FTN(unsigned char ,)
 10784 ;;		 -> Absolute function(1), 
 10785 ;;  fpReleased      2   35[COMRAM] PTR FTN(unsigned char ,)
 10786 ;;		 -> Absolute function(1), 
 10787 ;;  fpOut           2   37[COMRAM] PTR FTN(unsigned char ,)
 10788 ;;		 -> Absolute function(1), 
 10789 ;;  button          2   39[COMRAM] PTR struct .
 10790 ;;		 -> g1(239), 
 10791 ;;  index           1   41[COMRAM] unsigned char 
 10792 ;; Auto vars:     Size  Location     Type
 10793 ;;		None
 10794 ;; Return value:  Size  Location     Type
 10795 ;;                  1    wreg      void 
 10796 ;; Registers used:
 10797 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10798 ;; Tracked objects:
 10799 ;;		On entry : 0/0
 10800 ;;		On exit  : 0/0
 10801 ;;		Unchanged: 0/0
 10802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10803 ;;      Params:        25       0       0       0       0       0       0
 10804 ;;      Locals:         0       0       0       0       0       0       0
 10805 ;;      Temps:          0       0       0       0       0       0       0
 10806 ;;      Totals:        25       0       0       0       0       0       0
 10807 ;;Total ram usage:       25 bytes
 10808 ;; Hardware stack levels used: 1
 10809 ;; Hardware stack levels required when called: 4
 10810 ;; This function calls:
 10811 ;;		Nothing
 10812 ;; This function is called by:
 10813 ;;		_GameParameters_init
 10814 ;; This function uses a non-reentrant model
 10815 ;;
 10816                           
 10817                           	psect	text39
 10818  004990                     __ptext39:
 10819                           	callstack 0
 10820  004990                     _LCD_ButtonCreate:
 10821                           	callstack 21
 10822  004990                     
 10823                           ;libraries/lcd_highlevel.c: 396: void LCD_ButtonCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 397:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 398:                       uint16_t txtColor, uint16_t bgColor,;l
      +                          ibraries/lcd_highlevel.c: 399:                       const uint8_t * textOrBmp, FONT_INF
      +                          O * font,;libraries/lcd_highlevel.c: 400:                       void (*fpPress)(uint8_t)
      +                          , void (* fpReleased)(uint8_t), void (* fpOut)(uint8_t),;libraries/lcd_highlevel.c: 401:
      +                                                 btn_t * button,
 10824  004990  C028  FFD9         	movff	LCD_ButtonCreate@button,fsr2l
 10825  004994  C029  FFDA         	movff	LCD_ButtonCreate@button+1,fsr2h
 10826  004998  C012  FFDE         	movff	LCD_ButtonCreate@posX,postinc2
 10827  00499C  C013  FFDD         	movff	LCD_ButtonCreate@posX+1,postdec2
 10828  0049A0                     
 10829                           ;libraries/lcd_highlevel.c: 405:   button->posY = posY;
 10830  0049A0  EE20 F002          	lfsr	2,2
 10831  0049A4  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10832  0049A6  26D9               	addwf	fsr2l,f,c
 10833  0049A8  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10834  0049AA  22DA               	addwfc	fsr2h,f,c
 10835  0049AC  C014  FFDE         	movff	LCD_ButtonCreate@posY,postinc2
 10836  0049B0  C015  FFDD         	movff	LCD_ButtonCreate@posY+1,postdec2
 10837  0049B4                     
 10838                           ;libraries/lcd_highlevel.c: 406:   button->height = height;
 10839  0049B4  EE20 F006          	lfsr	2,6
 10840  0049B8  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10841  0049BA  26D9               	addwf	fsr2l,f,c
 10842  0049BC  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10843  0049BE  22DA               	addwfc	fsr2h,f,c
 10844  0049C0  C018  FFDE         	movff	LCD_ButtonCreate@height,postinc2
 10845  0049C4  C019  FFDD         	movff	LCD_ButtonCreate@height+1,postdec2
 10846  0049C8                     
 10847                           ;libraries/lcd_highlevel.c: 407:   button->width = width;
 10848  0049C8  EE20 F004          	lfsr	2,4
 10849  0049CC  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10850  0049CE  26D9               	addwf	fsr2l,f,c
 10851  0049D0  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10852  0049D2  22DA               	addwfc	fsr2h,f,c
 10853  0049D4  C016  FFDE         	movff	LCD_ButtonCreate@width,postinc2
 10854  0049D8  C017  FFDD         	movff	LCD_ButtonCreate@width+1,postdec2
 10855  0049DC                     
 10856                           ;libraries/lcd_highlevel.c: 408:   button->txtColor = txtColor;
 10857  0049DC  EE20 F008          	lfsr	2,8
 10858  0049E0  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10859  0049E2  26D9               	addwf	fsr2l,f,c
 10860  0049E4  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10861  0049E6  22DA               	addwfc	fsr2h,f,c
 10862  0049E8  C01A  FFDE         	movff	LCD_ButtonCreate@txtColor,postinc2
 10863  0049EC  C01B  FFDD         	movff	LCD_ButtonCreate@txtColor+1,postdec2
 10864  0049F0                     
 10865                           ;libraries/lcd_highlevel.c: 409:   button->bgColor = bgColor;
 10866  0049F0  EE20 F00A          	lfsr	2,10
 10867  0049F4  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10868  0049F6  26D9               	addwf	fsr2l,f,c
 10869  0049F8  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10870  0049FA  22DA               	addwfc	fsr2h,f,c
 10871  0049FC  C01C  FFDE         	movff	LCD_ButtonCreate@bgColor,postinc2
 10872  004A00  C01D  FFDD         	movff	LCD_ButtonCreate@bgColor+1,postdec2
 10873  004A04                     
 10874                           ;libraries/lcd_highlevel.c: 410:   button->text = textOrBmp;
 10875  004A04  EE20 F00C          	lfsr	2,12
 10876  004A08  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10877  004A0A  26D9               	addwf	fsr2l,f,c
 10878  004A0C  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10879  004A0E  22DA               	addwfc	fsr2h,f,c
 10880  004A10  C01E  FFDE         	movff	LCD_ButtonCreate@textOrBmp,postinc2
 10881  004A14  C01F  FFDD         	movff	LCD_ButtonCreate@textOrBmp+1,postdec2
 10882  004A18                     
 10883                           ;libraries/lcd_highlevel.c: 411:   button->font = font;
 10884  004A18  EE20 F00E          	lfsr	2,14
 10885  004A1C  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10886  004A1E  26D9               	addwf	fsr2l,f,c
 10887  004A20  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10888  004A22  22DA               	addwfc	fsr2h,f,c
 10889  004A24  C020  FFDE         	movff	LCD_ButtonCreate@font,postinc2
 10890  004A28  C021  FFDD         	movff	LCD_ButtonCreate@font+1,postdec2
 10891  004A2C                     
 10892                           ;libraries/lcd_highlevel.c: 412:   button->fpPress = fpPress;
 10893  004A2C  EE20 F011          	lfsr	2,17
 10894  004A30  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10895  004A32  26D9               	addwf	fsr2l,f,c
 10896  004A34  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10897  004A36  22DA               	addwfc	fsr2h,f,c
 10898  004A38  C022  FFDE         	movff	LCD_ButtonCreate@fpPress,postinc2
 10899  004A3C  C023  FFDD         	movff	LCD_ButtonCreate@fpPress+1,postdec2
 10900  004A40                     
 10901                           ;libraries/lcd_highlevel.c: 413:   button->fpReleased = fpReleased;
 10902  004A40  EE20 F013          	lfsr	2,19
 10903  004A44  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10904  004A46  26D9               	addwf	fsr2l,f,c
 10905  004A48  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10906  004A4A  22DA               	addwfc	fsr2h,f,c
 10907  004A4C  C024  FFDE         	movff	LCD_ButtonCreate@fpReleased,postinc2
 10908  004A50  C025  FFDD         	movff	LCD_ButtonCreate@fpReleased+1,postdec2
 10909  004A54                     
 10910                           ;libraries/lcd_highlevel.c: 414:   button->fpOut = fpOut;
 10911  004A54  EE20 F015          	lfsr	2,21
 10912  004A58  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10913  004A5A  26D9               	addwf	fsr2l,f,c
 10914  004A5C  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10915  004A5E  22DA               	addwfc	fsr2h,f,c
 10916  004A60  C026  FFDE         	movff	LCD_ButtonCreate@fpOut,postinc2
 10917  004A64  C027  FFDD         	movff	LCD_ButtonCreate@fpOut+1,postdec2
 10918  004A68                     
 10919                           ;libraries/lcd_highlevel.c: 415:   button->index = index;
 10920  004A68  EE20 F017          	lfsr	2,23
 10921  004A6C  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10922  004A6E  26D9               	addwf	fsr2l,f,c
 10923  004A70  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10924  004A72  22DA               	addwfc	fsr2h,f,c
 10925  004A74  C02A  FFDF         	movff	LCD_ButtonCreate@index,indf2
 10926  004A78                     
 10927                           ;libraries/lcd_highlevel.c: 416:   button->pressed = 0;
 10928  004A78  EE20 F010          	lfsr	2,16
 10929  004A7C  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10930  004A7E  26D9               	addwf	fsr2l,f,c
 10931  004A80  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10932  004A82  22DA               	addwfc	fsr2h,f,c
 10933  004A84  0E00               	movlw	0
 10934  004A86  6EDF               	movwf	indf2,c
 10935  004A88  0012               	return		;funcret
 10936  004A8A                     __end_of_LCD_ButtonCreate:
 10937                           	callstack 0
 10938                           
 10939 ;; *************** function _Ball_init *****************
 10940 ;; Defined at:
 10941 ;;		line 3 in file "class/ball.c"
 10942 ;; Parameters:    Size  Location     Type
 10943 ;;  b               2   17[COMRAM] PTR struct Ball
 10944 ;;		 -> g1(239), 
 10945 ;; Auto vars:     Size  Location     Type
 10946 ;;		None
 10947 ;; Return value:  Size  Location     Type
 10948 ;;                  1    wreg      void 
 10949 ;; Registers used:
 10950 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10951 ;; Tracked objects:
 10952 ;;		On entry : 0/0
 10953 ;;		On exit  : 0/0
 10954 ;;		Unchanged: 0/0
 10955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10956 ;;      Params:         2       0       0       0       0       0       0
 10957 ;;      Locals:         0       0       0       0       0       0       0
 10958 ;;      Temps:          0       0       0       0       0       0       0
 10959 ;;      Totals:         2       0       0       0       0       0       0
 10960 ;;Total ram usage:        2 bytes
 10961 ;; Hardware stack levels used: 1
 10962 ;; Hardware stack levels required when called: 4
 10963 ;; This function calls:
 10964 ;;		Nothing
 10965 ;; This function is called by:
 10966 ;;		_GameParameters_init
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           	psect	text40
 10971  005BEE                     __ptext40:
 10972                           	callstack 0
 10973  005BEE                     _Ball_init:
 10974                           	callstack 21
 10975  005BEE                     
 10976                           ;class/ball.c: 3: void Ball_init(struct Ball* b);class/ball.c: 4: {;class/ball.c: 5:    
      +                           b->x = 90;
 10977  005BEE  C012  FFD9         	movff	Ball_init@b,fsr2l
 10978  005BF2  C013  FFDA         	movff	Ball_init@b+1,fsr2h
 10979  005BF6  0E5A               	movlw	90
 10980  005BF8  6EDE               	movwf	postinc2,c
 10981  005BFA  0E00               	movlw	0
 10982  005BFC  6EDD               	movwf	postdec2,c
 10983  005BFE                     
 10984                           ;class/ball.c: 6:     b->y = 150;
 10985  005BFE  EE20 F002          	lfsr	2,2
 10986  005C02  5012               	movf	Ball_init@b^0,w,c
 10987  005C04  26D9               	addwf	fsr2l,f,c
 10988  005C06  5013               	movf	(Ball_init@b+1)^0,w,c
 10989  005C08  22DA               	addwfc	fsr2h,f,c
 10990  005C0A  0E96               	movlw	150
 10991  005C0C  6EDE               	movwf	postinc2,c
 10992  005C0E  0E00               	movlw	0
 10993  005C10  6EDD               	movwf	postdec2,c
 10994  005C12                     
 10995                           ;class/ball.c: 7:     b->oldx=20;
 10996  005C12  EE20 F004          	lfsr	2,4
 10997  005C16  5012               	movf	Ball_init@b^0,w,c
 10998  005C18  26D9               	addwf	fsr2l,f,c
 10999  005C1A  5013               	movf	(Ball_init@b+1)^0,w,c
 11000  005C1C  22DA               	addwfc	fsr2h,f,c
 11001  005C1E  0E14               	movlw	20
 11002  005C20  6EDE               	movwf	postinc2,c
 11003  005C22  0E00               	movlw	0
 11004  005C24  6EDD               	movwf	postdec2,c
 11005  005C26                     
 11006                           ;class/ball.c: 8:     b->oldy=20;
 11007  005C26  EE20 F006          	lfsr	2,6
 11008  005C2A  5012               	movf	Ball_init@b^0,w,c
 11009  005C2C  26D9               	addwf	fsr2l,f,c
 11010  005C2E  5013               	movf	(Ball_init@b+1)^0,w,c
 11011  005C30  22DA               	addwfc	fsr2h,f,c
 11012  005C32  0E14               	movlw	20
 11013  005C34  6EDE               	movwf	postinc2,c
 11014  005C36  0E00               	movlw	0
 11015  005C38  6EDD               	movwf	postdec2,c
 11016  005C3A                     
 11017                           ;class/ball.c: 9:     b->dx = 0;
 11018  005C3A  EE20 F008          	lfsr	2,8
 11019  005C3E  5012               	movf	Ball_init@b^0,w,c
 11020  005C40  26D9               	addwf	fsr2l,f,c
 11021  005C42  5013               	movf	(Ball_init@b+1)^0,w,c
 11022  005C44  22DA               	addwfc	fsr2h,f,c
 11023  005C46  0E00               	movlw	0
 11024  005C48  6EDE               	movwf	postinc2,c
 11025  005C4A  0E00               	movlw	0
 11026  005C4C  6EDD               	movwf	postdec2,c
 11027  005C4E                     
 11028                           ;class/ball.c: 10:     b->dy = 1;
 11029  005C4E  EE20 F00A          	lfsr	2,10
 11030  005C52  5012               	movf	Ball_init@b^0,w,c
 11031  005C54  26D9               	addwf	fsr2l,f,c
 11032  005C56  5013               	movf	(Ball_init@b+1)^0,w,c
 11033  005C58  22DA               	addwfc	fsr2h,f,c
 11034  005C5A  0E01               	movlw	1
 11035  005C5C  6EDE               	movwf	postinc2,c
 11036  005C5E  0E00               	movlw	0
 11037  005C60  6EDD               	movwf	postdec2,c
 11038  005C62  0012               	return		;funcret
 11039  005C64                     __end_of_Ball_init:
 11040                           	callstack 0
 11041                           
 11042 ;; *************** function _displaySM *****************
 11043 ;; Defined at:
 11044 ;;		line 21 in file "stateMachine/display.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;  ev              1    wreg     unsigned char 
 11047 ;;  g               2   67[BANK0 ] PTR struct GameParameter
 11048 ;;		 -> g1(239), 
 11049 ;; Auto vars:     Size  Location     Type
 11050 ;;  ev              1   71[BANK0 ] unsigned char 
 11051 ;; Return value:  Size  Location     Type
 11052 ;;                  1    wreg      void 
 11053 ;; Registers used:
 11054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11055 ;; Tracked objects:
 11056 ;;		On entry : 0/0
 11057 ;;		On exit  : 0/0
 11058 ;;		Unchanged: 0/0
 11059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11060 ;;      Params:         0       2       0       0       0       0       0
 11061 ;;      Locals:         0       1       0       0       0       0       0
 11062 ;;      Temps:          0       2       0       0       0       0       0
 11063 ;;      Totals:         0       5       0       0       0       0       0
 11064 ;;Total ram usage:        5 bytes
 11065 ;; Hardware stack levels used: 1
 11066 ;; Hardware stack levels required when called: 14
 11067 ;; This function calls:
 11068 ;;		_Menu_inGameDraw
 11069 ;;		_displayController
 11070 ;; This function is called by:
 11071 ;;		_Factory_exec
 11072 ;; This function uses a non-reentrant model
 11073 ;;
 11074                           
 11075                           	psect	text41
 11076  004890                     __ptext41:
 11077                           	callstack 0
 11078  004890                     _displaySM:
 11079                           	callstack 15
 11080                           
 11081                           ;incstack = 0
 11082                           ;displaySM@ev stored from wreg
 11083  004890  0100               	movlb	0	; () banked
 11084  004892  6FA7               	movwf	displaySM@ev& (0+255),b
 11085  004894                     
 11086                           ;stateMachine/display.c: 21: void displaySM(Event ev, GameParameters* g);stateMachine/di
      +                          splay.c: 22: {;stateMachine/display.c: 23:    switch(displayState)
 11087  004894  EFA9  F024         	goto	l10566
 11088  004898                     l10528:
 11089                           
 11090                           ; BSR set to: 0
 11091                           ;stateMachine/display.c: 26:             if((ev==evOnePlayer)||(ev==evTwoPlayer))
 11092  004898  0E05               	movlw	5
 11093  00489A  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11094  00489C  B4D8               	btfsc	status,2,c
 11095  00489E  EF53  F024         	goto	u7981
 11096  0048A2  EF55  F024         	goto	u7980
 11097  0048A6                     u7981:
 11098  0048A6  EF5E  F024         	goto	l10532
 11099  0048AA                     u7980:
 11100  0048AA                     
 11101                           ; BSR set to: 0
 11102  0048AA  0E06               	movlw	6
 11103  0048AC  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11104  0048AE  A4D8               	btfss	status,2,c
 11105  0048B0  EF5C  F024         	goto	u7991
 11106  0048B4  EF5E  F024         	goto	u7990
 11107  0048B8                     u7991:
 11108  0048B8  EF6E  F024         	goto	l10538
 11109  0048BC                     u7990:
 11110  0048BC                     l10532:
 11111                           
 11112                           ; BSR set to: 0
 11113                           ;stateMachine/display.c: 27:             {;stateMachine/display.c: 28:                 d
      +                          isplayState=INGAME;
 11114  0048BC  0E02               	movlw	2
 11115  0048BE  6FDD               	movwf	_displayState& (0+255),b
 11116  0048C0                     
 11117                           ; BSR set to: 0
 11118                           ;stateMachine/display.c: 29:                 Menu_inGameDraw(g);
 11119  0048C0  C0A3  F092         	movff	displaySM@g,Menu_inGameDraw@g
 11120  0048C4  C0A4  F093         	movff	displaySM@g+1,Menu_inGameDraw@g+1
 11121  0048C8  EC02  F030         	call	_Menu_inGameDraw	;wreg free
 11122  0048CC                     
 11123                           ;stateMachine/display.c: 30:                 displayController(g,ev);
 11124  0048CC  C0A3  F09E         	movff	displaySM@g,displayController@g
 11125  0048D0  C0A4  F09F         	movff	displaySM@g+1,displayController@g+1
 11126  0048D4  C0A7  F0A0         	movff	displaySM@ev,displayController@ev
 11127  0048D8  ECC6  F023         	call	_displayController	;wreg free
 11128  0048DC                     l10538:
 11129                           
 11130                           ;stateMachine/display.c: 32:             if(ev==evParameters)
 11131  0048DC  0E07               	movlw	7
 11132  0048DE  0100               	movlb	0	; () banked
 11133  0048E0  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11134  0048E2  A4D8               	btfss	status,2,c
 11135  0048E4  EF76  F024         	goto	u8001
 11136  0048E8  EF78  F024         	goto	u8000
 11137  0048EC                     u8001:
 11138  0048EC  EFC7  F024         	goto	l571
 11139  0048F0                     u8000:
 11140  0048F0                     
 11141                           ; BSR set to: 0
 11142                           ;stateMachine/display.c: 33:             {;stateMachine/display.c: 34:                 d
      +                          isplayState=PARAMETERS;
 11143  0048F0  0E01               	movlw	1
 11144  0048F2  6FDD               	movwf	_displayState& (0+255),b
 11145  0048F4                     l10542:
 11146                           
 11147                           ; BSR set to: 0
 11148                           ;stateMachine/display.c: 35:                 displayController(g,ev);
 11149  0048F4  C0A3  F09E         	movff	displaySM@g,displayController@g
 11150  0048F8  C0A4  F09F         	movff	displaySM@g+1,displayController@g+1
 11151  0048FC  C0A7  F0A0         	movff	displaySM@ev,displayController@ev
 11152  004900  ECC6  F023         	call	_displayController	;wreg free
 11153  004904  EFC7  F024         	goto	l571
 11154  004908                     l10544:
 11155                           
 11156                           ; BSR set to: 0
 11157                           ;stateMachine/display.c: 39:             if(ev==evLeaveParam)
 11158  004908  0E08               	movlw	8
 11159  00490A  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11160  00490C  A4D8               	btfss	status,2,c
 11161  00490E  EF8B  F024         	goto	u8011
 11162  004912  EF8D  F024         	goto	u8010
 11163  004916                     u8011:
 11164  004916  EFC7  F024         	goto	l571
 11165  00491A                     u8010:
 11166  00491A                     l10546:
 11167                           
 11168                           ; BSR set to: 0
 11169                           ;stateMachine/display.c: 40:             {;stateMachine/display.c: 41:                 d
      +                          isplayState=WELCOME;
 11170  00491A  0E00               	movlw	0
 11171  00491C  6FDD               	movwf	_displayState& (0+255),b
 11172  00491E  EF7A  F024         	goto	l10542
 11173  004922                     l10550:
 11174                           
 11175                           ; BSR set to: 0
 11176                           ;stateMachine/display.c: 46:             if(ev==evEndGame)
 11177  004922  0E09               	movlw	9
 11178  004924  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11179  004926  A4D8               	btfss	status,2,c
 11180  004928  EF98  F024         	goto	u8021
 11181  00492C  EF9A  F024         	goto	u8020
 11182  004930                     u8021:
 11183  004930  EF7A  F024         	goto	l10542
 11184  004934                     u8020:
 11185  004934                     
 11186                           ; BSR set to: 0
 11187                           ;stateMachine/display.c: 47:             {;stateMachine/display.c: 48:                 d
      +                          isplayState=ENDGAME;
 11188  004934  0E03               	movlw	3
 11189  004936  6FDD               	movwf	_displayState& (0+255),b
 11190  004938  EF7A  F024         	goto	l10542
 11191  00493C                     l10558:
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;stateMachine/display.c: 57:            if(ev==evNewGame)
 11195  00493C  0E0F               	movlw	15
 11196  00493E  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11197  004940  A4D8               	btfss	status,2,c
 11198  004942  EFA5  F024         	goto	u8031
 11199  004946  EFA7  F024         	goto	u8030
 11200  00494A                     u8031:
 11201  00494A  EFC7  F024         	goto	l571
 11202  00494E                     u8030:
 11203  00494E  EF8D  F024         	goto	l10546
 11204  004952                     l10566:
 11205  004952  0100               	movlb	0	; () banked
 11206  004954  51DD               	movf	_displayState& (0+255),w,b
 11207  004956  6FA5               	movwf	??_displaySM& (0+255),b
 11208  004958  6BA6               	clrf	(??_displaySM+1)& (0+255),b
 11209                           
 11210                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11211                           ; Switch size 1, requested type "simple"
 11212                           ; Number of cases is 1, Range of values is 0 to 0
 11213                           ; switch strategies available:
 11214                           ; Name         Instructions Cycles
 11215                           ; simple_byte            4     3 (average)
 11216                           ;	Chosen strategy is simple_byte
 11217  00495A  51A6               	movf	(??_displaySM+1)& (0+255),w,b
 11218  00495C  0A00               	xorlw	0	; case 0
 11219  00495E  B4D8               	btfsc	status,2,c
 11220  004960  EFB4  F024         	goto	l10906
 11221  004964  EFC7  F024         	goto	l571
 11222  004968                     l10906:
 11223                           
 11224                           ; BSR set to: 0
 11225                           ; Switch size 1, requested type "simple"
 11226                           ; Number of cases is 4, Range of values is 0 to 3
 11227                           ; switch strategies available:
 11228                           ; Name         Instructions Cycles
 11229                           ; simple_byte           13     7 (average)
 11230                           ;	Chosen strategy is simple_byte
 11231  004968  51A5               	movf	??_displaySM& (0+255),w,b
 11232  00496A  0A00               	xorlw	0	; case 0
 11233  00496C  B4D8               	btfsc	status,2,c
 11234  00496E  EF4C  F024         	goto	l10528
 11235  004972  0A01               	xorlw	1	; case 1
 11236  004974  B4D8               	btfsc	status,2,c
 11237  004976  EF84  F024         	goto	l10544
 11238  00497A  0A03               	xorlw	3	; case 2
 11239  00497C  B4D8               	btfsc	status,2,c
 11240  00497E  EF91  F024         	goto	l10550
 11241  004982  0A01               	xorlw	1	; case 3
 11242  004984  B4D8               	btfsc	status,2,c
 11243  004986  EF9E  F024         	goto	l10558
 11244  00498A  EFC7  F024         	goto	l571
 11245  00498E                     l571:
 11246  00498E  0012               	return		;funcret
 11247  004990                     __end_of_displaySM:
 11248                           	callstack 0
 11249                           
 11250 ;; *************** function _displayController *****************
 11251 ;; Defined at:
 11252 ;;		line 67 in file "stateMachine/display.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;  g               2   62[BANK0 ] PTR struct GameParameter
 11255 ;;		 -> g1(239), 
 11256 ;;  ev              1   64[BANK0 ] unsigned char 
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;		None
 11259 ;; Return value:  Size  Location     Type
 11260 ;;                  1    wreg      void 
 11261 ;; Registers used:
 11262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11263 ;; Tracked objects:
 11264 ;;		On entry : 0/0
 11265 ;;		On exit  : 0/0
 11266 ;;		Unchanged: 0/0
 11267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11268 ;;      Params:         0       3       0       0       0       0       0
 11269 ;;      Locals:         0       0       0       0       0       0       0
 11270 ;;      Temps:          0       2       0       0       0       0       0
 11271 ;;      Totals:         0       5       0       0       0       0       0
 11272 ;;Total ram usage:        5 bytes
 11273 ;; Hardware stack levels used: 1
 11274 ;; Hardware stack levels required when called: 13
 11275 ;; This function calls:
 11276 ;;		_Ball_draw
 11277 ;;		_Menu_endGame
 11278 ;;		_Menu_parametersDraw
 11279 ;;		_Menu_welcomeDraw
 11280 ;;		_Paddle_draw
 11281 ;;		_Score_draw
 11282 ;; This function is called by:
 11283 ;;		_displayInit
 11284 ;;		_displaySM
 11285 ;; This function uses a non-reentrant model
 11286 ;;
 11287                           
 11288                           	psect	text42
 11289  00478C                     __ptext42:
 11290                           	callstack 0
 11291  00478C                     _displayController:
 11292                           	callstack 14
 11293  00478C                     
 11294                           ;stateMachine/display.c: 67: void displayController(GameParameters* g,Event ev);stateMac
      +                          hine/display.c: 68: {;stateMachine/display.c: 69:     switch(displayState)
 11295  00478C  EF29  F024         	goto	l10036
 11296  004790                     l10012:
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;stateMachine/display.c: 73:             Menu_welcomeDraw(g);
 11300  004790  C09E  F09C         	movff	displayController@g,Menu_welcomeDraw@g
 11301  004794  C09F  F09D         	movff	displayController@g+1,Menu_welcomeDraw@g+1
 11302  004798  ECBB  F02D         	call	_Menu_welcomeDraw	;wreg free
 11303                           
 11304                           ;stateMachine/display.c: 74:             break;
 11305  00479C  EF47  F024         	goto	l585
 11306  0047A0                     l10014:
 11307                           
 11308                           ; BSR set to: 0
 11309                           ;stateMachine/display.c: 77:             Menu_parametersDraw(g);
 11310  0047A0  C09E  F09C         	movff	displayController@g,Menu_parametersDraw@g
 11311  0047A4  C09F  F09D         	movff	displayController@g+1,Menu_parametersDraw@g+1
 11312  0047A8  EC7A  F02D         	call	_Menu_parametersDraw	;wreg free
 11313                           
 11314                           ;stateMachine/display.c: 78:             break;
 11315  0047AC  EF47  F024         	goto	l585
 11316  0047B0                     l10016:
 11317                           
 11318                           ; BSR set to: 0
 11319                           ;stateMachine/display.c: 80:             if(ev==evRedrawPaddle1)
 11320  0047B0  0E0B               	movlw	11
 11321  0047B2  19A0               	xorwf	displayController@ev& (0+255),w,b
 11322  0047B4  A4D8               	btfss	status,2,c
 11323  0047B6  EFDF  F023         	goto	u7301
 11324  0047BA  EFE1  F023         	goto	u7300
 11325  0047BE                     u7301:
 11326  0047BE  EFE9  F023         	goto	l10020
 11327  0047C2                     u7300:
 11328  0047C2                     
 11329                           ; BSR set to: 0
 11330                           ;stateMachine/display.c: 81:             {;stateMachine/display.c: 82:                 P
      +                          addle_draw(&g->p1);
 11331  0047C2  0ED5               	movlw	213
 11332  0047C4  259E               	addwf	displayController@g& (0+255),w,b
 11333  0047C6  6E25               	movwf	Paddle_draw@p^0,c
 11334  0047C8  0E00               	movlw	0
 11335  0047CA  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11336  0047CC  6E26               	movwf	(Paddle_draw@p+1)^0,c
 11337  0047CE  EC92  F021         	call	_Paddle_draw	;wreg free
 11338  0047D2                     l10020:
 11339                           
 11340                           ;stateMachine/display.c: 84:             if(ev==evRedrawPaddle2)
 11341  0047D2  0E0C               	movlw	12
 11342  0047D4  0100               	movlb	0	; () banked
 11343  0047D6  19A0               	xorwf	displayController@ev& (0+255),w,b
 11344  0047D8  A4D8               	btfss	status,2,c
 11345  0047DA  EFF1  F023         	goto	u7311
 11346  0047DE  EFF3  F023         	goto	u7310
 11347  0047E2                     u7311:
 11348  0047E2  EFFB  F023         	goto	l10024
 11349  0047E6                     u7310:
 11350  0047E6                     
 11351                           ; BSR set to: 0
 11352                           ;stateMachine/display.c: 85:             {;stateMachine/display.c: 86:                 P
      +                          addle_draw(&g->p2);
 11353  0047E6  0EDF               	movlw	223
 11354  0047E8  259E               	addwf	displayController@g& (0+255),w,b
 11355  0047EA  6E25               	movwf	Paddle_draw@p^0,c
 11356  0047EC  0E00               	movlw	0
 11357  0047EE  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11358  0047F0  6E26               	movwf	(Paddle_draw@p+1)^0,c
 11359  0047F2  EC92  F021         	call	_Paddle_draw	;wreg free
 11360  0047F6                     l10024:
 11361                           
 11362                           ;stateMachine/display.c: 88:             if(ev==evRedrawBall)
 11363  0047F6  0E0D               	movlw	13
 11364  0047F8  0100               	movlb	0	; () banked
 11365  0047FA  19A0               	xorwf	displayController@ev& (0+255),w,b
 11366  0047FC  A4D8               	btfss	status,2,c
 11367  0047FE  EF03  F024         	goto	u7321
 11368  004802  EF05  F024         	goto	u7320
 11369  004806                     u7321:
 11370  004806  EF0D  F024         	goto	l10028
 11371  00480A                     u7320:
 11372  00480A                     
 11373                           ; BSR set to: 0
 11374                           ;stateMachine/display.c: 89:             {;stateMachine/display.c: 90:                 B
      +                          all_draw(&g->b);
 11375  00480A  0EC9               	movlw	201
 11376  00480C  259E               	addwf	displayController@g& (0+255),w,b
 11377  00480E  6E25               	movwf	Ball_draw@b^0,c
 11378  004810  0E00               	movlw	0
 11379  004812  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11380  004814  6E26               	movwf	(Ball_draw@b+1)^0,c
 11381  004816  EC46  F020         	call	_Ball_draw	;wreg free
 11382  00481A                     l10028:
 11383                           
 11384                           ;stateMachine/display.c: 92:             if(ev==evRedrawScore)
 11385  00481A  0E0E               	movlw	14
 11386  00481C  0100               	movlb	0	; () banked
 11387  00481E  19A0               	xorwf	displayController@ev& (0+255),w,b
 11388  004820  A4D8               	btfss	status,2,c
 11389  004822  EF15  F024         	goto	u7331
 11390  004826  EF17  F024         	goto	u7330
 11391  00482A                     u7331:
 11392  00482A  EF47  F024         	goto	l585
 11393  00482E                     u7330:
 11394  00482E                     
 11395                           ; BSR set to: 0
 11396                           ;stateMachine/display.c: 93:             {;stateMachine/display.c: 94:                 S
      +                          core_draw(&g->s1);
 11397  00482E  0EE9               	movlw	233
 11398  004830  259E               	addwf	displayController@g& (0+255),w,b
 11399  004832  6F90               	movwf	Score_draw@s& (0+255),b
 11400  004834  0E00               	movlw	0
 11401  004836  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11402  004838  6F91               	movwf	(Score_draw@s+1)& (0+255),b
 11403  00483A  EC81  F027         	call	_Score_draw	;wreg free
 11404  00483E  EF47  F024         	goto	l585
 11405  004842                     l10032:
 11406                           
 11407                           ; BSR set to: 0
 11408                           ;stateMachine/display.c: 98:             Menu_endGame(g);
 11409  004842  C09E  F09C         	movff	displayController@g,Menu_endGame@g
 11410  004846  C09F  F09D         	movff	displayController@g+1,Menu_endGame@g+1
 11411  00484A  EC47  F02B         	call	_Menu_endGame	;wreg free
 11412                           
 11413                           ;stateMachine/display.c: 99:             break;
 11414  00484E  EF47  F024         	goto	l585
 11415  004852                     l10036:
 11416  004852  0100               	movlb	0	; () banked
 11417  004854  51DD               	movf	_displayState& (0+255),w,b
 11418  004856  6FA1               	movwf	??_displayController& (0+255),b
 11419  004858  6BA2               	clrf	(??_displayController+1)& (0+255),b
 11420                           
 11421                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11422                           ; Switch size 1, requested type "simple"
 11423                           ; Number of cases is 1, Range of values is 0 to 0
 11424                           ; switch strategies available:
 11425                           ; Name         Instructions Cycles
 11426                           ; simple_byte            4     3 (average)
 11427                           ;	Chosen strategy is simple_byte
 11428  00485A  51A2               	movf	(??_displayController+1)& (0+255),w,b
 11429  00485C  0A00               	xorlw	0	; case 0
 11430  00485E  B4D8               	btfsc	status,2,c
 11431  004860  EF34  F024         	goto	l10908
 11432  004864  EF47  F024         	goto	l585
 11433  004868                     l10908:
 11434                           
 11435                           ; BSR set to: 0
 11436                           ; Switch size 1, requested type "simple"
 11437                           ; Number of cases is 4, Range of values is 0 to 3
 11438                           ; switch strategies available:
 11439                           ; Name         Instructions Cycles
 11440                           ; simple_byte           13     7 (average)
 11441                           ;	Chosen strategy is simple_byte
 11442  004868  51A1               	movf	??_displayController& (0+255),w,b
 11443  00486A  0A00               	xorlw	0	; case 0
 11444  00486C  B4D8               	btfsc	status,2,c
 11445  00486E  EFC8  F023         	goto	l10012
 11446  004872  0A01               	xorlw	1	; case 1
 11447  004874  B4D8               	btfsc	status,2,c
 11448  004876  EFD0  F023         	goto	l10014
 11449  00487A  0A03               	xorlw	3	; case 2
 11450  00487C  B4D8               	btfsc	status,2,c
 11451  00487E  EFD8  F023         	goto	l10016
 11452  004882  0A01               	xorlw	1	; case 3
 11453  004884  B4D8               	btfsc	status,2,c
 11454  004886  EF21  F024         	goto	l10032
 11455  00488A  EF47  F024         	goto	l585
 11456  00488E                     l585:
 11457  00488E  0012               	return		;funcret
 11458  004890                     __end_of_displayController:
 11459                           	callstack 0
 11460                           
 11461 ;; *************** function _Menu_welcomeDraw *****************
 11462 ;; Defined at:
 11463 ;;		line 3 in file "class/menu.c"
 11464 ;; Parameters:    Size  Location     Type
 11465 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 11466 ;;		 -> g1(239), 
 11467 ;; Auto vars:     Size  Location     Type
 11468 ;;		None
 11469 ;; Return value:  Size  Location     Type
 11470 ;;                  1    wreg      void 
 11471 ;; Registers used:
 11472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11473 ;; Tracked objects:
 11474 ;;		On entry : 0/0
 11475 ;;		On exit  : 0/0
 11476 ;;		Unchanged: 0/0
 11477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11478 ;;      Params:         0       2       0       0       0       0       0
 11479 ;;      Locals:         0       0       0       0       0       0       0
 11480 ;;      Temps:          0       0       0       0       0       0       0
 11481 ;;      Totals:         0       2       0       0       0       0       0
 11482 ;;Total ram usage:        2 bytes
 11483 ;; Hardware stack levels used: 1
 11484 ;; Hardware stack levels required when called: 7
 11485 ;; This function calls:
 11486 ;;		_LCD_ButtonDraw
 11487 ;;		_LCD_DrawText
 11488 ;;		_LCD_Fill
 11489 ;; This function is called by:
 11490 ;;		_displayController
 11491 ;; This function uses a non-reentrant model
 11492 ;;
 11493                           
 11494                           	psect	text43
 11495  005B76                     __ptext43:
 11496                           	callstack 0
 11497  005B76                     _Menu_welcomeDraw:
 11498                           	callstack 19
 11499  005B76                     
 11500                           ;class/menu.c: 3: void Menu_welcomeDraw(GameParameters* g);class/menu.c: 4: {;class/menu
      +                          .c: 5:     LCD_Fill(0b1111111111111111);
 11501  005B76  0EFF               	movlw	255
 11502  005B78  6E13               	movwf	(LCD_Fill@color+1)^0,c
 11503  005B7A  6812               	setf	LCD_Fill@color^0,c
 11504  005B7C  EC76  F029         	call	_LCD_Fill	;wreg free
 11505  005B80                     
 11506                           ;class/menu.c: 6:     LCD_DrawText("WELCOME",&arialNarrow_12ptFontInfo,A_CENTER,50,50,0b
      +                          0000000000000000,0b1111111111111111);
 11507  005B80  0EDB               	movlw	low STR_11
 11508  005B82  6E20               	movwf	LCD_DrawText@msg^0,c
 11509  005B84  0E7F               	movlw	high STR_11
 11510  005B86  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 11511  005B88  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 11512  005B8A  6E22               	movwf	LCD_DrawText@font^0,c
 11513  005B8C  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 11514  005B8E  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 11515  005B90  0E02               	movlw	2
 11516  005B92  6E24               	movwf	LCD_DrawText@align^0,c
 11517  005B94  0E00               	movlw	0
 11518  005B96  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 11519  005B98  0E32               	movlw	50
 11520  005B9A  6E25               	movwf	LCD_DrawText@posX^0,c
 11521  005B9C  0E00               	movlw	0
 11522  005B9E  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 11523  005BA0  0E32               	movlw	50
 11524  005BA2  6E27               	movwf	LCD_DrawText@posY^0,c
 11525  005BA4  0E00               	movlw	0
 11526  005BA6  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 11527  005BA8  0E00               	movlw	0
 11528  005BAA  6E29               	movwf	LCD_DrawText@color^0,c
 11529  005BAC  0EFF               	movlw	255
 11530  005BAE  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 11531  005BB0  682B               	setf	LCD_DrawText@bg_color^0,c
 11532  005BB2  ECDB  F00E         	call	_LCD_DrawText	;wreg free
 11533  005BB6                     
 11534                           ;class/menu.c: 7:     LCD_ButtonDraw(&(g->btnParam));
 11535  005BB6  0E08               	movlw	8
 11536  005BB8  0100               	movlb	0	; () banked
 11537  005BBA  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11538  005BBC  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11539  005BBE  0E00               	movlw	0
 11540  005BC0  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11541  005BC2  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11542  005BC4  ECAA  F007         	call	_LCD_ButtonDraw	;wreg free
 11543  005BC8                     
 11544                           ;class/menu.c: 8:     LCD_ButtonDraw(&(g->btnOnePlayer));
 11545  005BC8  0E20               	movlw	32
 11546  005BCA  0100               	movlb	0	; () banked
 11547  005BCC  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11548  005BCE  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11549  005BD0  0E00               	movlw	0
 11550  005BD2  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11551  005BD4  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11552  005BD6  ECAA  F007         	call	_LCD_ButtonDraw	;wreg free
 11553  005BDA                     
 11554                           ;class/menu.c: 9:     LCD_ButtonDraw(&(g->btnTwoPlayer));
 11555  005BDA  0E38               	movlw	56
 11556  005BDC  0100               	movlb	0	; () banked
 11557  005BDE  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11558  005BE0  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11559  005BE2  0E00               	movlw	0
 11560  005BE4  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11561  005BE6  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11562  005BE8  ECAA  F007         	call	_LCD_ButtonDraw	;wreg free
 11563  005BEC  0012               	return		;funcret
 11564  005BEE                     __end_of_Menu_welcomeDraw:
 11565                           	callstack 0
 11566                           
 11567 ;; *************** function _Menu_parametersDraw *****************
 11568 ;; Defined at:
 11569 ;;		line 11 in file "class/menu.c"
 11570 ;; Parameters:    Size  Location     Type
 11571 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 11572 ;;		 -> g1(239), 
 11573 ;; Auto vars:     Size  Location     Type
 11574 ;;		None
 11575 ;; Return value:  Size  Location     Type
 11576 ;;                  1    wreg      void 
 11577 ;; Registers used:
 11578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11579 ;; Tracked objects:
 11580 ;;		On entry : 0/0
 11581 ;;		On exit  : 0/0
 11582 ;;		Unchanged: 0/0
 11583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11584 ;;      Params:         0       2       0       0       0       0       0
 11585 ;;      Locals:         0       0       0       0       0       0       0
 11586 ;;      Temps:          0       0       0       0       0       0       0
 11587 ;;      Totals:         0       2       0       0       0       0       0
 11588 ;;Total ram usage:        2 bytes
 11589 ;; Hardware stack levels used: 1
 11590 ;; Hardware stack levels required when called: 7
 11591 ;; This function calls:
 11592 ;;		_LCD_ButtonDraw
 11593 ;;		_LCD_DrawText
 11594 ;;		_LCD_Fill
 11595 ;;		_LCD_SliderDraw
 11596 ;; This function is called by:
 11597 ;;		_displayController
 11598 ;; This function uses a non-reentrant model
 11599 ;;
 11600                           
 11601                           	psect	text44
 11602  005AF4                     __ptext44:
 11603                           	callstack 0
 11604  005AF4                     _Menu_parametersDraw:
 11605                           	callstack 19
 11606  005AF4                     
 11607                           ;class/menu.c: 11: void Menu_parametersDraw(GameParameters* g);class/menu.c: 12: {;class
      +                          /menu.c: 13:     LCD_Fill(0b1111111111111111);
 11608  005AF4  0EFF               	movlw	255
 11609  005AF6  6E13               	movwf	(LCD_Fill@color+1)^0,c
 11610  005AF8  6812               	setf	LCD_Fill@color^0,c
 11611  005AFA  EC76  F029         	call	_LCD_Fill	;wreg free
 11612  005AFE                     
 11613                           ;class/menu.c: 14:     LCD_DrawText("PARAMETERS",&arialNarrow_12ptFontInfo,A_CENTER,50,5
      +                          0,0b0000000000000000,0b1111111111111111);
 11614  005AFE  0EA0               	movlw	low STR_12
 11615  005B00  6E20               	movwf	LCD_DrawText@msg^0,c
 11616  005B02  0E7F               	movlw	high STR_12
 11617  005B04  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 11618  005B06  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 11619  005B08  6E22               	movwf	LCD_DrawText@font^0,c
 11620  005B0A  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 11621  005B0C  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 11622  005B0E  0E02               	movlw	2
 11623  005B10  6E24               	movwf	LCD_DrawText@align^0,c
 11624  005B12  0E00               	movlw	0
 11625  005B14  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 11626  005B16  0E32               	movlw	50
 11627  005B18  6E25               	movwf	LCD_DrawText@posX^0,c
 11628  005B1A  0E00               	movlw	0
 11629  005B1C  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 11630  005B1E  0E32               	movlw	50
 11631  005B20  6E27               	movwf	LCD_DrawText@posY^0,c
 11632  005B22  0E00               	movlw	0
 11633  005B24  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 11634  005B26  0E00               	movlw	0
 11635  005B28  6E29               	movwf	LCD_DrawText@color^0,c
 11636  005B2A  0EFF               	movlw	255
 11637  005B2C  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 11638  005B2E  682B               	setf	LCD_DrawText@bg_color^0,c
 11639  005B30  ECDB  F00E         	call	_LCD_DrawText	;wreg free
 11640  005B34                     
 11641                           ;class/menu.c: 15:     LCD_ButtonDraw(&(g->btnLeaveParam));
 11642  005B34  0E50               	movlw	80
 11643  005B36  0100               	movlb	0	; () banked
 11644  005B38  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 11645  005B3A  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11646  005B3C  0E00               	movlw	0
 11647  005B3E  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 11648  005B40  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11649  005B42  ECAA  F007         	call	_LCD_ButtonDraw	;wreg free
 11650  005B46                     
 11651                           ;class/menu.c: 16:     g->sldParam.value=g->backlight;
 11652  005B46  C09C  FFD9         	movff	Menu_parametersDraw@g,fsr2l
 11653  005B4A  C09D  FFDA         	movff	Menu_parametersDraw@g+1,fsr2h
 11654  005B4E  0100               	movlb	0	; () banked
 11655  005B50  EE10 F0C1          	lfsr	1,193
 11656  005B54  519C               	movf	Menu_parametersDraw@g& (0+255),w,b
 11657  005B56  26E1               	addwf	fsr1l,f,c
 11658  005B58  519D               	movf	(Menu_parametersDraw@g+1)& (0+255),w,b
 11659  005B5A  22E2               	addwfc	fsr1h,f,c
 11660  005B5C  CFDE FFE6          	movff	postinc2,postinc1
 11661  005B60  CFDD FFE5          	movff	postdec2,postdec1
 11662  005B64                     
 11663                           ; BSR set to: 0
 11664                           ;class/menu.c: 17:     LCD_SliderDraw(&(g->sldParam));
 11665  005B64  0EB0               	movlw	176
 11666  005B66  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 11667  005B68  6E37               	movwf	LCD_SliderDraw@slider^0,c
 11668  005B6A  0E00               	movlw	0
 11669  005B6C  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 11670  005B6E  6E38               	movwf	(LCD_SliderDraw@slider+1)^0,c
 11671  005B70  ECBC  F022         	call	_LCD_SliderDraw	;wreg free
 11672  005B74  0012               	return		;funcret
 11673  005B76                     __end_of_Menu_parametersDraw:
 11674                           	callstack 0
 11675                           
 11676 ;; *************** function _LCD_SliderDraw *****************
 11677 ;; Defined at:
 11678 ;;		line 371 in file "libraries/lcd_highlevel.c"
 11679 ;; Parameters:    Size  Location     Type
 11680 ;;  slider          2   54[COMRAM] PTR struct .
 11681 ;;		 -> g1(239), 
 11682 ;; Auto vars:     Size  Location     Type
 11683 ;;  y2              2   66[COMRAM] unsigned short 
 11684 ;;  y1              2   64[COMRAM] unsigned short 
 11685 ;;  x2              2   62[COMRAM] unsigned short 
 11686 ;;  x1              2   60[COMRAM] unsigned short 
 11687 ;; Return value:  Size  Location     Type
 11688 ;;                  1    wreg      void 
 11689 ;; Registers used:
 11690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11691 ;; Tracked objects:
 11692 ;;		On entry : 0/0
 11693 ;;		On exit  : 0/0
 11694 ;;		Unchanged: 0/0
 11695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11696 ;;      Params:         2       0       0       0       0       0       0
 11697 ;;      Locals:         8       0       0       0       0       0       0
 11698 ;;      Temps:          4       0       0       0       0       0       0
 11699 ;;      Totals:        14       0       0       0       0       0       0
 11700 ;;Total ram usage:       14 bytes
 11701 ;; Hardware stack levels used: 1
 11702 ;; Hardware stack levels required when called: 6
 11703 ;; This function calls:
 11704 ;;		_LCD_DrawRect
 11705 ;;		_LCD_SliderUpdate
 11706 ;; This function is called by:
 11707 ;;		_Menu_parametersDraw
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           	psect	text45
 11712  004578                     __ptext45:
 11713                           	callstack 0
 11714  004578                     _LCD_SliderDraw:
 11715                           	callstack 19
 11716  004578                     
 11717                           ;libraries/lcd_highlevel.c: 371: void LCD_SliderDraw(sld_t * slider);libraries/lcd_highl
      +                          evel.c: 372: {;libraries/lcd_highlevel.c: 373:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 375:   x1 = slider->posX;
 11718  004578  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 11719  00457C  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 11720  004580  CFDE F03D          	movff	postinc2,LCD_SliderDraw@x1
 11721  004584  CFDD F03E          	movff	postdec2,LCD_SliderDraw@x1+1
 11722  004588                     
 11723                           ;libraries/lcd_highlevel.c: 376:   x2 = slider->posX + slider->width;
 11724  004588  EE20 F004          	lfsr	2,4
 11725  00458C  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11726  00458E  26D9               	addwf	fsr2l,f,c
 11727  004590  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11728  004592  22DA               	addwfc	fsr2h,f,c
 11729  004594  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 11730  004598  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 11731  00459C  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 11732  0045A0  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 11733  0045A4  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 11734  0045A8  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 11735  0045AC  5039               	movf	??_LCD_SliderDraw^0,w,c
 11736  0045AE  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 11737  0045B0  6E3F               	movwf	LCD_SliderDraw@x2^0,c
 11738  0045B2  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 11739  0045B4  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 11740  0045B6  6E40               	movwf	(LCD_SliderDraw@x2+1)^0,c
 11741  0045B8                     
 11742                           ;libraries/lcd_highlevel.c: 377:   y1 = slider->posY;
 11743  0045B8  EE20 F002          	lfsr	2,2
 11744  0045BC  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11745  0045BE  26D9               	addwf	fsr2l,f,c
 11746  0045C0  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11747  0045C2  22DA               	addwfc	fsr2h,f,c
 11748  0045C4  CFDE F041          	movff	postinc2,LCD_SliderDraw@y1
 11749  0045C8  CFDD F042          	movff	postdec2,LCD_SliderDraw@y1+1
 11750  0045CC                     
 11751                           ;libraries/lcd_highlevel.c: 378:   y2 = slider->posY + slider->height;
 11752  0045CC  EE20 F006          	lfsr	2,6
 11753  0045D0  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11754  0045D2  26D9               	addwf	fsr2l,f,c
 11755  0045D4  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11756  0045D6  22DA               	addwfc	fsr2h,f,c
 11757  0045D8  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 11758  0045DC  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 11759  0045E0  EE20 F002          	lfsr	2,2
 11760  0045E4  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11761  0045E6  26D9               	addwf	fsr2l,f,c
 11762  0045E8  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11763  0045EA  22DA               	addwfc	fsr2h,f,c
 11764  0045EC  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 11765  0045F0  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 11766  0045F4  5039               	movf	??_LCD_SliderDraw^0,w,c
 11767  0045F6  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 11768  0045F8  6E43               	movwf	LCD_SliderDraw@y2^0,c
 11769  0045FA  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 11770  0045FC  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 11771  0045FE  6E44               	movwf	(LCD_SliderDraw@y2+1)^0,c
 11772  004600                     
 11773                           ;libraries/lcd_highlevel.c: 379:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->bgColor);
 11774  004600  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 11775  004604  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 11776  004608  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 11777  00460C  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 11778  004610  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 11779  004614  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 11780  004618  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 11781  00461C  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 11782  004620  0E01               	movlw	1
 11783  004622  6E1A               	movwf	LCD_DrawRect@fill^0,c
 11784  004624  EE20 F00A          	lfsr	2,10
 11785  004628  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11786  00462A  26D9               	addwf	fsr2l,f,c
 11787  00462C  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11788  00462E  22DA               	addwfc	fsr2h,f,c
 11789  004630  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 11790  004634  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 11791  004638  EC69  F016         	call	_LCD_DrawRect	;wreg free
 11792  00463C                     
 11793                           ;libraries/lcd_highlevel.c: 380:   LCD_DrawRect(x1, y1, x2, y2, 0, slider->borderColor);
 11794  00463C  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 11795  004640  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 11796  004644  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 11797  004648  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 11798  00464C  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 11799  004650  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 11800  004654  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 11801  004658  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 11802  00465C  0E00               	movlw	0
 11803  00465E  6E1A               	movwf	LCD_DrawRect@fill^0,c
 11804  004660  EE20 F00C          	lfsr	2,12
 11805  004664  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11806  004666  26D9               	addwf	fsr2l,f,c
 11807  004668  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11808  00466A  22DA               	addwfc	fsr2h,f,c
 11809  00466C  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 11810  004670  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 11811  004674  EC69  F016         	call	_LCD_DrawRect	;wreg free
 11812  004678                     
 11813                           ;libraries/lcd_highlevel.c: 381:   LCD_SliderUpdate(slider);
 11814  004678  C037  F027         	movff	LCD_SliderDraw@slider,LCD_SliderUpdate@slider
 11815  00467C  C038  F028         	movff	LCD_SliderDraw@slider+1,LCD_SliderUpdate@slider+1
 11816  004680  EC21  F00A         	call	_LCD_SliderUpdate	;wreg free
 11817  004684  0012               	return		;funcret
 11818  004686                     __end_of_LCD_SliderDraw:
 11819                           	callstack 0
 11820                           
 11821 ;; *************** function _LCD_SliderUpdate *****************
 11822 ;; Defined at:
 11823 ;;		line 319 in file "libraries/lcd_highlevel.c"
 11824 ;; Parameters:    Size  Location     Type
 11825 ;;  slider          2   38[COMRAM] PTR struct .
 11826 ;;		 -> g1(239), 
 11827 ;; Auto vars:     Size  Location     Type
 11828 ;;  x1              2   52[COMRAM] unsigned short 
 11829 ;;  y2              2   50[COMRAM] unsigned short 
 11830 ;;  y1              2   48[COMRAM] unsigned short 
 11831 ;;  x2              2   46[COMRAM] unsigned short 
 11832 ;; Return value:  Size  Location     Type
 11833 ;;                  1    wreg      void 
 11834 ;; Registers used:
 11835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11836 ;; Tracked objects:
 11837 ;;		On entry : 0/0
 11838 ;;		On exit  : 0/0
 11839 ;;		Unchanged: 0/0
 11840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11841 ;;      Params:         2       0       0       0       0       0       0
 11842 ;;      Locals:         8       0       0       0       0       0       0
 11843 ;;      Temps:          6       0       0       0       0       0       0
 11844 ;;      Totals:        16       0       0       0       0       0       0
 11845 ;;Total ram usage:       16 bytes
 11846 ;; Hardware stack levels used: 1
 11847 ;; Hardware stack levels required when called: 5
 11848 ;; This function calls:
 11849 ;;		_LCD_DrawRect
 11850 ;;		___lwdiv
 11851 ;;		___wmul
 11852 ;; This function is called by:
 11853 ;;		_LCD_SliderDraw
 11854 ;;		_gameControllerController
 11855 ;; This function uses a non-reentrant model
 11856 ;;
 11857                           
 11858                           	psect	text46
 11859  001442                     __ptext46:
 11860                           	callstack 0
 11861  001442                     _LCD_SliderUpdate:
 11862                           	callstack 21
 11863  001442                     
 11864                           ;libraries/lcd_highlevel.c: 319: void LCD_SliderUpdate(sld_t * slider);libraries/lcd_hig
      +                          hlevel.c: 320: {;libraries/lcd_highlevel.c: 321:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 325:   if(slider->cursorWidth != 0)
 11865  001442  EE20 F00E          	lfsr	2,14
 11866  001446  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11867  001448  26D9               	addwf	fsr2l,f,c
 11868  00144A  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11869  00144C  22DA               	addwfc	fsr2h,f,c
 11870  00144E  50DE               	movf	postinc2,w,c
 11871  001450  10DE               	iorwf	postinc2,w,c
 11872  001452  B4D8               	btfsc	status,2,c
 11873  001454  EF2E  F00A         	goto	u6431
 11874  001458  EF30  F00A         	goto	u6430
 11875  00145C                     u6431:
 11876  00145C  EFBC  F00A         	goto	l9032
 11877  001460                     u6430:
 11878  001460                     
 11879                           ;libraries/lcd_highlevel.c: 326:   {;libraries/lcd_highlevel.c: 327:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->oldValue)/ slider->steps);
 11880  001460  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11881  001464  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11882  001468  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11883  00146C  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11884  001470  EE20 F00E          	lfsr	2,14
 11885  001474  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11886  001476  26D9               	addwf	fsr2l,f,c
 11887  001478  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11888  00147A  22DA               	addwfc	fsr2h,f,c
 11889  00147C  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11890  001480  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11891  001484  EE20 F004          	lfsr	2,4
 11892  001488  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11893  00148A  26D9               	addwf	fsr2l,f,c
 11894  00148C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11895  00148E  22DA               	addwfc	fsr2h,f,c
 11896  001490  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 11897  001494  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 11898  001498  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 11899  00149A  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 11900  00149C  6E1A               	movwf	___wmul@multiplier^0,c
 11901  00149E  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 11902  0014A0  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 11903  0014A2  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 11904  0014A4  EE20 F013          	lfsr	2,19
 11905  0014A8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11906  0014AA  26D9               	addwf	fsr2l,f,c
 11907  0014AC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11908  0014AE  22DA               	addwfc	fsr2h,f,c
 11909  0014B0  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 11910  0014B4  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 11911  0014B8  ECAB  F031         	call	___wmul	;wreg free
 11912  0014BC  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 11913  0014C0  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 11914  0014C4  EE20 F015          	lfsr	2,21
 11915  0014C8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11916  0014CA  26D9               	addwf	fsr2l,f,c
 11917  0014CC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11918  0014CE  22DA               	addwfc	fsr2h,f,c
 11919  0014D0  CFDE F022          	movff	postinc2,___lwdiv@divisor
 11920  0014D4  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 11921  0014D8  EC6C  F02E         	call	___lwdiv	;wreg free
 11922  0014DC  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11923  0014DE  2620               	addwf	?___lwdiv^0,f,c
 11924  0014E0  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11925  0014E2  2221               	addwfc	(?___lwdiv+1)^0,f,c
 11926  0014E4  0E01               	movlw	1
 11927  0014E6  2420               	addwf	?___lwdiv^0,w,c
 11928  0014E8  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 11929  0014EA  0E00               	movlw	0
 11930  0014EC  2021               	addwfc	(?___lwdiv+1)^0,w,c
 11931  0014EE  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 11932  0014F0                     
 11933                           ;libraries/lcd_highlevel.c: 328:     x2 = x1 + slider->cursorWidth-2;
 11934  0014F0  EE20 F00E          	lfsr	2,14
 11935  0014F4  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11936  0014F6  26D9               	addwf	fsr2l,f,c
 11937  0014F8  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11938  0014FA  22DA               	addwfc	fsr2h,f,c
 11939  0014FC  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11940  001500  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11941  001504  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 11942  001506  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 11943  001508  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 11944  00150A  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 11945  00150C  0EFE               	movlw	254
 11946  00150E  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11947  001510  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 11948  001512  0EFF               	movlw	255
 11949  001514  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11950  001516  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 11951  001518                     
 11952                           ;libraries/lcd_highlevel.c: 329:     y1 = slider->posY + 2;
 11953  001518  EE20 F002          	lfsr	2,2
 11954  00151C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11955  00151E  26D9               	addwf	fsr2l,f,c
 11956  001520  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11957  001522  22DA               	addwfc	fsr2h,f,c
 11958  001524  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11959  001528  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11960  00152C  0E02               	movlw	2
 11961  00152E  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11962  001530  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 11963  001532  0E00               	movlw	0
 11964  001534  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11965  001536  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 11966  001538                     
 11967                           ;libraries/lcd_highlevel.c: 330:     y2 = slider->posY + slider->height - 2;
 11968  001538  EE20 F006          	lfsr	2,6
 11969  00153C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11970  00153E  26D9               	addwf	fsr2l,f,c
 11971  001540  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11972  001542  22DA               	addwfc	fsr2h,f,c
 11973  001544  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11974  001548  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11975  00154C  EE20 F002          	lfsr	2,2
 11976  001550  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11977  001552  26D9               	addwf	fsr2l,f,c
 11978  001554  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11979  001556  22DA               	addwfc	fsr2h,f,c
 11980  001558  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11981  00155C  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11982  001560  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11983  001562  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 11984  001564  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11985  001566  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 11986  001568  0EFE               	movlw	254
 11987  00156A  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 11988  00156C  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 11989  00156E  0EFF               	movlw	255
 11990  001570  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 11991  001572  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 11992                           
 11993                           ;libraries/lcd_highlevel.c: 331:   }
 11994  001574  EF30  F00B         	goto	l9040
 11995  001578                     l9032:
 11996                           
 11997                           ;libraries/lcd_highlevel.c: 333:   {;libraries/lcd_highlevel.c: 334:     x1 = slider->po
      +                          sX + 1;
 11998  001578  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11999  00157C  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12000  001580  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12001  001584  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12002  001588  0E01               	movlw	1
 12003  00158A  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12004  00158C  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 12005  00158E  0E00               	movlw	0
 12006  001590  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12007  001592  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 12008  001594                     
 12009                           ;libraries/lcd_highlevel.c: 335:     x2 = slider->posX - 1 + ((slider->width * slider->o
      +                          ldValue)/ slider->steps);
 12010  001594  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12011  001598  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12012  00159C  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12013  0015A0  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12014  0015A4  EE20 F004          	lfsr	2,4
 12015  0015A8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12016  0015AA  26D9               	addwf	fsr2l,f,c
 12017  0015AC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12018  0015AE  22DA               	addwfc	fsr2h,f,c
 12019  0015B0  CFDE F01A          	movff	postinc2,___wmul@multiplier
 12020  0015B4  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 12021  0015B8  EE20 F013          	lfsr	2,19
 12022  0015BC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12023  0015BE  26D9               	addwf	fsr2l,f,c
 12024  0015C0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12025  0015C2  22DA               	addwfc	fsr2h,f,c
 12026  0015C4  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 12027  0015C8  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 12028  0015CC  ECAB  F031         	call	___wmul	;wreg free
 12029  0015D0  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 12030  0015D4  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 12031  0015D8  EE20 F015          	lfsr	2,21
 12032  0015DC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12033  0015DE  26D9               	addwf	fsr2l,f,c
 12034  0015E0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12035  0015E2  22DA               	addwfc	fsr2h,f,c
 12036  0015E4  CFDE F022          	movff	postinc2,___lwdiv@divisor
 12037  0015E8  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 12038  0015EC  EC6C  F02E         	call	___lwdiv	;wreg free
 12039  0015F0  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12040  0015F2  2620               	addwf	?___lwdiv^0,f,c
 12041  0015F4  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12042  0015F6  2221               	addwfc	(?___lwdiv+1)^0,f,c
 12043  0015F8  0EFF               	movlw	255
 12044  0015FA  2420               	addwf	?___lwdiv^0,w,c
 12045  0015FC  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 12046  0015FE  0EFF               	movlw	255
 12047  001600  2021               	addwfc	(?___lwdiv+1)^0,w,c
 12048  001602  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 12049  001604                     
 12050                           ;libraries/lcd_highlevel.c: 336:     y1 = slider->posY + 2;
 12051  001604  EE20 F002          	lfsr	2,2
 12052  001608  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12053  00160A  26D9               	addwf	fsr2l,f,c
 12054  00160C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12055  00160E  22DA               	addwfc	fsr2h,f,c
 12056  001610  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12057  001614  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12058  001618  0E02               	movlw	2
 12059  00161A  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12060  00161C  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 12061  00161E  0E00               	movlw	0
 12062  001620  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12063  001622  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 12064  001624                     
 12065                           ;libraries/lcd_highlevel.c: 337:     y2 = slider->posY + slider->height - 2;
 12066  001624  EE20 F006          	lfsr	2,6
 12067  001628  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12068  00162A  26D9               	addwf	fsr2l,f,c
 12069  00162C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12070  00162E  22DA               	addwfc	fsr2h,f,c
 12071  001630  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12072  001634  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12073  001638  EE20 F002          	lfsr	2,2
 12074  00163C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12075  00163E  26D9               	addwf	fsr2l,f,c
 12076  001640  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12077  001642  22DA               	addwfc	fsr2h,f,c
 12078  001644  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12079  001648  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12080  00164C  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12081  00164E  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12082  001650  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12083  001652  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12084  001654  0EFE               	movlw	254
 12085  001656  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12086  001658  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12087  00165A  0EFF               	movlw	255
 12088  00165C  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12089  00165E  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12090  001660                     l9040:
 12091                           
 12092                           ;libraries/lcd_highlevel.c: 339:   LCD_DrawRect(x1,
 12093  001660  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 12094  001664  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 12095  001668  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 12096  00166C  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 12097  001670  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 12098  001674  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 12099  001678  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 12100  00167C  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 12101  001680  0E01               	movlw	1
 12102  001682  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12103  001684  EE20 F00A          	lfsr	2,10
 12104  001688  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12105  00168A  26D9               	addwf	fsr2l,f,c
 12106  00168C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12107  00168E  22DA               	addwfc	fsr2h,f,c
 12108  001690  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12109  001694  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12110  001698  EC69  F016         	call	_LCD_DrawRect	;wreg free
 12111  00169C                     
 12112                           ;libraries/lcd_highlevel.c: 344:   slider->oldValue = slider->value;
 12113  00169C  EE20 F011          	lfsr	2,17
 12114  0016A0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12115  0016A2  26D9               	addwf	fsr2l,f,c
 12116  0016A4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12117  0016A6  22DA               	addwfc	fsr2h,f,c
 12118  0016A8  EE10 F013          	lfsr	1,19
 12119  0016AC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12120  0016AE  26E1               	addwf	fsr1l,f,c
 12121  0016B0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12122  0016B2  22E2               	addwfc	fsr1h,f,c
 12123  0016B4  CFDE FFE6          	movff	postinc2,postinc1
 12124  0016B8  CFDD FFE5          	movff	postdec2,postdec1
 12125  0016BC                     
 12126                           ;libraries/lcd_highlevel.c: 347:   if(slider->cursorWidth == 0)
 12127  0016BC  EE20 F00E          	lfsr	2,14
 12128  0016C0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12129  0016C2  26D9               	addwf	fsr2l,f,c
 12130  0016C4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12131  0016C6  22DA               	addwfc	fsr2h,f,c
 12132  0016C8  50DE               	movf	postinc2,w,c
 12133  0016CA  10DE               	iorwf	postinc2,w,c
 12134  0016CC  A4D8               	btfss	status,2,c
 12135  0016CE  EF6B  F00B         	goto	u6441
 12136  0016D2  EF6D  F00B         	goto	u6440
 12137  0016D6                     u6441:
 12138  0016D6  EFE3  F00B         	goto	l9054
 12139  0016DA                     u6440:
 12140  0016DA                     
 12141                           ;libraries/lcd_highlevel.c: 348:   {;libraries/lcd_highlevel.c: 349:     x1 = slider->po
      +                          sX + 1;
 12142  0016DA  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12143  0016DE  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12144  0016E2  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12145  0016E6  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12146  0016EA  0E01               	movlw	1
 12147  0016EC  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12148  0016EE  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 12149  0016F0  0E00               	movlw	0
 12150  0016F2  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12151  0016F4  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 12152  0016F6                     
 12153                           ;libraries/lcd_highlevel.c: 350:     x2 = slider->posX - 1 + ((slider->width * slider->v
      +                          alue)/ slider->steps);
 12154  0016F6  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12155  0016FA  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12156  0016FE  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12157  001702  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12158  001706  EE20 F004          	lfsr	2,4
 12159  00170A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12160  00170C  26D9               	addwf	fsr2l,f,c
 12161  00170E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12162  001710  22DA               	addwfc	fsr2h,f,c
 12163  001712  CFDE F01A          	movff	postinc2,___wmul@multiplier
 12164  001716  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 12165  00171A  EE20 F011          	lfsr	2,17
 12166  00171E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12167  001720  26D9               	addwf	fsr2l,f,c
 12168  001722  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12169  001724  22DA               	addwfc	fsr2h,f,c
 12170  001726  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 12171  00172A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 12172  00172E  ECAB  F031         	call	___wmul	;wreg free
 12173  001732  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 12174  001736  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 12175  00173A  EE20 F015          	lfsr	2,21
 12176  00173E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12177  001740  26D9               	addwf	fsr2l,f,c
 12178  001742  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12179  001744  22DA               	addwfc	fsr2h,f,c
 12180  001746  CFDE F022          	movff	postinc2,___lwdiv@divisor
 12181  00174A  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 12182  00174E  EC6C  F02E         	call	___lwdiv	;wreg free
 12183  001752  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12184  001754  2620               	addwf	?___lwdiv^0,f,c
 12185  001756  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12186  001758  2221               	addwfc	(?___lwdiv+1)^0,f,c
 12187  00175A  0EFF               	movlw	255
 12188  00175C  2420               	addwf	?___lwdiv^0,w,c
 12189  00175E  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 12190  001760  0EFF               	movlw	255
 12191  001762  2021               	addwfc	(?___lwdiv+1)^0,w,c
 12192  001764  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 12193  001766                     
 12194                           ;libraries/lcd_highlevel.c: 351:     y1 = slider->posY + 2;
 12195  001766  EE20 F002          	lfsr	2,2
 12196  00176A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12197  00176C  26D9               	addwf	fsr2l,f,c
 12198  00176E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12199  001770  22DA               	addwfc	fsr2h,f,c
 12200  001772  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12201  001776  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12202  00177A  0E02               	movlw	2
 12203  00177C  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12204  00177E  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 12205  001780  0E00               	movlw	0
 12206  001782  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12207  001784  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 12208  001786                     
 12209                           ;libraries/lcd_highlevel.c: 352:     y2 = slider->posY + slider->height - 2;
 12210  001786  EE20 F006          	lfsr	2,6
 12211  00178A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12212  00178C  26D9               	addwf	fsr2l,f,c
 12213  00178E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12214  001790  22DA               	addwfc	fsr2h,f,c
 12215  001792  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12216  001796  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12217  00179A  EE20 F002          	lfsr	2,2
 12218  00179E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12219  0017A0  26D9               	addwf	fsr2l,f,c
 12220  0017A2  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12221  0017A4  22DA               	addwfc	fsr2h,f,c
 12222  0017A6  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12223  0017AA  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12224  0017AE  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12225  0017B0  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12226  0017B2  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12227  0017B4  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12228  0017B6  0EFE               	movlw	254
 12229  0017B8  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12230  0017BA  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12231  0017BC  0EFF               	movlw	255
 12232  0017BE  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12233  0017C0  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12234                           
 12235                           ;libraries/lcd_highlevel.c: 353:   }
 12236  0017C2  EF6D  F00C         	goto	l9062
 12237  0017C6                     l9054:
 12238                           
 12239                           ;libraries/lcd_highlevel.c: 357:   {;libraries/lcd_highlevel.c: 358:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->value)/ slider->steps);
 12240  0017C6  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12241  0017CA  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12242  0017CE  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12243  0017D2  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12244  0017D6  EE20 F00E          	lfsr	2,14
 12245  0017DA  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12246  0017DC  26D9               	addwf	fsr2l,f,c
 12247  0017DE  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12248  0017E0  22DA               	addwfc	fsr2h,f,c
 12249  0017E2  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12250  0017E6  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12251  0017EA  EE20 F004          	lfsr	2,4
 12252  0017EE  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12253  0017F0  26D9               	addwf	fsr2l,f,c
 12254  0017F2  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12255  0017F4  22DA               	addwfc	fsr2h,f,c
 12256  0017F6  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 12257  0017FA  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 12258  0017FE  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 12259  001800  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 12260  001802  6E1A               	movwf	___wmul@multiplier^0,c
 12261  001804  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 12262  001806  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 12263  001808  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 12264  00180A  EE20 F011          	lfsr	2,17
 12265  00180E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12266  001810  26D9               	addwf	fsr2l,f,c
 12267  001812  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12268  001814  22DA               	addwfc	fsr2h,f,c
 12269  001816  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 12270  00181A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 12271  00181E  ECAB  F031         	call	___wmul	;wreg free
 12272  001822  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 12273  001826  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 12274  00182A  EE20 F015          	lfsr	2,21
 12275  00182E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12276  001830  26D9               	addwf	fsr2l,f,c
 12277  001832  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12278  001834  22DA               	addwfc	fsr2h,f,c
 12279  001836  CFDE F022          	movff	postinc2,___lwdiv@divisor
 12280  00183A  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 12281  00183E  EC6C  F02E         	call	___lwdiv	;wreg free
 12282  001842  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12283  001844  2620               	addwf	?___lwdiv^0,f,c
 12284  001846  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12285  001848  2221               	addwfc	(?___lwdiv+1)^0,f,c
 12286  00184A  0E01               	movlw	1
 12287  00184C  2420               	addwf	?___lwdiv^0,w,c
 12288  00184E  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 12289  001850  0E00               	movlw	0
 12290  001852  2021               	addwfc	(?___lwdiv+1)^0,w,c
 12291  001854  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 12292  001856                     
 12293                           ;libraries/lcd_highlevel.c: 359:     x2 = x1 + slider->cursorWidth-2;
 12294  001856  EE20 F00E          	lfsr	2,14
 12295  00185A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12296  00185C  26D9               	addwf	fsr2l,f,c
 12297  00185E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12298  001860  22DA               	addwfc	fsr2h,f,c
 12299  001862  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12300  001866  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12301  00186A  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 12302  00186C  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 12303  00186E  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 12304  001870  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 12305  001872  0EFE               	movlw	254
 12306  001874  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12307  001876  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 12308  001878  0EFF               	movlw	255
 12309  00187A  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12310  00187C  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 12311  00187E                     
 12312                           ;libraries/lcd_highlevel.c: 360:     y1 = slider->posY + 2;
 12313  00187E  EE20 F002          	lfsr	2,2
 12314  001882  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12315  001884  26D9               	addwf	fsr2l,f,c
 12316  001886  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12317  001888  22DA               	addwfc	fsr2h,f,c
 12318  00188A  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12319  00188E  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12320  001892  0E02               	movlw	2
 12321  001894  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12322  001896  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 12323  001898  0E00               	movlw	0
 12324  00189A  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12325  00189C  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 12326  00189E                     
 12327                           ;libraries/lcd_highlevel.c: 361:     y2 = slider->posY + slider->height - 2;
 12328  00189E  EE20 F006          	lfsr	2,6
 12329  0018A2  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12330  0018A4  26D9               	addwf	fsr2l,f,c
 12331  0018A6  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12332  0018A8  22DA               	addwfc	fsr2h,f,c
 12333  0018AA  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12334  0018AE  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12335  0018B2  EE20 F002          	lfsr	2,2
 12336  0018B6  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12337  0018B8  26D9               	addwf	fsr2l,f,c
 12338  0018BA  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12339  0018BC  22DA               	addwfc	fsr2h,f,c
 12340  0018BE  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12341  0018C2  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12342  0018C6  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12343  0018C8  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12344  0018CA  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12345  0018CC  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12346  0018CE  0EFE               	movlw	254
 12347  0018D0  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12348  0018D2  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12349  0018D4  0EFF               	movlw	255
 12350  0018D6  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12351  0018D8  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12352  0018DA                     l9062:
 12353                           
 12354                           ;libraries/lcd_highlevel.c: 363:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->sldColor);
 12355  0018DA  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 12356  0018DE  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 12357  0018E2  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 12358  0018E6  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 12359  0018EA  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 12360  0018EE  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 12361  0018F2  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 12362  0018F6  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 12363  0018FA  0E01               	movlw	1
 12364  0018FC  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12365  0018FE  EE20 F008          	lfsr	2,8
 12366  001902  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12367  001904  26D9               	addwf	fsr2l,f,c
 12368  001906  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12369  001908  22DA               	addwfc	fsr2h,f,c
 12370  00190A  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12371  00190E  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12372  001912  EC69  F016         	call	_LCD_DrawRect	;wreg free
 12373  001916  0012               	return		;funcret
 12374  001918                     __end_of_LCD_SliderUpdate:
 12375                           	callstack 0
 12376                           
 12377 ;; *************** function _Menu_endGame *****************
 12378 ;; Defined at:
 12379 ;;		line 27 in file "class/menu.c"
 12380 ;; Parameters:    Size  Location     Type
 12381 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 12382 ;;		 -> g1(239), 
 12383 ;; Auto vars:     Size  Location     Type
 12384 ;;		None
 12385 ;; Return value:  Size  Location     Type
 12386 ;;                  1    wreg      void 
 12387 ;; Registers used:
 12388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12389 ;; Tracked objects:
 12390 ;;		On entry : 0/0
 12391 ;;		On exit  : 0/0
 12392 ;;		Unchanged: 0/0
 12393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12394 ;;      Params:         0       2       0       0       0       0       0
 12395 ;;      Locals:         0       0       0       0       0       0       0
 12396 ;;      Temps:          2       0       0       0       0       0       0
 12397 ;;      Totals:         2       2       0       0       0       0       0
 12398 ;;Total ram usage:        4 bytes
 12399 ;; Hardware stack levels used: 1
 12400 ;; Hardware stack levels required when called: 7
 12401 ;; This function calls:
 12402 ;;		_LCD_ButtonDraw
 12403 ;;		_LCD_DrawText
 12404 ;;		_LCD_Fill
 12405 ;; This function is called by:
 12406 ;;		_displayController
 12407 ;; This function uses a non-reentrant model
 12408 ;;
 12409                           
 12410                           	psect	text47
 12411  00568E                     __ptext47:
 12412                           	callstack 0
 12413  00568E                     _Menu_endGame:
 12414                           	callstack 19
 12415  00568E                     
 12416                           ;class/menu.c: 27: void Menu_endGame(GameParameters* g);class/menu.c: 28: {;class/menu.c
      +                          : 29:     LCD_Fill(0b0000000000000000);
 12417  00568E  0E00               	movlw	0
 12418  005690  6E13               	movwf	(LCD_Fill@color+1)^0,c
 12419  005692  0E00               	movlw	0
 12420  005694  6E12               	movwf	LCD_Fill@color^0,c
 12421  005696  EC76  F029         	call	_LCD_Fill	;wreg free
 12422  00569A                     
 12423                           ;class/menu.c: 30:     LCD_ButtonDraw(&(g->btnNewGame));
 12424  00569A  0E80               	movlw	128
 12425  00569C  0100               	movlb	0	; () banked
 12426  00569E  259C               	addwf	Menu_endGame@g& (0+255),w,b
 12427  0056A0  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 12428  0056A2  0E00               	movlw	0
 12429  0056A4  219D               	addwfc	(Menu_endGame@g+1)& (0+255),w,b
 12430  0056A6  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 12431  0056A8  ECAA  F007         	call	_LCD_ButtonDraw	;wreg free
 12432  0056AC                     
 12433                           ;class/menu.c: 32:     if(g->s1.homeScore==0)
 12434  0056AC  0100               	movlb	0	; () banked
 12435  0056AE  EE20 F0E9          	lfsr	2,233
 12436  0056B2  519C               	movf	Menu_endGame@g& (0+255),w,b
 12437  0056B4  26D9               	addwf	fsr2l,f,c
 12438  0056B6  519D               	movf	(Menu_endGame@g+1)& (0+255),w,b
 12439  0056B8  22DA               	addwfc	fsr2h,f,c
 12440  0056BA  50DE               	movf	postinc2,w,c
 12441  0056BC  10DE               	iorwf	postinc2,w,c
 12442  0056BE  A4D8               	btfss	status,2,c
 12443  0056C0  EF64  F02B         	goto	u6951
 12444  0056C4  EF66  F02B         	goto	u6950
 12445  0056C8                     u6951:
 12446  0056C8  EF83  F02B         	goto	l9850
 12447  0056CC                     u6950:
 12448  0056CC                     
 12449                           ; BSR set to: 0
 12450                           ;class/menu.c: 33:     {;class/menu.c: 34:         LCD_DrawText("PLAYER 2 WIN",&arialNar
      +                          row_12ptFontInfo,A_CENTER,100,50,0b1111111111111111,0b0000000000000000);
 12451  0056CC  0E93               	movlw	low STR_13
 12452  0056CE  6E20               	movwf	LCD_DrawText@msg^0,c
 12453  0056D0  0E7F               	movlw	high STR_13
 12454  0056D2  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12455  0056D4  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 12456  0056D6  6E22               	movwf	LCD_DrawText@font^0,c
 12457  0056D8  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12458  0056DA  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12459  0056DC  0E02               	movlw	2
 12460  0056DE  6E24               	movwf	LCD_DrawText@align^0,c
 12461  0056E0  0E00               	movlw	0
 12462  0056E2  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12463  0056E4  0E64               	movlw	100
 12464  0056E6  6E25               	movwf	LCD_DrawText@posX^0,c
 12465  0056E8  0E00               	movlw	0
 12466  0056EA  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12467  0056EC  0E32               	movlw	50
 12468  0056EE  6E27               	movwf	LCD_DrawText@posY^0,c
 12469  0056F0  0EFF               	movlw	255
 12470  0056F2  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12471  0056F4  6829               	setf	LCD_DrawText@color^0,c
 12472  0056F6  0E00               	movlw	0
 12473  0056F8  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12474  0056FA  0E00               	movlw	0
 12475  0056FC  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 12476  0056FE  ECDB  F00E         	call	_LCD_DrawText	;wreg free
 12477                           
 12478                           ;class/menu.c: 35:     }
 12479  005702  EF9E  F02B         	goto	l189
 12480  005706                     l9850:
 12481                           
 12482                           ; BSR set to: 0
 12483                           ;class/menu.c: 37:     {;class/menu.c: 38:         LCD_DrawText("PLAYER 1 WIN",&arialNar
      +                          row_12ptFontInfo,A_CENTER,100,50,0b1111111111111111,0b0000000000000000);
 12484  005706  0E86               	movlw	low STR_14
 12485  005708  6E20               	movwf	LCD_DrawText@msg^0,c
 12486  00570A  0E7F               	movlw	high STR_14
 12487  00570C  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12488  00570E  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 12489  005710  6E22               	movwf	LCD_DrawText@font^0,c
 12490  005712  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12491  005714  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12492  005716  0E02               	movlw	2
 12493  005718  6E24               	movwf	LCD_DrawText@align^0,c
 12494  00571A  0E00               	movlw	0
 12495  00571C  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12496  00571E  0E64               	movlw	100
 12497  005720  6E25               	movwf	LCD_DrawText@posX^0,c
 12498  005722  0E00               	movlw	0
 12499  005724  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12500  005726  0E32               	movlw	50
 12501  005728  6E27               	movwf	LCD_DrawText@posY^0,c
 12502  00572A  0EFF               	movlw	255
 12503  00572C  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12504  00572E  6829               	setf	LCD_DrawText@color^0,c
 12505  005730  0E00               	movlw	0
 12506  005732  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12507  005734  0E00               	movlw	0
 12508  005736  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 12509  005738  ECDB  F00E         	call	_LCD_DrawText	;wreg free
 12510  00573C                     l189:
 12511  00573C  0012               	return		;funcret
 12512  00573E                     __end_of_Menu_endGame:
 12513                           	callstack 0
 12514                           
 12515 ;; *************** function _LCD_ButtonDraw *****************
 12516 ;; Defined at:
 12517 ;;		line 462 in file "libraries/lcd_highlevel.c"
 12518 ;; Parameters:    Size  Location     Type
 12519 ;;  button          2   28[BANK0 ] PTR struct .
 12520 ;;		 -> g1(239), 
 12521 ;; Auto vars:     Size  Location     Type
 12522 ;;  bmpPtr          2   58[BANK0 ] PTR struct .
 12523 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 12524 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 12525 ;;  yText           2   55[BANK0 ] unsigned short 
 12526 ;;  xText           2   53[BANK0 ] unsigned short 
 12527 ;;  y2              2   51[BANK0 ] unsigned short 
 12528 ;;  y1              2   49[BANK0 ] unsigned short 
 12529 ;;  x2              2   47[BANK0 ] unsigned short 
 12530 ;;  x1              2   45[BANK0 ] unsigned short 
 12531 ;;  width           2   43[BANK0 ] unsigned short 
 12532 ;;  i               1   57[BANK0 ] unsigned char 
 12533 ;;  tempChar        1   42[BANK0 ] unsigned char 
 12534 ;; Return value:  Size  Location     Type
 12535 ;;                  1    wreg      void 
 12536 ;; Registers used:
 12537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12538 ;; Tracked objects:
 12539 ;;		On entry : 0/0
 12540 ;;		On exit  : 0/0
 12541 ;;		Unchanged: 0/0
 12542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12543 ;;      Params:         0       2       0       0       0       0       0
 12544 ;;      Locals:         0      18       0       0       0       0       0
 12545 ;;      Temps:          0      12       0       0       0       0       0
 12546 ;;      Totals:         0      32       0       0       0       0       0
 12547 ;;Total ram usage:       32 bytes
 12548 ;; Hardware stack levels used: 1
 12549 ;; Hardware stack levels required when called: 6
 12550 ;; This function calls:
 12551 ;;		_LCD_Bitmap
 12552 ;;		_LCD_ButtonUpdate
 12553 ;;		_LCD_DrawRect
 12554 ;;		_LCD_DrawText
 12555 ;;		___awdiv
 12556 ;;		_strlen
 12557 ;; This function is called by:
 12558 ;;		_Menu_welcomeDraw
 12559 ;;		_Menu_parametersDraw
 12560 ;;		_Menu_endGame
 12561 ;; This function uses a non-reentrant model
 12562 ;;
 12563                           
 12564                           	psect	text48
 12565  000F54                     __ptext48:
 12566                           	callstack 0
 12567  000F54                     _LCD_ButtonDraw:
 12568                           	callstack 19
 12569  000F54                     
 12570                           ;libraries/lcd_highlevel.c: 462: void LCD_ButtonDraw(btn_t * button);libraries/lcd_highl
      +                          evel.c: 463: {;libraries/lcd_highlevel.c: 464:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 465:   uint16_t xText,yText;;libraries/lcd_highlevel.c: 466:   uint8_t i, temp
      +                          Char;;libraries/lcd_highlevel.c: 467:   uint16_t width=0;
 12571  000F54  0E00               	movlw	0
 12572  000F56  0100               	movlb	0	; () banked
 12573  000F58  6F8C               	movwf	(LCD_ButtonDraw@width+1)& (0+255),b
 12574  000F5A  0E00               	movlw	0
 12575  000F5C  6F8B               	movwf	LCD_ButtonDraw@width& (0+255),b
 12576  000F5E                     
 12577                           ; BSR set to: 0
 12578                           ;libraries/lcd_highlevel.c: 468:   BMP_STRUCT *bmpPtr;;libraries/lcd_highlevel.c: 470:  
      +                           x1 = button->posX;
 12579  000F5E  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12580  000F62  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12581  000F66  CFDE F08D          	movff	postinc2,LCD_ButtonDraw@x1
 12582  000F6A  CFDD F08E          	movff	postdec2,LCD_ButtonDraw@x1+1
 12583  000F6E                     
 12584                           ; BSR set to: 0
 12585                           ;libraries/lcd_highlevel.c: 471:   x2 = button->posX + button->width;
 12586  000F6E  EE20 F004          	lfsr	2,4
 12587  000F72  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12588  000F74  26D9               	addwf	fsr2l,f,c
 12589  000F76  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12590  000F78  22DA               	addwfc	fsr2h,f,c
 12591  000F7A  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12592  000F7E  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12593  000F82  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12594  000F86  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12595  000F8A  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12596  000F8E  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12597  000F92  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12598  000F94  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12599  000F96  6F8F               	movwf	LCD_ButtonDraw@x2& (0+255),b
 12600  000F98  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12601  000F9A  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12602  000F9C  6F90               	movwf	(LCD_ButtonDraw@x2+1)& (0+255),b
 12603  000F9E                     
 12604                           ; BSR set to: 0
 12605                           ;libraries/lcd_highlevel.c: 472:   y1 = button->posY;
 12606  000F9E  EE20 F002          	lfsr	2,2
 12607  000FA2  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12608  000FA4  26D9               	addwf	fsr2l,f,c
 12609  000FA6  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12610  000FA8  22DA               	addwfc	fsr2h,f,c
 12611  000FAA  CFDE F091          	movff	postinc2,LCD_ButtonDraw@y1
 12612  000FAE  CFDD F092          	movff	postdec2,LCD_ButtonDraw@y1+1
 12613  000FB2                     
 12614                           ; BSR set to: 0
 12615                           ;libraries/lcd_highlevel.c: 473:   y2 = button->posY + button->height;
 12616  000FB2  EE20 F006          	lfsr	2,6
 12617  000FB6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12618  000FB8  26D9               	addwf	fsr2l,f,c
 12619  000FBA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12620  000FBC  22DA               	addwfc	fsr2h,f,c
 12621  000FBE  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12622  000FC2  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12623  000FC6  EE20 F002          	lfsr	2,2
 12624  000FCA  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12625  000FCC  26D9               	addwf	fsr2l,f,c
 12626  000FCE  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12627  000FD0  22DA               	addwfc	fsr2h,f,c
 12628  000FD2  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12629  000FD6  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12630  000FDA  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12631  000FDC  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12632  000FDE  6F93               	movwf	LCD_ButtonDraw@y2& (0+255),b
 12633  000FE0  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12634  000FE2  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12635  000FE4  6F94               	movwf	(LCD_ButtonDraw@y2+1)& (0+255),b
 12636  000FE6                     
 12637                           ; BSR set to: 0
 12638                           ;libraries/lcd_highlevel.c: 474:   if(button->bgColor != button->txtColor)
 12639  000FE6  EE20 F008          	lfsr	2,8
 12640  000FEA  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12641  000FEC  26D9               	addwf	fsr2l,f,c
 12642  000FEE  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12643  000FF0  22DA               	addwfc	fsr2h,f,c
 12644  000FF2  EE10 F00A          	lfsr	1,10
 12645  000FF6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12646  000FF8  26E1               	addwf	fsr1l,f,c
 12647  000FFA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12648  000FFC  22E2               	addwfc	fsr1h,f,c
 12649  000FFE  50DE               	movf	postinc2,w,c
 12650  001000  18E6               	xorwf	postinc1,w,c
 12651  001002  E109               	bnz	u6690
 12652  001004  50DE               	movf	postinc2,w,c
 12653  001006  18E6               	xorwf	postinc1,w,c
 12654  001008  B4D8               	btfsc	status,2,c
 12655  00100A  EF09  F008         	goto	u6691
 12656  00100E  EF0B  F008         	goto	u6690
 12657  001012                     u6691:
 12658  001012  EF48  F008         	goto	l9626
 12659  001016                     u6690:
 12660  001016                     
 12661                           ; BSR set to: 0
 12662                           ;libraries/lcd_highlevel.c: 475:   {;libraries/lcd_highlevel.c: 476:     LCD_DrawRect(x1
      +                          , y1, x2, y2, 1, button->bgColor);
 12663  001016  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 12664  00101A  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 12665  00101E  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 12666  001022  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 12667  001026  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 12668  00102A  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 12669  00102E  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 12670  001032  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 12671  001036  0E01               	movlw	1
 12672  001038  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12673  00103A  EE20 F00A          	lfsr	2,10
 12674  00103E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12675  001040  26D9               	addwf	fsr2l,f,c
 12676  001042  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12677  001044  22DA               	addwfc	fsr2h,f,c
 12678  001046  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12679  00104A  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12680  00104E  EC69  F016         	call	_LCD_DrawRect	;wreg free
 12681                           
 12682                           ;libraries/lcd_highlevel.c: 477:     LCD_DrawRect(x1, y1, x2, y2, 0, button->txtColor);
 12683  001052  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 12684  001056  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 12685  00105A  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 12686  00105E  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 12687  001062  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 12688  001066  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 12689  00106A  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 12690  00106E  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 12691  001072  0E00               	movlw	0
 12692  001074  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12693  001076  0100               	movlb	0	; () banked
 12694  001078  EE20 F008          	lfsr	2,8
 12695  00107C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12696  00107E  26D9               	addwf	fsr2l,f,c
 12697  001080  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12698  001082  22DA               	addwfc	fsr2h,f,c
 12699  001084  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12700  001088  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12701  00108C  EC69  F016         	call	_LCD_DrawRect	;wreg free
 12702  001090                     l9626:
 12703                           
 12704                           ;libraries/lcd_highlevel.c: 482:   if((button->text[0] == 'B')&&(button->text[1] == 'M')
      +                          )
 12705  001090  0100               	movlb	0	; () banked
 12706  001092  EE20 F00C          	lfsr	2,12
 12707  001096  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12708  001098  26D9               	addwf	fsr2l,f,c
 12709  00109A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12710  00109C  22DA               	addwfc	fsr2h,f,c
 12711  00109E  CFDE FFF6          	movff	postinc2,tblptrl
 12712  0010A2  CFDD FFF7          	movff	postdec2,tblptrh
 12713  0010A6                     	if	0	;tblptru may be non-zero
 12714  0010A6                     	endif
 12715  0010A6                     	if	0	;tblptru may be non-zero
 12716  0010A6                     	endif
 12717  0010A6  0008               	tblrd		*
 12718  0010A8  50F5               	movf	tablat,w,c
 12719  0010AA  0A42               	xorlw	66
 12720  0010AC  A4D8               	btfss	status,2,c
 12721  0010AE  EF5B  F008         	goto	u6701
 12722  0010B2  EF5D  F008         	goto	u6700
 12723  0010B6                     u6701:
 12724  0010B6  EF0D  F009         	goto	l9638
 12725  0010BA                     u6700:
 12726  0010BA                     
 12727                           ; BSR set to: 0
 12728  0010BA  EE20 F00C          	lfsr	2,12
 12729  0010BE  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12730  0010C0  26D9               	addwf	fsr2l,f,c
 12731  0010C2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12732  0010C4  22DA               	addwfc	fsr2h,f,c
 12733  0010C6  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12734  0010CA  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12735  0010CE  0E01               	movlw	1
 12736  0010D0  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12737  0010D2  0E00               	movlw	0
 12738  0010D4  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12739  0010D6  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12740  0010DA  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12741  0010DE                     	if	0	;tblptru may be non-zero
 12742  0010DE                     	endif
 12743  0010DE                     	if	0	;tblptru may be non-zero
 12744  0010DE                     	endif
 12745  0010DE  0008               	tblrd		*
 12746  0010E0  50F5               	movf	tablat,w,c
 12747  0010E2  0A4D               	xorlw	77
 12748  0010E4  A4D8               	btfss	status,2,c
 12749  0010E6  EF77  F008         	goto	u6711
 12750  0010EA  EF79  F008         	goto	u6710
 12751  0010EE                     u6711:
 12752  0010EE  EF0D  F009         	goto	l9638
 12753  0010F2                     u6710:
 12754  0010F2                     
 12755                           ; BSR set to: 0
 12756                           ;libraries/lcd_highlevel.c: 483:   {;libraries/lcd_highlevel.c: 484:     bmpPtr = (BMP_S
      +                          TRUCT *)button->text;
 12757  0010F2  EE20 F00C          	lfsr	2,12
 12758  0010F6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12759  0010F8  26D9               	addwf	fsr2l,f,c
 12760  0010FA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12761  0010FC  22DA               	addwfc	fsr2h,f,c
 12762  0010FE  CFDE F09A          	movff	postinc2,LCD_ButtonDraw@bmpPtr
 12763  001102  CFDD F09B          	movff	postdec2,LCD_ButtonDraw@bmpPtr+1
 12764  001106                     
 12765                           ; BSR set to: 0
 12766                           ;libraries/lcd_highlevel.c: 485:     yText = button->height / 2 + button->posY - (bmpPtr
      +                          ->biHeight / 2);
 12767  001106  EE20 F002          	lfsr	2,2
 12768  00110A  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12769  00110C  26D9               	addwf	fsr2l,f,c
 12770  00110E  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12771  001110  22DA               	addwfc	fsr2h,f,c
 12772  001112  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12773  001116  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12774  00111A  0E16               	movlw	22
 12775  00111C  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 12776  00111E  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12777  001120  0E00               	movlw	0
 12778  001122  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 12779  001124  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12780  001126  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12781  00112A  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12782  00112E                     	if	0	;tblptru may be non-zero
 12783  00112E                     	endif
 12784  00112E                     	if	0	;tblptru may be non-zero
 12785  00112E                     	endif
 12786  00112E  0009               	tblrd		*+
 12787  001130  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 12788  001134  0009               	tblrd		*+
 12789  001136  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12790  00113A  0009               	tblrd		*+
 12791  00113C  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 12792  001140  0009               	tblrd		*+
 12793  001142  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 12794  001146  90D8               	bcf	status,0,c
 12795  001148  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 12796  00114A  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 12797  00114C  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12798  00114E  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12799  001150  EE20 F006          	lfsr	2,6
 12800  001154  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12801  001156  26D9               	addwf	fsr2l,f,c
 12802  001158  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12803  00115A  22DA               	addwfc	fsr2h,f,c
 12804  00115C  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 12805  001160  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 12806  001164  90D8               	bcf	status,0,c
 12807  001166  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 12808  001168  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 12809  00116A  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 12810  00116C  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 12811  00116E  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12812  001170  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 12813  001172  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12814  001174  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 12815  001176  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12816  001178  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 12817  00117A  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 12818  00117C  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12819  00117E  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 12820  001180  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 12821  001182                     
 12822                           ; BSR set to: 0
 12823                           ;libraries/lcd_highlevel.c: 486:     xText = button->width / 2 + button->posX - (bmpPtr-
      +                          >biWidth / 2);
 12824  001182  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12825  001186  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12826  00118A  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12827  00118E  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12828  001192  0E12               	movlw	18
 12829  001194  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 12830  001196  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12831  001198  0E00               	movlw	0
 12832  00119A  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 12833  00119C  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12834  00119E  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12835  0011A2  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12836  0011A6                     	if	0	;tblptru may be non-zero
 12837  0011A6                     	endif
 12838  0011A6                     	if	0	;tblptru may be non-zero
 12839  0011A6                     	endif
 12840  0011A6  0009               	tblrd		*+
 12841  0011A8  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 12842  0011AC  0009               	tblrd		*+
 12843  0011AE  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12844  0011B2  0009               	tblrd		*+
 12845  0011B4  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 12846  0011B8  0009               	tblrd		*+
 12847  0011BA  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 12848  0011BE  90D8               	bcf	status,0,c
 12849  0011C0  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 12850  0011C2  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 12851  0011C4  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12852  0011C6  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12853  0011C8  EE20 F004          	lfsr	2,4
 12854  0011CC  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12855  0011CE  26D9               	addwf	fsr2l,f,c
 12856  0011D0  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12857  0011D2  22DA               	addwfc	fsr2h,f,c
 12858  0011D4  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 12859  0011D8  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 12860  0011DC  90D8               	bcf	status,0,c
 12861  0011DE  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 12862  0011E0  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 12863  0011E2  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 12864  0011E4  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 12865  0011E6  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12866  0011E8  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 12867  0011EA  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12868  0011EC  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 12869  0011EE  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12870  0011F0  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 12871  0011F2  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 12872  0011F4  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12873  0011F6  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 12874  0011F8  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 12875  0011FA                     
 12876                           ; BSR set to: 0
 12877                           ;libraries/lcd_highlevel.c: 487:     LCD_Bitmap((const uint8_t *)bmpPtr,xText,yText);
 12878  0011FA  C09A  F027         	movff	LCD_ButtonDraw@bmpPtr,LCD_Bitmap@bmpPtr
 12879  0011FE  C09B  F028         	movff	LCD_ButtonDraw@bmpPtr+1,LCD_Bitmap@bmpPtr+1
 12880  001202  C095  F029         	movff	LCD_ButtonDraw@xText,LCD_Bitmap@posX
 12881  001206  C096  F02A         	movff	LCD_ButtonDraw@xText+1,LCD_Bitmap@posX+1
 12882  00120A  C097  F02B         	movff	LCD_ButtonDraw@yText,LCD_Bitmap@posY
 12883  00120E  C098  F02C         	movff	LCD_ButtonDraw@yText+1,LCD_Bitmap@posY+1
 12884  001212  ECAF  F004         	call	_LCD_Bitmap	;wreg free
 12885                           
 12886                           ;libraries/lcd_highlevel.c: 488:   }
 12887  001216  EF1A  F00A         	goto	l9654
 12888  00121A                     l9638:
 12889                           
 12890                           ; BSR set to: 0
 12891                           ;libraries/lcd_highlevel.c: 493:   {;libraries/lcd_highlevel.c: 494:     yText = button-
      +                          >height / 2 + button->posY - (button->font->height / 2);
 12892  00121A  EE20 F002          	lfsr	2,2
 12893  00121E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12894  001220  26D9               	addwf	fsr2l,f,c
 12895  001222  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12896  001224  22DA               	addwfc	fsr2h,f,c
 12897  001226  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12898  00122A  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12899  00122E  EE20 F00E          	lfsr	2,14
 12900  001232  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12901  001234  26D9               	addwf	fsr2l,f,c
 12902  001236  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12903  001238  22DA               	addwfc	fsr2h,f,c
 12904  00123A  CFDE FFF6          	movff	postinc2,tblptrl
 12905  00123E  CFDD FFF7          	movff	postdec2,tblptrh
 12906  001242                     	if	0	;tblptru may be non-zero
 12907  001242                     	endif
 12908  001242                     	if	0	;tblptru may be non-zero
 12909  001242                     	endif
 12910  001242  0008               	tblrd		*
 12911  001244  50F5               	movf	tablat,w,c
 12912  001246  6E12               	movwf	___awdiv@dividend^0,c
 12913  001248  6A13               	clrf	(___awdiv@dividend+1)^0,c
 12914  00124A  0E00               	movlw	0
 12915  00124C  6E15               	movwf	(___awdiv@divisor+1)^0,c
 12916  00124E  0E02               	movlw	2
 12917  001250  6E14               	movwf	___awdiv@divisor^0,c
 12918  001252  ECB3  F028         	call	___awdiv	;wreg free
 12919  001256  0100               	movlb	0	; () banked
 12920  001258  EE20 F006          	lfsr	2,6
 12921  00125C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12922  00125E  26D9               	addwf	fsr2l,f,c
 12923  001260  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12924  001262  22DA               	addwfc	fsr2h,f,c
 12925  001264  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12926  001268  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12927  00126C  90D8               	bcf	status,0,c
 12928  00126E  3181               	rrcf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12929  001270  6F83               	movwf	(??_LCD_ButtonDraw+5)& (0+255),b
 12930  001272  3180               	rrcf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12931  001274  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 12932  001276  5012               	movf	?___awdiv^0,w,c
 12933  001278  5F82               	subwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12934  00127A  5013               	movf	(?___awdiv+1)^0,w,c
 12935  00127C  5B83               	subwfb	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12936  00127E  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12937  001280  2582               	addwf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12938  001282  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 12939  001284  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12940  001286  2183               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12941  001288  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 12942  00128A                     
 12943                           ; BSR set to: 0
 12944                           ;libraries/lcd_highlevel.c: 495:     for(i=0;i<strlen(button->text);i++)
 12945  00128A  0E00               	movlw	0
 12946  00128C  6F99               	movwf	LCD_ButtonDraw@i& (0+255),b
 12947  00128E  EFA5  F009         	goto	l9648
 12948  001292                     l9642:
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;libraries/lcd_highlevel.c: 496:     {;libraries/lcd_highlevel.c: 497:       tempChar = 
      +                          (button->text[i]) - button->font->start_char;
 12952  001292  EE20 F00E          	lfsr	2,14
 12953  001296  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12954  001298  26D9               	addwf	fsr2l,f,c
 12955  00129A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12956  00129C  22DA               	addwfc	fsr2h,f,c
 12957  00129E  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12958  0012A2  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12959  0012A6  0E01               	movlw	1
 12960  0012A8  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12961  0012AA  0E00               	movlw	0
 12962  0012AC  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12963  0012AE  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12964  0012B2  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12965  0012B6                     	if	0	;tblptru may be non-zero
 12966  0012B6                     	endif
 12967  0012B6                     	if	0	;tblptru may be non-zero
 12968  0012B6                     	endif
 12969  0012B6  0008               	tblrd		*
 12970  0012B8  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 12971  0012BC  EE20 F00C          	lfsr	2,12
 12972  0012C0  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12973  0012C2  26D9               	addwf	fsr2l,f,c
 12974  0012C4  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12975  0012C6  22DA               	addwfc	fsr2h,f,c
 12976  0012C8  CFDE F081          	movff	postinc2,??_LCD_ButtonDraw+3
 12977  0012CC  CFDD F082          	movff	postdec2,??_LCD_ButtonDraw+4
 12978  0012D0  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 12979  0012D2  2781               	addwf	(??_LCD_ButtonDraw+3)& (0+255),f,b
 12980  0012D4  0E00               	movlw	0
 12981  0012D6  2382               	addwfc	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12982  0012D8  C081  FFF6         	movff	??_LCD_ButtonDraw+3,tblptrl
 12983  0012DC  C082  FFF7         	movff	??_LCD_ButtonDraw+4,tblptrh
 12984  0012E0                     	if	0	;tblptru may be non-zero
 12985  0012E0                     	endif
 12986  0012E0                     	if	0	;tblptru may be non-zero
 12987  0012E0                     	endif
 12988  0012E0  0008               	tblrd		*
 12989  0012E2  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12990  0012E6  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12991  0012E8  5D83               	subwf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12992  0012EA  6F8A               	movwf	LCD_ButtonDraw@tempChar& (0+255),b
 12993  0012EC                     
 12994                           ; BSR set to: 0
 12995                           ;libraries/lcd_highlevel.c: 498:       width += button->font->descriptor[tempChar].width
      +                          +2;
 12996  0012EC  518A               	movf	LCD_ButtonDraw@tempChar& (0+255),w,b
 12997  0012EE  0D03               	mullw	3
 12998  0012F0  EE20 F00E          	lfsr	2,14
 12999  0012F4  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13000  0012F6  26D9               	addwf	fsr2l,f,c
 13001  0012F8  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13002  0012FA  22DA               	addwfc	fsr2h,f,c
 13003  0012FC  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 13004  001300  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 13005  001304  0E03               	movlw	3
 13006  001306  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 13007  001308  0E00               	movlw	0
 13008  00130A  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 13009  00130C  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 13010  001310  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 13011  001314                     	if	0	;tblptru may be non-zero
 13012  001314                     	endif
 13013  001314                     	if	0	;tblptru may be non-zero
 13014  001314                     	endif
 13015  001314  0009               	tblrd		*+
 13016  001316  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 13017  00131A  0009               	tblrd		*+
 13018  00131C  CFF5 F081          	movff	tablat,??_LCD_ButtonDraw+3
 13019  001320  50F3               	movf	243,w,c
 13020  001322  2780               	addwf	(??_LCD_ButtonDraw+2)& (0+255),f,b
 13021  001324  50F4               	movf	244,w,c
 13022  001326  2381               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),f,b
 13023  001328  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 13024  00132C  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 13025  001330                     	if	0	;tblptru may be non-zero
 13026  001330                     	endif
 13027  001330                     	if	0	;tblptru may be non-zero
 13028  001330                     	endif
 13029  001330  0008               	tblrd		*
 13030  001332  50F5               	movf	tablat,w,c
 13031  001334  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 13032  001336  6B83               	clrf	(??_LCD_ButtonDraw+5)& (0+255),b
 13033  001338  0E02               	movlw	2
 13034  00133A  2782               	addwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 13035  00133C  0E00               	movlw	0
 13036  00133E  2383               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),f,b
 13037  001340  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 13038  001342  278B               	addwf	LCD_ButtonDraw@width& (0+255),f,b
 13039  001344  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 13040  001346  238C               	addwfc	(LCD_ButtonDraw@width+1)& (0+255),f,b
 13041  001348                     
 13042                           ; BSR set to: 0
 13043                           ;libraries/lcd_highlevel.c: 499:     }
 13044  001348  2B99               	incf	LCD_ButtonDraw@i& (0+255),f,b
 13045  00134A                     l9648:
 13046                           
 13047                           ; BSR set to: 0
 13048  00134A  EE20 F00C          	lfsr	2,12
 13049  00134E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13050  001350  26D9               	addwf	fsr2l,f,c
 13051  001352  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13052  001354  22DA               	addwfc	fsr2h,f,c
 13053  001356  CFDE F012          	movff	postinc2,strlen@s
 13054  00135A  CFDD F013          	movff	postdec2,strlen@s+1
 13055  00135E  EC7E  F030         	call	_strlen	;wreg free
 13056  001362  0100               	movlb	0	; () banked
 13057  001364  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 13058  001366  6F7E               	movwf	??_LCD_ButtonDraw& (0+255),b
 13059  001368  6B7F               	clrf	(??_LCD_ButtonDraw+1)& (0+255),b
 13060  00136A  5012               	movf	?_strlen^0,w,c
 13061  00136C  5D7E               	subwf	??_LCD_ButtonDraw& (0+255),w,b
 13062  00136E  5013               	movf	(?_strlen+1)^0,w,c
 13063  001370  597F               	subwfb	(??_LCD_ButtonDraw+1)& (0+255),w,b
 13064  001372  A0D8               	btfss	status,0,c
 13065  001374  EFBE  F009         	goto	u6721
 13066  001378  EFC0  F009         	goto	u6720
 13067  00137C                     u6721:
 13068  00137C  EF49  F009         	goto	l9642
 13069  001380                     u6720:
 13070  001380                     
 13071                           ; BSR set to: 0
 13072                           ;libraries/lcd_highlevel.c: 500:     xText = button->width / 2 + button->posX - (width /
      +                           2);
 13073  001380  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 13074  001384  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 13075  001388  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 13076  00138C  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 13077  001390  90D8               	bcf	status,0,c
 13078  001392  318C               	rrcf	(LCD_ButtonDraw@width+1)& (0+255),w,b
 13079  001394  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 13080  001396  318B               	rrcf	LCD_ButtonDraw@width& (0+255),w,b
 13081  001398  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 13082  00139A  EE20 F004          	lfsr	2,4
 13083  00139E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13084  0013A0  26D9               	addwf	fsr2l,f,c
 13085  0013A2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13086  0013A4  22DA               	addwfc	fsr2h,f,c
 13087  0013A6  CFDE F082          	movff	postinc2,??_LCD_ButtonDraw+4
 13088  0013AA  CFDD F083          	movff	postdec2,??_LCD_ButtonDraw+5
 13089  0013AE  90D8               	bcf	status,0,c
 13090  0013B0  3183               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 13091  0013B2  6F85               	movwf	(??_LCD_ButtonDraw+7)& (0+255),b
 13092  0013B4  3182               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 13093  0013B6  6F84               	movwf	(??_LCD_ButtonDraw+6)& (0+255),b
 13094  0013B8  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 13095  0013BA  5F84               	subwf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 13096  0013BC  5181               	movf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 13097  0013BE  5B85               	subwfb	(??_LCD_ButtonDraw+7)& (0+255),f,b
 13098  0013C0  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 13099  0013C2  2584               	addwf	(??_LCD_ButtonDraw+6)& (0+255),w,b
 13100  0013C4  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 13101  0013C6  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 13102  0013C8  2185               	addwfc	(??_LCD_ButtonDraw+7)& (0+255),w,b
 13103  0013CA  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 13104  0013CC                     
 13105                           ; BSR set to: 0
 13106                           ;libraries/lcd_highlevel.c: 501:     LCD_DrawText(button->text, button->font,A_LEFT,
 13107  0013CC  EE20 F00C          	lfsr	2,12
 13108  0013D0  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13109  0013D2  26D9               	addwf	fsr2l,f,c
 13110  0013D4  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13111  0013D6  22DA               	addwfc	fsr2h,f,c
 13112  0013D8  CFDE F020          	movff	postinc2,LCD_DrawText@msg
 13113  0013DC  CFDD F021          	movff	postdec2,LCD_DrawText@msg+1
 13114  0013E0  EE20 F00E          	lfsr	2,14
 13115  0013E4  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13116  0013E6  26D9               	addwf	fsr2l,f,c
 13117  0013E8  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13118  0013EA  22DA               	addwfc	fsr2h,f,c
 13119  0013EC  CFDE F022          	movff	postinc2,LCD_DrawText@font
 13120  0013F0  CFDD F023          	movff	postdec2,LCD_DrawText@font+1
 13121  0013F4  0E00               	movlw	0
 13122  0013F6  6E24               	movwf	LCD_DrawText@align^0,c
 13123  0013F8  C095  F025         	movff	LCD_ButtonDraw@xText,LCD_DrawText@posX
 13124  0013FC  C096  F026         	movff	LCD_ButtonDraw@xText+1,LCD_DrawText@posX+1
 13125  001400  C097  F027         	movff	LCD_ButtonDraw@yText,LCD_DrawText@posY
 13126  001404  C098  F028         	movff	LCD_ButtonDraw@yText+1,LCD_DrawText@posY+1
 13127  001408  EE20 F008          	lfsr	2,8
 13128  00140C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13129  00140E  26D9               	addwf	fsr2l,f,c
 13130  001410  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13131  001412  22DA               	addwfc	fsr2h,f,c
 13132  001414  CFDE F029          	movff	postinc2,LCD_DrawText@color
 13133  001418  CFDD F02A          	movff	postdec2,LCD_DrawText@color+1
 13134  00141C  EE20 F00A          	lfsr	2,10
 13135  001420  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13136  001422  26D9               	addwf	fsr2l,f,c
 13137  001424  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13138  001426  22DA               	addwfc	fsr2h,f,c
 13139  001428  CFDE F02B          	movff	postinc2,LCD_DrawText@bg_color
 13140  00142C  CFDD F02C          	movff	postdec2,LCD_DrawText@bg_color+1
 13141  001430  ECDB  F00E         	call	_LCD_DrawText	;wreg free
 13142  001434                     l9654:
 13143                           
 13144                           ;libraries/lcd_highlevel.c: 504:   LCD_ButtonUpdate(button);
 13145  001434  C07C  F025         	movff	LCD_ButtonDraw@button,LCD_ButtonUpdate@button
 13146  001438  C07D  F026         	movff	LCD_ButtonDraw@button+1,LCD_ButtonUpdate@button+1
 13147  00143C  EC01  F01C         	call	_LCD_ButtonUpdate	;wreg free
 13148  001440  0012               	return		;funcret
 13149  001442                     __end_of_LCD_ButtonDraw:
 13150                           	callstack 0
 13151                           
 13152 ;; *************** function _LCD_ButtonUpdate *****************
 13153 ;; Defined at:
 13154 ;;		line 425 in file "libraries/lcd_highlevel.c"
 13155 ;; Parameters:    Size  Location     Type
 13156 ;;  button          2   36[COMRAM] PTR struct .
 13157 ;;		 -> g1(239), 
 13158 ;; Auto vars:     Size  Location     Type
 13159 ;;  y2              2   52[COMRAM] unsigned short 
 13160 ;;  x1              2   50[COMRAM] unsigned short 
 13161 ;;  y1              2   48[COMRAM] unsigned short 
 13162 ;;  x2              2   46[COMRAM] unsigned short 
 13163 ;;  colorIn         2   44[COMRAM] unsigned short 
 13164 ;;  colorOut        2   42[COMRAM] unsigned short 
 13165 ;; Return value:  Size  Location     Type
 13166 ;;                  1    wreg      void 
 13167 ;; Registers used:
 13168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13169 ;; Tracked objects:
 13170 ;;		On entry : 0/0
 13171 ;;		On exit  : 0/0
 13172 ;;		Unchanged: 0/0
 13173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13174 ;;      Params:         2       0       0       0       0       0       0
 13175 ;;      Locals:        12       0       0       0       0       0       0
 13176 ;;      Temps:          4       0       0       0       0       0       0
 13177 ;;      Totals:        18       0       0       0       0       0       0
 13178 ;;Total ram usage:       18 bytes
 13179 ;; Hardware stack levels used: 1
 13180 ;; Hardware stack levels required when called: 5
 13181 ;; This function calls:
 13182 ;;		_LCD_DrawRect
 13183 ;;		_LCD_Read
 13184 ;; This function is called by:
 13185 ;;		_LCD_ButtonDraw
 13186 ;; This function uses a non-reentrant model
 13187 ;;
 13188                           
 13189                           	psect	text49
 13190  003802                     __ptext49:
 13191                           	callstack 0
 13192  003802                     _LCD_ButtonUpdate:
 13193                           	callstack 19
 13194  003802                     
 13195                           ;libraries/lcd_highlevel.c: 425: void LCD_ButtonUpdate(btn_t * button);libraries/lcd_hig
      +                          hlevel.c: 426: {;libraries/lcd_highlevel.c: 427:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 428:   uint16_t colorOut, colorIn;;libraries/lcd_highlevel.c: 430:   x1 = bu
      +                          tton->posX;
 13196  003802  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 13197  003806  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 13198  00380A  CFDE F033          	movff	postinc2,LCD_ButtonUpdate@x1
 13199  00380E  CFDD F034          	movff	postdec2,LCD_ButtonUpdate@x1+1
 13200  003812                     
 13201                           ;libraries/lcd_highlevel.c: 431:   x2 = button->posX + button->width;
 13202  003812  EE20 F004          	lfsr	2,4
 13203  003816  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13204  003818  26D9               	addwf	fsr2l,f,c
 13205  00381A  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13206  00381C  22DA               	addwfc	fsr2h,f,c
 13207  00381E  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 13208  003822  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 13209  003826  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 13210  00382A  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 13211  00382E  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 13212  003832  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 13213  003836  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 13214  003838  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 13215  00383A  6E2F               	movwf	LCD_ButtonUpdate@x2^0,c
 13216  00383C  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 13217  00383E  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 13218  003840  6E30               	movwf	(LCD_ButtonUpdate@x2+1)^0,c
 13219  003842                     
 13220                           ;libraries/lcd_highlevel.c: 432:   y1 = button->posY;
 13221  003842  EE20 F002          	lfsr	2,2
 13222  003846  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13223  003848  26D9               	addwf	fsr2l,f,c
 13224  00384A  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13225  00384C  22DA               	addwfc	fsr2h,f,c
 13226  00384E  CFDE F031          	movff	postinc2,LCD_ButtonUpdate@y1
 13227  003852  CFDD F032          	movff	postdec2,LCD_ButtonUpdate@y1+1
 13228  003856                     
 13229                           ;libraries/lcd_highlevel.c: 433:   y2 = button->posY + button->height;
 13230  003856  EE20 F006          	lfsr	2,6
 13231  00385A  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13232  00385C  26D9               	addwf	fsr2l,f,c
 13233  00385E  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13234  003860  22DA               	addwfc	fsr2h,f,c
 13235  003862  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 13236  003866  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 13237  00386A  EE20 F002          	lfsr	2,2
 13238  00386E  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13239  003870  26D9               	addwf	fsr2l,f,c
 13240  003872  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13241  003874  22DA               	addwfc	fsr2h,f,c
 13242  003876  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 13243  00387A  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 13244  00387E  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 13245  003880  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 13246  003882  6E35               	movwf	LCD_ButtonUpdate@y2^0,c
 13247  003884  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 13248  003886  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 13249  003888  6E36               	movwf	(LCD_ButtonUpdate@y2+1)^0,c
 13250  00388A                     
 13251                           ;libraries/lcd_highlevel.c: 435:   if(button->pressed == 0)
 13252  00388A  EE20 F010          	lfsr	2,16
 13253  00388E  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13254  003890  26D9               	addwf	fsr2l,f,c
 13255  003892  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13256  003894  22DA               	addwfc	fsr2h,f,c
 13257  003896  50DF               	movf	indf2,w,c
 13258  003898  A4D8               	btfss	status,2,c
 13259  00389A  EF51  F01C         	goto	u6451
 13260  00389E  EF53  F01C         	goto	u6450
 13261  0038A2                     u6451:
 13262  0038A2  EF69  F01C         	goto	l9076
 13263  0038A6                     u6450:
 13264  0038A6                     
 13265                           ;libraries/lcd_highlevel.c: 436:   {;libraries/lcd_highlevel.c: 437:     colorOut = butt
      +                          on->txtColor;
 13266  0038A6  EE20 F008          	lfsr	2,8
 13267  0038AA  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13268  0038AC  26D9               	addwf	fsr2l,f,c
 13269  0038AE  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13270  0038B0  22DA               	addwfc	fsr2h,f,c
 13271  0038B2  CFDE F02B          	movff	postinc2,LCD_ButtonUpdate@colorOut
 13272  0038B6  CFDD F02C          	movff	postdec2,LCD_ButtonUpdate@colorOut+1
 13273                           
 13274                           ;libraries/lcd_highlevel.c: 438:     colorIn = button->bgColor;
 13275  0038BA  EE20 F00A          	lfsr	2,10
 13276  0038BE  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13277  0038C0  26D9               	addwf	fsr2l,f,c
 13278  0038C2  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13279  0038C4  22DA               	addwfc	fsr2h,f,c
 13280  0038C6  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 13281  0038CA  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 13282                           
 13283                           ;libraries/lcd_highlevel.c: 439:   }
 13284  0038CE  EF83  F01C         	goto	l9080
 13285  0038D2                     l9076:
 13286                           
 13287                           ;libraries/lcd_highlevel.c: 441:   {;libraries/lcd_highlevel.c: 443:     colorOut = LCD_
      +                          Read(x1,y2+1);
 13288  0038D2  C033  F012         	movff	LCD_ButtonUpdate@x1,LCD_Read@posX
 13289  0038D6  C034  F013         	movff	LCD_ButtonUpdate@x1+1,LCD_Read@posX+1
 13290  0038DA  0E01               	movlw	1
 13291  0038DC  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13292  0038DE  6E14               	movwf	LCD_Read@posY^0,c
 13293  0038E0  0E00               	movlw	0
 13294  0038E2  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13295  0038E4  6E15               	movwf	(LCD_Read@posY+1)^0,c
 13296  0038E6  ECF1  F020         	call	_LCD_Read	;wreg free
 13297  0038EA  C012  F02B         	movff	?_LCD_Read,LCD_ButtonUpdate@colorOut
 13298  0038EE  C013  F02C         	movff	?_LCD_Read+1,LCD_ButtonUpdate@colorOut+1
 13299  0038F2                     
 13300                           ;libraries/lcd_highlevel.c: 444:     colorIn = button->txtColor;
 13301  0038F2  EE20 F008          	lfsr	2,8
 13302  0038F6  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13303  0038F8  26D9               	addwf	fsr2l,f,c
 13304  0038FA  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13305  0038FC  22DA               	addwfc	fsr2h,f,c
 13306  0038FE  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 13307  003902  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 13308  003906                     l9080:
 13309                           
 13310                           ;libraries/lcd_highlevel.c: 446:   if(button->bgColor != button->txtColor)
 13311  003906  EE20 F008          	lfsr	2,8
 13312  00390A  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13313  00390C  26D9               	addwf	fsr2l,f,c
 13314  00390E  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13315  003910  22DA               	addwfc	fsr2h,f,c
 13316  003912  EE10 F00A          	lfsr	1,10
 13317  003916  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13318  003918  26E1               	addwf	fsr1l,f,c
 13319  00391A  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13320  00391C  22E2               	addwfc	fsr1h,f,c
 13321  00391E  50DE               	movf	postinc2,w,c
 13322  003920  18E6               	xorwf	postinc1,w,c
 13323  003922  E109               	bnz	u6460
 13324  003924  50DE               	movf	postinc2,w,c
 13325  003926  18E6               	xorwf	postinc1,w,c
 13326  003928  B4D8               	btfsc	status,2,c
 13327  00392A  EF99  F01C         	goto	u6461
 13328  00392E  EF9B  F01C         	goto	u6460
 13329  003932                     u6461:
 13330  003932  EF1B  F01D         	goto	l252
 13331  003936                     u6460:
 13332  003936                     
 13333                           ;libraries/lcd_highlevel.c: 447:   {;libraries/lcd_highlevel.c: 449:     LCD_DrawRect(x1
      +                          +3, y2+1, x2+3, y2+3, 1, colorOut);
 13334  003936  0E03               	movlw	3
 13335  003938  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13336  00393A  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13337  00393C  0E00               	movlw	0
 13338  00393E  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13339  003940  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13340  003942  0E01               	movlw	1
 13341  003944  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13342  003946  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13343  003948  0E00               	movlw	0
 13344  00394A  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13345  00394C  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13346  00394E  0E03               	movlw	3
 13347  003950  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13348  003952  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13349  003954  0E00               	movlw	0
 13350  003956  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13351  003958  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13352  00395A  0E03               	movlw	3
 13353  00395C  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13354  00395E  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13355  003960  0E00               	movlw	0
 13356  003962  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13357  003964  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13358  003966  0E01               	movlw	1
 13359  003968  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13360  00396A  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 13361  00396E  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 13362  003972  EC69  F016         	call	_LCD_DrawRect	;wreg free
 13363                           
 13364                           ;libraries/lcd_highlevel.c: 450:     LCD_DrawRect(x2+1, y1+3, x2+3, y2+3, 1, colorOut);
 13365  003976  0E01               	movlw	1
 13366  003978  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13367  00397A  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13368  00397C  0E00               	movlw	0
 13369  00397E  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13370  003980  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13371  003982  0E03               	movlw	3
 13372  003984  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13373  003986  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13374  003988  0E00               	movlw	0
 13375  00398A  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13376  00398C  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13377  00398E  0E03               	movlw	3
 13378  003990  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13379  003992  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13380  003994  0E00               	movlw	0
 13381  003996  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13382  003998  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13383  00399A  0E03               	movlw	3
 13384  00399C  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13385  00399E  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13386  0039A0  0E00               	movlw	0
 13387  0039A2  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13388  0039A4  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13389  0039A6  0E01               	movlw	1
 13390  0039A8  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13391  0039AA  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 13392  0039AE  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 13393  0039B2  EC69  F016         	call	_LCD_DrawRect	;wreg free
 13394                           
 13395                           ;libraries/lcd_highlevel.c: 451:     LCD_DrawRect(x1+1, y1+1, x2-1, y1+2, 1, colorIn);
 13396  0039B6  0E01               	movlw	1
 13397  0039B8  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13398  0039BA  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13399  0039BC  0E00               	movlw	0
 13400  0039BE  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13401  0039C0  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13402  0039C2  0E01               	movlw	1
 13403  0039C4  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13404  0039C6  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13405  0039C8  0E00               	movlw	0
 13406  0039CA  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13407  0039CC  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13408  0039CE  0EFF               	movlw	255
 13409  0039D0  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13410  0039D2  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13411  0039D4  0EFF               	movlw	255
 13412  0039D6  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13413  0039D8  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13414  0039DA  0E02               	movlw	2
 13415  0039DC  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13416  0039DE  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13417  0039E0  0E00               	movlw	0
 13418  0039E2  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13419  0039E4  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13420  0039E6  0E01               	movlw	1
 13421  0039E8  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13422  0039EA  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 13423  0039EE  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 13424  0039F2  EC69  F016         	call	_LCD_DrawRect	;wreg free
 13425                           
 13426                           ;libraries/lcd_highlevel.c: 452:     LCD_DrawRect(x1+1, y1+1, x1+2, y2-1, 1, colorIn);
 13427  0039F6  0E01               	movlw	1
 13428  0039F8  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13429  0039FA  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13430  0039FC  0E00               	movlw	0
 13431  0039FE  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13432  003A00  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13433  003A02  0E01               	movlw	1
 13434  003A04  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13435  003A06  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13436  003A08  0E00               	movlw	0
 13437  003A0A  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13438  003A0C  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13439  003A0E  0E02               	movlw	2
 13440  003A10  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13441  003A12  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13442  003A14  0E00               	movlw	0
 13443  003A16  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13444  003A18  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13445  003A1A  0EFF               	movlw	255
 13446  003A1C  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13447  003A1E  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13448  003A20  0EFF               	movlw	255
 13449  003A22  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13450  003A24  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13451  003A26  0E01               	movlw	1
 13452  003A28  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13453  003A2A  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 13454  003A2E  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 13455  003A32  EC69  F016         	call	_LCD_DrawRect	;wreg free
 13456  003A36                     l252:
 13457  003A36  0012               	return		;funcret
 13458  003A38                     __end_of_LCD_ButtonUpdate:
 13459                           	callstack 0
 13460                           
 13461 ;; *************** function _LCD_Read *****************
 13462 ;; Defined at:
 13463 ;;		line 64 in file "libraries/lcd_lowlevel.c"
 13464 ;; Parameters:    Size  Location     Type
 13465 ;;  posX            2   17[COMRAM] unsigned short 
 13466 ;;  posY            2   19[COMRAM] unsigned short 
 13467 ;; Auto vars:     Size  Location     Type
 13468 ;;  temp16          2   25[COMRAM] unsigned short 
 13469 ;;  color           2   23[COMRAM] unsigned short 
 13470 ;; Return value:  Size  Location     Type
 13471 ;;                  2   17[COMRAM] unsigned short 
 13472 ;; Registers used:
 13473 ;;		wreg, status,2, status,0
 13474 ;; Tracked objects:
 13475 ;;		On entry : 0/0
 13476 ;;		On exit  : 0/0
 13477 ;;		Unchanged: 0/0
 13478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13479 ;;      Params:         4       0       0       0       0       0       0
 13480 ;;      Locals:         4       0       0       0       0       0       0
 13481 ;;      Temps:          2       0       0       0       0       0       0
 13482 ;;      Totals:        10       0       0       0       0       0       0
 13483 ;;Total ram usage:       10 bytes
 13484 ;; Hardware stack levels used: 1
 13485 ;; Hardware stack levels required when called: 4
 13486 ;; This function calls:
 13487 ;;		Nothing
 13488 ;; This function is called by:
 13489 ;;		_LCD_ButtonUpdate
 13490 ;; This function uses a non-reentrant model
 13491 ;;
 13492                           
 13493                           	psect	text50
 13494  0041E2                     __ptext50:
 13495                           	callstack 0
 13496  0041E2                     _LCD_Read:
 13497                           	callstack 19
 13498  0041E2                     
 13499                           ;libraries/lcd_lowlevel.c: 64: uint16_t LCD_Read(uint16_t posX, uint16_t posY);libraries
      +                          /lcd_lowlevel.c: 65: {;libraries/lcd_lowlevel.c: 66:  uint16_t temp16;;libraries/lcd_low
      +                          level.c: 67:   uint16_t color;;libraries/lcd_lowlevel.c: 70:   PORTA = 0x2A; LATC4 = 0; 
      +                          LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 13500  0041E2  0E2A               	movlw	42
 13501  0041E4  6E80               	movwf	128,c	;volatile
 13502  0041E6  988B               	bcf	3979,4,c	;volatile
 13503  0041E8  968B               	bcf	3979,3,c	;volatile
 13504  0041EA  868B               	bsf	3979,3,c	;volatile
 13505  0041EC  888B               	bsf	3979,4,c	;volatile
 13506                           
 13507                           ;libraries/lcd_lowlevel.c: 71:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 13508  0041EE  5013               	movf	(LCD_Read@posX+1)^0,w,c
 13509  0041F0  6E80               	movwf	128,c	;volatile
 13510  0041F2  968B               	bcf	3979,3,c	;volatile
 13511  0041F4  868B               	bsf	3979,3,c	;volatile
 13512  0041F6                     
 13513                           ;libraries/lcd_lowlevel.c: 72:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 13514  0041F6  C012  FF80         	movff	LCD_Read@posX,3968	;volatile
 13515  0041FA  968B               	bcf	3979,3,c	;volatile
 13516  0041FC  868B               	bsf	3979,3,c	;volatile
 13517                           
 13518                           ;libraries/lcd_lowlevel.c: 73:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13519  0041FE  0E00               	movlw	0
 13520  004200  6E80               	movwf	128,c	;volatile
 13521  004202  968B               	bcf	3979,3,c	;volatile
 13522  004204  868B               	bsf	3979,3,c	;volatile
 13523                           
 13524                           ;libraries/lcd_lowlevel.c: 74:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 13525  004206  0EEF               	movlw	239
 13526  004208  6E80               	movwf	128,c	;volatile
 13527  00420A  968B               	bcf	3979,3,c	;volatile
 13528  00420C  868B               	bsf	3979,3,c	;volatile
 13529                           
 13530                           ;libraries/lcd_lowlevel.c: 76:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 13531  00420E  0E2B               	movlw	43
 13532  004210  6E80               	movwf	128,c	;volatile
 13533  004212  988B               	bcf	3979,4,c	;volatile
 13534  004214  968B               	bcf	3979,3,c	;volatile
 13535  004216  868B               	bsf	3979,3,c	;volatile
 13536  004218  888B               	bsf	3979,4,c	;volatile
 13537                           
 13538                           ;libraries/lcd_lowlevel.c: 77:   PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 13539  00421A  5015               	movf	(LCD_Read@posY+1)^0,w,c
 13540  00421C  6E80               	movwf	128,c	;volatile
 13541  00421E  968B               	bcf	3979,3,c	;volatile
 13542  004220  868B               	bsf	3979,3,c	;volatile
 13543  004222                     
 13544                           ;libraries/lcd_lowlevel.c: 78:   PORTA = posY; LATC3 = 0; LATC3 = 1;;
 13545  004222  C014  FF80         	movff	LCD_Read@posY,3968	;volatile
 13546  004226  968B               	bcf	3979,3,c	;volatile
 13547  004228  868B               	bsf	3979,3,c	;volatile
 13548                           
 13549                           ;libraries/lcd_lowlevel.c: 79:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13550  00422A  0E01               	movlw	1
 13551  00422C  6E80               	movwf	128,c	;volatile
 13552  00422E  968B               	bcf	3979,3,c	;volatile
 13553  004230  868B               	bsf	3979,3,c	;volatile
 13554                           
 13555                           ;libraries/lcd_lowlevel.c: 80:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 13556  004232  0E3F               	movlw	63
 13557  004234  6E80               	movwf	128,c	;volatile
 13558  004236  968B               	bcf	3979,3,c	;volatile
 13559  004238  868B               	bsf	3979,3,c	;volatile
 13560                           
 13561                           ;libraries/lcd_lowlevel.c: 82:   PORTA = 0x2E; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 13562  00423A  0E2E               	movlw	46
 13563  00423C  6E80               	movwf	128,c	;volatile
 13564  00423E  988B               	bcf	3979,4,c	;volatile
 13565  004240  968B               	bcf	3979,3,c	;volatile
 13566  004242  868B               	bsf	3979,3,c	;volatile
 13567  004244  888B               	bsf	3979,4,c	;volatile
 13568  004246                     
 13569                           ;libraries/lcd_lowlevel.c: 83:  TRISA = 0xFF;
 13570  004246  6892               	setf	146,c	;volatile
 13571  004248                     
 13572                           ;libraries/lcd_lowlevel.c: 84:  LATC2 = 0;
 13573  004248  948B               	bcf	3979,2,c	;volatile
 13574  00424A                     
 13575                           ;libraries/lcd_lowlevel.c: 85:   __nop();
 13576  00424A  F000               	nop	
 13577  00424C                     
 13578                           ;libraries/lcd_lowlevel.c: 86:  LATC2 = 1;
 13579  00424C  848B               	bsf	3979,2,c	;volatile
 13580  00424E                     
 13581                           ;libraries/lcd_lowlevel.c: 87:  TRISA = 0xFF;
 13582  00424E  6892               	setf	146,c	;volatile
 13583  004250                     
 13584                           ;libraries/lcd_lowlevel.c: 88:  LATC2 = 0;
 13585  004250  948B               	bcf	3979,2,c	;volatile
 13586  004252                     
 13587                           ;libraries/lcd_lowlevel.c: 89:   __nop();
 13588  004252  F000               	nop	
 13589  004254                     
 13590                           ;libraries/lcd_lowlevel.c: 90:  temp16 = PORTA;
 13591  004254  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 13592  004258  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 13593  00425A                     
 13594                           ;libraries/lcd_lowlevel.c: 91:  LATC2 = 1;
 13595  00425A  848B               	bsf	3979,2,c	;volatile
 13596  00425C                     
 13597                           ;libraries/lcd_lowlevel.c: 92:   temp16 = temp16 >> 3;
 13598  00425C  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13599  004260  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13600  004264  90D8               	bcf	status,0,c
 13601  004266  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13602  004268  3216               	rrcf	??_LCD_Read^0,f,c
 13603  00426A  90D8               	bcf	status,0,c
 13604  00426C  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13605  00426E  3216               	rrcf	??_LCD_Read^0,f,c
 13606  004270  90D8               	bcf	status,0,c
 13607  004272  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13608  004274  3216               	rrcf	??_LCD_Read^0,f,c
 13609  004276  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13610  00427A  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13611  00427E                     
 13612                           ;libraries/lcd_lowlevel.c: 93:   color = temp16 << 11;
 13613  00427E  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13614  004282  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13615  004286  0E0B               	movlw	11
 13616  004288                     u6035:
 13617  004288  90D8               	bcf	status,0,c
 13618  00428A  3616               	rlcf	??_LCD_Read^0,f,c
 13619  00428C  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 13620  00428E  2EE8               	decfsz	wreg,f,c
 13621  004290  EF44  F021         	goto	u6035
 13622  004294  C016  F018         	movff	??_LCD_Read,LCD_Read@color
 13623  004298  C017  F019         	movff	??_LCD_Read+1,LCD_Read@color+1
 13624  00429C                     
 13625                           ;libraries/lcd_lowlevel.c: 94:  LATC2 = 0;
 13626  00429C  948B               	bcf	3979,2,c	;volatile
 13627  00429E                     
 13628                           ;libraries/lcd_lowlevel.c: 95:   __nop();
 13629  00429E  F000               	nop	
 13630  0042A0                     
 13631                           ;libraries/lcd_lowlevel.c: 96:  temp16 = PORTA;
 13632  0042A0  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 13633  0042A4  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 13634  0042A6                     
 13635                           ;libraries/lcd_lowlevel.c: 97:  LATC2 = 1;
 13636  0042A6  848B               	bsf	3979,2,c	;volatile
 13637  0042A8                     
 13638                           ;libraries/lcd_lowlevel.c: 98:   temp16 = temp16 >> 2;
 13639  0042A8  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13640  0042AC  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13641  0042B0  90D8               	bcf	status,0,c
 13642  0042B2  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13643  0042B4  3216               	rrcf	??_LCD_Read^0,f,c
 13644  0042B6  90D8               	bcf	status,0,c
 13645  0042B8  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13646  0042BA  3216               	rrcf	??_LCD_Read^0,f,c
 13647  0042BC  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13648  0042C0  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13649  0042C4                     
 13650                           ;libraries/lcd_lowlevel.c: 99:   color |= temp16 << 5;
 13651  0042C4  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13652  0042C8  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13653  0042CC  0E05               	movlw	5
 13654  0042CE                     u6045:
 13655  0042CE  90D8               	bcf	status,0,c
 13656  0042D0  3616               	rlcf	??_LCD_Read^0,f,c
 13657  0042D2  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 13658  0042D4  2EE8               	decfsz	wreg,f,c
 13659  0042D6  EF67  F021         	goto	u6045
 13660  0042DA  5016               	movf	??_LCD_Read^0,w,c
 13661  0042DC  1218               	iorwf	LCD_Read@color^0,f,c
 13662  0042DE  5017               	movf	(??_LCD_Read+1)^0,w,c
 13663  0042E0  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 13664  0042E2                     
 13665                           ;libraries/lcd_lowlevel.c: 100:  LATC2 = 0;
 13666  0042E2  948B               	bcf	3979,2,c	;volatile
 13667  0042E4                     
 13668                           ;libraries/lcd_lowlevel.c: 101:   __nop();
 13669  0042E4  F000               	nop	
 13670  0042E6                     
 13671                           ;libraries/lcd_lowlevel.c: 102:  temp16 |= PORTA;
 13672  0042E6  5080               	movf	128,w,c	;volatile
 13673  0042E8  121A               	iorwf	LCD_Read@temp16^0,f,c
 13674  0042EA                     
 13675                           ;libraries/lcd_lowlevel.c: 103:  LATC2 = 1;
 13676  0042EA  848B               	bsf	3979,2,c	;volatile
 13677  0042EC                     
 13678                           ;libraries/lcd_lowlevel.c: 104:   temp16 = temp16 >> 3;
 13679  0042EC  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13680  0042F0  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13681  0042F4  90D8               	bcf	status,0,c
 13682  0042F6  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13683  0042F8  3216               	rrcf	??_LCD_Read^0,f,c
 13684  0042FA  90D8               	bcf	status,0,c
 13685  0042FC  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13686  0042FE  3216               	rrcf	??_LCD_Read^0,f,c
 13687  004300  90D8               	bcf	status,0,c
 13688  004302  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13689  004304  3216               	rrcf	??_LCD_Read^0,f,c
 13690  004306  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13691  00430A  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13692  00430E                     
 13693                           ;libraries/lcd_lowlevel.c: 105:   color |= temp16;
 13694  00430E  501A               	movf	LCD_Read@temp16^0,w,c
 13695  004310  1218               	iorwf	LCD_Read@color^0,f,c
 13696  004312  501B               	movf	(LCD_Read@temp16+1)^0,w,c
 13697  004314  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 13698  004316                     
 13699                           ;libraries/lcd_lowlevel.c: 106:  TRISA = 0x00;
 13700  004316  0E00               	movlw	0
 13701  004318  6E92               	movwf	146,c	;volatile
 13702  00431A                     
 13703                           ;libraries/lcd_lowlevel.c: 107:  return color;
 13704  00431A  C018  F012         	movff	LCD_Read@color,?_LCD_Read
 13705  00431E  C019  F013         	movff	LCD_Read@color+1,?_LCD_Read+1
 13706  004322  0012               	return		;funcret
 13707  004324                     __end_of_LCD_Read:
 13708                           	callstack 0
 13709                           
 13710 ;; *************** function _LCD_Bitmap *****************
 13711 ;; Defined at:
 13712 ;;		line 823 in file "libraries/lcd_highlevel.c"
 13713 ;; Parameters:    Size  Location     Type
 13714 ;;  bmpPtr          2   38[COMRAM] PTR const unsigned char 
 13715 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 13716 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 13717 ;;  posX            2   40[COMRAM] unsigned short 
 13718 ;;  posY            2   42[COMRAM] unsigned short 
 13719 ;; Auto vars:     Size  Location     Type
 13720 ;;  bfOffBits       4    0[BANK0 ] unsigned long 
 13721 ;;  i               2   26[BANK0 ] unsigned short 
 13722 ;;  jumpColor       2   24[BANK0 ] unsigned short 
 13723 ;;  biWidth         2   22[BANK0 ] unsigned short 
 13724 ;;  newY            2   19[BANK0 ] unsigned short 
 13725 ;;  strPtr          2   17[BANK0 ] PTR struct .
 13726 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 13727 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 13728 ;;  curXPos         2   15[BANK0 ] unsigned short 
 13729 ;;  color           2   13[BANK0 ] unsigned short 
 13730 ;;  biHeight        2   11[BANK0 ] unsigned short 
 13731 ;;  colorTablePt    2    9[BANK0 ] PTR unsigned char 
 13732 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 13733 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 13734 ;;  curYPos         2    7[BANK0 ] unsigned short 
 13735 ;;  jumpCount       2    5[BANK0 ] unsigned short 
 13736 ;;  pixelCount      1   21[BANK0 ] unsigned char 
 13737 ;;  endOfImage      1    4[BANK0 ] unsigned char 
 13738 ;; Return value:  Size  Location     Type
 13739 ;;                  1    wreg      unsigned char 
 13740 ;; Registers used:
 13741 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13742 ;; Tracked objects:
 13743 ;;		On entry : 0/0
 13744 ;;		On exit  : 0/0
 13745 ;;		Unchanged: 0/0
 13746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13747 ;;      Params:         6       0       0       0       0       0       0
 13748 ;;      Locals:         0      28       0       0       0       0       0
 13749 ;;      Temps:          4       0       0       0       0       0       0
 13750 ;;      Totals:        10      28       0       0       0       0       0
 13751 ;;Total ram usage:       38 bytes
 13752 ;; Hardware stack levels used: 1
 13753 ;; Hardware stack levels required when called: 5
 13754 ;; This function calls:
 13755 ;;		_RGB2LCD
 13756 ;;		___lwdiv
 13757 ;;		___lwmod
 13758 ;;		___wmul
 13759 ;; This function is called by:
 13760 ;;		_LCD_ButtonDraw
 13761 ;; This function uses a non-reentrant model
 13762 ;;
 13763                           
 13764                           	psect	text51
 13765  00095E                     __ptext51:
 13766                           	callstack 0
 13767  00095E                     _LCD_Bitmap:
 13768                           	callstack 19
 13769  00095E                     
 13770                           ;libraries/lcd_highlevel.c: 823: uint8_t LCD_Bitmap(const uint8_t * bmpPtr, uint16_t pos
      +                          X, uint16_t posY);libraries/lcd_highlevel.c: 824: {;libraries/lcd_highlevel.c: 825:   ui
      +                          nt32_t bfOffBits;;libraries/lcd_highlevel.c: 826:   uint16_t biWidth, biHeight;;librarie
      +                          s/lcd_highlevel.c: 827:   uint8_t * colorTablePtr;;libraries/lcd_highlevel.c: 828:   uin
      +                          t8_t endOfImage;;libraries/lcd_highlevel.c: 829:   uint16_t i,curXPos,curYPos;;libraries
      +                          /lcd_highlevel.c: 830:   uint8_t pixelCount;;libraries/lcd_highlevel.c: 831:   uint16_t 
      +                          color;
 13771  00095E  C027  F071         	movff	LCD_Bitmap@bmpPtr,LCD_Bitmap@strPtr
 13772  000962  C028  F072         	movff	LCD_Bitmap@bmpPtr+1,LCD_Bitmap@strPtr+1
 13773  000966                     
 13774                           ;libraries/lcd_highlevel.c: 839:   bfOffBits = strPtr->bfOffBits;
 13775  000966  0E0A               	movlw	10
 13776  000968  0100               	movlb	0	; () banked
 13777  00096A  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13778  00096C  6E2D               	movwf	??_LCD_Bitmap^0,c
 13779  00096E  0E00               	movlw	0
 13780  000970  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13781  000972  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13782  000974  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13783  000978  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13784  00097C                     	if	0	;tblptru may be non-zero
 13785  00097C                     	endif
 13786  00097C                     	if	0	;tblptru may be non-zero
 13787  00097C                     	endif
 13788  00097C  0009               	tblrd		*+
 13789  00097E  CFF5 F060          	movff	tablat,LCD_Bitmap@bfOffBits
 13790  000982  0009               	tblrd		*+
 13791  000984  CFF5 F061          	movff	tablat,LCD_Bitmap@bfOffBits+1
 13792  000988  0009               	tblrd		*+
 13793  00098A  CFF5 F062          	movff	tablat,LCD_Bitmap@bfOffBits+2
 13794  00098E  000A               	tblrd		*-
 13795  000990  CFF5 F063          	movff	tablat,LCD_Bitmap@bfOffBits+3
 13796  000994                     
 13797                           ; BSR set to: 0
 13798                           ;libraries/lcd_highlevel.c: 840:   biWidth = strPtr->biWidth;
 13799  000994  0E12               	movlw	18
 13800  000996  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13801  000998  6E2D               	movwf	??_LCD_Bitmap^0,c
 13802  00099A  0E00               	movlw	0
 13803  00099C  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13804  00099E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13805  0009A0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13806  0009A4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13807  0009A8                     	if	0	;tblptru may be non-zero
 13808  0009A8                     	endif
 13809  0009A8                     	if	0	;tblptru may be non-zero
 13810  0009A8                     	endif
 13811  0009A8  0009               	tblrd		*+
 13812  0009AA  CFF5 F076          	movff	tablat,LCD_Bitmap@biWidth
 13813  0009AE  000A               	tblrd		*-
 13814  0009B0  CFF5 F077          	movff	tablat,LCD_Bitmap@biWidth+1
 13815  0009B4                     
 13816                           ; BSR set to: 0
 13817                           ;libraries/lcd_highlevel.c: 841:   biHeight = strPtr->biHeight;
 13818  0009B4  0E16               	movlw	22
 13819  0009B6  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13820  0009B8  6E2D               	movwf	??_LCD_Bitmap^0,c
 13821  0009BA  0E00               	movlw	0
 13822  0009BC  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13823  0009BE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13824  0009C0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13825  0009C4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13826  0009C8                     	if	0	;tblptru may be non-zero
 13827  0009C8                     	endif
 13828  0009C8                     	if	0	;tblptru may be non-zero
 13829  0009C8                     	endif
 13830  0009C8  0009               	tblrd		*+
 13831  0009CA  CFF5 F06B          	movff	tablat,LCD_Bitmap@biHeight
 13832  0009CE  000A               	tblrd		*-
 13833  0009D0  CFF5 F06C          	movff	tablat,LCD_Bitmap@biHeight+1
 13834  0009D4                     
 13835                           ; BSR set to: 0
 13836                           ;libraries/lcd_highlevel.c: 842:   if((strPtr->biBitCount != 8) ||
 13837  0009D4  0E1C               	movlw	28
 13838  0009D6  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13839  0009D8  6E2D               	movwf	??_LCD_Bitmap^0,c
 13840  0009DA  0E00               	movlw	0
 13841  0009DC  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13842  0009DE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13843  0009E0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13844  0009E4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13845  0009E8                     	if	0	;tblptru may be non-zero
 13846  0009E8                     	endif
 13847  0009E8                     	if	0	;tblptru may be non-zero
 13848  0009E8                     	endif
 13849  0009E8  0009               	tblrd		*+
 13850  0009EA  0E08               	movlw	8
 13851  0009EC  18F5               	xorwf	tablat,w,c
 13852  0009EE  0009               	tblrd		*+
 13853  0009F0  10F5               	iorwf	tablat,w,c
 13854  0009F2  A4D8               	btfss	status,2,c
 13855  0009F4  EFFE  F004         	goto	u6471
 13856  0009F8  EF00  F005         	goto	u6470
 13857  0009FC                     u6471:
 13858  0009FC  EFA9  F007         	goto	l330
 13859  000A00                     u6470:
 13860  000A00                     
 13861                           ; BSR set to: 0
 13862  000A00  0E1E               	movlw	30
 13863  000A02  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13864  000A04  6E2D               	movwf	??_LCD_Bitmap^0,c
 13865  000A06  0E00               	movlw	0
 13866  000A08  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13867  000A0A  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13868  000A0C  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13869  000A10  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13870  000A14                     	if	0	;tblptru may be non-zero
 13871  000A14                     	endif
 13872  000A14                     	if	0	;tblptru may be non-zero
 13873  000A14                     	endif
 13874  000A14  0009               	tblrd		*+
 13875  000A16  04F5               	decf	tablat,w,c
 13876  000A18  0009               	tblrd		*+
 13877  000A1A  10F5               	iorwf	tablat,w,c
 13878  000A1C  0009               	tblrd		*+
 13879  000A1E  10F5               	iorwf	tablat,w,c
 13880  000A20  0009               	tblrd		*+
 13881  000A22  10F5               	iorwf	tablat,w,c
 13882  000A24  B4D8               	btfsc	status,2,c
 13883  000A26  EF17  F005         	goto	u6481
 13884  000A2A  EF19  F005         	goto	u6480
 13885  000A2E                     u6481:
 13886  000A2E  EF1B  F005         	goto	l9096
 13887  000A32                     u6480:
 13888  000A32  EFA9  F007         	goto	l330
 13889  000A36                     l9096:
 13890                           
 13891                           ; BSR set to: 0
 13892                           ;libraries/lcd_highlevel.c: 847:   if(((posX + biWidth) > (240)) ||
 13893  000A36  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 13894  000A38  2429               	addwf	LCD_Bitmap@posX^0,w,c
 13895  000A3A  6E2D               	movwf	??_LCD_Bitmap^0,c
 13896  000A3C  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 13897  000A3E  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 13898  000A40  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13899  000A42  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 13900  000A44  E107               	bnz	u6491
 13901  000A46  0EF1               	movlw	241
 13902  000A48  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 13903  000A4A  B0D8               	btfsc	status,0,c
 13904  000A4C  EF2A  F005         	goto	u6491
 13905  000A50  EF2C  F005         	goto	u6490
 13906  000A54                     u6491:
 13907  000A54  EFA9  F007         	goto	l330
 13908  000A58                     u6490:
 13909  000A58                     
 13910                           ; BSR set to: 0
 13911  000A58  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 13912  000A5A  242B               	addwf	LCD_Bitmap@posY^0,w,c
 13913  000A5C  6E2D               	movwf	??_LCD_Bitmap^0,c
 13914  000A5E  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 13915  000A60  202C               	addwfc	(LCD_Bitmap@posY+1)^0,w,c
 13916  000A62  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13917  000A64  0E41               	movlw	65
 13918  000A66  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 13919  000A68  0E01               	movlw	1
 13920  000A6A  582E               	subwfb	(??_LCD_Bitmap+1)^0,w,c
 13921  000A6C  A0D8               	btfss	status,0,c
 13922  000A6E  EF3B  F005         	goto	u6501
 13923  000A72  EF3D  F005         	goto	u6500
 13924  000A76                     u6501:
 13925  000A76  EF3F  F005         	goto	l9100
 13926  000A7A                     u6500:
 13927  000A7A  EFA9  F007         	goto	l330
 13928  000A7E                     l9100:
 13929                           
 13930                           ; BSR set to: 0
 13931                           ;libraries/lcd_highlevel.c: 853:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13932  000A7E  0E36               	movlw	54
 13933  000A80  6E80               	movwf	128,c	;volatile
 13934  000A82                     
 13935                           ; BSR set to: 0
 13936  000A82  988B               	bcf	3979,4,c	;volatile
 13937  000A84                     
 13938                           ; BSR set to: 0
 13939  000A84  968B               	bcf	3979,3,c	;volatile
 13940  000A86                     
 13941                           ; BSR set to: 0
 13942  000A86  868B               	bsf	3979,3,c	;volatile
 13943  000A88                     
 13944                           ; BSR set to: 0
 13945  000A88  888B               	bsf	3979,4,c	;volatile
 13946                           
 13947                           ;libraries/lcd_highlevel.c: 855:   PORTA = 0b10000000; LATC3 = 0; LATC3 = 1;;
 13948  000A8A  0E80               	movlw	128
 13949  000A8C  6E80               	movwf	128,c	;volatile
 13950  000A8E                     
 13951                           ; BSR set to: 0
 13952  000A8E  968B               	bcf	3979,3,c	;volatile
 13953  000A90                     
 13954                           ; BSR set to: 0
 13955  000A90  868B               	bsf	3979,3,c	;volatile
 13956  000A92                     
 13957                           ; BSR set to: 0
 13958                           ;libraries/lcd_highlevel.c: 857:   colorTablePtr = (uint8_t *)bmpPtr + 54;
 13959  000A92  0E36               	movlw	54
 13960  000A94  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 13961  000A96  6F69               	movwf	LCD_Bitmap@colorTablePtr& (0+255),b
 13962  000A98  0E00               	movlw	0
 13963  000A9A  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 13964  000A9C  6F6A               	movwf	(LCD_Bitmap@colorTablePtr+1)& (0+255),b
 13965  000A9E                     
 13966                           ; BSR set to: 0
 13967                           ;libraries/lcd_highlevel.c: 858:   bmpPtr += bfOffBits;
 13968  000A9E  5160               	movf	LCD_Bitmap@bfOffBits& (0+255),w,b
 13969  000AA0  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 13970  000AA2  5161               	movf	(LCD_Bitmap@bfOffBits+1)& (0+255),w,b
 13971  000AA4  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 13972                           
 13973                           ;libraries/lcd_highlevel.c: 859:   endOfImage = 0;
 13974  000AA6  0E00               	movlw	0
 13975  000AA8  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 13976  000AAA                     
 13977                           ; BSR set to: 0
 13978                           ;libraries/lcd_highlevel.c: 860:   jumpColor = RGB2LCD(colorTablePtr);
 13979  000AAA  C069  F012         	movff	LCD_Bitmap@colorTablePtr,RGB2LCD@colorTableEntry
 13980  000AAE  C06A  F013         	movff	LCD_Bitmap@colorTablePtr+1,RGB2LCD@colorTableEntry+1
 13981  000AB2  ECD7  F029         	call	_RGB2LCD	;wreg free
 13982  000AB6  C012  F078         	movff	?_RGB2LCD,LCD_Bitmap@jumpColor
 13983  000ABA  C013  F079         	movff	?_RGB2LCD+1,LCD_Bitmap@jumpColor+1
 13984  000ABE                     
 13985                           ;libraries/lcd_highlevel.c: 862:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13986  000ABE  0E2A               	movlw	42
 13987  000AC0  6E80               	movwf	128,c	;volatile
 13988  000AC2  988B               	bcf	3979,4,c	;volatile
 13989  000AC4  968B               	bcf	3979,3,c	;volatile
 13990  000AC6  868B               	bsf	3979,3,c	;volatile
 13991  000AC8  888B               	bsf	3979,4,c	;volatile
 13992  000ACA                     
 13993                           ;libraries/lcd_highlevel.c: 863:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 13994  000ACA  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 13995  000ACC  6E80               	movwf	128,c	;volatile
 13996  000ACE  968B               	bcf	3979,3,c	;volatile
 13997  000AD0  868B               	bsf	3979,3,c	;volatile
 13998  000AD2                     
 13999                           ;libraries/lcd_highlevel.c: 864:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 14000  000AD2  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 14001  000AD6  968B               	bcf	3979,3,c	;volatile
 14002  000AD8  868B               	bsf	3979,3,c	;volatile
 14003  000ADA                     
 14004                           ;libraries/lcd_highlevel.c: 865:   posX = posX + biWidth-1;
 14005  000ADA  0100               	movlb	0	; () banked
 14006  000ADC  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 14007  000ADE  2429               	addwf	LCD_Bitmap@posX^0,w,c
 14008  000AE0  6E2D               	movwf	??_LCD_Bitmap^0,c
 14009  000AE2  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14010  000AE4  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 14011  000AE6  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14012  000AE8  0EFF               	movlw	255
 14013  000AEA  242D               	addwf	??_LCD_Bitmap^0,w,c
 14014  000AEC  6E29               	movwf	LCD_Bitmap@posX^0,c
 14015  000AEE  0EFF               	movlw	255
 14016  000AF0  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14017  000AF2  6E2A               	movwf	(LCD_Bitmap@posX+1)^0,c
 14018  000AF4                     
 14019                           ; BSR set to: 0
 14020                           ;libraries/lcd_highlevel.c: 866:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 14021  000AF4  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 14022  000AF6  6E80               	movwf	128,c	;volatile
 14023  000AF8                     
 14024                           ; BSR set to: 0
 14025  000AF8  968B               	bcf	3979,3,c	;volatile
 14026  000AFA                     
 14027                           ; BSR set to: 0
 14028  000AFA  868B               	bsf	3979,3,c	;volatile
 14029  000AFC                     
 14030                           ; BSR set to: 0
 14031                           ;libraries/lcd_highlevel.c: 867:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 14032  000AFC  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 14033  000B00                     
 14034                           ; BSR set to: 0
 14035  000B00  968B               	bcf	3979,3,c	;volatile
 14036  000B02                     
 14037                           ; BSR set to: 0
 14038  000B02  868B               	bsf	3979,3,c	;volatile
 14039  000B04                     
 14040                           ; BSR set to: 0
 14041                           ;libraries/lcd_highlevel.c: 869:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14042  000B04  0E2B               	movlw	43
 14043  000B06  6E80               	movwf	128,c	;volatile
 14044  000B08                     
 14045                           ; BSR set to: 0
 14046  000B08  988B               	bcf	3979,4,c	;volatile
 14047  000B0A                     
 14048                           ; BSR set to: 0
 14049  000B0A  968B               	bcf	3979,3,c	;volatile
 14050  000B0C                     
 14051                           ; BSR set to: 0
 14052  000B0C  868B               	bsf	3979,3,c	;volatile
 14053  000B0E                     
 14054                           ; BSR set to: 0
 14055  000B0E  888B               	bsf	3979,4,c	;volatile
 14056  000B10                     
 14057                           ; BSR set to: 0
 14058                           ;libraries/lcd_highlevel.c: 870:   newY = 320 - posY - biHeight;
 14059  000B10  C02B  F02D         	movff	LCD_Bitmap@posY,??_LCD_Bitmap
 14060  000B14  C02C  F02E         	movff	LCD_Bitmap@posY+1,??_LCD_Bitmap+1
 14061  000B18  1E2D               	comf	??_LCD_Bitmap^0,f,c
 14062  000B1A  1E2E               	comf	(??_LCD_Bitmap+1)^0,f,c
 14063  000B1C  4A2D               	infsnz	??_LCD_Bitmap^0,f,c
 14064  000B1E  2A2E               	incf	(??_LCD_Bitmap+1)^0,f,c
 14065  000B20  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 14066  000B22  5E2D               	subwf	??_LCD_Bitmap^0,f,c
 14067  000B24  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14068  000B26  5A2E               	subwfb	(??_LCD_Bitmap+1)^0,f,c
 14069  000B28  0E40               	movlw	64
 14070  000B2A  242D               	addwf	??_LCD_Bitmap^0,w,c
 14071  000B2C  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 14072  000B2E  0E01               	movlw	1
 14073  000B30  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14074  000B32  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 14075  000B34                     
 14076                           ; BSR set to: 0
 14077                           ;libraries/lcd_highlevel.c: 871:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 14078  000B34  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 14079  000B36  6E80               	movwf	128,c	;volatile
 14080  000B38                     
 14081                           ; BSR set to: 0
 14082  000B38  968B               	bcf	3979,3,c	;volatile
 14083  000B3A                     
 14084                           ; BSR set to: 0
 14085  000B3A  868B               	bsf	3979,3,c	;volatile
 14086  000B3C                     
 14087                           ; BSR set to: 0
 14088                           ;libraries/lcd_highlevel.c: 872:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 14089  000B3C  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 14090  000B40                     
 14091                           ; BSR set to: 0
 14092  000B40  968B               	bcf	3979,3,c	;volatile
 14093  000B42                     
 14094                           ; BSR set to: 0
 14095  000B42  868B               	bsf	3979,3,c	;volatile
 14096  000B44                     
 14097                           ; BSR set to: 0
 14098                           ;libraries/lcd_highlevel.c: 873:   newY = newY + biHeight-1;
 14099  000B44  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 14100  000B46  2573               	addwf	LCD_Bitmap@newY& (0+255),w,b
 14101  000B48  6E2D               	movwf	??_LCD_Bitmap^0,c
 14102  000B4A  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14103  000B4C  2174               	addwfc	(LCD_Bitmap@newY+1)& (0+255),w,b
 14104  000B4E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14105  000B50  0EFF               	movlw	255
 14106  000B52  242D               	addwf	??_LCD_Bitmap^0,w,c
 14107  000B54  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 14108  000B56  0EFF               	movlw	255
 14109  000B58  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14110  000B5A  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 14111  000B5C                     
 14112                           ; BSR set to: 0
 14113                           ;libraries/lcd_highlevel.c: 874:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 14114  000B5C  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 14115  000B5E  6E80               	movwf	128,c	;volatile
 14116  000B60                     
 14117                           ; BSR set to: 0
 14118  000B60  968B               	bcf	3979,3,c	;volatile
 14119  000B62                     
 14120                           ; BSR set to: 0
 14121  000B62  868B               	bsf	3979,3,c	;volatile
 14122  000B64                     
 14123                           ; BSR set to: 0
 14124                           ;libraries/lcd_highlevel.c: 875:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 14125  000B64  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 14126  000B68                     
 14127                           ; BSR set to: 0
 14128  000B68  968B               	bcf	3979,3,c	;volatile
 14129  000B6A                     
 14130                           ; BSR set to: 0
 14131  000B6A  868B               	bsf	3979,3,c	;volatile
 14132  000B6C                     
 14133                           ; BSR set to: 0
 14134                           ;libraries/lcd_highlevel.c: 877:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14135  000B6C  0E2C               	movlw	44
 14136  000B6E  6E80               	movwf	128,c	;volatile
 14137  000B70                     
 14138                           ; BSR set to: 0
 14139  000B70  988B               	bcf	3979,4,c	;volatile
 14140  000B72                     
 14141                           ; BSR set to: 0
 14142  000B72  968B               	bcf	3979,3,c	;volatile
 14143  000B74                     
 14144                           ; BSR set to: 0
 14145  000B74  868B               	bsf	3979,3,c	;volatile
 14146  000B76                     
 14147                           ; BSR set to: 0
 14148  000B76  888B               	bsf	3979,4,c	;volatile
 14149  000B78                     
 14150                           ; BSR set to: 0
 14151                           ;libraries/lcd_highlevel.c: 878:   curXPos = 0;
 14152  000B78  0E00               	movlw	0
 14153  000B7A  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 14154  000B7C  0E00               	movlw	0
 14155  000B7E  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 14156  000B80                     
 14157                           ; BSR set to: 0
 14158                           ;libraries/lcd_highlevel.c: 879:   curYPos = 0;
 14159  000B80  0E00               	movlw	0
 14160  000B82  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 14161  000B84  0E00               	movlw	0
 14162  000B86  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 14163  000B88                     l9208:
 14164                           
 14165                           ; BSR set to: 0
 14166                           ;libraries/lcd_highlevel.c: 881:   {;libraries/lcd_highlevel.c: 882:     if(bmpPtr[0] ==
      +                           0)
 14167  000B88  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 14168  000B8C  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 14169  000B90                     	if	0	;tblptru may be non-zero
 14170  000B90                     	endif
 14171  000B90                     	if	0	;tblptru may be non-zero
 14172  000B90                     	endif
 14173  000B90  0008               	tblrd		*
 14174  000B92  50F5               	movf	tablat,w,c
 14175  000B94  0900               	iorlw	0
 14176  000B96  A4D8               	btfss	status,2,c
 14177  000B98  EFD0  F005         	goto	u6511
 14178  000B9C  EFD2  F005         	goto	u6510
 14179  000BA0                     u6511:
 14180  000BA0  EF4D  F007         	goto	l9334
 14181  000BA4                     u6510:
 14182  000BA4  EF29  F007         	goto	l9332
 14183  000BA8                     l9212:
 14184                           
 14185                           ; BSR set to: 0
 14186                           ;libraries/lcd_highlevel.c: 887:           bmpPtr += 2;
 14187  000BA8  0E02               	movlw	2
 14188  000BAA  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14189  000BAC  0E00               	movlw	0
 14190  000BAE  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14191  000BB0                     
 14192                           ; BSR set to: 0
 14193                           ;libraries/lcd_highlevel.c: 888:           for(i=0;i<biWidth - curXPos;i++)
 14194  000BB0  0E00               	movlw	0
 14195  000BB2  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14196  000BB4  0E00               	movlw	0
 14197  000BB6  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14198  000BB8  EFE8  F005         	goto	l9230
 14199  000BBC                     l9216:
 14200                           
 14201                           ; BSR set to: 0
 14202                           ;libraries/lcd_highlevel.c: 889:           {;libraries/lcd_highlevel.c: 890:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14203  000BBC  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14204  000BBE  6E80               	movwf	128,c	;volatile
 14205  000BC0                     
 14206                           ; BSR set to: 0
 14207  000BC0  968B               	bcf	3979,3,c	;volatile
 14208  000BC2                     
 14209                           ; BSR set to: 0
 14210  000BC2  868B               	bsf	3979,3,c	;volatile
 14211  000BC4                     
 14212                           ; BSR set to: 0
 14213                           ;libraries/lcd_highlevel.c: 891:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14214  000BC4  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14215  000BC8                     
 14216                           ; BSR set to: 0
 14217  000BC8  968B               	bcf	3979,3,c	;volatile
 14218  000BCA                     
 14219                           ; BSR set to: 0
 14220  000BCA  868B               	bsf	3979,3,c	;volatile
 14221  000BCC                     
 14222                           ; BSR set to: 0
 14223                           ;libraries/lcd_highlevel.c: 892:           }
 14224  000BCC  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14225  000BCE  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14226  000BD0                     l9230:
 14227                           
 14228                           ; BSR set to: 0
 14229  000BD0  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 14230  000BD2  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 14231  000BD4  6E2D               	movwf	??_LCD_Bitmap^0,c
 14232  000BD6  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 14233  000BD8  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14234  000BDA  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14235  000BDC  502D               	movf	??_LCD_Bitmap^0,w,c
 14236  000BDE  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14237  000BE0  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14238  000BE2  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14239  000BE4  A0D8               	btfss	status,0,c
 14240  000BE6  EFF7  F005         	goto	u6521
 14241  000BEA  EFF9  F005         	goto	u6520
 14242  000BEE                     u6521:
 14243  000BEE  EFDE  F005         	goto	l9216
 14244  000BF2                     u6520:
 14245  000BF2                     
 14246                           ; BSR set to: 0
 14247                           ;libraries/lcd_highlevel.c: 893:           curXPos = 0;
 14248  000BF2  0E00               	movlw	0
 14249  000BF4  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 14250  000BF6  0E00               	movlw	0
 14251  000BF8  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 14252  000BFA                     
 14253                           ; BSR set to: 0
 14254                           ;libraries/lcd_highlevel.c: 894:           curYPos++;
 14255  000BFA  4B67               	infsnz	LCD_Bitmap@curYPos& (0+255),f,b
 14256  000BFC  2B68               	incf	(LCD_Bitmap@curYPos+1)& (0+255),f,b
 14257                           
 14258                           ;libraries/lcd_highlevel.c: 895:         break;
 14259  000BFE  EF96  F007         	goto	l9360
 14260  000C02                     l9236:
 14261                           
 14262                           ; BSR set to: 0
 14263                           ;libraries/lcd_highlevel.c: 897:           for(i=0;i<biWidth - curXPos;i++)
 14264  000C02  0E00               	movlw	0
 14265  000C04  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14266  000C06  0E00               	movlw	0
 14267  000C08  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14268  000C0A  EF11  F006         	goto	l9252
 14269  000C0E                     l9238:
 14270                           
 14271                           ; BSR set to: 0
 14272                           ;libraries/lcd_highlevel.c: 898:           {;libraries/lcd_highlevel.c: 899:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14273  000C0E  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14274  000C10  6E80               	movwf	128,c	;volatile
 14275  000C12                     
 14276                           ; BSR set to: 0
 14277  000C12  968B               	bcf	3979,3,c	;volatile
 14278  000C14                     
 14279                           ; BSR set to: 0
 14280  000C14  868B               	bsf	3979,3,c	;volatile
 14281  000C16                     
 14282                           ; BSR set to: 0
 14283                           ;libraries/lcd_highlevel.c: 900:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14284  000C16  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14285  000C1A                     
 14286                           ; BSR set to: 0
 14287  000C1A  968B               	bcf	3979,3,c	;volatile
 14288  000C1C                     
 14289                           ; BSR set to: 0
 14290  000C1C  868B               	bsf	3979,3,c	;volatile
 14291  000C1E                     
 14292                           ; BSR set to: 0
 14293                           ;libraries/lcd_highlevel.c: 901:           }
 14294  000C1E  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14295  000C20  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14296  000C22                     l9252:
 14297                           
 14298                           ; BSR set to: 0
 14299  000C22  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 14300  000C24  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 14301  000C26  6E2D               	movwf	??_LCD_Bitmap^0,c
 14302  000C28  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 14303  000C2A  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14304  000C2C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14305  000C2E  502D               	movf	??_LCD_Bitmap^0,w,c
 14306  000C30  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14307  000C32  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14308  000C34  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14309  000C36  A0D8               	btfss	status,0,c
 14310  000C38  EF20  F006         	goto	u6531
 14311  000C3C  EF22  F006         	goto	u6530
 14312  000C40                     u6531:
 14313  000C40  EF07  F006         	goto	l9238
 14314  000C44                     u6530:
 14315  000C44                     
 14316                           ; BSR set to: 0
 14317                           ;libraries/lcd_highlevel.c: 902:           for(i=0;i<(biHeight - curYPos -1)*biWidth;i++
      +                          )
 14318  000C44  0E00               	movlw	0
 14319  000C46  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14320  000C48  0E00               	movlw	0
 14321  000C4A  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14322  000C4C  EF32  F006         	goto	l9270
 14323  000C50                     l9256:
 14324                           
 14325                           ; BSR set to: 0
 14326                           ;libraries/lcd_highlevel.c: 903:           {;libraries/lcd_highlevel.c: 904:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14327  000C50  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14328  000C52  6E80               	movwf	128,c	;volatile
 14329  000C54                     
 14330                           ; BSR set to: 0
 14331  000C54  968B               	bcf	3979,3,c	;volatile
 14332  000C56                     
 14333                           ; BSR set to: 0
 14334  000C56  868B               	bsf	3979,3,c	;volatile
 14335  000C58                     
 14336                           ; BSR set to: 0
 14337                           ;libraries/lcd_highlevel.c: 905:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14338  000C58  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14339  000C5C                     
 14340                           ; BSR set to: 0
 14341  000C5C  968B               	bcf	3979,3,c	;volatile
 14342  000C5E                     
 14343                           ; BSR set to: 0
 14344  000C5E  868B               	bsf	3979,3,c	;volatile
 14345  000C60                     
 14346                           ; BSR set to: 0
 14347                           ;libraries/lcd_highlevel.c: 906:           }
 14348  000C60  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14349  000C62  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14350  000C64                     l9270:
 14351                           
 14352                           ; BSR set to: 0
 14353  000C64  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 14354  000C66  5D6B               	subwf	LCD_Bitmap@biHeight& (0+255),w,b
 14355  000C68  6E2D               	movwf	??_LCD_Bitmap^0,c
 14356  000C6A  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 14357  000C6C  596C               	subwfb	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14358  000C6E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14359  000C70  0EFF               	movlw	255
 14360  000C72  242D               	addwf	??_LCD_Bitmap^0,w,c
 14361  000C74  6E1A               	movwf	___wmul@multiplier^0,c
 14362  000C76  0EFF               	movlw	255
 14363  000C78  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14364  000C7A  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 14365  000C7C  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 14366  000C80  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 14367  000C84  ECAB  F031         	call	___wmul	;wreg free
 14368  000C88  501A               	movf	?___wmul^0,w,c
 14369  000C8A  0100               	movlb	0	; () banked
 14370  000C8C  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14371  000C8E  501B               	movf	(?___wmul+1)^0,w,c
 14372  000C90  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14373  000C92  A0D8               	btfss	status,0,c
 14374  000C94  EF4E  F006         	goto	u6541
 14375  000C98  EF50  F006         	goto	u6540
 14376  000C9C                     u6541:
 14377  000C9C  EF28  F006         	goto	l9256
 14378  000CA0                     u6540:
 14379  000CA0                     
 14380                           ; BSR set to: 0
 14381                           ;libraries/lcd_highlevel.c: 907:           endOfImage = 1;
 14382  000CA0  0E01               	movlw	1
 14383  000CA2  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 14384                           
 14385                           ;libraries/lcd_highlevel.c: 908:         break;
 14386  000CA4  EF96  F007         	goto	l9360
 14387  000CA8                     l9274:
 14388                           
 14389                           ; BSR set to: 0
 14390                           ;libraries/lcd_highlevel.c: 910:           jumpCount = bmpPtr[2] + (bmpPtr[3]*biWidth);
 14391  000CA8  0E03               	movlw	3
 14392  000CAA  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14393  000CAC  6E2D               	movwf	??_LCD_Bitmap^0,c
 14394  000CAE  0E00               	movlw	0
 14395  000CB0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14396  000CB2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14397  000CB4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14398  000CB8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14399  000CBC                     	if	0	;tblptru may be non-zero
 14400  000CBC                     	endif
 14401  000CBC                     	if	0	;tblptru may be non-zero
 14402  000CBC                     	endif
 14403  000CBC  0008               	tblrd		*
 14404  000CBE  50F5               	movf	tablat,w,c
 14405  000CC0  6E1A               	movwf	___wmul@multiplier^0,c
 14406  000CC2  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 14407  000CC4  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 14408  000CC8  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 14409  000CCC  ECAB  F031         	call	___wmul	;wreg free
 14410  000CD0  0E02               	movlw	2
 14411  000CD2  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14412  000CD4  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 14413  000CD6  0E00               	movlw	0
 14414  000CD8  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14415  000CDA  6E30               	movwf	(??_LCD_Bitmap+3)^0,c
 14416  000CDC  C02F  FFF6         	movff	??_LCD_Bitmap+2,tblptrl
 14417  000CE0  C030  FFF7         	movff	??_LCD_Bitmap+3,tblptrh
 14418  000CE4                     	if	0	;tblptru may be non-zero
 14419  000CE4                     	endif
 14420  000CE4                     	if	0	;tblptru may be non-zero
 14421  000CE4                     	endif
 14422  000CE4  0008               	tblrd		*
 14423  000CE6  50F5               	movf	tablat,w,c
 14424  000CE8  241A               	addwf	?___wmul^0,w,c
 14425  000CEA  0100               	movlb	0	; () banked
 14426  000CEC  6F65               	movwf	LCD_Bitmap@jumpCount& (0+255),b
 14427  000CEE  0E00               	movlw	0
 14428  000CF0  201B               	addwfc	(?___wmul+1)^0,w,c
 14429  000CF2  6F66               	movwf	(LCD_Bitmap@jumpCount+1)& (0+255),b
 14430  000CF4                     
 14431                           ; BSR set to: 0
 14432                           ;libraries/lcd_highlevel.c: 911:           for(i=0;i<jumpCount;i++)
 14433  000CF4  0E00               	movlw	0
 14434  000CF6  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14435  000CF8  0E00               	movlw	0
 14436  000CFA  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14437  000CFC  EF8C  F006         	goto	l9294
 14438  000D00                     l9278:
 14439                           
 14440                           ; BSR set to: 0
 14441                           ;libraries/lcd_highlevel.c: 912:           {;libraries/lcd_highlevel.c: 913:            
      +                           curXPos++;
 14442  000D00  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14443  000D02  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14444  000D04                     
 14445                           ; BSR set to: 0
 14446                           ;libraries/lcd_highlevel.c: 914:             PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 
      +                          1;;
 14447  000D04  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14448  000D06  6E80               	movwf	128,c	;volatile
 14449  000D08                     
 14450                           ; BSR set to: 0
 14451  000D08  968B               	bcf	3979,3,c	;volatile
 14452  000D0A                     
 14453                           ; BSR set to: 0
 14454  000D0A  868B               	bsf	3979,3,c	;volatile
 14455  000D0C                     
 14456                           ; BSR set to: 0
 14457                           ;libraries/lcd_highlevel.c: 915:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14458  000D0C  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14459  000D10                     
 14460                           ; BSR set to: 0
 14461  000D10  968B               	bcf	3979,3,c	;volatile
 14462  000D12                     
 14463                           ; BSR set to: 0
 14464  000D12  868B               	bsf	3979,3,c	;volatile
 14465  000D14                     
 14466                           ; BSR set to: 0
 14467                           ;libraries/lcd_highlevel.c: 916:           }
 14468  000D14  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14469  000D16  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14470  000D18                     l9294:
 14471                           
 14472                           ; BSR set to: 0
 14473  000D18  5165               	movf	LCD_Bitmap@jumpCount& (0+255),w,b
 14474  000D1A  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14475  000D1C  5166               	movf	(LCD_Bitmap@jumpCount+1)& (0+255),w,b
 14476  000D1E  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14477  000D20  A0D8               	btfss	status,0,c
 14478  000D22  EF95  F006         	goto	u6551
 14479  000D26  EF97  F006         	goto	u6550
 14480  000D2A                     u6551:
 14481  000D2A  EF80  F006         	goto	l9278
 14482  000D2E                     u6550:
 14483  000D2E                     
 14484                           ; BSR set to: 0
 14485                           ;libraries/lcd_highlevel.c: 917:           curYPos = curYPos + (jumpCount / biWidth);
 14486  000D2E  C065  F020         	movff	LCD_Bitmap@jumpCount,___lwdiv@dividend
 14487  000D32  C066  F021         	movff	LCD_Bitmap@jumpCount+1,___lwdiv@dividend+1
 14488  000D36  C076  F022         	movff	LCD_Bitmap@biWidth,___lwdiv@divisor
 14489  000D3A  C077  F023         	movff	LCD_Bitmap@biWidth+1,___lwdiv@divisor+1
 14490  000D3E  EC6C  F02E         	call	___lwdiv	;wreg free
 14491  000D42  0100               	movlb	0	; () banked
 14492  000D44  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 14493  000D46  2420               	addwf	?___lwdiv^0,w,c
 14494  000D48  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 14495  000D4A  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 14496  000D4C  2021               	addwfc	(?___lwdiv+1)^0,w,c
 14497  000D4E  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 14498                           
 14499                           ;libraries/lcd_highlevel.c: 918:           curXPos = curXPos % biWidth;
 14500  000D50  C06F  F012         	movff	LCD_Bitmap@curXPos,___lwmod@dividend
 14501  000D54  C070  F013         	movff	LCD_Bitmap@curXPos+1,___lwmod@dividend+1
 14502  000D58  C076  F014         	movff	LCD_Bitmap@biWidth,___lwmod@divisor
 14503  000D5C  C077  F015         	movff	LCD_Bitmap@biWidth+1,___lwmod@divisor+1
 14504  000D60  EC12  F02F         	call	___lwmod	;wreg free
 14505  000D64  C012  F06F         	movff	?___lwmod,LCD_Bitmap@curXPos
 14506  000D68  C013  F070         	movff	?___lwmod+1,LCD_Bitmap@curXPos+1
 14507  000D6C                     
 14508                           ;libraries/lcd_highlevel.c: 919:           bmpPtr += 4;
 14509  000D6C  0E04               	movlw	4
 14510  000D6E  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14511  000D70  0E00               	movlw	0
 14512  000D72  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14513                           
 14514                           ;libraries/lcd_highlevel.c: 920:         break;
 14515  000D74  EF96  F007         	goto	l9360
 14516  000D78                     l9300:
 14517                           
 14518                           ; BSR set to: 0
 14519                           ;libraries/lcd_highlevel.c: 922:           pixelCount = bmpPtr[1];
 14520  000D78  0E01               	movlw	1
 14521  000D7A  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14522  000D7C  6E2D               	movwf	??_LCD_Bitmap^0,c
 14523  000D7E  0E00               	movlw	0
 14524  000D80  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14525  000D82  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14526  000D84  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14527  000D88  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14528  000D8C                     	if	0	;tblptru may be non-zero
 14529  000D8C                     	endif
 14530  000D8C                     	if	0	;tblptru may be non-zero
 14531  000D8C                     	endif
 14532  000D8C  0008               	tblrd		*
 14533  000D8E  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 14534  000D92                     
 14535                           ; BSR set to: 0
 14536                           ;libraries/lcd_highlevel.c: 923:           for(i=0;i < pixelCount;i++)
 14537  000D92  0E00               	movlw	0
 14538  000D94  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14539  000D96  0E00               	movlw	0
 14540  000D98  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14541  000D9A  EFFD  F006         	goto	l9322
 14542  000D9E                     l9304:
 14543                           
 14544                           ; BSR set to: 0
 14545                           ;libraries/lcd_highlevel.c: 924:           {;libraries/lcd_highlevel.c: 925:            
      +                           color = RGB2LCD(colorTablePtr+(bmpPtr[2+i]*4));
 14546  000D9E  517A               	movf	LCD_Bitmap@i& (0+255),w,b
 14547  000DA0  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14548  000DA2  6E2D               	movwf	??_LCD_Bitmap^0,c
 14549  000DA4  517B               	movf	(LCD_Bitmap@i+1)& (0+255),w,b
 14550  000DA6  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14551  000DA8  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14552  000DAA  0E02               	movlw	2
 14553  000DAC  262D               	addwf	??_LCD_Bitmap^0,f,c
 14554  000DAE  0E00               	movlw	0
 14555  000DB0  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 14556  000DB2  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14557  000DB6  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14558  000DBA                     	if	0	;tblptru may be non-zero
 14559  000DBA                     	endif
 14560  000DBA                     	if	0	;tblptru may be non-zero
 14561  000DBA                     	endif
 14562  000DBA  0008               	tblrd		*
 14563  000DBC  50F5               	movf	tablat,w,c
 14564  000DBE  0D04               	mullw	4
 14565  000DC0  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 14566  000DC4  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 14567  000DC8  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14568  000DCA  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 14569  000DCC  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 14570  000DCE  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14571  000DD0  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 14572  000DD2  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 14573  000DD4  ECD7  F029         	call	_RGB2LCD	;wreg free
 14574  000DD8  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 14575  000DDC  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 14576  000DE0                     
 14577                           ;libraries/lcd_highlevel.c: 926:             curXPos++;
 14578  000DE0  0100               	movlb	0	; () banked
 14579  000DE2  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14580  000DE4  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14581  000DE6                     
 14582                           ; BSR set to: 0
 14583                           ;libraries/lcd_highlevel.c: 927:             PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 14584  000DE6  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 14585  000DE8  6E80               	movwf	128,c	;volatile
 14586  000DEA                     
 14587                           ; BSR set to: 0
 14588  000DEA  968B               	bcf	3979,3,c	;volatile
 14589  000DEC                     
 14590                           ; BSR set to: 0
 14591  000DEC  868B               	bsf	3979,3,c	;volatile
 14592  000DEE                     
 14593                           ; BSR set to: 0
 14594                           ;libraries/lcd_highlevel.c: 928:             PORTA = color; LATC3 = 0; LATC3 = 1;;
 14595  000DEE  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 14596  000DF2                     
 14597                           ; BSR set to: 0
 14598  000DF2  968B               	bcf	3979,3,c	;volatile
 14599  000DF4                     
 14600                           ; BSR set to: 0
 14601  000DF4  868B               	bsf	3979,3,c	;volatile
 14602  000DF6                     
 14603                           ; BSR set to: 0
 14604                           ;libraries/lcd_highlevel.c: 929:           }
 14605  000DF6  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14606  000DF8  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14607  000DFA                     l9322:
 14608                           
 14609                           ; BSR set to: 0
 14610  000DFA  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14611  000DFC  6E2D               	movwf	??_LCD_Bitmap^0,c
 14612  000DFE  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14613  000E00  502D               	movf	??_LCD_Bitmap^0,w,c
 14614  000E02  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14615  000E04  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14616  000E06  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14617  000E08  A0D8               	btfss	status,0,c
 14618  000E0A  EF09  F007         	goto	u6561
 14619  000E0E  EF0B  F007         	goto	u6560
 14620  000E12                     u6561:
 14621  000E12  EFCF  F006         	goto	l9304
 14622  000E16                     u6560:
 14623  000E16                     
 14624                           ; BSR set to: 0
 14625                           ;libraries/lcd_highlevel.c: 930:           if(pixelCount < 255)
 14626  000E16  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 14627  000E18  B4D8               	btfsc	status,2,c
 14628  000E1A  EF11  F007         	goto	u6571
 14629  000E1E  EF13  F007         	goto	u6570
 14630  000E22                     u6571:
 14631  000E22  EF23  F007         	goto	l9328
 14632  000E26                     u6570:
 14633  000E26                     
 14634                           ; BSR set to: 0
 14635                           ;libraries/lcd_highlevel.c: 931:           {;libraries/lcd_highlevel.c: 932:            
      +                           pixelCount = (pixelCount+1) & 0xFE;
 14636  000E26  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 14637  000E28  0BFE               	andlw	254
 14638  000E2A  6F75               	movwf	LCD_Bitmap@pixelCount& (0+255),b
 14639                           
 14640                           ;libraries/lcd_highlevel.c: 933:             bmpPtr+=pixelCount+2;
 14641  000E2C  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14642  000E2E  6E2D               	movwf	??_LCD_Bitmap^0,c
 14643  000E30  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14644  000E32  0E02               	movlw	2
 14645  000E34  262D               	addwf	??_LCD_Bitmap^0,f,c
 14646  000E36  0E00               	movlw	0
 14647  000E38  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 14648  000E3A  502D               	movf	??_LCD_Bitmap^0,w,c
 14649  000E3C  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14650  000E3E  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14651  000E40  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14652                           
 14653                           ;libraries/lcd_highlevel.c: 934:           }
 14654  000E42  EF96  F007         	goto	l9360
 14655  000E46                     l9328:
 14656                           
 14657                           ; BSR set to: 0
 14658                           ;libraries/lcd_highlevel.c: 936:           {;libraries/lcd_highlevel.c: 937:            
      +                             bmpPtr += 258;
 14659  000E46  0E02               	movlw	2
 14660  000E48  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14661  000E4A  0E01               	movlw	1
 14662  000E4C  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14663  000E4E  EF96  F007         	goto	l9360
 14664  000E52                     l9332:
 14665                           
 14666                           ; BSR set to: 0
 14667  000E52  0E01               	movlw	1
 14668  000E54  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14669  000E56  6E2D               	movwf	??_LCD_Bitmap^0,c
 14670  000E58  0E00               	movlw	0
 14671  000E5A  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14672  000E5C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14673  000E5E  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14674  000E62  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14675  000E66                     	if	0	;tblptru may be non-zero
 14676  000E66                     	endif
 14677  000E66                     	if	0	;tblptru may be non-zero
 14678  000E66                     	endif
 14679  000E66  0008               	tblrd		*
 14680  000E68  50F5               	movf	tablat,w,c
 14681  000E6A  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 14682  000E6C  6A30               	clrf	(??_LCD_Bitmap+3)^0,c
 14683                           
 14684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14685                           ; Switch size 1, requested type "simple"
 14686                           ; Number of cases is 1, Range of values is 0 to 0
 14687                           ; switch strategies available:
 14688                           ; Name         Instructions Cycles
 14689                           ; simple_byte            4     3 (average)
 14690                           ;	Chosen strategy is simple_byte
 14691  000E6E  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14692  000E70  0A00               	xorlw	0	; case 0
 14693  000E72  B4D8               	btfsc	status,2,c
 14694  000E74  EF3E  F007         	goto	l10910
 14695  000E78  EFBC  F006         	goto	l9300
 14696  000E7C                     l10910:
 14697                           
 14698                           ; BSR set to: 0
 14699                           ; Switch size 1, requested type "simple"
 14700                           ; Number of cases is 3, Range of values is 0 to 2
 14701                           ; switch strategies available:
 14702                           ; Name         Instructions Cycles
 14703                           ; simple_byte           10     6 (average)
 14704                           ;	Chosen strategy is simple_byte
 14705  000E7C  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14706  000E7E  0A00               	xorlw	0	; case 0
 14707  000E80  B4D8               	btfsc	status,2,c
 14708  000E82  EFD4  F005         	goto	l9212
 14709  000E86  0A01               	xorlw	1	; case 1
 14710  000E88  B4D8               	btfsc	status,2,c
 14711  000E8A  EF01  F006         	goto	l9236
 14712  000E8E  0A03               	xorlw	3	; case 2
 14713  000E90  B4D8               	btfsc	status,2,c
 14714  000E92  EF54  F006         	goto	l9274
 14715  000E96  EFBC  F006         	goto	l9300
 14716  000E9A                     l9334:
 14717                           
 14718                           ; BSR set to: 0
 14719                           ;libraries/lcd_highlevel.c: 943:     {;libraries/lcd_highlevel.c: 944:       pixelCount 
      +                          = bmpPtr[0];
 14720  000E9A  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 14721  000E9E  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 14722  000EA2                     	if	0	;tblptru may be non-zero
 14723  000EA2                     	endif
 14724  000EA2                     	if	0	;tblptru may be non-zero
 14725  000EA2                     	endif
 14726  000EA2  0008               	tblrd		*
 14727  000EA4  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 14728  000EA8                     
 14729                           ; BSR set to: 0
 14730                           ;libraries/lcd_highlevel.c: 945:       color = RGB2LCD(colorTablePtr+(bmpPtr[1]*4));
 14731  000EA8  0E01               	movlw	1
 14732  000EAA  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14733  000EAC  6E2D               	movwf	??_LCD_Bitmap^0,c
 14734  000EAE  0E00               	movlw	0
 14735  000EB0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14736  000EB2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14737  000EB4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14738  000EB8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14739  000EBC                     	if	0	;tblptru may be non-zero
 14740  000EBC                     	endif
 14741  000EBC                     	if	0	;tblptru may be non-zero
 14742  000EBC                     	endif
 14743  000EBC  0008               	tblrd		*
 14744  000EBE  50F5               	movf	tablat,w,c
 14745  000EC0  0D04               	mullw	4
 14746  000EC2  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 14747  000EC6  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 14748  000ECA  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14749  000ECC  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 14750  000ECE  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 14751  000ED0  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14752  000ED2  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 14753  000ED4  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 14754  000ED6  ECD7  F029         	call	_RGB2LCD	;wreg free
 14755  000EDA  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 14756  000EDE  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 14757  000EE2                     
 14758                           ;libraries/lcd_highlevel.c: 946:       for(i=0;i < pixelCount;i++)
 14759  000EE2  0E00               	movlw	0
 14760  000EE4  0100               	movlb	0	; () banked
 14761  000EE6  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14762  000EE8  0E00               	movlw	0
 14763  000EEA  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14764  000EEC  EF84  F007         	goto	l9356
 14765  000EF0                     l9340:
 14766                           
 14767                           ; BSR set to: 0
 14768                           ;libraries/lcd_highlevel.c: 947:       {;libraries/lcd_highlevel.c: 948:         curXPos
      +                          ++;
 14769  000EF0  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14770  000EF2  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14771  000EF4                     
 14772                           ; BSR set to: 0
 14773                           ;libraries/lcd_highlevel.c: 949:         PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 14774  000EF4  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 14775  000EF6  6E80               	movwf	128,c	;volatile
 14776  000EF8                     
 14777                           ; BSR set to: 0
 14778  000EF8  968B               	bcf	3979,3,c	;volatile
 14779  000EFA                     
 14780                           ; BSR set to: 0
 14781  000EFA  868B               	bsf	3979,3,c	;volatile
 14782  000EFC                     
 14783                           ; BSR set to: 0
 14784                           ;libraries/lcd_highlevel.c: 950:         PORTA = color; LATC3 = 0; LATC3 = 1;;
 14785  000EFC  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 14786  000F00                     
 14787                           ; BSR set to: 0
 14788  000F00  968B               	bcf	3979,3,c	;volatile
 14789  000F02                     
 14790                           ; BSR set to: 0
 14791  000F02  868B               	bsf	3979,3,c	;volatile
 14792  000F04                     
 14793                           ; BSR set to: 0
 14794                           ;libraries/lcd_highlevel.c: 951:       }
 14795  000F04  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14796  000F06  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14797  000F08                     l9356:
 14798                           
 14799                           ; BSR set to: 0
 14800  000F08  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14801  000F0A  6E2D               	movwf	??_LCD_Bitmap^0,c
 14802  000F0C  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14803  000F0E  502D               	movf	??_LCD_Bitmap^0,w,c
 14804  000F10  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14805  000F12  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14806  000F14  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14807  000F16  A0D8               	btfss	status,0,c
 14808  000F18  EF90  F007         	goto	u6581
 14809  000F1C  EF92  F007         	goto	u6580
 14810  000F20                     u6581:
 14811  000F20  EF78  F007         	goto	l9340
 14812  000F24                     u6580:
 14813  000F24                     
 14814                           ; BSR set to: 0
 14815                           ;libraries/lcd_highlevel.c: 952:       bmpPtr+=2;
 14816  000F24  0E02               	movlw	2
 14817  000F26  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14818  000F28  0E00               	movlw	0
 14819  000F2A  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14820  000F2C                     l9360:
 14821                           
 14822                           ;libraries/lcd_highlevel.c: 954:   }while(endOfImage == 0);
 14823  000F2C  0100               	movlb	0	; () banked
 14824  000F2E  5164               	movf	LCD_Bitmap@endOfImage& (0+255),w,b
 14825  000F30  B4D8               	btfsc	status,2,c
 14826  000F32  EF9D  F007         	goto	u6591
 14827  000F36  EF9F  F007         	goto	u6590
 14828  000F3A                     u6591:
 14829  000F3A  EFC4  F005         	goto	l9208
 14830  000F3E                     u6590:
 14831  000F3E                     
 14832                           ; BSR set to: 0
 14833                           ;libraries/lcd_highlevel.c: 955:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14834  000F3E  0E36               	movlw	54
 14835  000F40  6E80               	movwf	128,c	;volatile
 14836  000F42                     
 14837                           ; BSR set to: 0
 14838  000F42  988B               	bcf	3979,4,c	;volatile
 14839  000F44                     
 14840                           ; BSR set to: 0
 14841  000F44  968B               	bcf	3979,3,c	;volatile
 14842  000F46                     
 14843                           ; BSR set to: 0
 14844  000F46  868B               	bsf	3979,3,c	;volatile
 14845  000F48                     
 14846                           ; BSR set to: 0
 14847  000F48  888B               	bsf	3979,4,c	;volatile
 14848                           
 14849                           ;libraries/lcd_highlevel.c: 957:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
 14850  000F4A  0E00               	movlw	0
 14851  000F4C  6E80               	movwf	128,c	;volatile
 14852  000F4E                     
 14853                           ; BSR set to: 0
 14854  000F4E  968B               	bcf	3979,3,c	;volatile
 14855  000F50                     
 14856                           ; BSR set to: 0
 14857  000F50  868B               	bsf	3979,3,c	;volatile
 14858  000F52                     l330:
 14859                           
 14860                           ; BSR set to: 0
 14861  000F52  0012               	return		;funcret
 14862  000F54                     __end_of_LCD_Bitmap:
 14863                           	callstack 0
 14864                           
 14865 ;; *************** function ___lwmod *****************
 14866 ;; Defined at:
 14867 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
 14868 ;; Parameters:    Size  Location     Type
 14869 ;;  dividend        2   17[COMRAM] unsigned int 
 14870 ;;  divisor         2   19[COMRAM] unsigned int 
 14871 ;; Auto vars:     Size  Location     Type
 14872 ;;  counter         1   21[COMRAM] unsigned char 
 14873 ;; Return value:  Size  Location     Type
 14874 ;;                  2   17[COMRAM] unsigned int 
 14875 ;; Registers used:
 14876 ;;		wreg, status,2, status,0
 14877 ;; Tracked objects:
 14878 ;;		On entry : 0/0
 14879 ;;		On exit  : 0/0
 14880 ;;		Unchanged: 0/0
 14881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14882 ;;      Params:         4       0       0       0       0       0       0
 14883 ;;      Locals:         1       0       0       0       0       0       0
 14884 ;;      Temps:          0       0       0       0       0       0       0
 14885 ;;      Totals:         5       0       0       0       0       0       0
 14886 ;;Total ram usage:        5 bytes
 14887 ;; Hardware stack levels used: 1
 14888 ;; Hardware stack levels required when called: 4
 14889 ;; This function calls:
 14890 ;;		Nothing
 14891 ;; This function is called by:
 14892 ;;		_LCD_Bitmap
 14893 ;; This function uses a non-reentrant model
 14894 ;;
 14895                           
 14896                           	psect	text52
 14897  005E24                     __ptext52:
 14898                           	callstack 0
 14899  005E24                     ___lwmod:
 14900                           	callstack 19
 14901  005E24  5014               	movf	___lwmod@divisor^0,w,c
 14902  005E26  1015               	iorwf	(___lwmod@divisor+1)^0,w,c
 14903  005E28  B4D8               	btfsc	status,2,c
 14904  005E2A  EF19  F02F         	goto	u6241
 14905  005E2E  EF1B  F02F         	goto	u6240
 14906  005E32                     u6241:
 14907  005E32  EF3F  F02F         	goto	l1319
 14908  005E36                     u6240:
 14909  005E36  0E01               	movlw	1
 14910  005E38  6E16               	movwf	___lwmod@counter^0,c
 14911  005E3A  EF23  F02F         	goto	l8792
 14912  005E3E                     l8790:
 14913  005E3E  90D8               	bcf	status,0,c
 14914  005E40  3614               	rlcf	___lwmod@divisor^0,f,c
 14915  005E42  3615               	rlcf	(___lwmod@divisor+1)^0,f,c
 14916  005E44  2A16               	incf	___lwmod@counter^0,f,c
 14917  005E46                     l8792:
 14918  005E46  AE15               	btfss	(___lwmod@divisor+1)^0,7,c
 14919  005E48  EF28  F02F         	goto	u6251
 14920  005E4C  EF2A  F02F         	goto	u6250
 14921  005E50                     u6251:
 14922  005E50  EF1F  F02F         	goto	l8790
 14923  005E54                     u6250:
 14924  005E54                     l8794:
 14925  005E54  5014               	movf	___lwmod@divisor^0,w,c
 14926  005E56  5C12               	subwf	___lwmod@dividend^0,w,c
 14927  005E58  5015               	movf	(___lwmod@divisor+1)^0,w,c
 14928  005E5A  5813               	subwfb	(___lwmod@dividend+1)^0,w,c
 14929  005E5C  A0D8               	btfss	status,0,c
 14930  005E5E  EF33  F02F         	goto	u6261
 14931  005E62  EF35  F02F         	goto	u6260
 14932  005E66                     u6261:
 14933  005E66  EF39  F02F         	goto	l8798
 14934  005E6A                     u6260:
 14935  005E6A  5014               	movf	___lwmod@divisor^0,w,c
 14936  005E6C  5E12               	subwf	___lwmod@dividend^0,f,c
 14937  005E6E  5015               	movf	(___lwmod@divisor+1)^0,w,c
 14938  005E70  5A13               	subwfb	(___lwmod@dividend+1)^0,f,c
 14939  005E72                     l8798:
 14940  005E72  90D8               	bcf	status,0,c
 14941  005E74  3215               	rrcf	(___lwmod@divisor+1)^0,f,c
 14942  005E76  3214               	rrcf	___lwmod@divisor^0,f,c
 14943  005E78  2E16               	decfsz	___lwmod@counter^0,f,c
 14944  005E7A  EF2A  F02F         	goto	l8794
 14945  005E7E                     l1319:
 14946  005E7E  C012  F012         	movff	___lwmod@dividend,?___lwmod
 14947  005E82  C013  F013         	movff	___lwmod@dividend+1,?___lwmod+1
 14948  005E86  0012               	return		;funcret
 14949  005E88                     __end_of___lwmod:
 14950                           	callstack 0
 14951                           
 14952 ;; *************** function ___lwdiv *****************
 14953 ;; Defined at:
 14954 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
 14955 ;; Parameters:    Size  Location     Type
 14956 ;;  dividend        2   31[COMRAM] unsigned int 
 14957 ;;  divisor         2   33[COMRAM] unsigned int 
 14958 ;; Auto vars:     Size  Location     Type
 14959 ;;  quotient        2   36[COMRAM] unsigned int 
 14960 ;;  counter         1   35[COMRAM] unsigned char 
 14961 ;; Return value:  Size  Location     Type
 14962 ;;                  2   31[COMRAM] unsigned int 
 14963 ;; Registers used:
 14964 ;;		wreg, status,2, status,0
 14965 ;; Tracked objects:
 14966 ;;		On entry : 0/0
 14967 ;;		On exit  : 0/0
 14968 ;;		Unchanged: 0/0
 14969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14970 ;;      Params:         4       0       0       0       0       0       0
 14971 ;;      Locals:         3       0       0       0       0       0       0
 14972 ;;      Temps:          0       0       0       0       0       0       0
 14973 ;;      Totals:         7       0       0       0       0       0       0
 14974 ;;Total ram usage:        7 bytes
 14975 ;; Hardware stack levels used: 1
 14976 ;; Hardware stack levels required when called: 4
 14977 ;; This function calls:
 14978 ;;		Nothing
 14979 ;; This function is called by:
 14980 ;;		_LCD_SliderUpdate
 14981 ;;		_LCD_Bitmap
 14982 ;; This function uses a non-reentrant model
 14983 ;;
 14984                           
 14985                           	psect	text53
 14986  005CD8                     __ptext53:
 14987                           	callstack 0
 14988  005CD8                     ___lwdiv:
 14989                           	callstack 21
 14990  005CD8  0E00               	movlw	0
 14991  005CDA  6E26               	movwf	(___lwdiv@quotient+1)^0,c
 14992  005CDC  0E00               	movlw	0
 14993  005CDE  6E25               	movwf	___lwdiv@quotient^0,c
 14994  005CE0  5022               	movf	___lwdiv@divisor^0,w,c
 14995  005CE2  1023               	iorwf	(___lwdiv@divisor+1)^0,w,c
 14996  005CE4  B4D8               	btfsc	status,2,c
 14997  005CE6  EF77  F02E         	goto	u6211
 14998  005CEA  EF79  F02E         	goto	u6210
 14999  005CEE                     u6211:
 15000  005CEE  EFA1  F02E         	goto	l1309
 15001  005CF2                     u6210:
 15002  005CF2  0E01               	movlw	1
 15003  005CF4  6E24               	movwf	___lwdiv@counter^0,c
 15004  005CF6  EF81  F02E         	goto	l8772
 15005  005CFA                     l8770:
 15006  005CFA  90D8               	bcf	status,0,c
 15007  005CFC  3622               	rlcf	___lwdiv@divisor^0,f,c
 15008  005CFE  3623               	rlcf	(___lwdiv@divisor+1)^0,f,c
 15009  005D00  2A24               	incf	___lwdiv@counter^0,f,c
 15010  005D02                     l8772:
 15011  005D02  AE23               	btfss	(___lwdiv@divisor+1)^0,7,c
 15012  005D04  EF86  F02E         	goto	u6221
 15013  005D08  EF88  F02E         	goto	u6220
 15014  005D0C                     u6221:
 15015  005D0C  EF7D  F02E         	goto	l8770
 15016  005D10                     u6220:
 15017  005D10                     l8774:
 15018  005D10  90D8               	bcf	status,0,c
 15019  005D12  3625               	rlcf	___lwdiv@quotient^0,f,c
 15020  005D14  3626               	rlcf	(___lwdiv@quotient+1)^0,f,c
 15021  005D16  5022               	movf	___lwdiv@divisor^0,w,c
 15022  005D18  5C20               	subwf	___lwdiv@dividend^0,w,c
 15023  005D1A  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 15024  005D1C  5821               	subwfb	(___lwdiv@dividend+1)^0,w,c
 15025  005D1E  A0D8               	btfss	status,0,c
 15026  005D20  EF94  F02E         	goto	u6231
 15027  005D24  EF96  F02E         	goto	u6230
 15028  005D28                     u6231:
 15029  005D28  EF9B  F02E         	goto	l8782
 15030  005D2C                     u6230:
 15031  005D2C  5022               	movf	___lwdiv@divisor^0,w,c
 15032  005D2E  5E20               	subwf	___lwdiv@dividend^0,f,c
 15033  005D30  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 15034  005D32  5A21               	subwfb	(___lwdiv@dividend+1)^0,f,c
 15035  005D34  8025               	bsf	___lwdiv@quotient^0,0,c
 15036  005D36                     l8782:
 15037  005D36  90D8               	bcf	status,0,c
 15038  005D38  3223               	rrcf	(___lwdiv@divisor+1)^0,f,c
 15039  005D3A  3222               	rrcf	___lwdiv@divisor^0,f,c
 15040  005D3C  2E24               	decfsz	___lwdiv@counter^0,f,c
 15041  005D3E  EF88  F02E         	goto	l8774
 15042  005D42                     l1309:
 15043  005D42  C025  F020         	movff	___lwdiv@quotient,?___lwdiv
 15044  005D46  C026  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15045  005D4A  0012               	return		;funcret
 15046  005D4C                     __end_of___lwdiv:
 15047                           	callstack 0
 15048                           
 15049 ;; *************** function _RGB2LCD *****************
 15050 ;; Defined at:
 15051 ;;		line 799 in file "libraries/lcd_highlevel.c"
 15052 ;; Parameters:    Size  Location     Type
 15053 ;;  colorTableEn    2   17[COMRAM] PTR unsigned char 
 15054 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 15055 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 15056 ;; Auto vars:     Size  Location     Type
 15057 ;;  color           2   29[COMRAM] unsigned short 
 15058 ;;  blue            2   27[COMRAM] unsigned short 
 15059 ;;  green           2   25[COMRAM] unsigned short 
 15060 ;;  red             2   23[COMRAM] unsigned short 
 15061 ;; Return value:  Size  Location     Type
 15062 ;;                  2   17[COMRAM] unsigned short 
 15063 ;; Registers used:
 15064 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 15065 ;; Tracked objects:
 15066 ;;		On entry : 0/0
 15067 ;;		On exit  : 0/0
 15068 ;;		Unchanged: 0/0
 15069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15070 ;;      Params:         2       0       0       0       0       0       0
 15071 ;;      Locals:         8       0       0       0       0       0       0
 15072 ;;      Temps:          4       0       0       0       0       0       0
 15073 ;;      Totals:        14       0       0       0       0       0       0
 15074 ;;Total ram usage:       14 bytes
 15075 ;; Hardware stack levels used: 1
 15076 ;; Hardware stack levels required when called: 4
 15077 ;; This function calls:
 15078 ;;		Nothing
 15079 ;; This function is called by:
 15080 ;;		_LCD_Bitmap
 15081 ;; This function uses a non-reentrant model
 15082 ;;
 15083                           
 15084                           	psect	text54
 15085  0053AE                     __ptext54:
 15086                           	callstack 0
 15087  0053AE                     _RGB2LCD:
 15088                           	callstack 19
 15089  0053AE                     
 15090                           ;libraries/lcd_highlevel.c: 799: uint16_t RGB2LCD(uint8_t * colorTableEntry);libraries/l
      +                          cd_highlevel.c: 800: {;libraries/lcd_highlevel.c: 801:     uint16_t red,green,blue;;libr
      +                          aries/lcd_highlevel.c: 802:     uint16_t color;;libraries/lcd_highlevel.c: 804:     red 
      +                          = colorTableEntry[2] >> 3;
 15091  0053AE  0E02               	movlw	2
 15092  0053B0  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 15093  0053B2  6E14               	movwf	??_RGB2LCD^0,c
 15094  0053B4  0E00               	movlw	0
 15095  0053B6  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 15096  0053B8  6E15               	movwf	(??_RGB2LCD+1)^0,c
 15097  0053BA  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 15098  0053BE  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 15099  0053C2                     	if	0	;tblptru may be non-zero
 15100  0053C2                     	endif
 15101  0053C2                     	if	0	;tblptru may be non-zero
 15102  0053C2                     	endif
 15103  0053C2  0008               	tblrd		*
 15104  0053C4  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 15105  0053C8  90D8               	bcf	status,0,c
 15106  0053CA  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15107  0053CC  90D8               	bcf	status,0,c
 15108  0053CE  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15109  0053D0  90D8               	bcf	status,0,c
 15110  0053D2  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15111  0053D4  5016               	movf	(??_RGB2LCD+2)^0,w,c
 15112  0053D6  6E18               	movwf	RGB2LCD@red^0,c
 15113  0053D8  6A19               	clrf	(RGB2LCD@red+1)^0,c
 15114                           
 15115                           ;libraries/lcd_highlevel.c: 805:     green = colorTableEntry[1] >> 2;
 15116  0053DA  0E01               	movlw	1
 15117  0053DC  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 15118  0053DE  6E14               	movwf	??_RGB2LCD^0,c
 15119  0053E0  0E00               	movlw	0
 15120  0053E2  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 15121  0053E4  6E15               	movwf	(??_RGB2LCD+1)^0,c
 15122  0053E6  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 15123  0053EA  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 15124  0053EE                     	if	0	;tblptru may be non-zero
 15125  0053EE                     	endif
 15126  0053EE                     	if	0	;tblptru may be non-zero
 15127  0053EE                     	endif
 15128  0053EE  0008               	tblrd		*
 15129  0053F0  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 15130  0053F4  90D8               	bcf	status,0,c
 15131  0053F6  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15132  0053F8  90D8               	bcf	status,0,c
 15133  0053FA  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15134  0053FC  5016               	movf	(??_RGB2LCD+2)^0,w,c
 15135  0053FE  6E1A               	movwf	RGB2LCD@green^0,c
 15136  005400  6A1B               	clrf	(RGB2LCD@green+1)^0,c
 15137                           
 15138                           ;libraries/lcd_highlevel.c: 806:     blue = colorTableEntry[0] >> 3;
 15139  005402  C012  FFF6         	movff	RGB2LCD@colorTableEntry,tblptrl
 15140  005406  C013  FFF7         	movff	RGB2LCD@colorTableEntry+1,tblptrh
 15141  00540A                     	if	0	;tblptru may be non-zero
 15142  00540A                     	endif
 15143  00540A                     	if	0	;tblptru may be non-zero
 15144  00540A                     	endif
 15145  00540A  0008               	tblrd		*
 15146  00540C  CFF5 F014          	movff	tablat,??_RGB2LCD
 15147  005410  90D8               	bcf	status,0,c
 15148  005412  3214               	rrcf	??_RGB2LCD^0,f,c
 15149  005414  90D8               	bcf	status,0,c
 15150  005416  3214               	rrcf	??_RGB2LCD^0,f,c
 15151  005418  90D8               	bcf	status,0,c
 15152  00541A  3214               	rrcf	??_RGB2LCD^0,f,c
 15153  00541C  5014               	movf	??_RGB2LCD^0,w,c
 15154  00541E  6E1C               	movwf	RGB2LCD@blue^0,c
 15155  005420  6A1D               	clrf	(RGB2LCD@blue+1)^0,c
 15156  005422                     
 15157                           ;libraries/lcd_highlevel.c: 807:     color = (red << 11) | (green << 5) | (blue << 0);
 15158  005422  C01A  F014         	movff	RGB2LCD@green,??_RGB2LCD
 15159  005426  C01B  F015         	movff	RGB2LCD@green+1,??_RGB2LCD+1
 15160  00542A  0E05               	movlw	5
 15161  00542C                     u6055:
 15162  00542C  90D8               	bcf	status,0,c
 15163  00542E  3614               	rlcf	??_RGB2LCD^0,f,c
 15164  005430  3615               	rlcf	(??_RGB2LCD+1)^0,f,c
 15165  005432  2EE8               	decfsz	wreg,f,c
 15166  005434  EF16  F02A         	goto	u6055
 15167  005438  C018  F016         	movff	RGB2LCD@red,??_RGB2LCD+2
 15168  00543C  C019  F017         	movff	RGB2LCD@red+1,??_RGB2LCD+3
 15169  005440  0E0B               	movlw	11
 15170  005442                     u6065:
 15171  005442  90D8               	bcf	status,0,c
 15172  005444  3616               	rlcf	(??_RGB2LCD+2)^0,f,c
 15173  005446  3617               	rlcf	(??_RGB2LCD+3)^0,f,c
 15174  005448  2EE8               	decfsz	wreg,f,c
 15175  00544A  EF21  F02A         	goto	u6065
 15176  00544E  5014               	movf	??_RGB2LCD^0,w,c
 15177  005450  1216               	iorwf	(??_RGB2LCD+2)^0,f,c
 15178  005452  5015               	movf	(??_RGB2LCD+1)^0,w,c
 15179  005454  1217               	iorwf	(??_RGB2LCD+3)^0,f,c
 15180  005456  501C               	movf	RGB2LCD@blue^0,w,c
 15181  005458  1016               	iorwf	(??_RGB2LCD+2)^0,w,c
 15182  00545A  6E1E               	movwf	RGB2LCD@color^0,c
 15183  00545C  501D               	movf	(RGB2LCD@blue+1)^0,w,c
 15184  00545E  1017               	iorwf	(??_RGB2LCD+3)^0,w,c
 15185  005460  6E1F               	movwf	(RGB2LCD@color+1)^0,c
 15186  005462                     
 15187                           ;libraries/lcd_highlevel.c: 808:     return color;
 15188  005462  C01E  F012         	movff	RGB2LCD@color,?_RGB2LCD
 15189  005466  C01F  F013         	movff	RGB2LCD@color+1,?_RGB2LCD+1
 15190  00546A  0012               	return		;funcret
 15191  00546C                     __end_of_RGB2LCD:
 15192                           	callstack 0
 15193                           
 15194 ;; *************** function _Menu_inGameDraw *****************
 15195 ;; Defined at:
 15196 ;;		line 19 in file "class/menu.c"
 15197 ;; Parameters:    Size  Location     Type
 15198 ;;  g               2   50[BANK0 ] PTR struct GameParameter
 15199 ;;		 -> g1(239), 
 15200 ;; Auto vars:     Size  Location     Type
 15201 ;;		None
 15202 ;; Return value:  Size  Location     Type
 15203 ;;                  1    wreg      void 
 15204 ;; Registers used:
 15205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15206 ;; Tracked objects:
 15207 ;;		On entry : 0/0
 15208 ;;		On exit  : 0/0
 15209 ;;		Unchanged: 0/0
 15210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15211 ;;      Params:         0       2       0       0       0       0       0
 15212 ;;      Locals:         0       0       0       0       0       0       0
 15213 ;;      Temps:          0       0       0       0       0       0       0
 15214 ;;      Totals:         0       2       0       0       0       0       0
 15215 ;;Total ram usage:        2 bytes
 15216 ;; Hardware stack levels used: 1
 15217 ;; Hardware stack levels required when called: 13
 15218 ;; This function calls:
 15219 ;;		_Ball_draw
 15220 ;;		_LCD_Fill
 15221 ;;		_Paddle_draw
 15222 ;;		_Score_draw
 15223 ;; This function is called by:
 15224 ;;		_displaySM
 15225 ;; This function uses a non-reentrant model
 15226 ;;
 15227                           
 15228                           	psect	text55
 15229  006004                     __ptext55:
 15230                           	callstack 0
 15231  006004                     _Menu_inGameDraw:
 15232                           	callstack 15
 15233  006004                     
 15234                           ;class/menu.c: 19: void Menu_inGameDraw(GameParameters* g);class/menu.c: 20: {;class/men
      +                          u.c: 21:     LCD_Fill(0b0000000000000000);
 15235  006004  0E00               	movlw	0
 15236  006006  6E13               	movwf	(LCD_Fill@color+1)^0,c
 15237  006008  0E00               	movlw	0
 15238  00600A  6E12               	movwf	LCD_Fill@color^0,c
 15239  00600C  EC76  F029         	call	_LCD_Fill	;wreg free
 15240  006010                     
 15241                           ;class/menu.c: 22:     Score_draw(&g->s1);
 15242  006010  0EE9               	movlw	233
 15243  006012  0100               	movlb	0	; () banked
 15244  006014  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15245  006016  6F90               	movwf	Score_draw@s& (0+255),b
 15246  006018  0E00               	movlw	0
 15247  00601A  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15248  00601C  6F91               	movwf	(Score_draw@s+1)& (0+255),b
 15249  00601E  EC81  F027         	call	_Score_draw	;wreg free
 15250  006022                     
 15251                           ;class/menu.c: 23:     Paddle_draw(&g->p1);
 15252  006022  0ED5               	movlw	213
 15253  006024  0100               	movlb	0	; () banked
 15254  006026  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15255  006028  6E25               	movwf	Paddle_draw@p^0,c
 15256  00602A  0E00               	movlw	0
 15257  00602C  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15258  00602E  6E26               	movwf	(Paddle_draw@p+1)^0,c
 15259  006030  EC92  F021         	call	_Paddle_draw	;wreg free
 15260  006034                     
 15261                           ;class/menu.c: 24:     Paddle_draw(&g->p2);
 15262  006034  0EDF               	movlw	223
 15263  006036  0100               	movlb	0	; () banked
 15264  006038  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15265  00603A  6E25               	movwf	Paddle_draw@p^0,c
 15266  00603C  0E00               	movlw	0
 15267  00603E  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15268  006040  6E26               	movwf	(Paddle_draw@p+1)^0,c
 15269  006042  EC92  F021         	call	_Paddle_draw	;wreg free
 15270  006046                     
 15271                           ;class/menu.c: 25:     Ball_draw(&g->b);
 15272  006046  0EC9               	movlw	201
 15273  006048  0100               	movlb	0	; () banked
 15274  00604A  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15275  00604C  6E25               	movwf	Ball_draw@b^0,c
 15276  00604E  0E00               	movlw	0
 15277  006050  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15278  006052  6E26               	movwf	(Ball_draw@b+1)^0,c
 15279  006054  EC46  F020         	call	_Ball_draw	;wreg free
 15280  006058  0012               	return		;funcret
 15281  00605A                     __end_of_Menu_inGameDraw:
 15282                           	callstack 0
 15283                           
 15284 ;; *************** function _Score_draw *****************
 15285 ;; Defined at:
 15286 ;;		line 16 in file "class/score.c"
 15287 ;; Parameters:    Size  Location     Type
 15288 ;;  s               2   48[BANK0 ] PTR struct Score
 15289 ;;		 -> g1(239), 
 15290 ;; Auto vars:     Size  Location     Type
 15291 ;;		None
 15292 ;; Return value:  Size  Location     Type
 15293 ;;                  1    wreg      void 
 15294 ;; Registers used:
 15295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15296 ;; Tracked objects:
 15297 ;;		On entry : 0/0
 15298 ;;		On exit  : 0/0
 15299 ;;		Unchanged: 0/0
 15300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15301 ;;      Params:         0       2       0       0       0       0       0
 15302 ;;      Locals:         0       0       0       0       0       0       0
 15303 ;;      Temps:          0       0       0       0       0       0       0
 15304 ;;      Totals:         0       2       0       0       0       0       0
 15305 ;;Total ram usage:        2 bytes
 15306 ;; Hardware stack levels used: 1
 15307 ;; Hardware stack levels required when called: 12
 15308 ;; This function calls:
 15309 ;;		_LCD_DrawText
 15310 ;;		_sprintf
 15311 ;; This function is called by:
 15312 ;;		_Menu_inGameDraw
 15313 ;;		_displayController
 15314 ;; This function uses a non-reentrant model
 15315 ;;
 15316                           
 15317                           	psect	text56
 15318  004F02                     __ptext56:
 15319                           	callstack 0
 15320  004F02                     _Score_draw:
 15321                           	callstack 14
 15322  004F02                     
 15323                           ;class/score.c: 16: void Score_draw(struct Score* s);class/score.c: 17: {;class/score.c:
      +                           18:     sprintf(s->str,"%d",s->homeScore);
 15324  004F02  0E04               	movlw	4
 15325  004F04  0100               	movlb	0	; () banked
 15326  004F06  2590               	addwf	Score_draw@s& (0+255),w,b
 15327  004F08  6F82               	movwf	sprintf@s& (0+255),b
 15328  004F0A  0E00               	movlw	0
 15329  004F0C  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15330  004F0E  6F83               	movwf	(sprintf@s+1)& (0+255),b
 15331  004F10  0EEE               	movlw	low (STR_15+3)
 15332  004F12  6F84               	movwf	sprintf@fmt& (0+255),b
 15333  004F14  0E7F               	movlw	high (STR_15+3)
 15334  004F16  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
 15335  004F18  C090  FFD9         	movff	Score_draw@s,fsr2l
 15336  004F1C  C091  FFDA         	movff	Score_draw@s+1,fsr2h
 15337  004F20  CFDE F086          	movff	postinc2,?_sprintf+4
 15338  004F24  CFDD F087          	movff	postdec2,?_sprintf+5
 15339  004F28  EC2D  F030         	call	_sprintf	;wreg free
 15340  004F2C                     
 15341                           ;class/score.c: 19:     LCD_DrawText(s->str,&arialNarrow_12ptFontInfo,A_LEFT,0,0,0b11111
      +                          11111111111,0b0000000000000000);
 15342  004F2C  0E04               	movlw	4
 15343  004F2E  0100               	movlb	0	; () banked
 15344  004F30  2590               	addwf	Score_draw@s& (0+255),w,b
 15345  004F32  6E20               	movwf	LCD_DrawText@msg^0,c
 15346  004F34  0E00               	movlw	0
 15347  004F36  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15348  004F38  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 15349  004F3A  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 15350  004F3C  6E22               	movwf	LCD_DrawText@font^0,c
 15351  004F3E  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 15352  004F40  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 15353  004F42  0E00               	movlw	0
 15354  004F44  6E24               	movwf	LCD_DrawText@align^0,c
 15355  004F46  0E00               	movlw	0
 15356  004F48  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15357  004F4A  0E00               	movlw	0
 15358  004F4C  6E25               	movwf	LCD_DrawText@posX^0,c
 15359  004F4E  0E00               	movlw	0
 15360  004F50  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 15361  004F52  0E00               	movlw	0
 15362  004F54  6E27               	movwf	LCD_DrawText@posY^0,c
 15363  004F56  0EFF               	movlw	255
 15364  004F58  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 15365  004F5A  6829               	setf	LCD_DrawText@color^0,c
 15366  004F5C  0E00               	movlw	0
 15367  004F5E  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 15368  004F60  0E00               	movlw	0
 15369  004F62  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 15370  004F64  ECDB  F00E         	call	_LCD_DrawText	;wreg free
 15371  004F68                     
 15372                           ;class/score.c: 20:     sprintf(s->str,"%d",s->awayScore);
 15373  004F68  0E04               	movlw	4
 15374  004F6A  0100               	movlb	0	; () banked
 15375  004F6C  2590               	addwf	Score_draw@s& (0+255),w,b
 15376  004F6E  6F82               	movwf	sprintf@s& (0+255),b
 15377  004F70  0E00               	movlw	0
 15378  004F72  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15379  004F74  6F83               	movwf	(sprintf@s+1)& (0+255),b
 15380  004F76  0EEE               	movlw	low (STR_15+3)
 15381  004F78  6F84               	movwf	sprintf@fmt& (0+255),b
 15382  004F7A  0E7F               	movlw	high (STR_15+3)
 15383  004F7C  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
 15384  004F7E  EE20 F002          	lfsr	2,2
 15385  004F82  5190               	movf	Score_draw@s& (0+255),w,b
 15386  004F84  26D9               	addwf	fsr2l,f,c
 15387  004F86  5191               	movf	(Score_draw@s+1)& (0+255),w,b
 15388  004F88  22DA               	addwfc	fsr2h,f,c
 15389  004F8A  CFDE F086          	movff	postinc2,?_sprintf+4
 15390  004F8E  CFDD F087          	movff	postdec2,?_sprintf+5
 15391  004F92  EC2D  F030         	call	_sprintf	;wreg free
 15392                           
 15393                           ;class/score.c: 21:     LCD_DrawText(s->str,&arialNarrow_12ptFontInfo,A_RIGHT,239,0,0b11
      +                          11111111111111,0b0000000000000000);
 15394  004F96  0E04               	movlw	4
 15395  004F98  0100               	movlb	0	; () banked
 15396  004F9A  2590               	addwf	Score_draw@s& (0+255),w,b
 15397  004F9C  6E20               	movwf	LCD_DrawText@msg^0,c
 15398  004F9E  0E00               	movlw	0
 15399  004FA0  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15400  004FA2  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 15401  004FA4  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 15402  004FA6  6E22               	movwf	LCD_DrawText@font^0,c
 15403  004FA8  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 15404  004FAA  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 15405  004FAC  0E01               	movlw	1
 15406  004FAE  6E24               	movwf	LCD_DrawText@align^0,c
 15407  004FB0  0E00               	movlw	0
 15408  004FB2  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15409  004FB4  0EEF               	movlw	239
 15410  004FB6  6E25               	movwf	LCD_DrawText@posX^0,c
 15411  004FB8  0E00               	movlw	0
 15412  004FBA  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 15413  004FBC  0E00               	movlw	0
 15414  004FBE  6E27               	movwf	LCD_DrawText@posY^0,c
 15415  004FC0  0EFF               	movlw	255
 15416  004FC2  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 15417  004FC4  6829               	setf	LCD_DrawText@color^0,c
 15418  004FC6  0E00               	movlw	0
 15419  004FC8  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 15420  004FCA  0E00               	movlw	0
 15421  004FCC  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 15422  004FCE  ECDB  F00E         	call	_LCD_DrawText	;wreg free
 15423  004FD2  0012               	return		;funcret
 15424  004FD4                     __end_of_Score_draw:
 15425                           	callstack 0
 15426                           
 15427 ;; *************** function _sprintf *****************
 15428 ;; Defined at:
 15429 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
 15430 ;; Parameters:    Size  Location     Type
 15431 ;;  s               2   34[BANK0 ] PTR unsigned char 
 15432 ;;		 -> touchScreenController@s(20), g1(239), 
 15433 ;;  fmt             2   36[BANK0 ] PTR const unsigned char 
 15434 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15435 ;; Auto vars:     Size  Location     Type
 15436 ;;  f               6   42[BANK0 ] struct _IO_FILE
 15437 ;;  ap              2   40[BANK0 ] PTR void [1]
 15438 ;;		 -> ?_sprintf(2), 
 15439 ;;  ret             2    0        int 
 15440 ;; Return value:  Size  Location     Type
 15441 ;;                  2   34[BANK0 ] int 
 15442 ;; Registers used:
 15443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15444 ;; Tracked objects:
 15445 ;;		On entry : 0/0
 15446 ;;		On exit  : 0/0
 15447 ;;		Unchanged: 0/0
 15448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15449 ;;      Params:         0       6       0       0       0       0       0
 15450 ;;      Locals:         0       8       0       0       0       0       0
 15451 ;;      Temps:          0       0       0       0       0       0       0
 15452 ;;      Totals:         0      14       0       0       0       0       0
 15453 ;;Total ram usage:       14 bytes
 15454 ;; Hardware stack levels used: 1
 15455 ;; Hardware stack levels required when called: 11
 15456 ;; This function calls:
 15457 ;;		_vfprintf
 15458 ;; This function is called by:
 15459 ;;		_Score_draw
 15460 ;;		_touchScreenController
 15461 ;; This function uses a non-reentrant model
 15462 ;;
 15463                           
 15464                           	psect	text57
 15465  00605A                     __ptext57:
 15466                           	callstack 0
 15467  00605A                     _sprintf:
 15468                           	callstack 14
 15469  00605A  0E86               	movlw	low (?_sprintf+4)
 15470  00605C  0100               	movlb	0	; () banked
 15471  00605E  6F88               	movwf	sprintf@ap& (0+255),b
 15472  006060  0E00               	movlw	high (?_sprintf+4)
 15473  006062  6F89               	movwf	(sprintf@ap+1)& (0+255),b
 15474  006064  C082  F08A         	movff	sprintf@s,sprintf@f
 15475  006068  C083  F08B         	movff	sprintf@s+1,sprintf@f+1
 15476  00606C                     
 15477                           ; BSR set to: 0
 15478  00606C  0E00               	movlw	0
 15479  00606E  6F8D               	movwf	(sprintf@f+3)& (0+255),b
 15480  006070  0E00               	movlw	0
 15481  006072  6F8C               	movwf	(sprintf@f+2)& (0+255),b
 15482  006074                     
 15483                           ; BSR set to: 0
 15484  006074  0E00               	movlw	0
 15485  006076  6F8F               	movwf	(sprintf@f+5)& (0+255),b
 15486  006078  0E00               	movlw	0
 15487  00607A  6F8E               	movwf	(sprintf@f+4)& (0+255),b
 15488  00607C                     
 15489                           ; BSR set to: 0
 15490  00607C  0E8A               	movlw	low sprintf@f
 15491  00607E  6F7A               	movwf	vfprintf@fp& (0+255),b
 15492  006080  0E00               	movlw	high sprintf@f
 15493  006082  6F7B               	movwf	(vfprintf@fp+1)& (0+255),b
 15494  006084  C084  F07C         	movff	sprintf@fmt,vfprintf@fmt
 15495  006088  C085  F07D         	movff	sprintf@fmt+1,vfprintf@fmt+1
 15496  00608C  0E88               	movlw	low sprintf@ap
 15497  00608E  6F7E               	movwf	vfprintf@ap& (0+255),b
 15498  006090  0E00               	movlw	high sprintf@ap
 15499  006092  6F7F               	movwf	(vfprintf@ap+1)& (0+255),b
 15500  006094  EC76  F02F         	call	_vfprintf	;wreg free
 15501  006098  0100               	movlb	0	; () banked
 15502  00609A  518C               	movf	(sprintf@f+2)& (0+255),w,b
 15503  00609C  2582               	addwf	sprintf@s& (0+255),w,b
 15504  00609E  6ED9               	movwf	fsr2l,c
 15505  0060A0  518D               	movf	(sprintf@f+3)& (0+255),w,b
 15506  0060A2  2183               	addwfc	(sprintf@s+1)& (0+255),w,b
 15507  0060A4  6EDA               	movwf	fsr2h,c
 15508  0060A6  0E00               	movlw	0
 15509  0060A8  6EDF               	movwf	indf2,c
 15510  0060AA                     
 15511                           ; BSR set to: 0
 15512  0060AA  0012               	return		;funcret
 15513  0060AC                     __end_of_sprintf:
 15514                           	callstack 0
 15515                           
 15516 ;; *************** function _vfprintf *****************
 15517 ;; Defined at:
 15518 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15519 ;; Parameters:    Size  Location     Type
 15520 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
 15521 ;;		 -> sprintf@f(6), 
 15522 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
 15523 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15524 ;;  ap              2   30[BANK0 ] PTR PTR void 
 15525 ;;		 -> sprintf@ap(2), 
 15526 ;; Auto vars:     Size  Location     Type
 15527 ;;  cfmt            2   32[BANK0 ] PTR unsigned char 
 15528 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15529 ;; Return value:  Size  Location     Type
 15530 ;;                  2   26[BANK0 ] int 
 15531 ;; Registers used:
 15532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15533 ;; Tracked objects:
 15534 ;;		On entry : 0/0
 15535 ;;		On exit  : 0/0
 15536 ;;		Unchanged: 0/0
 15537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15538 ;;      Params:         0       6       0       0       0       0       0
 15539 ;;      Locals:         0       2       0       0       0       0       0
 15540 ;;      Temps:          0       0       0       0       0       0       0
 15541 ;;      Totals:         0       8       0       0       0       0       0
 15542 ;;Total ram usage:        8 bytes
 15543 ;; Hardware stack levels used: 1
 15544 ;; Hardware stack levels required when called: 10
 15545 ;; This function calls:
 15546 ;;		_vfpfcnvrt
 15547 ;; This function is called by:
 15548 ;;		_sprintf
 15549 ;; This function uses a non-reentrant model
 15550 ;;
 15551                           
 15552                           	psect	text58
 15553  005EEC                     __ptext58:
 15554                           	callstack 0
 15555  005EEC                     _vfprintf:
 15556                           	callstack 14
 15557  005EEC                     
 15558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 15559  005EEC  C07C  F080         	movff	vfprintf@fmt,vfprintf@cfmt
 15560  005EF0  C07D  F081         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 15561  005EF4                     
 15562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 15563  005EF4  0E00               	movlw	0
 15564  005EF6  0100               	movlb	0	; () banked
 15565  005EF8  6FDC               	movwf	(_nout+1)& (0+255),b
 15566  005EFA  0E00               	movlw	0
 15567  005EFC  6FDB               	movwf	_nout& (0+255),b
 15568                           
 15569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 15570  005EFE  EF94  F02F         	goto	l9414
 15571  005F02                     l9412:
 15572                           
 15573                           ; BSR set to: 0
 15574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 15575  005F02  C07A  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
 15576  005F06  C07B  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 15577  005F0A  0E80               	movlw	low vfprintf@cfmt
 15578  005F0C  6E41               	movwf	vfpfcnvrt@fmt^0,c
 15579  005F0E  0E00               	movlw	high vfprintf@cfmt
 15580  005F10  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
 15581  005F12  C07E  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
 15582  005F16  C07F  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 15583  005F1A  ECF6  F01D         	call	_vfpfcnvrt	;wreg free
 15584  005F1E  503F               	movf	?_vfpfcnvrt^0,w,c
 15585  005F20  0100               	movlb	0	; () banked
 15586  005F22  27DB               	addwf	_nout& (0+255),f,b
 15587  005F24  5040               	movf	(?_vfpfcnvrt+1)^0,w,c
 15588  005F26  23DC               	addwfc	(_nout+1)& (0+255),f,b
 15589  005F28                     l9414:
 15590                           
 15591                           ; BSR set to: 0
 15592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 15593  005F28  C080  FFF6         	movff	vfprintf@cfmt,tblptrl
 15594  005F2C  C081  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 15595  005F30                     	if	0	;tblptru may be non-zero
 15596  005F30                     	endif
 15597  005F30                     	if	0	;tblptru may be non-zero
 15598  005F30                     	endif
 15599  005F30  0008               	tblrd		*
 15600  005F32  50F5               	movf	tablat,w,c
 15601  005F34  0900               	iorlw	0
 15602  005F36  A4D8               	btfss	status,2,c
 15603  005F38  EFA0  F02F         	goto	u6611
 15604  005F3C  EFA2  F02F         	goto	u6610
 15605  005F40                     u6611:
 15606  005F40  EF81  F02F         	goto	l9412
 15607  005F44                     u6610:
 15608  005F44                     
 15609                           ; BSR set to: 0
 15610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 15611  005F44  C0DB  F07A         	movff	_nout,?_vfprintf
 15612  005F48  C0DC  F07B         	movff	_nout+1,?_vfprintf+1
 15613  005F4C                     
 15614                           ; BSR set to: 0
 15615  005F4C  0012               	return		;funcret
 15616  005F4E                     __end_of_vfprintf:
 15617                           	callstack 0
 15618                           
 15619 ;; *************** function _vfpfcnvrt *****************
 15620 ;; Defined at:
 15621 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15622 ;; Parameters:    Size  Location     Type
 15623 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
 15624 ;;		 -> sprintf@f(6), 
 15625 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
 15626 ;;		 -> vfprintf@cfmt(2), 
 15627 ;;  ap              2   66[COMRAM] PTR PTR void 
 15628 ;;		 -> sprintf@ap(2), 
 15629 ;; Auto vars:     Size  Location     Type
 15630 ;;  ll              8   18[BANK0 ] long long 
 15631 ;;  llu             8    0        unsigned long long 
 15632 ;;  f               4    0        unsigned long long 
 15633 ;;  vp              3    0        PTR void 
 15634 ;;  ct              3    0        unsigned char [3]
 15635 ;;  cp              3    0        PTR unsigned char 
 15636 ;;  i               2    0        int 
 15637 ;;  done            2    0        int 
 15638 ;;  c               1    0        unsigned char 
 15639 ;; Return value:  Size  Location     Type
 15640 ;;                  2   62[COMRAM] int 
 15641 ;; Registers used:
 15642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15643 ;; Tracked objects:
 15644 ;;		On entry : 0/0
 15645 ;;		On exit  : 0/0
 15646 ;;		Unchanged: 0/0
 15647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15648 ;;      Params:         6       0       0       0       0       0       0
 15649 ;;      Locals:         0       8       0       0       0       0       0
 15650 ;;      Temps:          2       0       0       0       0       0       0
 15651 ;;      Totals:         8       8       0       0       0       0       0
 15652 ;;Total ram usage:       16 bytes
 15653 ;; Hardware stack levels used: 1
 15654 ;; Hardware stack levels required when called: 9
 15655 ;; This function calls:
 15656 ;;		_dtoa
 15657 ;;		_fputc
 15658 ;; This function is called by:
 15659 ;;		_vfprintf
 15660 ;; This function uses a non-reentrant model
 15661 ;;
 15662                           
 15663                           	psect	text59
 15664  003BEC                     __ptext59:
 15665                           	callstack 0
 15666  003BEC                     _vfpfcnvrt:
 15667                           	callstack 14
 15668  003BEC                     
 15669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 15670  003BEC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15671  003BF0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15672  003BF4  CFDE FFF6          	movff	postinc2,tblptrl
 15673  003BF8  CFDD FFF7          	movff	postdec2,tblptrh
 15674  003BFC                     	if	0	;tblptru may be non-zero
 15675  003BFC                     	endif
 15676  003BFC                     	if	0	;tblptru may be non-zero
 15677  003BFC                     	endif
 15678  003BFC  0008               	tblrd		*
 15679  003BFE  50F5               	movf	tablat,w,c
 15680  003C00  0A25               	xorlw	37
 15681  003C02  A4D8               	btfss	status,2,c
 15682  003C04  EF06  F01E         	goto	u6271
 15683  003C08  EF08  F01E         	goto	u6270
 15684  003C0C                     u6271:
 15685  003C0C  EFB4  F01E         	goto	l8836
 15686  003C10                     u6270:
 15687  003C10                     
 15688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 15689  003C10  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15690  003C14  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15691  003C18  2ADE               	incf	postinc2,f,c
 15692  003C1A  0E00               	movlw	0
 15693  003C1C  22DD               	addwfc	postdec2,f,c
 15694  003C1E                     
 15695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 15696  003C1E  0E00               	movlw	0
 15697  003C20  6E48               	movwf	(_width+1)^0,c
 15698  003C22  0E00               	movlw	0
 15699  003C24  6E47               	movwf	_width^0,c
 15700  003C26  C047  F04B         	movff	_width,_flags
 15701  003C2A  C048  F04C         	movff	_width+1,_flags+1
 15702  003C2E                     
 15703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 15704  003C2E  6849               	setf	_prec^0,c
 15705  003C30  684A               	setf	(_prec+1)^0,c
 15706  003C32                     
 15707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 15708  003C32  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15709  003C36  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15710  003C3A  CFDE FFF6          	movff	postinc2,tblptrl
 15711  003C3E  CFDD FFF7          	movff	postdec2,tblptrh
 15712  003C42                     	if	0	;tblptru may be non-zero
 15713  003C42                     	endif
 15714  003C42                     	if	0	;tblptru may be non-zero
 15715  003C42                     	endif
 15716  003C42  0008               	tblrd		*
 15717  003C44  50F5               	movf	tablat,w,c
 15718  003C46  0A64               	xorlw	100
 15719  003C48  B4D8               	btfsc	status,2,c
 15720  003C4A  EF29  F01E         	goto	u6281
 15721  003C4E  EF2B  F01E         	goto	u6280
 15722  003C52                     u6281:
 15723  003C52  EF3D  F01E         	goto	l8814
 15724  003C56                     u6280:
 15725  003C56  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15726  003C5A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15727  003C5E  CFDE FFF6          	movff	postinc2,tblptrl
 15728  003C62  CFDD FFF7          	movff	postdec2,tblptrh
 15729  003C66                     	if	0	;tblptru may be non-zero
 15730  003C66                     	endif
 15731  003C66                     	if	0	;tblptru may be non-zero
 15732  003C66                     	endif
 15733  003C66  0008               	tblrd		*
 15734  003C68  50F5               	movf	tablat,w,c
 15735  003C6A  0A69               	xorlw	105
 15736  003C6C  A4D8               	btfss	status,2,c
 15737  003C6E  EF3B  F01E         	goto	u6291
 15738  003C72  EF3D  F01E         	goto	u6290
 15739  003C76                     u6291:
 15740  003C76  EF7E  F01E         	goto	l8820
 15741  003C7A                     u6290:
 15742  003C7A                     l8814:
 15743                           
 15744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 15745  003C7A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15746  003C7E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15747  003C82  2ADE               	incf	postinc2,f,c
 15748  003C84  0E00               	movlw	0
 15749  003C86  22DD               	addwfc	postdec2,f,c
 15750                           
 15751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 15752  003C88  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15753  003C8C  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15754  003C90  CFDF F045          	movff	indf2,??_vfpfcnvrt
 15755  003C94  0E02               	movlw	2
 15756  003C96  26DE               	addwf	postinc2,f,c
 15757  003C98  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
 15758  003C9C  0E00               	movlw	0
 15759  003C9E  22DD               	addwfc	postdec2,f,c
 15760  003CA0  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15761  003CA4  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15762  003CA8  CFDE F072          	movff	postinc2,vfpfcnvrt@ll
 15763  003CAC  CFDD F073          	movff	postdec2,vfpfcnvrt@ll+1
 15764  003CB0  0100               	movlb	0	; () banked
 15765  003CB2  0E00               	movlw	0
 15766  003CB4  BF73               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 15767  003CB6  0EFF               	movlw	-1
 15768  003CB8  6F74               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 15769  003CBA  6F75               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 15770  003CBC  6F76               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 15771  003CBE  6F77               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 15772  003CC0  6F78               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 15773  003CC2  6F79               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 15774  003CC4                     
 15775                           ; BSR set to: 0
 15776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 15777  003CC4  C03F  F02D         	movff	vfpfcnvrt@fp,dtoa@fp
 15778  003CC8  C040  F02E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 15779  003CCC  C072  F02F         	movff	vfpfcnvrt@ll,dtoa@d
 15780  003CD0  C073  F030         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 15781  003CD4  C074  F031         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 15782  003CD8  C075  F032         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 15783  003CDC  C076  F033         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 15784  003CE0  C077  F034         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 15785  003CE4  C078  F035         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 15786  003CE8  C079  F036         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 15787  003CEC  EC06  F018         	call	_dtoa	;wreg free
 15788  003CF0  C02D  F03F         	movff	?_dtoa,?_vfpfcnvrt
 15789  003CF4  C02E  F040         	movff	?_dtoa+1,?_vfpfcnvrt+1
 15790  003CF8  EFCF  F01E         	goto	l1561
 15791  003CFC                     l8820:
 15792                           
 15793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 15794  003CFC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15795  003D00  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15796  003D04  CFDE FFF6          	movff	postinc2,tblptrl
 15797  003D08  CFDD FFF7          	movff	postdec2,tblptrh
 15798  003D0C                     	if	0	;tblptru may be non-zero
 15799  003D0C                     	endif
 15800  003D0C                     	if	0	;tblptru may be non-zero
 15801  003D0C                     	endif
 15802  003D0C  0008               	tblrd		*
 15803  003D0E  50F5               	movf	tablat,w,c
 15804  003D10  0A25               	xorlw	37
 15805  003D12  A4D8               	btfss	status,2,c
 15806  003D14  EF8E  F01E         	goto	u6301
 15807  003D18  EF90  F01E         	goto	u6300
 15808  003D1C                     u6301:
 15809  003D1C  EFA7  F01E         	goto	l8830
 15810  003D20                     u6300:
 15811  003D20                     
 15812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 15813  003D20  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15814  003D24  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15815  003D28  2ADE               	incf	postinc2,f,c
 15816  003D2A  0E00               	movlw	0
 15817  003D2C  22DD               	addwfc	postdec2,f,c
 15818  003D2E                     
 15819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 15820  003D2E  0E00               	movlw	0
 15821  003D30  6E13               	movwf	(fputc@c+1)^0,c
 15822  003D32  0E25               	movlw	37
 15823  003D34  6E12               	movwf	fputc@c^0,c
 15824  003D36  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
 15825  003D3A  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 15826  003D3E  ECEA  F027         	call	_fputc	;wreg free
 15827  003D42                     l8826:
 15828                           
 15829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 15830  003D42  0E00               	movlw	0
 15831  003D44  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
 15832  003D46  0E01               	movlw	1
 15833  003D48  6E3F               	movwf	?_vfpfcnvrt^0,c
 15834  003D4A  EFCF  F01E         	goto	l1561
 15835  003D4E                     l8830:
 15836                           
 15837                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 15838  003D4E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15839  003D52  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15840  003D56  2ADE               	incf	postinc2,f,c
 15841  003D58  0E00               	movlw	0
 15842  003D5A  22DD               	addwfc	postdec2,f,c
 15843  003D5C                     
 15844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 15845  003D5C  0E00               	movlw	0
 15846  003D5E  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
 15847  003D60  0E00               	movlw	0
 15848  003D62  6E3F               	movwf	?_vfpfcnvrt^0,c
 15849  003D64  EFCF  F01E         	goto	l1561
 15850  003D68                     l8836:
 15851                           
 15852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 15853  003D68  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15854  003D6C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15855  003D70  CFDE FFF6          	movff	postinc2,tblptrl
 15856  003D74  CFDD FFF7          	movff	postdec2,tblptrh
 15857  003D78                     	if	0	;tblptru may be non-zero
 15858  003D78                     	endif
 15859  003D78                     	if	0	;tblptru may be non-zero
 15860  003D78                     	endif
 15861  003D78  0008               	tblrd		*
 15862  003D7A  50F5               	movf	tablat,w,c
 15863  003D7C  6E12               	movwf	fputc@c^0,c
 15864  003D7E  6A13               	clrf	(fputc@c+1)^0,c
 15865  003D80  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
 15866  003D84  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 15867  003D88  ECEA  F027         	call	_fputc	;wreg free
 15868  003D8C                     
 15869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 15870  003D8C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15871  003D90  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15872  003D94  2ADE               	incf	postinc2,f,c
 15873  003D96  0E00               	movlw	0
 15874  003D98  22DD               	addwfc	postdec2,f,c
 15875  003D9A  EFA1  F01E         	goto	l8826
 15876  003D9E                     l1561:
 15877  003D9E  0012               	return		;funcret
 15878  003DA0                     __end_of_vfpfcnvrt:
 15879                           	callstack 0
 15880                           
 15881 ;; *************** function _dtoa *****************
 15882 ;; Defined at:
 15883 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15884 ;; Parameters:    Size  Location     Type
 15885 ;;  fp              2   44[COMRAM] PTR struct _IO_FILE
 15886 ;;		 -> sprintf@f(6), 
 15887 ;;  d               8   46[COMRAM] long long 
 15888 ;; Auto vars:     Size  Location     Type
 15889 ;;  n               8    8[BANK0 ] long long 
 15890 ;;  i               2   16[BANK0 ] int 
 15891 ;;  s               2    6[BANK0 ] int 
 15892 ;;  w               2    4[BANK0 ] int 
 15893 ;;  p               2    2[BANK0 ] int 
 15894 ;; Return value:  Size  Location     Type
 15895 ;;                  2   44[COMRAM] int 
 15896 ;; Registers used:
 15897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15898 ;; Tracked objects:
 15899 ;;		On entry : 0/0
 15900 ;;		On exit  : 0/0
 15901 ;;		Unchanged: 0/0
 15902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15903 ;;      Params:        10       0       0       0       0       0       0
 15904 ;;      Locals:         0      18       0       0       0       0       0
 15905 ;;      Temps:          8       0       0       0       0       0       0
 15906 ;;      Totals:        18      18       0       0       0       0       0
 15907 ;;Total ram usage:       36 bytes
 15908 ;; Hardware stack levels used: 1
 15909 ;; Hardware stack levels required when called: 8
 15910 ;; This function calls:
 15911 ;;		___aodiv
 15912 ;;		___aomod
 15913 ;;		_abs
 15914 ;;		_pad
 15915 ;; This function is called by:
 15916 ;;		_vfpfcnvrt
 15917 ;; This function uses a non-reentrant model
 15918 ;;
 15919                           
 15920                           	psect	text60
 15921  00300C                     __ptext60:
 15922                           	callstack 0
 15923  00300C                     _dtoa:
 15924                           	callstack 14
 15925  00300C                     
 15926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 15927  00300C  C02F  F068         	movff	dtoa@d,dtoa@n
 15928  003010  C030  F069         	movff	dtoa@d+1,dtoa@n+1
 15929  003014  C031  F06A         	movff	dtoa@d+2,dtoa@n+2
 15930  003018  C032  F06B         	movff	dtoa@d+3,dtoa@n+3
 15931  00301C  C033  F06C         	movff	dtoa@d+4,dtoa@n+4
 15932  003020  C034  F06D         	movff	dtoa@d+5,dtoa@n+5
 15933  003024  C035  F06E         	movff	dtoa@d+6,dtoa@n+6
 15934  003028  C036  F06F         	movff	dtoa@d+7,dtoa@n+7
 15935  00302C                     
 15936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 15937  00302C  0100               	movlb	0	; () banked
 15938  00302E  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
 15939  003030  EF1C  F018         	goto	u5791
 15940  003034  EF1F  F018         	goto	u5790
 15941  003038                     u5791:
 15942  003038  0E01               	movlw	1
 15943  00303A  EF20  F018         	goto	u5800
 15944  00303E                     u5790:
 15945  00303E  0E00               	movlw	0
 15946  003040                     u5800:
 15947  003040  6F66               	movwf	dtoa@s& (0+255),b
 15948  003042  6B67               	clrf	(dtoa@s+1)& (0+255),b
 15949                           
 15950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 15951  003044  5166               	movf	dtoa@s& (0+255),w,b
 15952  003046  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 15953  003048  B4D8               	btfsc	status,2,c
 15954  00304A  EF29  F018         	goto	u5811
 15955  00304E  EF2B  F018         	goto	u5810
 15956  003052                     u5811:
 15957  003052  EF3B  F018         	goto	l8186
 15958  003056                     u5810:
 15959  003056                     
 15960                           ; BSR set to: 0
 15961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 15962  003056  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
 15963  003058  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
 15964  00305A  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
 15965  00305C  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
 15966  00305E  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
 15967  003060  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
 15968  003062  1F69               	comf	(dtoa@n+1)& (0+255),f,b
 15969  003064  6D68               	negf	dtoa@n& (0+255),b
 15970  003066  0E00               	movlw	0
 15971  003068  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
 15972  00306A  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
 15973  00306C  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
 15974  00306E  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
 15975  003070  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
 15976  003072  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
 15977  003074  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
 15978  003076                     l8186:
 15979                           
 15980                           ; BSR set to: 0
 15981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 15982  003076  BE4A               	btfsc	(_prec+1)^0,7,c
 15983  003078  EF40  F018         	goto	u5821
 15984  00307C  EF42  F018         	goto	u5820
 15985  003080                     u5821:
 15986  003080  EF43  F018         	goto	l8190
 15987  003084                     u5820:
 15988  003084                     
 15989                           ; BSR set to: 0
 15990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 15991  003084  924B               	bcf	_flags^0,1,c
 15992  003086                     l8190:
 15993                           
 15994                           ; BSR set to: 0
 15995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 15996  003086  BE4A               	btfsc	(_prec+1)^0,7,c
 15997  003088  EF50  F018         	goto	u5830
 15998  00308C  504A               	movf	(_prec+1)^0,w,c
 15999  00308E  E106               	bnz	u5831
 16000  003090  0449               	decf	_prec^0,w,c
 16001  003092  B0D8               	btfsc	status,0,c
 16002  003094  EF4E  F018         	goto	u5831
 16003  003098  EF50  F018         	goto	u5830
 16004  00309C                     u5831:
 16005  00309C  EF56  F018         	goto	l1534
 16006  0030A0                     u5830:
 16007  0030A0                     
 16008                           ; BSR set to: 0
 16009  0030A0  0E00               	movlw	0
 16010  0030A2  6F63               	movwf	(dtoa@p+1)& (0+255),b
 16011  0030A4  0E01               	movlw	1
 16012  0030A6  6F62               	movwf	dtoa@p& (0+255),b
 16013  0030A8  EF5A  F018         	goto	l1536
 16014  0030AC                     l1534:
 16015                           
 16016                           ; BSR set to: 0
 16017  0030AC  C049  F062         	movff	_prec,dtoa@p
 16018  0030B0  C04A  F063         	movff	_prec+1,dtoa@p+1
 16019  0030B4                     l1536:
 16020                           
 16021                           ; BSR set to: 0
 16022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 16023  0030B4  C047  F064         	movff	_width,dtoa@w
 16024  0030B8  C048  F065         	movff	_width+1,dtoa@w+1
 16025  0030BC                     
 16026                           ; BSR set to: 0
 16027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 16028  0030BC  5166               	movf	dtoa@s& (0+255),w,b
 16029  0030BE  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 16030  0030C0  A4D8               	btfss	status,2,c
 16031  0030C2  EF65  F018         	goto	u5841
 16032  0030C6  EF67  F018         	goto	u5840
 16033  0030CA                     u5841:
 16034  0030CA  EF6E  F018         	goto	l8198
 16035  0030CE                     u5840:
 16036  0030CE                     
 16037                           ; BSR set to: 0
 16038  0030CE  A44B               	btfss	_flags^0,2,c
 16039  0030D0  EF6C  F018         	goto	u5851
 16040  0030D4  EF6E  F018         	goto	u5850
 16041  0030D8                     u5851:
 16042  0030D8  EF71  F018         	goto	l8200
 16043  0030DC                     u5850:
 16044  0030DC                     l8198:
 16045                           
 16046                           ; BSR set to: 0
 16047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 16048  0030DC  0764               	decf	dtoa@w& (0+255),f,b
 16049  0030DE  A0D8               	btfss	status,0,c
 16050  0030E0  0765               	decf	(dtoa@w+1)& (0+255),f,b
 16051  0030E2                     l8200:
 16052                           
 16053                           ; BSR set to: 0
 16054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 16055  0030E2  0E00               	movlw	0
 16056  0030E4  6F71               	movwf	(dtoa@i+1)& (0+255),b
 16057  0030E6  0E1F               	movlw	31
 16058  0030E8  6F70               	movwf	dtoa@i& (0+255),b
 16059  0030EA                     
 16060                           ; BSR set to: 0
 16061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 16062  0030EA  0E00               	movlw	0
 16063  0030EC  6FFF               	movwf	(_dbuf+31)& (0+255),b
 16064                           
 16065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16066  0030EE  EFF6  F018         	goto	l8214
 16067  0030F2                     l8204:
 16068                           
 16069                           ; BSR set to: 0
 16070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 16071  0030F2  0770               	decf	dtoa@i& (0+255),f,b
 16072  0030F4  A0D8               	btfss	status,0,c
 16073  0030F6  0771               	decf	(dtoa@i+1)& (0+255),f,b
 16074  0030F8                     
 16075                           ; BSR set to: 0
 16076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 16077  0030F8  0EE0               	movlw	low _dbuf
 16078  0030FA  2570               	addwf	dtoa@i& (0+255),w,b
 16079  0030FC  6ED9               	movwf	fsr2l,c
 16080  0030FE  0E00               	movlw	high _dbuf
 16081  003100  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 16082  003102  6EDA               	movwf	fsr2h,c
 16083  003104  C068  F012         	movff	dtoa@n,___aomod@dividend
 16084  003108  C069  F013         	movff	dtoa@n+1,___aomod@dividend+1
 16085  00310C  C06A  F014         	movff	dtoa@n+2,___aomod@dividend+2
 16086  003110  C06B  F015         	movff	dtoa@n+3,___aomod@dividend+3
 16087  003114  C06C  F016         	movff	dtoa@n+4,___aomod@dividend+4
 16088  003118  C06D  F017         	movff	dtoa@n+5,___aomod@dividend+5
 16089  00311C  C06E  F018         	movff	dtoa@n+6,___aomod@dividend+6
 16090  003120  C06F  F019         	movff	dtoa@n+7,___aomod@dividend+7
 16091  003124  0E0A               	movlw	10
 16092  003126  6E1A               	movwf	___aomod@divisor^0,c
 16093  003128  0E00               	movlw	0
 16094  00312A  6E1B               	movwf	(___aomod@divisor+1)^0,c
 16095  00312C  0E00               	movlw	0
 16096  00312E  6E1C               	movwf	(___aomod@divisor+2)^0,c
 16097  003130  0E00               	movlw	0
 16098  003132  6E1D               	movwf	(___aomod@divisor+3)^0,c
 16099  003134  0E00               	movlw	0
 16100  003136  6E1E               	movwf	(___aomod@divisor+4)^0,c
 16101  003138  0E00               	movlw	0
 16102  00313A  6E1F               	movwf	(___aomod@divisor+5)^0,c
 16103  00313C  0E00               	movlw	0
 16104  00313E  6E20               	movwf	(___aomod@divisor+6)^0,c
 16105  003140  0E00               	movlw	0
 16106  003142  6E21               	movwf	(___aomod@divisor+7)^0,c
 16107  003144  EC94  F01F         	call	___aomod	;wreg free
 16108  003148  C012  F037         	movff	?___aomod,??_dtoa
 16109  00314C  C013  F038         	movff	?___aomod+1,??_dtoa+1
 16110  003150  C014  F039         	movff	?___aomod+2,??_dtoa+2
 16111  003154  C015  F03A         	movff	?___aomod+3,??_dtoa+3
 16112  003158  C016  F03B         	movff	?___aomod+4,??_dtoa+4
 16113  00315C  C017  F03C         	movff	?___aomod+5,??_dtoa+5
 16114  003160  C018  F03D         	movff	?___aomod+6,??_dtoa+6
 16115  003164  C019  F03E         	movff	?___aomod+7,??_dtoa+7
 16116  003168  C037  F024         	movff	??_dtoa,abs@a
 16117  00316C  C039  F025         	movff	??_dtoa+2,abs@a+1
 16118  003170  ECE9  F030         	call	_abs	;wreg free
 16119  003174  5024               	movf	?_abs^0,w,c
 16120  003176  0F30               	addlw	48
 16121  003178  6EDF               	movwf	indf2,c
 16122  00317A                     
 16123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 16124  00317A  0100               	movlb	0	; () banked
 16125  00317C  0762               	decf	dtoa@p& (0+255),f,b
 16126  00317E  A0D8               	btfss	status,0,c
 16127  003180  0763               	decf	(dtoa@p+1)& (0+255),f,b
 16128  003182                     
 16129                           ; BSR set to: 0
 16130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 16131  003182  0764               	decf	dtoa@w& (0+255),f,b
 16132  003184  A0D8               	btfss	status,0,c
 16133  003186  0765               	decf	(dtoa@w+1)& (0+255),f,b
 16134  003188                     
 16135                           ; BSR set to: 0
 16136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 16137  003188  C068  F012         	movff	dtoa@n,___aodiv@dividend
 16138  00318C  C069  F013         	movff	dtoa@n+1,___aodiv@dividend+1
 16139  003190  C06A  F014         	movff	dtoa@n+2,___aodiv@dividend+2
 16140  003194  C06B  F015         	movff	dtoa@n+3,___aodiv@dividend+3
 16141  003198  C06C  F016         	movff	dtoa@n+4,___aodiv@dividend+4
 16142  00319C  C06D  F017         	movff	dtoa@n+5,___aodiv@dividend+5
 16143  0031A0  C06E  F018         	movff	dtoa@n+6,___aodiv@dividend+6
 16144  0031A4  C06F  F019         	movff	dtoa@n+7,___aodiv@dividend+7
 16145  0031A8  0E0A               	movlw	10
 16146  0031AA  6E1A               	movwf	___aodiv@divisor^0,c
 16147  0031AC  0E00               	movlw	0
 16148  0031AE  6E1B               	movwf	(___aodiv@divisor+1)^0,c
 16149  0031B0  0E00               	movlw	0
 16150  0031B2  6E1C               	movwf	(___aodiv@divisor+2)^0,c
 16151  0031B4  0E00               	movlw	0
 16152  0031B6  6E1D               	movwf	(___aodiv@divisor+3)^0,c
 16153  0031B8  0E00               	movlw	0
 16154  0031BA  6E1E               	movwf	(___aodiv@divisor+4)^0,c
 16155  0031BC  0E00               	movlw	0
 16156  0031BE  6E1F               	movwf	(___aodiv@divisor+5)^0,c
 16157  0031C0  0E00               	movlw	0
 16158  0031C2  6E20               	movwf	(___aodiv@divisor+6)^0,c
 16159  0031C4  0E00               	movlw	0
 16160  0031C6  6E21               	movwf	(___aodiv@divisor+7)^0,c
 16161  0031C8  ECD0  F01E         	call	___aodiv	;wreg free
 16162  0031CC  C012  F068         	movff	?___aodiv,dtoa@n
 16163  0031D0  C013  F069         	movff	?___aodiv+1,dtoa@n+1
 16164  0031D4  C014  F06A         	movff	?___aodiv+2,dtoa@n+2
 16165  0031D8  C015  F06B         	movff	?___aodiv+3,dtoa@n+3
 16166  0031DC  C016  F06C         	movff	?___aodiv+4,dtoa@n+4
 16167  0031E0  C017  F06D         	movff	?___aodiv+5,dtoa@n+5
 16168  0031E4  C018  F06E         	movff	?___aodiv+6,dtoa@n+6
 16169  0031E8  C019  F06F         	movff	?___aodiv+7,dtoa@n+7
 16170  0031EC                     l8214:
 16171                           
 16172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16173  0031EC  0100               	movlb	0	; () banked
 16174  0031EE  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
 16175  0031F0  EF02  F019         	goto	u5861
 16176  0031F4  5171               	movf	(dtoa@i+1)& (0+255),w,b
 16177  0031F6  E108               	bnz	u5860
 16178  0031F8  0570               	decf	dtoa@i& (0+255),w,b
 16179  0031FA  A0D8               	btfss	status,0,c
 16180  0031FC  EF02  F019         	goto	u5861
 16181  003200  EF04  F019         	goto	u5860
 16182  003204                     u5861:
 16183  003204  EF34  F019         	goto	l8224
 16184  003208                     u5860:
 16185  003208                     
 16186                           ; BSR set to: 0
 16187  003208  5168               	movf	dtoa@n& (0+255),w,b
 16188  00320A  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
 16189  00320C  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
 16190  00320E  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
 16191  003210  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
 16192  003212  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
 16193  003214  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
 16194  003216  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
 16195  003218  A4D8               	btfss	status,2,c
 16196  00321A  EF11  F019         	goto	u5871
 16197  00321E  EF13  F019         	goto	u5870
 16198  003222                     u5871:
 16199  003222  EF79  F018         	goto	l8204
 16200  003226                     u5870:
 16201  003226                     
 16202                           ; BSR set to: 0
 16203  003226  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
 16204  003228  EF20  F019         	goto	u5880
 16205  00322C  5163               	movf	(dtoa@p+1)& (0+255),w,b
 16206  00322E  E106               	bnz	u5881
 16207  003230  0562               	decf	dtoa@p& (0+255),w,b
 16208  003232  B0D8               	btfsc	status,0,c
 16209  003234  EF1E  F019         	goto	u5881
 16210  003238  EF20  F019         	goto	u5880
 16211  00323C                     u5881:
 16212  00323C  EF79  F018         	goto	l8204
 16213  003240                     u5880:
 16214  003240                     
 16215                           ; BSR set to: 0
 16216  003240  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
 16217  003242  EF2B  F019         	goto	u5891
 16218  003246  5165               	movf	(dtoa@w+1)& (0+255),w,b
 16219  003248  E108               	bnz	u5890
 16220  00324A  0564               	decf	dtoa@w& (0+255),w,b
 16221  00324C  A0D8               	btfss	status,0,c
 16222  00324E  EF2B  F019         	goto	u5891
 16223  003252  EF2D  F019         	goto	u5890
 16224  003256                     u5891:
 16225  003256  EF34  F019         	goto	l8224
 16226  00325A                     u5890:
 16227  00325A                     
 16228                           ; BSR set to: 0
 16229  00325A  B24B               	btfsc	_flags^0,1,c
 16230  00325C  EF32  F019         	goto	u5901
 16231  003260  EF34  F019         	goto	u5900
 16232  003264                     u5901:
 16233  003264  EF79  F018         	goto	l8204
 16234  003268                     u5900:
 16235  003268                     l8224:
 16236                           
 16237                           ; BSR set to: 0
 16238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 16239  003268  5166               	movf	dtoa@s& (0+255),w,b
 16240  00326A  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 16241  00326C  A4D8               	btfss	status,2,c
 16242  00326E  EF3B  F019         	goto	u5911
 16243  003272  EF3D  F019         	goto	u5910
 16244  003276                     u5911:
 16245  003276  EF44  F019         	goto	l8228
 16246  00327A                     u5910:
 16247  00327A                     
 16248                           ; BSR set to: 0
 16249  00327A  A44B               	btfss	_flags^0,2,c
 16250  00327C  EF42  F019         	goto	u5921
 16251  003280  EF44  F019         	goto	u5920
 16252  003284                     u5921:
 16253  003284  EF62  F019         	goto	l8238
 16254  003288                     u5920:
 16255  003288                     l8228:
 16256                           
 16257                           ; BSR set to: 0
 16258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 16259  003288  0770               	decf	dtoa@i& (0+255),f,b
 16260  00328A  A0D8               	btfss	status,0,c
 16261  00328C  0771               	decf	(dtoa@i+1)& (0+255),f,b
 16262  00328E                     
 16263                           ; BSR set to: 0
 16264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 16265  00328E  5166               	movf	dtoa@s& (0+255),w,b
 16266  003290  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 16267  003292  A4D8               	btfss	status,2,c
 16268  003294  EF4E  F019         	goto	u5931
 16269  003298  EF50  F019         	goto	u5930
 16270  00329C                     u5931:
 16271  00329C  EF56  F019         	goto	l8234
 16272  0032A0                     u5930:
 16273  0032A0                     
 16274                           ; BSR set to: 0
 16275  0032A0  0E00               	movlw	0
 16276  0032A2  6F61               	movwf	(_dtoa$4941+1)& (0+255),b
 16277  0032A4  0E2B               	movlw	43
 16278  0032A6  6F60               	movwf	_dtoa$4941& (0+255),b
 16279  0032A8  EF5A  F019         	goto	l8236
 16280  0032AC                     l8234:
 16281                           
 16282                           ; BSR set to: 0
 16283  0032AC  0E00               	movlw	0
 16284  0032AE  6F61               	movwf	(_dtoa$4941+1)& (0+255),b
 16285  0032B0  0E2D               	movlw	45
 16286  0032B2  6F60               	movwf	_dtoa$4941& (0+255),b
 16287  0032B4                     l8236:
 16288                           
 16289                           ; BSR set to: 0
 16290  0032B4  0EE0               	movlw	low _dbuf
 16291  0032B6  2570               	addwf	dtoa@i& (0+255),w,b
 16292  0032B8  6ED9               	movwf	fsr2l,c
 16293  0032BA  0E00               	movlw	high _dbuf
 16294  0032BC  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 16295  0032BE  6EDA               	movwf	fsr2h,c
 16296  0032C0  C060  FFDF         	movff	_dtoa$4941,indf2
 16297  0032C4                     l8238:
 16298                           
 16299                           ; BSR set to: 0
 16300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 16301  0032C4  C02D  F022         	movff	dtoa@fp,pad@fp
 16302  0032C8  C02E  F023         	movff	dtoa@fp+1,pad@fp+1
 16303  0032CC  0EE0               	movlw	low _dbuf
 16304  0032CE  2570               	addwf	dtoa@i& (0+255),w,b
 16305  0032D0  6E24               	movwf	pad@buf^0,c
 16306  0032D2  0E00               	movlw	high _dbuf
 16307  0032D4  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 16308  0032D6  6E25               	movwf	(pad@buf+1)^0,c
 16309  0032D8  C064  F026         	movff	dtoa@w,pad@p
 16310  0032DC  C065  F027         	movff	dtoa@w+1,pad@p+1
 16311  0032E0  EC15  F029         	call	_pad	;wreg free
 16312  0032E4  C022  F02D         	movff	?_pad,?_dtoa
 16313  0032E8  C023  F02E         	movff	?_pad+1,?_dtoa+1
 16314  0032EC  0012               	return		;funcret
 16315  0032EE                     __end_of_dtoa:
 16316                           	callstack 0
 16317                           
 16318 ;; *************** function _pad *****************
 16319 ;; Defined at:
 16320 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 16321 ;; Parameters:    Size  Location     Type
 16322 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 16323 ;;		 -> sprintf@f(6), 
 16324 ;;  buf             2   35[COMRAM] PTR unsigned char 
 16325 ;;		 -> dbuf(32), 
 16326 ;;  p               2   37[COMRAM] int 
 16327 ;; Auto vars:     Size  Location     Type
 16328 ;;  w               2   42[COMRAM] int 
 16329 ;;  i               2   40[COMRAM] int 
 16330 ;; Return value:  Size  Location     Type
 16331 ;;                  2   33[COMRAM] int 
 16332 ;; Registers used:
 16333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16334 ;; Tracked objects:
 16335 ;;		On entry : 0/0
 16336 ;;		On exit  : 0/0
 16337 ;;		Unchanged: 0/0
 16338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16339 ;;      Params:         6       0       0       0       0       0       0
 16340 ;;      Locals:         4       0       0       0       0       0       0
 16341 ;;      Temps:          1       0       0       0       0       0       0
 16342 ;;      Totals:        11       0       0       0       0       0       0
 16343 ;;Total ram usage:       11 bytes
 16344 ;; Hardware stack levels used: 1
 16345 ;; Hardware stack levels required when called: 7
 16346 ;; This function calls:
 16347 ;;		_fputc
 16348 ;;		_fputs
 16349 ;;		_strlen
 16350 ;; This function is called by:
 16351 ;;		_dtoa
 16352 ;; This function uses a non-reentrant model
 16353 ;;
 16354                           
 16355                           	psect	text61
 16356  00522A                     __ptext61:
 16357                           	callstack 0
 16358  00522A                     _pad:
 16359                           	callstack 14
 16360  00522A                     
 16361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 16362  00522A  A04B               	btfss	_flags^0,0,c
 16363  00522C  EF1A  F029         	goto	u5741
 16364  005230  EF1C  F029         	goto	u5740
 16365  005234                     u5741:
 16366  005234  EF26  F029         	goto	l8158
 16367  005238                     u5740:
 16368  005238                     
 16369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 16370  005238  C024  F01B         	movff	pad@buf,fputs@s
 16371  00523C  C025  F01C         	movff	pad@buf+1,fputs@s+1
 16372  005240  C022  F01D         	movff	pad@fp,fputs@fp
 16373  005244  C023  F01E         	movff	pad@fp+1,fputs@fp+1
 16374  005248  ECC7  F030         	call	_fputs	;wreg free
 16375  00524C                     l8158:
 16376                           
 16377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 16378  00524C  BE27               	btfsc	(pad@p+1)^0,7,c
 16379  00524E  EF2B  F029         	goto	u5751
 16380  005252  EF2D  F029         	goto	u5750
 16381  005256                     u5751:
 16382  005256  EF33  F029         	goto	l8162
 16383  00525A                     u5750:
 16384  00525A  C026  F02B         	movff	pad@p,pad@w
 16385  00525E  C027  F02C         	movff	pad@p+1,pad@w+1
 16386  005262  EF37  F029         	goto	l1523
 16387  005266                     l8162:
 16388  005266  0E00               	movlw	0
 16389  005268  6E2C               	movwf	(pad@w+1)^0,c
 16390  00526A  0E00               	movlw	0
 16391  00526C  6E2B               	movwf	pad@w^0,c
 16392  00526E                     l1523:
 16393                           
 16394                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 16395  00526E  0E00               	movlw	0
 16396  005270  6E2A               	movwf	(pad@i+1)^0,c
 16397  005272  0E00               	movlw	0
 16398  005274  6E29               	movwf	pad@i^0,c
 16399                           
 16400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 16401  005276  EF49  F029         	goto	l8168
 16402  00527A                     l8164:
 16403                           
 16404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 16405  00527A  0E00               	movlw	0
 16406  00527C  6E13               	movwf	(fputc@c+1)^0,c
 16407  00527E  0E20               	movlw	32
 16408  005280  6E12               	movwf	fputc@c^0,c
 16409  005282  C022  F014         	movff	pad@fp,fputc@fp
 16410  005286  C023  F015         	movff	pad@fp+1,fputc@fp+1
 16411  00528A  ECEA  F027         	call	_fputc	;wreg free
 16412  00528E                     
 16413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 16414  00528E  4A29               	infsnz	pad@i^0,f,c
 16415  005290  2A2A               	incf	(pad@i+1)^0,f,c
 16416  005292                     l8168:
 16417                           
 16418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 16419  005292  502B               	movf	pad@w^0,w,c
 16420  005294  5C29               	subwf	pad@i^0,w,c
 16421  005296  502A               	movf	(pad@i+1)^0,w,c
 16422  005298  0A80               	xorlw	128
 16423  00529A  6E28               	movwf	??_pad^0,c
 16424  00529C  502C               	movf	(pad@w+1)^0,w,c
 16425  00529E  0A80               	xorlw	128
 16426  0052A0  5828               	subwfb	??_pad^0,w,c
 16427  0052A2  A0D8               	btfss	status,0,c
 16428  0052A4  EF56  F029         	goto	u5761
 16429  0052A8  EF58  F029         	goto	u5760
 16430  0052AC                     u5761:
 16431  0052AC  EF3D  F029         	goto	l8164
 16432  0052B0                     u5760:
 16433  0052B0                     
 16434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 16435  0052B0  B04B               	btfsc	_flags^0,0,c
 16436  0052B2  EF5D  F029         	goto	u5771
 16437  0052B6  EF5F  F029         	goto	u5770
 16438  0052BA                     u5771:
 16439  0052BA  EF69  F029         	goto	l8172
 16440  0052BE                     u5770:
 16441  0052BE                     
 16442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 16443  0052BE  C024  F01B         	movff	pad@buf,fputs@s
 16444  0052C2  C025  F01C         	movff	pad@buf+1,fputs@s+1
 16445  0052C6  C022  F01D         	movff	pad@fp,fputs@fp
 16446  0052CA  C023  F01E         	movff	pad@fp+1,fputs@fp+1
 16447  0052CE  ECC7  F030         	call	_fputs	;wreg free
 16448  0052D2                     l8172:
 16449                           
 16450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 16451  0052D2  C024  F012         	movff	pad@buf,strlen@s
 16452  0052D6  C025  F013         	movff	pad@buf+1,strlen@s+1
 16453  0052DA  EC7E  F030         	call	_strlen	;wreg free
 16454  0052DE  502B               	movf	pad@w^0,w,c
 16455  0052E0  2412               	addwf	?_strlen^0,w,c
 16456  0052E2  6E22               	movwf	?_pad^0,c
 16457  0052E4  502C               	movf	(pad@w+1)^0,w,c
 16458  0052E6  2013               	addwfc	(?_strlen+1)^0,w,c
 16459  0052E8  6E23               	movwf	(?_pad+1)^0,c
 16460  0052EA  0012               	return		;funcret
 16461  0052EC                     __end_of_pad:
 16462                           	callstack 0
 16463                           
 16464 ;; *************** function _fputs *****************
 16465 ;; Defined at:
 16466 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 16467 ;; Parameters:    Size  Location     Type
 16468 ;;  s               2   26[COMRAM] PTR const unsigned char 
 16469 ;;		 -> dbuf(32), 
 16470 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
 16471 ;;		 -> sprintf@f(6), 
 16472 ;; Auto vars:     Size  Location     Type
 16473 ;;  i               2   31[COMRAM] int 
 16474 ;;  c               1   30[COMRAM] unsigned char 
 16475 ;; Return value:  Size  Location     Type
 16476 ;;                  2   26[COMRAM] int 
 16477 ;; Registers used:
 16478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16479 ;; Tracked objects:
 16480 ;;		On entry : 0/0
 16481 ;;		On exit  : 0/0
 16482 ;;		Unchanged: 0/0
 16483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16484 ;;      Params:         4       0       0       0       0       0       0
 16485 ;;      Locals:         3       0       0       0       0       0       0
 16486 ;;      Temps:          0       0       0       0       0       0       0
 16487 ;;      Totals:         7       0       0       0       0       0       0
 16488 ;;Total ram usage:        7 bytes
 16489 ;; Hardware stack levels used: 1
 16490 ;; Hardware stack levels required when called: 6
 16491 ;; This function calls:
 16492 ;;		_fputc
 16493 ;; This function is called by:
 16494 ;;		_pad
 16495 ;; This function uses a non-reentrant model
 16496 ;;
 16497                           
 16498                           	psect	text62
 16499  00618E                     __ptext62:
 16500                           	callstack 0
 16501  00618E                     _fputs:
 16502                           	callstack 14
 16503  00618E  0E00               	movlw	0
 16504  006190  6E21               	movwf	(fputs@i+1)^0,c
 16505  006192  0E00               	movlw	0
 16506  006194  6E20               	movwf	fputs@i^0,c
 16507  006196  EFD8  F030         	goto	l8072
 16508  00619A                     l8068:
 16509  00619A  C01F  F012         	movff	fputs@c,fputc@c
 16510  00619E  6A13               	clrf	(fputc@c+1)^0,c
 16511  0061A0  C01D  F014         	movff	fputs@fp,fputc@fp
 16512  0061A4  C01E  F015         	movff	fputs@fp+1,fputc@fp+1
 16513  0061A8  ECEA  F027         	call	_fputc	;wreg free
 16514  0061AC  4A20               	infsnz	fputs@i^0,f,c
 16515  0061AE  2A21               	incf	(fputs@i+1)^0,f,c
 16516  0061B0                     l8072:
 16517  0061B0  5020               	movf	fputs@i^0,w,c
 16518  0061B2  241B               	addwf	fputs@s^0,w,c
 16519  0061B4  6ED9               	movwf	fsr2l,c
 16520  0061B6  5021               	movf	(fputs@i+1)^0,w,c
 16521  0061B8  201C               	addwfc	(fputs@s+1)^0,w,c
 16522  0061BA  6EDA               	movwf	fsr2h,c
 16523  0061BC  50DF               	movf	indf2,w,c
 16524  0061BE  6E1F               	movwf	fputs@c^0,c
 16525  0061C0  501F               	movf	fputs@c^0,w,c
 16526  0061C2  A4D8               	btfss	status,2,c
 16527  0061C4  EFE6  F030         	goto	u5601
 16528  0061C8  EFE8  F030         	goto	u5600
 16529  0061CC                     u5601:
 16530  0061CC  EFCD  F030         	goto	l8068
 16531  0061D0                     u5600:
 16532  0061D0  0012               	return		;funcret
 16533  0061D2                     __end_of_fputs:
 16534                           	callstack 0
 16535                           
 16536 ;; *************** function _fputc *****************
 16537 ;; Defined at:
 16538 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 16539 ;; Parameters:    Size  Location     Type
 16540 ;;  c               2   17[COMRAM] int 
 16541 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 16542 ;;		 -> sprintf@f(6), 
 16543 ;; Auto vars:     Size  Location     Type
 16544 ;;		None
 16545 ;; Return value:  Size  Location     Type
 16546 ;;                  2   17[COMRAM] int 
 16547 ;; Registers used:
 16548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16549 ;; Tracked objects:
 16550 ;;		On entry : 0/0
 16551 ;;		On exit  : 0/0
 16552 ;;		Unchanged: 0/0
 16553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16554 ;;      Params:         4       0       0       0       0       0       0
 16555 ;;      Locals:         0       0       0       0       0       0       0
 16556 ;;      Temps:          5       0       0       0       0       0       0
 16557 ;;      Totals:         9       0       0       0       0       0       0
 16558 ;;Total ram usage:        9 bytes
 16559 ;; Hardware stack levels used: 1
 16560 ;; Hardware stack levels required when called: 5
 16561 ;; This function calls:
 16562 ;;		_putch
 16563 ;; This function is called by:
 16564 ;;		_pad
 16565 ;;		_vfpfcnvrt
 16566 ;;		_fputs
 16567 ;; This function uses a non-reentrant model
 16568 ;;
 16569                           
 16570                           	psect	text63
 16571  004FD4                     __ptext63:
 16572                           	callstack 0
 16573  004FD4                     _fputc:
 16574                           	callstack 17
 16575  004FD4  5014               	movf	fputc@fp^0,w,c
 16576  004FD6  1015               	iorwf	(fputc@fp+1)^0,w,c
 16577  004FD8  B4D8               	btfsc	status,2,c
 16578  004FDA  EFF1  F027         	goto	u5541
 16579  004FDE  EFF3  F027         	goto	u5540
 16580  004FE2                     u5541:
 16581  004FE2  EFFC  F027         	goto	l8046
 16582  004FE6                     u5540:
 16583  004FE6  5014               	movf	fputc@fp^0,w,c
 16584  004FE8  1015               	iorwf	(fputc@fp+1)^0,w,c
 16585  004FEA  A4D8               	btfss	status,2,c
 16586  004FEC  EFFA  F027         	goto	u5551
 16587  004FF0  EFFC  F027         	goto	u5550
 16588  004FF4                     u5551:
 16589  004FF4  EF01  F028         	goto	l8048
 16590  004FF8                     u5550:
 16591  004FF8                     l8046:
 16592  004FF8  5012               	movf	fputc@c^0,w,c
 16593  004FFA  EC46  F032         	call	_putch
 16594  004FFE  EF4E  F028         	goto	l1587
 16595  005002                     l8048:
 16596  005002  EE20 F004          	lfsr	2,4
 16597  005006  5014               	movf	fputc@fp^0,w,c
 16598  005008  26D9               	addwf	fsr2l,f,c
 16599  00500A  5015               	movf	(fputc@fp+1)^0,w,c
 16600  00500C  22DA               	addwfc	fsr2h,f,c
 16601  00500E  50DE               	movf	postinc2,w,c
 16602  005010  10DE               	iorwf	postinc2,w,c
 16603  005012  B4D8               	btfsc	status,2,c
 16604  005014  EF0E  F028         	goto	u5561
 16605  005018  EF10  F028         	goto	u5560
 16606  00501C                     u5561:
 16607  00501C  EF2B  F028         	goto	l8052
 16608  005020                     u5560:
 16609  005020  EE20 F004          	lfsr	2,4
 16610  005024  5014               	movf	fputc@fp^0,w,c
 16611  005026  26D9               	addwf	fsr2l,f,c
 16612  005028  5015               	movf	(fputc@fp+1)^0,w,c
 16613  00502A  22DA               	addwfc	fsr2h,f,c
 16614  00502C  EE10 F002          	lfsr	1,2
 16615  005030  5014               	movf	fputc@fp^0,w,c
 16616  005032  26E1               	addwf	fsr1l,f,c
 16617  005034  5015               	movf	(fputc@fp+1)^0,w,c
 16618  005036  22E2               	addwfc	fsr1h,f,c
 16619  005038  50DE               	movf	postinc2,w,c
 16620  00503A  5CE6               	subwf	postinc1,w,c
 16621  00503C  50E6               	movf	postinc1,w,c
 16622  00503E  0A80               	xorlw	128
 16623  005040  6E1A               	movwf	(??_fputc+4)^0,c
 16624  005042  50DE               	movf	postinc2,w,c
 16625  005044  0A80               	xorlw	128
 16626  005046  581A               	subwfb	(??_fputc+4)^0,w,c
 16627  005048  B0D8               	btfsc	status,0,c
 16628  00504A  EF29  F028         	goto	u5571
 16629  00504E  EF2B  F028         	goto	u5570
 16630  005052                     u5571:
 16631  005052  EF4E  F028         	goto	l1587
 16632  005056                     u5570:
 16633  005056                     l8052:
 16634  005056  EE20 F002          	lfsr	2,2
 16635  00505A  5014               	movf	fputc@fp^0,w,c
 16636  00505C  26D9               	addwf	fsr2l,f,c
 16637  00505E  5015               	movf	(fputc@fp+1)^0,w,c
 16638  005060  22DA               	addwfc	fsr2h,f,c
 16639  005062  CFDE F016          	movff	postinc2,??_fputc
 16640  005066  CFDD F017          	movff	postdec2,??_fputc+1
 16641  00506A  C014  FFD9         	movff	fputc@fp,fsr2l
 16642  00506E  C015  FFDA         	movff	fputc@fp+1,fsr2h
 16643  005072  CFDE F018          	movff	postinc2,??_fputc+2
 16644  005076  CFDD F019          	movff	postdec2,??_fputc+3
 16645  00507A  5016               	movf	??_fputc^0,w,c
 16646  00507C  2418               	addwf	(??_fputc+2)^0,w,c
 16647  00507E  6ED9               	movwf	fsr2l,c
 16648  005080  5017               	movf	(??_fputc+1)^0,w,c
 16649  005082  2019               	addwfc	(??_fputc+3)^0,w,c
 16650  005084  6EDA               	movwf	fsr2h,c
 16651  005086  C012  FFDF         	movff	fputc@c,indf2
 16652  00508A  EE20 F002          	lfsr	2,2
 16653  00508E  5014               	movf	fputc@fp^0,w,c
 16654  005090  26D9               	addwf	fsr2l,f,c
 16655  005092  5015               	movf	(fputc@fp+1)^0,w,c
 16656  005094  22DA               	addwfc	fsr2h,f,c
 16657  005096  2ADE               	incf	postinc2,f,c
 16658  005098  0E00               	movlw	0
 16659  00509A  22DD               	addwfc	postdec2,f,c
 16660  00509C                     l1587:
 16661  00509C  0012               	return		;funcret
 16662  00509E                     __end_of_fputc:
 16663                           	callstack 0
 16664                           
 16665 ;; *************** function _putch *****************
 16666 ;; Defined at:
 16667 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 16668 ;; Parameters:    Size  Location     Type
 16669 ;;  c               1    wreg     unsigned char 
 16670 ;; Auto vars:     Size  Location     Type
 16671 ;;  c               1    0[COMRAM] unsigned char 
 16672 ;; Return value:  Size  Location     Type
 16673 ;;                  1    wreg      void 
 16674 ;; Registers used:
 16675 ;;		wreg
 16676 ;; Tracked objects:
 16677 ;;		On entry : 0/0
 16678 ;;		On exit  : 0/0
 16679 ;;		Unchanged: 0/0
 16680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16681 ;;      Params:         0       0       0       0       0       0       0
 16682 ;;      Locals:         0       0       0       0       0       0       0
 16683 ;;      Temps:          0       0       0       0       0       0       0
 16684 ;;      Totals:         0       0       0       0       0       0       0
 16685 ;;Total ram usage:        0 bytes
 16686 ;; Hardware stack levels used: 1
 16687 ;; Hardware stack levels required when called: 4
 16688 ;; This function calls:
 16689 ;;		Nothing
 16690 ;; This function is called by:
 16691 ;;		_fputc
 16692 ;; This function uses a non-reentrant model
 16693 ;;
 16694                           
 16695                           	psect	text64
 16696  00648C                     __ptext64:
 16697                           	callstack 0
 16698  00648C                     _putch:
 16699                           	callstack 17
 16700  00648C  0012               	return		;funcret
 16701  00648E                     __end_of_putch:
 16702                           	callstack 0
 16703                           
 16704 ;; *************** function _abs *****************
 16705 ;; Defined at:
 16706 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 16707 ;; Parameters:    Size  Location     Type
 16708 ;;  a               2   35[COMRAM] int 
 16709 ;; Auto vars:     Size  Location     Type
 16710 ;;		None
 16711 ;; Return value:  Size  Location     Type
 16712 ;;                  2   35[COMRAM] int 
 16713 ;; Registers used:
 16714 ;;		wreg, status,2, status,0
 16715 ;; Tracked objects:
 16716 ;;		On entry : 0/0
 16717 ;;		On exit  : 0/0
 16718 ;;		Unchanged: 0/0
 16719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16720 ;;      Params:         2       0       0       0       0       0       0
 16721 ;;      Locals:         0       0       0       0       0       0       0
 16722 ;;      Temps:          2       0       0       0       0       0       0
 16723 ;;      Totals:         4       0       0       0       0       0       0
 16724 ;;Total ram usage:        4 bytes
 16725 ;; Hardware stack levels used: 1
 16726 ;; Hardware stack levels required when called: 4
 16727 ;; This function calls:
 16728 ;;		Nothing
 16729 ;; This function is called by:
 16730 ;;		_dtoa
 16731 ;; This function uses a non-reentrant model
 16732 ;;
 16733                           
 16734                           	psect	text65
 16735  0061D2                     __ptext65:
 16736                           	callstack 0
 16737  0061D2                     _abs:
 16738                           	callstack 17
 16739  0061D2  BE25               	btfsc	(abs@a+1)^0,7,c
 16740  0061D4  EFF6  F030         	goto	u5780
 16741  0061D8  5025               	movf	(abs@a+1)^0,w,c
 16742  0061DA  E106               	bnz	u5781
 16743  0061DC  0424               	decf	abs@a^0,w,c
 16744  0061DE  B0D8               	btfsc	status,0,c
 16745  0061E0  EFF4  F030         	goto	u5781
 16746  0061E4  EFF6  F030         	goto	u5780
 16747  0061E8                     u5781:
 16748  0061E8  EF04  F031         	goto	l1572
 16749  0061EC                     u5780:
 16750  0061EC  C024  F026         	movff	abs@a,??_abs
 16751  0061F0  C025  F027         	movff	abs@a+1,??_abs+1
 16752  0061F4  1E26               	comf	??_abs^0,f,c
 16753  0061F6  1E27               	comf	(??_abs+1)^0,f,c
 16754  0061F8  4A26               	infsnz	??_abs^0,f,c
 16755  0061FA  2A27               	incf	(??_abs+1)^0,f,c
 16756  0061FC  C026  F024         	movff	??_abs,?_abs
 16757  006200  C027  F025         	movff	??_abs+1,?_abs+1
 16758  006204  EF08  F031         	goto	l1575
 16759  006208                     l1572:
 16760  006208  C024  F024         	movff	abs@a,?_abs
 16761  00620C  C025  F025         	movff	abs@a+1,?_abs+1
 16762  006210                     l1575:
 16763  006210  0012               	return		;funcret
 16764  006212                     __end_of_abs:
 16765                           	callstack 0
 16766                           
 16767 ;; *************** function ___aomod *****************
 16768 ;; Defined at:
 16769 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 16770 ;; Parameters:    Size  Location     Type
 16771 ;;  dividend        8   17[COMRAM] long long 
 16772 ;;  divisor         8   25[COMRAM] long long 
 16773 ;; Auto vars:     Size  Location     Type
 16774 ;;  sign            1   34[COMRAM] unsigned char 
 16775 ;;  counter         1   33[COMRAM] unsigned char 
 16776 ;; Return value:  Size  Location     Type
 16777 ;;                  8   17[COMRAM] long long 
 16778 ;; Registers used:
 16779 ;;		wreg, status,2, status,0
 16780 ;; Tracked objects:
 16781 ;;		On entry : 0/0
 16782 ;;		On exit  : 0/0
 16783 ;;		Unchanged: 0/0
 16784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16785 ;;      Params:        16       0       0       0       0       0       0
 16786 ;;      Locals:         2       0       0       0       0       0       0
 16787 ;;      Temps:          0       0       0       0       0       0       0
 16788 ;;      Totals:        18       0       0       0       0       0       0
 16789 ;;Total ram usage:       18 bytes
 16790 ;; Hardware stack levels used: 1
 16791 ;; Hardware stack levels required when called: 4
 16792 ;; This function calls:
 16793 ;;		Nothing
 16794 ;; This function is called by:
 16795 ;;		_dtoa
 16796 ;; This function uses a non-reentrant model
 16797 ;;
 16798                           
 16799                           	psect	text66
 16800  003F28                     __ptext66:
 16801                           	callstack 0
 16802  003F28                     ___aomod:
 16803                           	callstack 17
 16804  003F28  0E00               	movlw	0
 16805  003F2A  6E23               	movwf	___aomod@sign^0,c
 16806  003F2C  BE19               	btfsc	(___aomod@dividend+7)^0,7,c
 16807  003F2E  EF9D  F01F         	goto	u5680
 16808  003F32  EF9B  F01F         	goto	u5681
 16809  003F36                     u5681:
 16810  003F36  EFAF  F01F         	goto	l8126
 16811  003F3A                     u5680:
 16812  003F3A  1E19               	comf	(___aomod@dividend+7)^0,f,c
 16813  003F3C  1E18               	comf	(___aomod@dividend+6)^0,f,c
 16814  003F3E  1E17               	comf	(___aomod@dividend+5)^0,f,c
 16815  003F40  1E16               	comf	(___aomod@dividend+4)^0,f,c
 16816  003F42  1E15               	comf	(___aomod@dividend+3)^0,f,c
 16817  003F44  1E14               	comf	(___aomod@dividend+2)^0,f,c
 16818  003F46  1E13               	comf	(___aomod@dividend+1)^0,f,c
 16819  003F48  6C12               	negf	___aomod@dividend^0,c
 16820  003F4A  0E00               	movlw	0
 16821  003F4C  2213               	addwfc	(___aomod@dividend+1)^0,f,c
 16822  003F4E  2214               	addwfc	(___aomod@dividend+2)^0,f,c
 16823  003F50  2215               	addwfc	(___aomod@dividend+3)^0,f,c
 16824  003F52  2216               	addwfc	(___aomod@dividend+4)^0,f,c
 16825  003F54  2217               	addwfc	(___aomod@dividend+5)^0,f,c
 16826  003F56  2218               	addwfc	(___aomod@dividend+6)^0,f,c
 16827  003F58  2219               	addwfc	(___aomod@dividend+7)^0,f,c
 16828  003F5A  0E01               	movlw	1
 16829  003F5C  6E23               	movwf	___aomod@sign^0,c
 16830  003F5E                     l8126:
 16831  003F5E  BE21               	btfsc	(___aomod@divisor+7)^0,7,c
 16832  003F60  EFB6  F01F         	goto	u5690
 16833  003F64  EFB4  F01F         	goto	u5691
 16834  003F68                     u5691:
 16835  003F68  EFC6  F01F         	goto	l8130
 16836  003F6C                     u5690:
 16837  003F6C  1E21               	comf	(___aomod@divisor+7)^0,f,c
 16838  003F6E  1E20               	comf	(___aomod@divisor+6)^0,f,c
 16839  003F70  1E1F               	comf	(___aomod@divisor+5)^0,f,c
 16840  003F72  1E1E               	comf	(___aomod@divisor+4)^0,f,c
 16841  003F74  1E1D               	comf	(___aomod@divisor+3)^0,f,c
 16842  003F76  1E1C               	comf	(___aomod@divisor+2)^0,f,c
 16843  003F78  1E1B               	comf	(___aomod@divisor+1)^0,f,c
 16844  003F7A  6C1A               	negf	___aomod@divisor^0,c
 16845  003F7C  0E00               	movlw	0
 16846  003F7E  221B               	addwfc	(___aomod@divisor+1)^0,f,c
 16847  003F80  221C               	addwfc	(___aomod@divisor+2)^0,f,c
 16848  003F82  221D               	addwfc	(___aomod@divisor+3)^0,f,c
 16849  003F84  221E               	addwfc	(___aomod@divisor+4)^0,f,c
 16850  003F86  221F               	addwfc	(___aomod@divisor+5)^0,f,c
 16851  003F88  2220               	addwfc	(___aomod@divisor+6)^0,f,c
 16852  003F8A  2221               	addwfc	(___aomod@divisor+7)^0,f,c
 16853  003F8C                     l8130:
 16854  003F8C  501A               	movf	___aomod@divisor^0,w,c
 16855  003F8E  101B               	iorwf	(___aomod@divisor+1)^0,w,c
 16856  003F90  101C               	iorwf	(___aomod@divisor+2)^0,w,c
 16857  003F92  101D               	iorwf	(___aomod@divisor+3)^0,w,c
 16858  003F94  101E               	iorwf	(___aomod@divisor+4)^0,w,c
 16859  003F96  101F               	iorwf	(___aomod@divisor+5)^0,w,c
 16860  003F98  1020               	iorwf	(___aomod@divisor+6)^0,w,c
 16861  003F9A  1021               	iorwf	(___aomod@divisor+7)^0,w,c
 16862  003F9C  B4D8               	btfsc	status,2,c
 16863  003F9E  EFD3  F01F         	goto	u5701
 16864  003FA2  EFD5  F01F         	goto	u5700
 16865  003FA6                     u5701:
 16866  003FA6  EF1D  F020         	goto	l8146
 16867  003FAA                     u5700:
 16868  003FAA  0E01               	movlw	1
 16869  003FAC  6E22               	movwf	___aomod@counter^0,c
 16870  003FAE  EFE3  F01F         	goto	l8136
 16871  003FB2                     l8134:
 16872  003FB2  90D8               	bcf	status,0,c
 16873  003FB4  361A               	rlcf	___aomod@divisor^0,f,c
 16874  003FB6  361B               	rlcf	(___aomod@divisor+1)^0,f,c
 16875  003FB8  361C               	rlcf	(___aomod@divisor+2)^0,f,c
 16876  003FBA  361D               	rlcf	(___aomod@divisor+3)^0,f,c
 16877  003FBC  361E               	rlcf	(___aomod@divisor+4)^0,f,c
 16878  003FBE  361F               	rlcf	(___aomod@divisor+5)^0,f,c
 16879  003FC0  3620               	rlcf	(___aomod@divisor+6)^0,f,c
 16880  003FC2  3621               	rlcf	(___aomod@divisor+7)^0,f,c
 16881  003FC4  2A22               	incf	___aomod@counter^0,f,c
 16882  003FC6                     l8136:
 16883  003FC6  AE21               	btfss	(___aomod@divisor+7)^0,7,c
 16884  003FC8  EFE8  F01F         	goto	u5711
 16885  003FCC  EFEA  F01F         	goto	u5710
 16886  003FD0                     u5711:
 16887  003FD0  EFD9  F01F         	goto	l8134
 16888  003FD4                     u5710:
 16889  003FD4                     l8138:
 16890  003FD4  501A               	movf	___aomod@divisor^0,w,c
 16891  003FD6  5C12               	subwf	___aomod@dividend^0,w,c
 16892  003FD8  501B               	movf	(___aomod@divisor+1)^0,w,c
 16893  003FDA  5813               	subwfb	(___aomod@dividend+1)^0,w,c
 16894  003FDC  501C               	movf	(___aomod@divisor+2)^0,w,c
 16895  003FDE  5814               	subwfb	(___aomod@dividend+2)^0,w,c
 16896  003FE0  501D               	movf	(___aomod@divisor+3)^0,w,c
 16897  003FE2  5815               	subwfb	(___aomod@dividend+3)^0,w,c
 16898  003FE4  501E               	movf	(___aomod@divisor+4)^0,w,c
 16899  003FE6  5816               	subwfb	(___aomod@dividend+4)^0,w,c
 16900  003FE8  501F               	movf	(___aomod@divisor+5)^0,w,c
 16901  003FEA  5817               	subwfb	(___aomod@dividend+5)^0,w,c
 16902  003FEC  5020               	movf	(___aomod@divisor+6)^0,w,c
 16903  003FEE  5818               	subwfb	(___aomod@dividend+6)^0,w,c
 16904  003FF0  5021               	movf	(___aomod@divisor+7)^0,w,c
 16905  003FF2  5819               	subwfb	(___aomod@dividend+7)^0,w,c
 16906  003FF4  A0D8               	btfss	status,0,c
 16907  003FF6  EFFF  F01F         	goto	u5721
 16908  003FFA  EF01  F020         	goto	u5720
 16909  003FFE                     u5721:
 16910  003FFE  EF11  F020         	goto	l8142
 16911  004002                     u5720:
 16912  004002  501A               	movf	___aomod@divisor^0,w,c
 16913  004004  5E12               	subwf	___aomod@dividend^0,f,c
 16914  004006  501B               	movf	(___aomod@divisor+1)^0,w,c
 16915  004008  5A13               	subwfb	(___aomod@dividend+1)^0,f,c
 16916  00400A  501C               	movf	(___aomod@divisor+2)^0,w,c
 16917  00400C  5A14               	subwfb	(___aomod@dividend+2)^0,f,c
 16918  00400E  501D               	movf	(___aomod@divisor+3)^0,w,c
 16919  004010  5A15               	subwfb	(___aomod@dividend+3)^0,f,c
 16920  004012  501E               	movf	(___aomod@divisor+4)^0,w,c
 16921  004014  5A16               	subwfb	(___aomod@dividend+4)^0,f,c
 16922  004016  501F               	movf	(___aomod@divisor+5)^0,w,c
 16923  004018  5A17               	subwfb	(___aomod@dividend+5)^0,f,c
 16924  00401A  5020               	movf	(___aomod@divisor+6)^0,w,c
 16925  00401C  5A18               	subwfb	(___aomod@dividend+6)^0,f,c
 16926  00401E  5021               	movf	(___aomod@divisor+7)^0,w,c
 16927  004020  5A19               	subwfb	(___aomod@dividend+7)^0,f,c
 16928  004022                     l8142:
 16929  004022  90D8               	bcf	status,0,c
 16930  004024  3221               	rrcf	(___aomod@divisor+7)^0,f,c
 16931  004026  3220               	rrcf	(___aomod@divisor+6)^0,f,c
 16932  004028  321F               	rrcf	(___aomod@divisor+5)^0,f,c
 16933  00402A  321E               	rrcf	(___aomod@divisor+4)^0,f,c
 16934  00402C  321D               	rrcf	(___aomod@divisor+3)^0,f,c
 16935  00402E  321C               	rrcf	(___aomod@divisor+2)^0,f,c
 16936  004030  321B               	rrcf	(___aomod@divisor+1)^0,f,c
 16937  004032  321A               	rrcf	___aomod@divisor^0,f,c
 16938  004034  2E22               	decfsz	___aomod@counter^0,f,c
 16939  004036  EFEA  F01F         	goto	l8138
 16940  00403A                     l8146:
 16941  00403A  5023               	movf	___aomod@sign^0,w,c
 16942  00403C  B4D8               	btfsc	status,2,c
 16943  00403E  EF23  F020         	goto	u5731
 16944  004042  EF25  F020         	goto	u5730
 16945  004046                     u5731:
 16946  004046  EF35  F020         	goto	l8150
 16947  00404A                     u5730:
 16948  00404A  1E19               	comf	(___aomod@dividend+7)^0,f,c
 16949  00404C  1E18               	comf	(___aomod@dividend+6)^0,f,c
 16950  00404E  1E17               	comf	(___aomod@dividend+5)^0,f,c
 16951  004050  1E16               	comf	(___aomod@dividend+4)^0,f,c
 16952  004052  1E15               	comf	(___aomod@dividend+3)^0,f,c
 16953  004054  1E14               	comf	(___aomod@dividend+2)^0,f,c
 16954  004056  1E13               	comf	(___aomod@dividend+1)^0,f,c
 16955  004058  6C12               	negf	___aomod@dividend^0,c
 16956  00405A  0E00               	movlw	0
 16957  00405C  2213               	addwfc	(___aomod@dividend+1)^0,f,c
 16958  00405E  2214               	addwfc	(___aomod@dividend+2)^0,f,c
 16959  004060  2215               	addwfc	(___aomod@dividend+3)^0,f,c
 16960  004062  2216               	addwfc	(___aomod@dividend+4)^0,f,c
 16961  004064  2217               	addwfc	(___aomod@dividend+5)^0,f,c
 16962  004066  2218               	addwfc	(___aomod@dividend+6)^0,f,c
 16963  004068  2219               	addwfc	(___aomod@dividend+7)^0,f,c
 16964  00406A                     l8150:
 16965  00406A  C012  F012         	movff	___aomod@dividend,?___aomod
 16966  00406E  C013  F013         	movff	___aomod@dividend+1,?___aomod+1
 16967  004072  C014  F014         	movff	___aomod@dividend+2,?___aomod+2
 16968  004076  C015  F015         	movff	___aomod@dividend+3,?___aomod+3
 16969  00407A  C016  F016         	movff	___aomod@dividend+4,?___aomod+4
 16970  00407E  C017  F017         	movff	___aomod@dividend+5,?___aomod+5
 16971  004082  C018  F018         	movff	___aomod@dividend+6,?___aomod+6
 16972  004086  C019  F019         	movff	___aomod@dividend+7,?___aomod+7
 16973  00408A  0012               	return		;funcret
 16974  00408C                     __end_of___aomod:
 16975                           	callstack 0
 16976                           
 16977 ;; *************** function ___aodiv *****************
 16978 ;; Defined at:
 16979 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 16980 ;; Parameters:    Size  Location     Type
 16981 ;;  dividend        8   17[COMRAM] long long 
 16982 ;;  divisor         8   25[COMRAM] long long 
 16983 ;; Auto vars:     Size  Location     Type
 16984 ;;  quotient        8   35[COMRAM] long long 
 16985 ;;  sign            1   34[COMRAM] unsigned char 
 16986 ;;  counter         1   33[COMRAM] unsigned char 
 16987 ;; Return value:  Size  Location     Type
 16988 ;;                  8   17[COMRAM] long long 
 16989 ;; Registers used:
 16990 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16991 ;; Tracked objects:
 16992 ;;		On entry : 0/0
 16993 ;;		On exit  : 0/0
 16994 ;;		Unchanged: 0/0
 16995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16996 ;;      Params:        16       0       0       0       0       0       0
 16997 ;;      Locals:        10       0       0       0       0       0       0
 16998 ;;      Temps:          0       0       0       0       0       0       0
 16999 ;;      Totals:        26       0       0       0       0       0       0
 17000 ;;Total ram usage:       26 bytes
 17001 ;; Hardware stack levels used: 1
 17002 ;; Hardware stack levels required when called: 4
 17003 ;; This function calls:
 17004 ;;		Nothing
 17005 ;; This function is called by:
 17006 ;;		_dtoa
 17007 ;; This function uses a non-reentrant model
 17008 ;;
 17009                           
 17010                           	psect	text67
 17011  003DA0                     __ptext67:
 17012                           	callstack 0
 17013  003DA0                     ___aodiv:
 17014                           	callstack 17
 17015  003DA0  0E00               	movlw	0
 17016  003DA2  6E23               	movwf	___aodiv@sign^0,c
 17017  003DA4  BE21               	btfsc	(___aodiv@divisor+7)^0,7,c
 17018  003DA6  EFD9  F01E         	goto	u5610
 17019  003DAA  EFD7  F01E         	goto	u5611
 17020  003DAE                     u5611:
 17021  003DAE  EFEB  F01E         	goto	l8082
 17022  003DB2                     u5610:
 17023  003DB2  1E21               	comf	(___aodiv@divisor+7)^0,f,c
 17024  003DB4  1E20               	comf	(___aodiv@divisor+6)^0,f,c
 17025  003DB6  1E1F               	comf	(___aodiv@divisor+5)^0,f,c
 17026  003DB8  1E1E               	comf	(___aodiv@divisor+4)^0,f,c
 17027  003DBA  1E1D               	comf	(___aodiv@divisor+3)^0,f,c
 17028  003DBC  1E1C               	comf	(___aodiv@divisor+2)^0,f,c
 17029  003DBE  1E1B               	comf	(___aodiv@divisor+1)^0,f,c
 17030  003DC0  6C1A               	negf	___aodiv@divisor^0,c
 17031  003DC2  0E00               	movlw	0
 17032  003DC4  221B               	addwfc	(___aodiv@divisor+1)^0,f,c
 17033  003DC6  221C               	addwfc	(___aodiv@divisor+2)^0,f,c
 17034  003DC8  221D               	addwfc	(___aodiv@divisor+3)^0,f,c
 17035  003DCA  221E               	addwfc	(___aodiv@divisor+4)^0,f,c
 17036  003DCC  221F               	addwfc	(___aodiv@divisor+5)^0,f,c
 17037  003DCE  2220               	addwfc	(___aodiv@divisor+6)^0,f,c
 17038  003DD0  2221               	addwfc	(___aodiv@divisor+7)^0,f,c
 17039  003DD2  0E01               	movlw	1
 17040  003DD4  6E23               	movwf	___aodiv@sign^0,c
 17041  003DD6                     l8082:
 17042  003DD6  BE19               	btfsc	(___aodiv@dividend+7)^0,7,c
 17043  003DD8  EFF2  F01E         	goto	u5620
 17044  003DDC  EFF0  F01E         	goto	u5621
 17045  003DE0                     u5621:
 17046  003DE0  EF04  F01F         	goto	l8088
 17047  003DE4                     u5620:
 17048  003DE4  1E19               	comf	(___aodiv@dividend+7)^0,f,c
 17049  003DE6  1E18               	comf	(___aodiv@dividend+6)^0,f,c
 17050  003DE8  1E17               	comf	(___aodiv@dividend+5)^0,f,c
 17051  003DEA  1E16               	comf	(___aodiv@dividend+4)^0,f,c
 17052  003DEC  1E15               	comf	(___aodiv@dividend+3)^0,f,c
 17053  003DEE  1E14               	comf	(___aodiv@dividend+2)^0,f,c
 17054  003DF0  1E13               	comf	(___aodiv@dividend+1)^0,f,c
 17055  003DF2  6C12               	negf	___aodiv@dividend^0,c
 17056  003DF4  0E00               	movlw	0
 17057  003DF6  2213               	addwfc	(___aodiv@dividend+1)^0,f,c
 17058  003DF8  2214               	addwfc	(___aodiv@dividend+2)^0,f,c
 17059  003DFA  2215               	addwfc	(___aodiv@dividend+3)^0,f,c
 17060  003DFC  2216               	addwfc	(___aodiv@dividend+4)^0,f,c
 17061  003DFE  2217               	addwfc	(___aodiv@dividend+5)^0,f,c
 17062  003E00  2218               	addwfc	(___aodiv@dividend+6)^0,f,c
 17063  003E02  2219               	addwfc	(___aodiv@dividend+7)^0,f,c
 17064  003E04  0E01               	movlw	1
 17065  003E06  1A23               	xorwf	___aodiv@sign^0,f,c
 17066  003E08                     l8088:
 17067  003E08  EE20  F024         	lfsr	2,___aodiv@quotient
 17068  003E0C  0E07               	movlw	7
 17069  003E0E                     u5631:
 17070  003E0E  6ADE               	clrf	postinc2,c
 17071  003E10  06E8               	decf	wreg,f,c
 17072  003E12  E2FD               	bc	u5631
 17073  003E14  501A               	movf	___aodiv@divisor^0,w,c
 17074  003E16  101B               	iorwf	(___aodiv@divisor+1)^0,w,c
 17075  003E18  101C               	iorwf	(___aodiv@divisor+2)^0,w,c
 17076  003E1A  101D               	iorwf	(___aodiv@divisor+3)^0,w,c
 17077  003E1C  101E               	iorwf	(___aodiv@divisor+4)^0,w,c
 17078  003E1E  101F               	iorwf	(___aodiv@divisor+5)^0,w,c
 17079  003E20  1020               	iorwf	(___aodiv@divisor+6)^0,w,c
 17080  003E22  1021               	iorwf	(___aodiv@divisor+7)^0,w,c
 17081  003E24  B4D8               	btfsc	status,2,c
 17082  003E26  EF17  F01F         	goto	u5641
 17083  003E2A  EF19  F01F         	goto	u5640
 17084  003E2E                     u5641:
 17085  003E2E  EF6B  F01F         	goto	l8110
 17086  003E32                     u5640:
 17087  003E32  0E01               	movlw	1
 17088  003E34  6E22               	movwf	___aodiv@counter^0,c
 17089  003E36  EF27  F01F         	goto	l8096
 17090  003E3A                     l8094:
 17091  003E3A  90D8               	bcf	status,0,c
 17092  003E3C  361A               	rlcf	___aodiv@divisor^0,f,c
 17093  003E3E  361B               	rlcf	(___aodiv@divisor+1)^0,f,c
 17094  003E40  361C               	rlcf	(___aodiv@divisor+2)^0,f,c
 17095  003E42  361D               	rlcf	(___aodiv@divisor+3)^0,f,c
 17096  003E44  361E               	rlcf	(___aodiv@divisor+4)^0,f,c
 17097  003E46  361F               	rlcf	(___aodiv@divisor+5)^0,f,c
 17098  003E48  3620               	rlcf	(___aodiv@divisor+6)^0,f,c
 17099  003E4A  3621               	rlcf	(___aodiv@divisor+7)^0,f,c
 17100  003E4C  2A22               	incf	___aodiv@counter^0,f,c
 17101  003E4E                     l8096:
 17102  003E4E  AE21               	btfss	(___aodiv@divisor+7)^0,7,c
 17103  003E50  EF2C  F01F         	goto	u5651
 17104  003E54  EF2E  F01F         	goto	u5650
 17105  003E58                     u5651:
 17106  003E58  EF1D  F01F         	goto	l8094
 17107  003E5C                     u5650:
 17108  003E5C                     l8098:
 17109  003E5C  90D8               	bcf	status,0,c
 17110  003E5E  3624               	rlcf	___aodiv@quotient^0,f,c
 17111  003E60  3625               	rlcf	(___aodiv@quotient+1)^0,f,c
 17112  003E62  3626               	rlcf	(___aodiv@quotient+2)^0,f,c
 17113  003E64  3627               	rlcf	(___aodiv@quotient+3)^0,f,c
 17114  003E66  3628               	rlcf	(___aodiv@quotient+4)^0,f,c
 17115  003E68  3629               	rlcf	(___aodiv@quotient+5)^0,f,c
 17116  003E6A  362A               	rlcf	(___aodiv@quotient+6)^0,f,c
 17117  003E6C  362B               	rlcf	(___aodiv@quotient+7)^0,f,c
 17118  003E6E  501A               	movf	___aodiv@divisor^0,w,c
 17119  003E70  5C12               	subwf	___aodiv@dividend^0,w,c
 17120  003E72  501B               	movf	(___aodiv@divisor+1)^0,w,c
 17121  003E74  5813               	subwfb	(___aodiv@dividend+1)^0,w,c
 17122  003E76  501C               	movf	(___aodiv@divisor+2)^0,w,c
 17123  003E78  5814               	subwfb	(___aodiv@dividend+2)^0,w,c
 17124  003E7A  501D               	movf	(___aodiv@divisor+3)^0,w,c
 17125  003E7C  5815               	subwfb	(___aodiv@dividend+3)^0,w,c
 17126  003E7E  501E               	movf	(___aodiv@divisor+4)^0,w,c
 17127  003E80  5816               	subwfb	(___aodiv@dividend+4)^0,w,c
 17128  003E82  501F               	movf	(___aodiv@divisor+5)^0,w,c
 17129  003E84  5817               	subwfb	(___aodiv@dividend+5)^0,w,c
 17130  003E86  5020               	movf	(___aodiv@divisor+6)^0,w,c
 17131  003E88  5818               	subwfb	(___aodiv@dividend+6)^0,w,c
 17132  003E8A  5021               	movf	(___aodiv@divisor+7)^0,w,c
 17133  003E8C  5819               	subwfb	(___aodiv@dividend+7)^0,w,c
 17134  003E8E  A0D8               	btfss	status,0,c
 17135  003E90  EF4C  F01F         	goto	u5661
 17136  003E94  EF4E  F01F         	goto	u5660
 17137  003E98                     u5661:
 17138  003E98  EF5F  F01F         	goto	l8106
 17139  003E9C                     u5660:
 17140  003E9C  501A               	movf	___aodiv@divisor^0,w,c
 17141  003E9E  5E12               	subwf	___aodiv@dividend^0,f,c
 17142  003EA0  501B               	movf	(___aodiv@divisor+1)^0,w,c
 17143  003EA2  5A13               	subwfb	(___aodiv@dividend+1)^0,f,c
 17144  003EA4  501C               	movf	(___aodiv@divisor+2)^0,w,c
 17145  003EA6  5A14               	subwfb	(___aodiv@dividend+2)^0,f,c
 17146  003EA8  501D               	movf	(___aodiv@divisor+3)^0,w,c
 17147  003EAA  5A15               	subwfb	(___aodiv@dividend+3)^0,f,c
 17148  003EAC  501E               	movf	(___aodiv@divisor+4)^0,w,c
 17149  003EAE  5A16               	subwfb	(___aodiv@dividend+4)^0,f,c
 17150  003EB0  501F               	movf	(___aodiv@divisor+5)^0,w,c
 17151  003EB2  5A17               	subwfb	(___aodiv@dividend+5)^0,f,c
 17152  003EB4  5020               	movf	(___aodiv@divisor+6)^0,w,c
 17153  003EB6  5A18               	subwfb	(___aodiv@dividend+6)^0,f,c
 17154  003EB8  5021               	movf	(___aodiv@divisor+7)^0,w,c
 17155  003EBA  5A19               	subwfb	(___aodiv@dividend+7)^0,f,c
 17156  003EBC  8024               	bsf	___aodiv@quotient^0,0,c
 17157  003EBE                     l8106:
 17158  003EBE  90D8               	bcf	status,0,c
 17159  003EC0  3221               	rrcf	(___aodiv@divisor+7)^0,f,c
 17160  003EC2  3220               	rrcf	(___aodiv@divisor+6)^0,f,c
 17161  003EC4  321F               	rrcf	(___aodiv@divisor+5)^0,f,c
 17162  003EC6  321E               	rrcf	(___aodiv@divisor+4)^0,f,c
 17163  003EC8  321D               	rrcf	(___aodiv@divisor+3)^0,f,c
 17164  003ECA  321C               	rrcf	(___aodiv@divisor+2)^0,f,c
 17165  003ECC  321B               	rrcf	(___aodiv@divisor+1)^0,f,c
 17166  003ECE  321A               	rrcf	___aodiv@divisor^0,f,c
 17167  003ED0  2E22               	decfsz	___aodiv@counter^0,f,c
 17168  003ED2  EF2E  F01F         	goto	l8098
 17169  003ED6                     l8110:
 17170  003ED6  5023               	movf	___aodiv@sign^0,w,c
 17171  003ED8  B4D8               	btfsc	status,2,c
 17172  003EDA  EF71  F01F         	goto	u5671
 17173  003EDE  EF73  F01F         	goto	u5670
 17174  003EE2                     u5671:
 17175  003EE2  EF83  F01F         	goto	l8114
 17176  003EE6                     u5670:
 17177  003EE6  1E2B               	comf	(___aodiv@quotient+7)^0,f,c
 17178  003EE8  1E2A               	comf	(___aodiv@quotient+6)^0,f,c
 17179  003EEA  1E29               	comf	(___aodiv@quotient+5)^0,f,c
 17180  003EEC  1E28               	comf	(___aodiv@quotient+4)^0,f,c
 17181  003EEE  1E27               	comf	(___aodiv@quotient+3)^0,f,c
 17182  003EF0  1E26               	comf	(___aodiv@quotient+2)^0,f,c
 17183  003EF2  1E25               	comf	(___aodiv@quotient+1)^0,f,c
 17184  003EF4  6C24               	negf	___aodiv@quotient^0,c
 17185  003EF6  0E00               	movlw	0
 17186  003EF8  2225               	addwfc	(___aodiv@quotient+1)^0,f,c
 17187  003EFA  2226               	addwfc	(___aodiv@quotient+2)^0,f,c
 17188  003EFC  2227               	addwfc	(___aodiv@quotient+3)^0,f,c
 17189  003EFE  2228               	addwfc	(___aodiv@quotient+4)^0,f,c
 17190  003F00  2229               	addwfc	(___aodiv@quotient+5)^0,f,c
 17191  003F02  222A               	addwfc	(___aodiv@quotient+6)^0,f,c
 17192  003F04  222B               	addwfc	(___aodiv@quotient+7)^0,f,c
 17193  003F06                     l8114:
 17194  003F06  C024  F012         	movff	___aodiv@quotient,?___aodiv
 17195  003F0A  C025  F013         	movff	___aodiv@quotient+1,?___aodiv+1
 17196  003F0E  C026  F014         	movff	___aodiv@quotient+2,?___aodiv+2
 17197  003F12  C027  F015         	movff	___aodiv@quotient+3,?___aodiv+3
 17198  003F16  C028  F016         	movff	___aodiv@quotient+4,?___aodiv+4
 17199  003F1A  C029  F017         	movff	___aodiv@quotient+5,?___aodiv+5
 17200  003F1E  C02A  F018         	movff	___aodiv@quotient+6,?___aodiv+6
 17201  003F22  C02B  F019         	movff	___aodiv@quotient+7,?___aodiv+7
 17202  003F26  0012               	return		;funcret
 17203  003F28                     __end_of___aodiv:
 17204                           	callstack 0
 17205                           
 17206 ;; *************** function _LCD_DrawText *****************
 17207 ;; Defined at:
 17208 ;;		line 713 in file "libraries/lcd_highlevel.c"
 17209 ;; Parameters:    Size  Location     Type
 17210 ;;  msg             2   31[COMRAM] PTR const unsigned char 
 17211 ;;		 -> g1.str(2), touchScreenController@s(20), STR_14(13), STR_13(13), 
 17212 ;;		 -> STR_12(11), STR_11(8), STR_10(9), STR_9(4), 
 17213 ;;		 -> STR_8(4), STR_7(8), STR_6(9), STR_5(9), 
 17214 ;;		 -> STR_4(11), g1(239), STR_1(10), 
 17215 ;;  font            2   33[COMRAM] PTR const struct .
 17216 ;;		 -> arialNarrow_12ptFontInfo(7), 
 17217 ;;  align           1   35[COMRAM] enum E355
 17218 ;;  posX            2   36[COMRAM] unsigned short 
 17219 ;;  posY            2   38[COMRAM] unsigned short 
 17220 ;;  color           2   40[COMRAM] unsigned short 
 17221 ;;  bg_color        2   42[COMRAM] unsigned short 
 17222 ;; Auto vars:     Size  Location     Type
 17223 ;;  posXEnd         2   58[COMRAM] unsigned short 
 17224 ;;  posYEnd         2   56[COMRAM] unsigned short 
 17225 ;;  yOffset         2   52[COMRAM] unsigned short 
 17226 ;;  offset          2   50[COMRAM] unsigned short 
 17227 ;;  width           1   64[COMRAM] unsigned char 
 17228 ;;  x               1   63[COMRAM] unsigned char 
 17229 ;;  tempChar        1   62[COMRAM] char 
 17230 ;;  i               1   61[COMRAM] unsigned char 
 17231 ;;  y               1   60[COMRAM] unsigned char 
 17232 ;;  fontPixel       1   55[COMRAM] unsigned char 
 17233 ;;  fontByte        1   54[COMRAM] unsigned char 
 17234 ;; Return value:  Size  Location     Type
 17235 ;;                  1    wreg      void 
 17236 ;; Registers used:
 17237 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17238 ;; Tracked objects:
 17239 ;;		On entry : 0/0
 17240 ;;		On exit  : 0/0
 17241 ;;		Unchanged: 0/0
 17242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17243 ;;      Params:        13       0       0       0       0       0       0
 17244 ;;      Locals:        15       0       0       0       0       0       0
 17245 ;;      Temps:          6       0       0       0       0       0       0
 17246 ;;      Totals:        34       0       0       0       0       0       0
 17247 ;;Total ram usage:       34 bytes
 17248 ;; Hardware stack levels used: 1
 17249 ;; Hardware stack levels required when called: 5
 17250 ;; This function calls:
 17251 ;;		___awdiv
 17252 ;;		___wmul
 17253 ;;		_strlen
 17254 ;; This function is called by:
 17255 ;;		_Factory_init
 17256 ;;		_Score_draw
 17257 ;;		_Menu_welcomeDraw
 17258 ;;		_Menu_parametersDraw
 17259 ;;		_Menu_endGame
 17260 ;;		_LCD_ButtonDraw
 17261 ;;		_touchScreenController
 17262 ;; This function uses a non-reentrant model
 17263 ;;
 17264                           
 17265                           	psect	text68
 17266  001DB6                     __ptext68:
 17267                           	callstack 0
 17268  001DB6                     _LCD_DrawText:
 17269                           	callstack 20
 17270  001DB6                     
 17271                           ;libraries/lcd_highlevel.c: 713: void LCD_DrawText(const uint8_t * msg,const FONT_INFO *
      +                           font, ALIGN align,;libraries/lcd_highlevel.c: 714:         uint16_t posX, uint16_t posY
      +                          , uint16_t color, uint16_t bg_color);libraries/lcd_highlevel.c: 715: {;libraries/lcd_hig
      +                          hlevel.c: 716:   uint8_t x,y,i;;libraries/lcd_highlevel.c: 717:   int8_t tempChar;;libra
      +                          ries/lcd_highlevel.c: 718:   uint16_t offset;;libraries/lcd_highlevel.c: 719:   uint8_t 
      +                          width=0;
 17272  001DB6  0E00               	movlw	0
 17273  001DB8  6E41               	movwf	LCD_DrawText@width^0,c
 17274                           
 17275                           ;libraries/lcd_highlevel.c: 720:   uint8_t fontByte,fontPixel;;libraries/lcd_highlevel.c
      +                          : 721:   uint16_t posYEnd, posXEnd, yOffset;;libraries/lcd_highlevel.c: 725:   for(i=0;i
      +                          <strlen(msg);i++)
 17276  001DBA  0E00               	movlw	0
 17277  001DBC  6E3E               	movwf	LCD_DrawText@i^0,c
 17278  001DBE  EF30  F00F         	goto	l8852
 17279  001DC2                     l8846:
 17280                           
 17281                           ;libraries/lcd_highlevel.c: 726:   {;libraries/lcd_highlevel.c: 727:     tempChar = (msg
      +                          [i]) - font->start_char;
 17282  001DC2  0E01               	movlw	1
 17283  001DC4  2422               	addwf	LCD_DrawText@font^0,w,c
 17284  001DC6  6E2D               	movwf	??_LCD_DrawText^0,c
 17285  001DC8  0E00               	movlw	0
 17286  001DCA  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17287  001DCC  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17288  001DCE  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17289  001DD2  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17290  001DD6                     	if	0	;tblptru may be non-zero
 17291  001DD6                     	endif
 17292  001DD6                     	if	0	;tblptru may be non-zero
 17293  001DD6                     	endif
 17294  001DD6  0008               	tblrd		*
 17295  001DD8  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17296  001DDC  503E               	movf	LCD_DrawText@i^0,w,c
 17297  001DDE  2420               	addwf	LCD_DrawText@msg^0,w,c
 17298  001DE0  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 17299  001DE2  0E00               	movlw	0
 17300  001DE4  2021               	addwfc	(LCD_DrawText@msg+1)^0,w,c
 17301  001DE6  6E31               	movwf	(??_LCD_DrawText+4)^0,c
 17302  001DE8  C030  FFF6         	movff	??_LCD_DrawText+3,tblptrl
 17303  001DEC  C031  FFF7         	movff	??_LCD_DrawText+4,tblptrh
 17304  001DF0  6AF8               	clrf	tblptru,c
 17305  001DF2  0E05               	movlw	(high __ramtop+-1)
 17306  001DF4  64F7               	cpfsgt	tblptrh,c
 17307  001DF6  D003               	bra	u6317
 17308  001DF8  0008               	tblrd		*
 17309  001DFA  50F5               	movf	tablat,w,c
 17310  001DFC  D005               	bra	u6310
 17311  001DFE                     u6317:
 17312  001DFE  CFF6 FFE1          	movff	tblptrl,fsr1l
 17313  001E02  CFF7 FFE2          	movff	tblptrh,fsr1h
 17314  001E06  50E7               	movf	indf1,w,c
 17315  001E08                     u6310:
 17316  001E08  6E32               	movwf	(??_LCD_DrawText+5)^0,c
 17317  001E0A  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 17318  001E0C  5C32               	subwf	(??_LCD_DrawText+5)^0,w,c
 17319  001E0E  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 17320  001E10                     
 17321                           ;libraries/lcd_highlevel.c: 728:     width += font->descriptor[tempChar].width+2;
 17322  001E10  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17323  001E12  6E1A               	movwf	___wmul@multiplier^0,c
 17324  001E14  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17325  001E16  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17326  001E18  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17327  001E1A  0E00               	movlw	0
 17328  001E1C  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17329  001E1E  0E03               	movlw	3
 17330  001E20  6E1C               	movwf	___wmul@multiplicand^0,c
 17331  001E22  ECAB  F031         	call	___wmul	;wreg free
 17332  001E26  0E03               	movlw	3
 17333  001E28  2422               	addwf	LCD_DrawText@font^0,w,c
 17334  001E2A  6E2D               	movwf	??_LCD_DrawText^0,c
 17335  001E2C  0E00               	movlw	0
 17336  001E2E  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17337  001E30  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17338  001E32  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17339  001E36  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17340  001E3A                     	if	0	;tblptru may be non-zero
 17341  001E3A                     	endif
 17342  001E3A                     	if	0	;tblptru may be non-zero
 17343  001E3A                     	endif
 17344  001E3A  0009               	tblrd		*+
 17345  001E3C  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17346  001E40  0009               	tblrd		*+
 17347  001E42  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17348  001E46  501A               	movf	?___wmul^0,w,c
 17349  001E48  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17350  001E4A  501B               	movf	(?___wmul+1)^0,w,c
 17351  001E4C  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17352  001E4E  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17353  001E52  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17354  001E56                     	if	0	;tblptru may be non-zero
 17355  001E56                     	endif
 17356  001E56                     	if	0	;tblptru may be non-zero
 17357  001E56                     	endif
 17358  001E56  0008               	tblrd		*
 17359  001E58  50F5               	movf	tablat,w,c
 17360  001E5A  0F02               	addlw	2
 17361  001E5C  2641               	addwf	LCD_DrawText@width^0,f,c
 17362  001E5E                     
 17363                           ;libraries/lcd_highlevel.c: 729:   }
 17364  001E5E  2A3E               	incf	LCD_DrawText@i^0,f,c
 17365  001E60                     l8852:
 17366  001E60  C020  F012         	movff	LCD_DrawText@msg,strlen@s
 17367  001E64  C021  F013         	movff	LCD_DrawText@msg+1,strlen@s+1
 17368  001E68  EC7E  F030         	call	_strlen	;wreg free
 17369  001E6C  503E               	movf	LCD_DrawText@i^0,w,c
 17370  001E6E  6E2D               	movwf	??_LCD_DrawText^0,c
 17371  001E70  6A2E               	clrf	(??_LCD_DrawText+1)^0,c
 17372  001E72  5012               	movf	?_strlen^0,w,c
 17373  001E74  5C2D               	subwf	??_LCD_DrawText^0,w,c
 17374  001E76  5013               	movf	(?_strlen+1)^0,w,c
 17375  001E78  582E               	subwfb	(??_LCD_DrawText+1)^0,w,c
 17376  001E7A  A0D8               	btfss	status,0,c
 17377  001E7C  EF42  F00F         	goto	u6321
 17378  001E80  EF44  F00F         	goto	u6320
 17379  001E84                     u6321:
 17380  001E84  EFE1  F00E         	goto	l8846
 17381  001E88                     u6320:
 17382  001E88                     
 17383                           ;libraries/lcd_highlevel.c: 730:   if(align == A_RIGHT)
 17384  001E88  0424               	decf	LCD_DrawText@align^0,w,c
 17385  001E8A  A4D8               	btfss	status,2,c
 17386  001E8C  EF4A  F00F         	goto	u6331
 17387  001E90  EF4C  F00F         	goto	u6330
 17388  001E94                     u6331:
 17389  001E94  EF55  F00F         	goto	l8858
 17390  001E98                     u6330:
 17391  001E98                     
 17392                           ;libraries/lcd_highlevel.c: 731:   {;libraries/lcd_highlevel.c: 732:     posX = posX - w
      +                          idth;
 17393  001E98  5041               	movf	LCD_DrawText@width^0,w,c
 17394  001E9A  5C25               	subwf	LCD_DrawText@posX^0,w,c
 17395  001E9C  6E25               	movwf	LCD_DrawText@posX^0,c
 17396  001E9E  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 17397  001EA0  A0D8               	btfss	status,0,c
 17398  001EA2  0426               	decf	(LCD_DrawText@posX+1)^0,w,c
 17399  001EA4  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17400                           
 17401                           ;libraries/lcd_highlevel.c: 733:   }
 17402  001EA6  EF6D  F00F         	goto	l8862
 17403  001EAA                     l8858:
 17404  001EAA  0E02               	movlw	2
 17405  001EAC  1824               	xorwf	LCD_DrawText@align^0,w,c
 17406  001EAE  A4D8               	btfss	status,2,c
 17407  001EB0  EF5C  F00F         	goto	u6341
 17408  001EB4  EF5E  F00F         	goto	u6340
 17409  001EB8                     u6341:
 17410  001EB8  EF6D  F00F         	goto	l8862
 17411  001EBC                     u6340:
 17412  001EBC                     
 17413                           ;libraries/lcd_highlevel.c: 735:   {;libraries/lcd_highlevel.c: 736:     posX = posX - w
      +                          idth / 2;
 17414  001EBC  C041  F012         	movff	LCD_DrawText@width,___awdiv@dividend
 17415  001EC0  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17416  001EC2  0E00               	movlw	0
 17417  001EC4  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17418  001EC6  0E02               	movlw	2
 17419  001EC8  6E14               	movwf	___awdiv@divisor^0,c
 17420  001ECA  ECB3  F028         	call	___awdiv	;wreg free
 17421  001ECE  5012               	movf	?___awdiv^0,w,c
 17422  001ED0  5C25               	subwf	LCD_DrawText@posX^0,w,c
 17423  001ED2  6E25               	movwf	LCD_DrawText@posX^0,c
 17424  001ED4  5013               	movf	(?___awdiv+1)^0,w,c
 17425  001ED6  5826               	subwfb	(LCD_DrawText@posX+1)^0,w,c
 17426  001ED8  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17427  001EDA                     l8862:
 17428                           
 17429                           ;libraries/lcd_highlevel.c: 740:   {;libraries/lcd_highlevel.c: 741:     tempChar = (*ms
      +                          g) - font->start_char;
 17430  001EDA  0E01               	movlw	1
 17431  001EDC  2422               	addwf	LCD_DrawText@font^0,w,c
 17432  001EDE  6E2D               	movwf	??_LCD_DrawText^0,c
 17433  001EE0  0E00               	movlw	0
 17434  001EE2  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17435  001EE4  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17436  001EE6  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17437  001EEA  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17438  001EEE                     	if	0	;tblptru may be non-zero
 17439  001EEE                     	endif
 17440  001EEE                     	if	0	;tblptru may be non-zero
 17441  001EEE                     	endif
 17442  001EEE  0008               	tblrd		*
 17443  001EF0  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17444  001EF4  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 17445  001EF8  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 17446  001EFC  6AF8               	clrf	tblptru,c
 17447  001EFE  0E05               	movlw	(high __ramtop+-1)
 17448  001F00  64F7               	cpfsgt	tblptrh,c
 17449  001F02  D003               	bra	u6357
 17450  001F04  0008               	tblrd		*
 17451  001F06  50F5               	movf	tablat,w,c
 17452  001F08  D005               	bra	u6350
 17453  001F0A                     u6357:
 17454  001F0A  CFF6 FFE1          	movff	tblptrl,fsr1l
 17455  001F0E  CFF7 FFE2          	movff	tblptrh,fsr1h
 17456  001F12  50E7               	movf	indf1,w,c
 17457  001F14                     u6350:
 17458  001F14  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 17459  001F16  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 17460  001F18  5C30               	subwf	(??_LCD_DrawText+3)^0,w,c
 17461  001F1A  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 17462  001F1C                     
 17463                           ;libraries/lcd_highlevel.c: 742:     offset = font->descriptor[tempChar].offset;
 17464  001F1C  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17465  001F1E  6E1A               	movwf	___wmul@multiplier^0,c
 17466  001F20  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17467  001F22  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17468  001F24  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17469  001F26  0E00               	movlw	0
 17470  001F28  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17471  001F2A  0E03               	movlw	3
 17472  001F2C  6E1C               	movwf	___wmul@multiplicand^0,c
 17473  001F2E  ECAB  F031         	call	___wmul	;wreg free
 17474  001F32  0E03               	movlw	3
 17475  001F34  2422               	addwf	LCD_DrawText@font^0,w,c
 17476  001F36  6E2D               	movwf	??_LCD_DrawText^0,c
 17477  001F38  0E00               	movlw	0
 17478  001F3A  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17479  001F3C  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17480  001F3E  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17481  001F42  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17482  001F46                     	if	0	;tblptru may be non-zero
 17483  001F46                     	endif
 17484  001F46                     	if	0	;tblptru may be non-zero
 17485  001F46                     	endif
 17486  001F46  0009               	tblrd		*+
 17487  001F48  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17488  001F4C  0009               	tblrd		*+
 17489  001F4E  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17490  001F52  501A               	movf	?___wmul^0,w,c
 17491  001F54  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17492  001F56  501B               	movf	(?___wmul+1)^0,w,c
 17493  001F58  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17494  001F5A  0E01               	movlw	1
 17495  001F5C  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17496  001F5E  0E00               	movlw	0
 17497  001F60  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17498  001F62  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17499  001F66  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17500  001F6A                     	if	0	;tblptru may be non-zero
 17501  001F6A                     	endif
 17502  001F6A                     	if	0	;tblptru may be non-zero
 17503  001F6A                     	endif
 17504  001F6A  0009               	tblrd		*+
 17505  001F6C  CFF5 F033          	movff	tablat,LCD_DrawText@offset
 17506  001F70  000A               	tblrd		*-
 17507  001F72  CFF5 F034          	movff	tablat,LCD_DrawText@offset+1
 17508  001F76                     
 17509                           ;libraries/lcd_highlevel.c: 743:     width = font->descriptor[tempChar].width;
 17510  001F76  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17511  001F78  6E1A               	movwf	___wmul@multiplier^0,c
 17512  001F7A  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17513  001F7C  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17514  001F7E  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17515  001F80  0E00               	movlw	0
 17516  001F82  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17517  001F84  0E03               	movlw	3
 17518  001F86  6E1C               	movwf	___wmul@multiplicand^0,c
 17519  001F88  ECAB  F031         	call	___wmul	;wreg free
 17520  001F8C  0E03               	movlw	3
 17521  001F8E  2422               	addwf	LCD_DrawText@font^0,w,c
 17522  001F90  6E2D               	movwf	??_LCD_DrawText^0,c
 17523  001F92  0E00               	movlw	0
 17524  001F94  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17525  001F96  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17526  001F98  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17527  001F9C  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17528  001FA0                     	if	0	;tblptru may be non-zero
 17529  001FA0                     	endif
 17530  001FA0                     	if	0	;tblptru may be non-zero
 17531  001FA0                     	endif
 17532  001FA0  0009               	tblrd		*+
 17533  001FA2  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17534  001FA6  0009               	tblrd		*+
 17535  001FA8  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17536  001FAC  501A               	movf	?___wmul^0,w,c
 17537  001FAE  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17538  001FB0  501B               	movf	(?___wmul+1)^0,w,c
 17539  001FB2  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17540  001FB4  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17541  001FB8  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17542  001FBC                     	if	0	;tblptru may be non-zero
 17543  001FBC                     	endif
 17544  001FBC                     	if	0	;tblptru may be non-zero
 17545  001FBC                     	endif
 17546  001FBC  0008               	tblrd		*
 17547  001FBE  CFF5 F041          	movff	tablat,LCD_DrawText@width
 17548  001FC2                     
 17549                           ;libraries/lcd_highlevel.c: 748:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17550  001FC2  0E2A               	movlw	42
 17551  001FC4  6E80               	movwf	128,c	;volatile
 17552  001FC6  988B               	bcf	3979,4,c	;volatile
 17553  001FC8  968B               	bcf	3979,3,c	;volatile
 17554  001FCA  868B               	bsf	3979,3,c	;volatile
 17555  001FCC  888B               	bsf	3979,4,c	;volatile
 17556  001FCE                     
 17557                           ;libraries/lcd_highlevel.c: 749:     PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 17558  001FCE  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 17559  001FD0  6E80               	movwf	128,c	;volatile
 17560  001FD2  968B               	bcf	3979,3,c	;volatile
 17561  001FD4  868B               	bsf	3979,3,c	;volatile
 17562  001FD6                     
 17563                           ;libraries/lcd_highlevel.c: 750:     PORTA = posX; LATC3 = 0; LATC3 = 1;;
 17564  001FD6  C025  FF80         	movff	LCD_DrawText@posX,3968	;volatile
 17565  001FDA  968B               	bcf	3979,3,c	;volatile
 17566  001FDC  868B               	bsf	3979,3,c	;volatile
 17567  001FDE                     
 17568                           ;libraries/lcd_highlevel.c: 751:     posXEnd = posX+width-1+2;
 17569  001FDE  5041               	movf	LCD_DrawText@width^0,w,c
 17570  001FE0  2425               	addwf	LCD_DrawText@posX^0,w,c
 17571  001FE2  6E2D               	movwf	??_LCD_DrawText^0,c
 17572  001FE4  0E00               	movlw	0
 17573  001FE6  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 17574  001FE8  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17575  001FEA  0E01               	movlw	1
 17576  001FEC  242D               	addwf	??_LCD_DrawText^0,w,c
 17577  001FEE  6E3B               	movwf	LCD_DrawText@posXEnd^0,c
 17578  001FF0  0E00               	movlw	0
 17579  001FF2  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 17580  001FF4  6E3C               	movwf	(LCD_DrawText@posXEnd+1)^0,c
 17581  001FF6                     
 17582                           ;libraries/lcd_highlevel.c: 752:     PORTA = posXEnd>>8; LATC3 = 0; LATC3 = 1;;
 17583  001FF6  503C               	movf	(LCD_DrawText@posXEnd+1)^0,w,c
 17584  001FF8  6E80               	movwf	128,c	;volatile
 17585  001FFA  968B               	bcf	3979,3,c	;volatile
 17586  001FFC  868B               	bsf	3979,3,c	;volatile
 17587  001FFE                     
 17588                           ;libraries/lcd_highlevel.c: 753:     PORTA = posXEnd; LATC3 = 0; LATC3 = 1;;
 17589  001FFE  C03B  FF80         	movff	LCD_DrawText@posXEnd,3968	;volatile
 17590  002002  968B               	bcf	3979,3,c	;volatile
 17591  002004  868B               	bsf	3979,3,c	;volatile
 17592  002006                     
 17593                           ;libraries/lcd_highlevel.c: 755:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17594  002006  0E2B               	movlw	43
 17595  002008  6E80               	movwf	128,c	;volatile
 17596  00200A  988B               	bcf	3979,4,c	;volatile
 17597  00200C  968B               	bcf	3979,3,c	;volatile
 17598  00200E  868B               	bsf	3979,3,c	;volatile
 17599  002010  888B               	bsf	3979,4,c	;volatile
 17600  002012                     
 17601                           ;libraries/lcd_highlevel.c: 756:     PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 17602  002012  5028               	movf	(LCD_DrawText@posY+1)^0,w,c
 17603  002014  6E80               	movwf	128,c	;volatile
 17604  002016  968B               	bcf	3979,3,c	;volatile
 17605  002018  868B               	bsf	3979,3,c	;volatile
 17606  00201A                     
 17607                           ;libraries/lcd_highlevel.c: 757:     PORTA = posY; LATC3 = 0; LATC3 = 1;;
 17608  00201A  C027  FF80         	movff	LCD_DrawText@posY,3968	;volatile
 17609  00201E  968B               	bcf	3979,3,c	;volatile
 17610  002020  868B               	bsf	3979,3,c	;volatile
 17611  002022                     
 17612                           ;libraries/lcd_highlevel.c: 758:     posYEnd = posY + font->height-1;
 17613  002022  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 17614  002026  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 17615  00202A                     	if	0	;tblptru may be non-zero
 17616  00202A                     	endif
 17617  00202A                     	if	0	;tblptru may be non-zero
 17618  00202A                     	endif
 17619  00202A  0008               	tblrd		*
 17620  00202C  50F5               	movf	tablat,w,c
 17621  00202E  2427               	addwf	LCD_DrawText@posY^0,w,c
 17622  002030  6E2D               	movwf	??_LCD_DrawText^0,c
 17623  002032  0E00               	movlw	0
 17624  002034  2028               	addwfc	(LCD_DrawText@posY+1)^0,w,c
 17625  002036  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17626  002038  0EFF               	movlw	255
 17627  00203A  242D               	addwf	??_LCD_DrawText^0,w,c
 17628  00203C  6E39               	movwf	LCD_DrawText@posYEnd^0,c
 17629  00203E  0EFF               	movlw	255
 17630  002040  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 17631  002042  6E3A               	movwf	(LCD_DrawText@posYEnd+1)^0,c
 17632  002044                     
 17633                           ;libraries/lcd_highlevel.c: 759:     PORTA = posYEnd>>8; LATC3 = 0; LATC3 = 1;;
 17634  002044  503A               	movf	(LCD_DrawText@posYEnd+1)^0,w,c
 17635  002046  6E80               	movwf	128,c	;volatile
 17636  002048  968B               	bcf	3979,3,c	;volatile
 17637  00204A  868B               	bsf	3979,3,c	;volatile
 17638  00204C                     
 17639                           ;libraries/lcd_highlevel.c: 760:     PORTA = posYEnd; LATC3 = 0; LATC3 = 1;;
 17640  00204C  C039  FF80         	movff	LCD_DrawText@posYEnd,3968	;volatile
 17641  002050  968B               	bcf	3979,3,c	;volatile
 17642  002052  868B               	bsf	3979,3,c	;volatile
 17643  002054                     
 17644                           ;libraries/lcd_highlevel.c: 761:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17645  002054  0E2C               	movlw	44
 17646  002056  6E80               	movwf	128,c	;volatile
 17647  002058  988B               	bcf	3979,4,c	;volatile
 17648  00205A  968B               	bcf	3979,3,c	;volatile
 17649  00205C  868B               	bsf	3979,3,c	;volatile
 17650  00205E  888B               	bsf	3979,4,c	;volatile
 17651  002060                     
 17652                           ;libraries/lcd_highlevel.c: 763:     for(y=0;y<font->height;y++)
 17653  002060  0E00               	movlw	0
 17654  002062  6E3D               	movwf	LCD_DrawText@y^0,c
 17655  002064  EFCB  F010         	goto	l9014
 17656  002068                     l8952:
 17657                           
 17658                           ;libraries/lcd_highlevel.c: 764:     {;libraries/lcd_highlevel.c: 765:       yOffset = o
      +                          ffset + (y * ((width+7)/8));
 17659  002068  C03D  F01A         	movff	LCD_DrawText@y,___wmul@multiplier
 17660  00206C  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17661  00206E  0E00               	movlw	0
 17662  002070  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17663  002072  0E08               	movlw	8
 17664  002074  6E14               	movwf	___awdiv@divisor^0,c
 17665  002076  0E07               	movlw	7
 17666  002078  2441               	addwf	LCD_DrawText@width^0,w,c
 17667  00207A  6E12               	movwf	___awdiv@dividend^0,c
 17668  00207C  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17669  00207E  0E00               	movlw	0
 17670  002080  2213               	addwfc	(___awdiv@dividend+1)^0,f,c
 17671  002082  ECB3  F028         	call	___awdiv	;wreg free
 17672  002086  C012  F01C         	movff	?___awdiv,___wmul@multiplicand
 17673  00208A  C013  F01D         	movff	?___awdiv+1,___wmul@multiplicand+1
 17674  00208E  ECAB  F031         	call	___wmul	;wreg free
 17675  002092  5033               	movf	LCD_DrawText@offset^0,w,c
 17676  002094  241A               	addwf	?___wmul^0,w,c
 17677  002096  6E35               	movwf	LCD_DrawText@yOffset^0,c
 17678  002098  5034               	movf	(LCD_DrawText@offset+1)^0,w,c
 17679  00209A  201B               	addwfc	(?___wmul+1)^0,w,c
 17680  00209C  6E36               	movwf	(LCD_DrawText@yOffset+1)^0,c
 17681  00209E                     
 17682                           ;libraries/lcd_highlevel.c: 766:       for(x=0;x<width;x++)
 17683  00209E  0E00               	movlw	0
 17684  0020A0  6E40               	movwf	LCD_DrawText@x^0,c
 17685  0020A2  EFAA  F010         	goto	l8988
 17686  0020A6                     l8956:
 17687                           
 17688                           ;libraries/lcd_highlevel.c: 767:       {;libraries/lcd_highlevel.c: 768:         fontByt
      +                          e = font->bitmap[yOffset + (x/8)];
 17689  0020A6  C040  F012         	movff	LCD_DrawText@x,___awdiv@dividend
 17690  0020AA  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17691  0020AC  0E00               	movlw	0
 17692  0020AE  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17693  0020B0  0E08               	movlw	8
 17694  0020B2  6E14               	movwf	___awdiv@divisor^0,c
 17695  0020B4  ECB3  F028         	call	___awdiv	;wreg free
 17696  0020B8  0E05               	movlw	5
 17697  0020BA  2422               	addwf	LCD_DrawText@font^0,w,c
 17698  0020BC  6E2D               	movwf	??_LCD_DrawText^0,c
 17699  0020BE  0E00               	movlw	0
 17700  0020C0  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17701  0020C2  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17702  0020C4  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17703  0020C8  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17704  0020CC                     	if	0	;tblptru may be non-zero
 17705  0020CC                     	endif
 17706  0020CC                     	if	0	;tblptru may be non-zero
 17707  0020CC                     	endif
 17708  0020CC  0009               	tblrd		*+
 17709  0020CE  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17710  0020D2  0009               	tblrd		*+
 17711  0020D4  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17712  0020D8  5012               	movf	?___awdiv^0,w,c
 17713  0020DA  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17714  0020DC  5013               	movf	(?___awdiv+1)^0,w,c
 17715  0020DE  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17716  0020E0  5035               	movf	LCD_DrawText@yOffset^0,w,c
 17717  0020E2  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17718  0020E4  5036               	movf	(LCD_DrawText@yOffset+1)^0,w,c
 17719  0020E6  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17720  0020E8  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17721  0020EC  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17722  0020F0                     	if	0	;tblptru may be non-zero
 17723  0020F0                     	endif
 17724  0020F0                     	if	0	;tblptru may be non-zero
 17725  0020F0                     	endif
 17726  0020F0  0008               	tblrd		*
 17727  0020F2  CFF5 F037          	movff	tablat,LCD_DrawText@fontByte
 17728  0020F6                     
 17729                           ;libraries/lcd_highlevel.c: 769:         fontPixel = fontByte & (0x80 >> (x%8));
 17730  0020F6  C040  F02D         	movff	LCD_DrawText@x,??_LCD_DrawText
 17731  0020FA  0E07               	movlw	7
 17732  0020FC  162D               	andwf	??_LCD_DrawText^0,f,c
 17733  0020FE  0E80               	movlw	128
 17734  002100  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17735  002102  0E00               	movlw	0
 17736  002104  6E2F               	movwf	(??_LCD_DrawText+2)^0,c
 17737  002106  2A2D               	incf	??_LCD_DrawText^0,f,c
 17738  002108  EF89  F010         	goto	u6364
 17739  00210C                     u6365:
 17740  00210C  342F               	rlcf	(??_LCD_DrawText+2)^0,w,c
 17741  00210E  322F               	rrcf	(??_LCD_DrawText+2)^0,f,c
 17742  002110  322E               	rrcf	(??_LCD_DrawText+1)^0,f,c
 17743  002112                     u6364:
 17744  002112  2E2D               	decfsz	??_LCD_DrawText^0,f,c
 17745  002114  EF86  F010         	goto	u6365
 17746  002118  502E               	movf	(??_LCD_DrawText+1)^0,w,c
 17747  00211A  1437               	andwf	LCD_DrawText@fontByte^0,w,c
 17748  00211C  6E38               	movwf	LCD_DrawText@fontPixel^0,c
 17749  00211E                     
 17750                           ;libraries/lcd_highlevel.c: 770:         if(fontPixel != 0)
 17751  00211E  5038               	movf	LCD_DrawText@fontPixel^0,w,c
 17752  002120  B4D8               	btfsc	status,2,c
 17753  002122  EF95  F010         	goto	u6371
 17754  002126  EF97  F010         	goto	u6370
 17755  00212A                     u6371:
 17756  00212A  EFA1  F010         	goto	l8974
 17757  00212E                     u6370:
 17758  00212E                     
 17759                           ;libraries/lcd_highlevel.c: 771:         {;libraries/lcd_highlevel.c: 772:           POR
      +                          TA = color>>8; LATC3 = 0; LATC3 = 1;;
 17760  00212E  502A               	movf	(LCD_DrawText@color+1)^0,w,c
 17761  002130  6E80               	movwf	128,c	;volatile
 17762  002132  968B               	bcf	3979,3,c	;volatile
 17763  002134  868B               	bsf	3979,3,c	;volatile
 17764  002136                     
 17765                           ;libraries/lcd_highlevel.c: 773:           PORTA = color; LATC3 = 0; LATC3 = 1;;
 17766  002136  C029  FF80         	movff	LCD_DrawText@color,3968	;volatile
 17767  00213A                     l8970:
 17768  00213A  968B               	bcf	3979,3,c	;volatile
 17769  00213C  868B               	bsf	3979,3,c	;volatile
 17770                           
 17771                           ;libraries/lcd_highlevel.c: 774:         }
 17772  00213E  EFA9  F010         	goto	l8986
 17773  002142                     l8974:
 17774                           
 17775                           ;libraries/lcd_highlevel.c: 776:         {;libraries/lcd_highlevel.c: 777:           POR
      +                          TA = bg_color>>8; LATC3 = 0; LATC3 = 1;;
 17776  002142  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 17777  002144  6E80               	movwf	128,c	;volatile
 17778  002146  968B               	bcf	3979,3,c	;volatile
 17779  002148  868B               	bsf	3979,3,c	;volatile
 17780  00214A                     
 17781                           ;libraries/lcd_highlevel.c: 778:           PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 17782  00214A  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 17783  00214E  EF9D  F010         	goto	l8970
 17784  002152                     l8986:
 17785                           
 17786                           ;libraries/lcd_highlevel.c: 780:       }
 17787  002152  2A40               	incf	LCD_DrawText@x^0,f,c
 17788  002154                     l8988:
 17789  002154  5041               	movf	LCD_DrawText@width^0,w,c
 17790  002156  5C40               	subwf	LCD_DrawText@x^0,w,c
 17791  002158  A0D8               	btfss	status,0,c
 17792  00215A  EFB1  F010         	goto	u6381
 17793  00215E  EFB3  F010         	goto	u6380
 17794  002162                     u6381:
 17795  002162  EF53  F010         	goto	l8956
 17796  002166                     u6380:
 17797  002166                     
 17798                           ;libraries/lcd_highlevel.c: 781:       for(x=0;x<2;x++)
 17799  002166  0E00               	movlw	0
 17800  002168  6E40               	movwf	LCD_DrawText@x^0,c
 17801  00216A                     l8992:
 17802  00216A  0E01               	movlw	1
 17803  00216C  6440               	cpfsgt	LCD_DrawText@x^0,c
 17804  00216E  EFBB  F010         	goto	u6391
 17805  002172  EFBD  F010         	goto	u6390
 17806  002176                     u6391:
 17807  002176  EFBF  F010         	goto	l8996
 17808  00217A                     u6390:
 17809  00217A  EFCA  F010         	goto	l9012
 17810  00217E                     l8996:
 17811                           
 17812                           ;libraries/lcd_highlevel.c: 782:       {;libraries/lcd_highlevel.c: 783:         PORTA =
      +                           bg_color>>8; LATC3 = 0; LATC3 = 1;;
 17813  00217E  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 17814  002180  6E80               	movwf	128,c	;volatile
 17815  002182  968B               	bcf	3979,3,c	;volatile
 17816  002184  868B               	bsf	3979,3,c	;volatile
 17817  002186                     
 17818                           ;libraries/lcd_highlevel.c: 784:         PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 17819  002186  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 17820  00218A  968B               	bcf	3979,3,c	;volatile
 17821  00218C  868B               	bsf	3979,3,c	;volatile
 17822  00218E                     
 17823                           ;libraries/lcd_highlevel.c: 785:       }
 17824  00218E  2A40               	incf	LCD_DrawText@x^0,f,c
 17825  002190  EFB5  F010         	goto	l8992
 17826  002194                     l9012:
 17827                           
 17828                           ;libraries/lcd_highlevel.c: 786:     }
 17829  002194  2A3D               	incf	LCD_DrawText@y^0,f,c
 17830  002196                     l9014:
 17831  002196  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 17832  00219A  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 17833  00219E                     	if	0	;tblptru may be non-zero
 17834  00219E                     	endif
 17835  00219E                     	if	0	;tblptru may be non-zero
 17836  00219E                     	endif
 17837  00219E  0009               	tblrd		*+
 17838  0021A0  50F5               	movf	tablat,w,c
 17839  0021A2  5C3D               	subwf	LCD_DrawText@y^0,w,c
 17840  0021A4  A0D8               	btfss	status,0,c
 17841  0021A6  EFD7  F010         	goto	u6401
 17842  0021AA  EFD9  F010         	goto	u6400
 17843  0021AE                     u6401:
 17844  0021AE  EF34  F010         	goto	l8952
 17845  0021B2                     u6400:
 17846  0021B2                     
 17847                           ;libraries/lcd_highlevel.c: 787:     posX = posX + 2 + width;
 17848  0021B2  5041               	movf	LCD_DrawText@width^0,w,c
 17849  0021B4  2425               	addwf	LCD_DrawText@posX^0,w,c
 17850  0021B6  6E2D               	movwf	??_LCD_DrawText^0,c
 17851  0021B8  0E00               	movlw	0
 17852  0021BA  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 17853  0021BC  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17854  0021BE  0E02               	movlw	2
 17855  0021C0  242D               	addwf	??_LCD_DrawText^0,w,c
 17856  0021C2  6E25               	movwf	LCD_DrawText@posX^0,c
 17857  0021C4  0E00               	movlw	0
 17858  0021C6  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 17859  0021C8  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17860  0021CA                     
 17861                           ;libraries/lcd_highlevel.c: 788:     msg++;
 17862  0021CA  4A20               	infsnz	LCD_DrawText@msg^0,f,c
 17863  0021CC  2A21               	incf	(LCD_DrawText@msg+1)^0,f,c
 17864  0021CE                     
 17865                           ;libraries/lcd_highlevel.c: 789:  }while(*msg != 0);
 17866  0021CE  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 17867  0021D2  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 17868  0021D6  6AF8               	clrf	tblptru,c
 17869  0021D8  0E05               	movlw	(high __ramtop+-1)
 17870  0021DA  64F7               	cpfsgt	tblptrh,c
 17871  0021DC  D003               	bra	u6417
 17872  0021DE  0008               	tblrd		*
 17873  0021E0  50F5               	movf	tablat,w,c
 17874  0021E2  D005               	bra	u6410
 17875  0021E4                     u6417:
 17876  0021E4  CFF6 FFE1          	movff	tblptrl,fsr1l
 17877  0021E8  CFF7 FFE2          	movff	tblptrh,fsr1h
 17878  0021EC  50E7               	movf	indf1,w,c
 17879  0021EE                     u6410:
 17880  0021EE  0900               	iorlw	0
 17881  0021F0  A4D8               	btfss	status,2,c
 17882  0021F2  EFFD  F010         	goto	u6421
 17883  0021F6  EFFF  F010         	goto	u6420
 17884  0021FA                     u6421:
 17885  0021FA  EF6D  F00F         	goto	l8862
 17886  0021FE                     u6420:
 17887  0021FE  0012               	return		;funcret
 17888  002200                     __end_of_LCD_DrawText:
 17889                           	callstack 0
 17890                           
 17891 ;; *************** function _strlen *****************
 17892 ;; Defined at:
 17893 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 17894 ;; Parameters:    Size  Location     Type
 17895 ;;  s               2   17[COMRAM] PTR const unsigned char 
 17896 ;;		 -> g1.str(2), dbuf(32), touchScreenController@s(20), STR_14(13), 
 17897 ;;		 -> STR_13(13), STR_12(11), STR_11(8), STR_10(9), 
 17898 ;;		 -> STR_9(4), STR_8(4), STR_7(8), STR_6(9), 
 17899 ;;		 -> STR_5(9), STR_4(11), g1(239), STR_1(10), 
 17900 ;; Auto vars:     Size  Location     Type
 17901 ;;  a               2   19[COMRAM] PTR const unsigned char 
 17902 ;;		 -> g1.str(2), dbuf(32), touchScreenController@s(20), STR_14(13), 
 17903 ;;		 -> STR_13(13), STR_12(11), STR_11(8), STR_10(9), 
 17904 ;;		 -> STR_9(4), STR_8(4), STR_7(8), STR_6(9), 
 17905 ;;		 -> STR_5(9), STR_4(11), g1(239), STR_1(10), 
 17906 ;; Return value:  Size  Location     Type
 17907 ;;                  2   17[COMRAM] unsigned int 
 17908 ;; Registers used:
 17909 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 17910 ;; Tracked objects:
 17911 ;;		On entry : 0/0
 17912 ;;		On exit  : 0/0
 17913 ;;		Unchanged: 0/0
 17914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17915 ;;      Params:         2       0       0       0       0       0       0
 17916 ;;      Locals:         2       0       0       0       0       0       0
 17917 ;;      Temps:          0       0       0       0       0       0       0
 17918 ;;      Totals:         4       0       0       0       0       0       0
 17919 ;;Total ram usage:        4 bytes
 17920 ;; Hardware stack levels used: 1
 17921 ;; Hardware stack levels required when called: 4
 17922 ;; This function calls:
 17923 ;;		Nothing
 17924 ;; This function is called by:
 17925 ;;		_LCD_ButtonDraw
 17926 ;;		_LCD_DrawText
 17927 ;;		_pad
 17928 ;; This function uses a non-reentrant model
 17929 ;;
 17930                           
 17931                           	psect	text69
 17932  0060FC                     __ptext69:
 17933                           	callstack 0
 17934  0060FC                     _strlen:
 17935                           	callstack 16
 17936  0060FC  C012  F014         	movff	strlen@s,strlen@a
 17937  006100  C013  F015         	movff	strlen@s+1,strlen@a+1
 17938  006104  EF86  F030         	goto	l8060
 17939  006108                     l8058:
 17940  006108  4A12               	infsnz	strlen@s^0,f,c
 17941  00610A  2A13               	incf	(strlen@s+1)^0,f,c
 17942  00610C                     l8060:
 17943  00610C  C012  FFF6         	movff	strlen@s,tblptrl
 17944  006110  C013  FFF7         	movff	strlen@s+1,tblptrh
 17945  006114  6AF8               	clrf	tblptru,c
 17946  006116  0E05               	movlw	(high __ramtop+-1)
 17947  006118  64F7               	cpfsgt	tblptrh,c
 17948  00611A  D003               	bra	u5587
 17949  00611C  0008               	tblrd		*
 17950  00611E  50F5               	movf	tablat,w,c
 17951  006120  D005               	bra	u5580
 17952  006122                     u5587:
 17953  006122  CFF6 FFE1          	movff	tblptrl,fsr1l
 17954  006126  CFF7 FFE2          	movff	tblptrh,fsr1h
 17955  00612A  50E7               	movf	indf1,w,c
 17956  00612C                     u5580:
 17957  00612C  0900               	iorlw	0
 17958  00612E  A4D8               	btfss	status,2,c
 17959  006130  EF9C  F030         	goto	u5591
 17960  006134  EF9E  F030         	goto	u5590
 17961  006138                     u5591:
 17962  006138  EF84  F030         	goto	l8058
 17963  00613C                     u5590:
 17964  00613C  5014               	movf	strlen@a^0,w,c
 17965  00613E  5C12               	subwf	strlen@s^0,w,c
 17966  006140  6E12               	movwf	?_strlen^0,c
 17967  006142  5015               	movf	(strlen@a+1)^0,w,c
 17968  006144  5813               	subwfb	(strlen@s+1)^0,w,c
 17969  006146  6E13               	movwf	(?_strlen+1)^0,c
 17970  006148  0012               	return		;funcret
 17971  00614A                     __end_of_strlen:
 17972                           	callstack 0
 17973                           
 17974 ;; *************** function ___wmul *****************
 17975 ;; Defined at:
 17976 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 17977 ;; Parameters:    Size  Location     Type
 17978 ;;  multiplier      2   25[COMRAM] unsigned int 
 17979 ;;  multiplicand    2   27[COMRAM] unsigned int 
 17980 ;; Auto vars:     Size  Location     Type
 17981 ;;  product         2   29[COMRAM] unsigned int 
 17982 ;; Return value:  Size  Location     Type
 17983 ;;                  2   25[COMRAM] unsigned int 
 17984 ;; Registers used:
 17985 ;;		wreg, status,2, status,0, prodl, prodh
 17986 ;; Tracked objects:
 17987 ;;		On entry : 0/0
 17988 ;;		On exit  : 0/0
 17989 ;;		Unchanged: 0/0
 17990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17991 ;;      Params:         4       0       0       0       0       0       0
 17992 ;;      Locals:         2       0       0       0       0       0       0
 17993 ;;      Temps:          0       0       0       0       0       0       0
 17994 ;;      Totals:         6       0       0       0       0       0       0
 17995 ;;Total ram usage:        6 bytes
 17996 ;; Hardware stack levels used: 1
 17997 ;; Hardware stack levels required when called: 4
 17998 ;; This function calls:
 17999 ;;		Nothing
 18000 ;; This function is called by:
 18001 ;;		_LCD_SliderUpdate
 18002 ;;		_LCD_DrawText
 18003 ;;		_LCD_Bitmap
 18004 ;;		_XF_init
 18005 ;; This function uses a non-reentrant model
 18006 ;;
 18007                           
 18008                           	psect	text70
 18009  006356                     __ptext70:
 18010                           	callstack 0
 18011  006356                     ___wmul:
 18012                           	callstack 21
 18013  006356  501A               	movf	___wmul@multiplier^0,w,c
 18014  006358  021C               	mulwf	___wmul@multiplicand^0,c
 18015  00635A  CFF3 F01E          	movff	prodl,___wmul@product
 18016  00635E  CFF4 F01F          	movff	prodh,___wmul@product+1
 18017  006362  501A               	movf	___wmul@multiplier^0,w,c
 18018  006364  021D               	mulwf	(___wmul@multiplicand+1)^0,c
 18019  006366  50F3               	movf	243,w,c
 18020  006368  261F               	addwf	(___wmul@product+1)^0,f,c
 18021  00636A  501B               	movf	(___wmul@multiplier+1)^0,w,c
 18022  00636C  021C               	mulwf	___wmul@multiplicand^0,c
 18023  00636E  50F3               	movf	243,w,c
 18024  006370  261F               	addwf	(___wmul@product+1)^0,f,c
 18025  006372  C01E  F01A         	movff	___wmul@product,?___wmul
 18026  006376  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
 18027  00637A  0012               	return		;funcret
 18028  00637C                     __end_of___wmul:
 18029                           	callstack 0
 18030                           
 18031 ;; *************** function ___awdiv *****************
 18032 ;; Defined at:
 18033 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 18034 ;; Parameters:    Size  Location     Type
 18035 ;;  dividend        2   17[COMRAM] int 
 18036 ;;  divisor         2   19[COMRAM] int 
 18037 ;; Auto vars:     Size  Location     Type
 18038 ;;  quotient        2   23[COMRAM] int 
 18039 ;;  sign            1   22[COMRAM] unsigned char 
 18040 ;;  counter         1   21[COMRAM] unsigned char 
 18041 ;; Return value:  Size  Location     Type
 18042 ;;                  2   17[COMRAM] int 
 18043 ;; Registers used:
 18044 ;;		wreg, status,2, status,0
 18045 ;; Tracked objects:
 18046 ;;		On entry : 0/0
 18047 ;;		On exit  : 0/0
 18048 ;;		Unchanged: 0/0
 18049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18050 ;;      Params:         4       0       0       0       0       0       0
 18051 ;;      Locals:         4       0       0       0       0       0       0
 18052 ;;      Temps:          0       0       0       0       0       0       0
 18053 ;;      Totals:         8       0       0       0       0       0       0
 18054 ;;Total ram usage:        8 bytes
 18055 ;; Hardware stack levels used: 1
 18056 ;; Hardware stack levels required when called: 4
 18057 ;; This function calls:
 18058 ;;		Nothing
 18059 ;; This function is called by:
 18060 ;;		_LCD_ButtonDraw
 18061 ;;		_LCD_DrawText
 18062 ;; This function uses a non-reentrant model
 18063 ;;
 18064                           
 18065                           	psect	text71
 18066  005166                     __ptext71:
 18067                           	callstack 0
 18068  005166                     ___awdiv:
 18069                           	callstack 20
 18070  005166  0E00               	movlw	0
 18071  005168  6E17               	movwf	___awdiv@sign^0,c
 18072  00516A  BE15               	btfsc	(___awdiv@divisor+1)^0,7,c
 18073  00516C  EFBC  F028         	goto	u6090
 18074  005170  EFBA  F028         	goto	u6091
 18075  005174                     u6091:
 18076  005174  EFC2  F028         	goto	l8692
 18077  005178                     u6090:
 18078  005178  6C14               	negf	___awdiv@divisor^0,c
 18079  00517A  1E15               	comf	(___awdiv@divisor+1)^0,f,c
 18080  00517C  B0D8               	btfsc	status,0,c
 18081  00517E  2A15               	incf	(___awdiv@divisor+1)^0,f,c
 18082  005180  0E01               	movlw	1
 18083  005182  6E17               	movwf	___awdiv@sign^0,c
 18084  005184                     l8692:
 18085  005184  BE13               	btfsc	(___awdiv@dividend+1)^0,7,c
 18086  005186  EFC9  F028         	goto	u6100
 18087  00518A  EFC7  F028         	goto	u6101
 18088  00518E                     u6101:
 18089  00518E  EFCF  F028         	goto	l8698
 18090  005192                     u6100:
 18091  005192  6C12               	negf	___awdiv@dividend^0,c
 18092  005194  1E13               	comf	(___awdiv@dividend+1)^0,f,c
 18093  005196  B0D8               	btfsc	status,0,c
 18094  005198  2A13               	incf	(___awdiv@dividend+1)^0,f,c
 18095  00519A  0E01               	movlw	1
 18096  00519C  1A17               	xorwf	___awdiv@sign^0,f,c
 18097  00519E                     l8698:
 18098  00519E  0E00               	movlw	0
 18099  0051A0  6E19               	movwf	(___awdiv@quotient+1)^0,c
 18100  0051A2  0E00               	movlw	0
 18101  0051A4  6E18               	movwf	___awdiv@quotient^0,c
 18102  0051A6  5014               	movf	___awdiv@divisor^0,w,c
 18103  0051A8  1015               	iorwf	(___awdiv@divisor+1)^0,w,c
 18104  0051AA  B4D8               	btfsc	status,2,c
 18105  0051AC  EFDA  F028         	goto	u6111
 18106  0051B0  EFDC  F028         	goto	u6110
 18107  0051B4                     u6111:
 18108  0051B4  EF04  F029         	goto	l8720
 18109  0051B8                     u6110:
 18110  0051B8  0E01               	movlw	1
 18111  0051BA  6E16               	movwf	___awdiv@counter^0,c
 18112  0051BC  EFE4  F028         	goto	l8706
 18113  0051C0                     l8704:
 18114  0051C0  90D8               	bcf	status,0,c
 18115  0051C2  3614               	rlcf	___awdiv@divisor^0,f,c
 18116  0051C4  3615               	rlcf	(___awdiv@divisor+1)^0,f,c
 18117  0051C6  2A16               	incf	___awdiv@counter^0,f,c
 18118  0051C8                     l8706:
 18119  0051C8  AE15               	btfss	(___awdiv@divisor+1)^0,7,c
 18120  0051CA  EFE9  F028         	goto	u6121
 18121  0051CE  EFEB  F028         	goto	u6120
 18122  0051D2                     u6121:
 18123  0051D2  EFE0  F028         	goto	l8704
 18124  0051D6                     u6120:
 18125  0051D6                     l8708:
 18126  0051D6  90D8               	bcf	status,0,c
 18127  0051D8  3618               	rlcf	___awdiv@quotient^0,f,c
 18128  0051DA  3619               	rlcf	(___awdiv@quotient+1)^0,f,c
 18129  0051DC  5014               	movf	___awdiv@divisor^0,w,c
 18130  0051DE  5C12               	subwf	___awdiv@dividend^0,w,c
 18131  0051E0  5015               	movf	(___awdiv@divisor+1)^0,w,c
 18132  0051E2  5813               	subwfb	(___awdiv@dividend+1)^0,w,c
 18133  0051E4  A0D8               	btfss	status,0,c
 18134  0051E6  EFF7  F028         	goto	u6131
 18135  0051EA  EFF9  F028         	goto	u6130
 18136  0051EE                     u6131:
 18137  0051EE  EFFE  F028         	goto	l8716
 18138  0051F2                     u6130:
 18139  0051F2  5014               	movf	___awdiv@divisor^0,w,c
 18140  0051F4  5E12               	subwf	___awdiv@dividend^0,f,c
 18141  0051F6  5015               	movf	(___awdiv@divisor+1)^0,w,c
 18142  0051F8  5A13               	subwfb	(___awdiv@dividend+1)^0,f,c
 18143  0051FA  8018               	bsf	___awdiv@quotient^0,0,c
 18144  0051FC                     l8716:
 18145  0051FC  90D8               	bcf	status,0,c
 18146  0051FE  3215               	rrcf	(___awdiv@divisor+1)^0,f,c
 18147  005200  3214               	rrcf	___awdiv@divisor^0,f,c
 18148  005202  2E16               	decfsz	___awdiv@counter^0,f,c
 18149  005204  EFEB  F028         	goto	l8708
 18150  005208                     l8720:
 18151  005208  5017               	movf	___awdiv@sign^0,w,c
 18152  00520A  B4D8               	btfsc	status,2,c
 18153  00520C  EF0A  F029         	goto	u6141
 18154  005210  EF0C  F029         	goto	u6140
 18155  005214                     u6141:
 18156  005214  EF10  F029         	goto	l8724
 18157  005218                     u6140:
 18158  005218  6C18               	negf	___awdiv@quotient^0,c
 18159  00521A  1E19               	comf	(___awdiv@quotient+1)^0,f,c
 18160  00521C  B0D8               	btfsc	status,0,c
 18161  00521E  2A19               	incf	(___awdiv@quotient+1)^0,f,c
 18162  005220                     l8724:
 18163  005220  C018  F012         	movff	___awdiv@quotient,?___awdiv
 18164  005224  C019  F013         	movff	___awdiv@quotient+1,?___awdiv+1
 18165  005228  0012               	return		;funcret
 18166  00522A                     __end_of___awdiv:
 18167                           	callstack 0
 18168                           
 18169 ;; *************** function _Paddle_draw *****************
 18170 ;; Defined at:
 18171 ;;		line 44 in file "class/paddle.c"
 18172 ;; Parameters:    Size  Location     Type
 18173 ;;  p               2   36[COMRAM] PTR struct Paddle
 18174 ;;		 -> g1(239), 
 18175 ;; Auto vars:     Size  Location     Type
 18176 ;;		None
 18177 ;; Return value:  Size  Location     Type
 18178 ;;                  1    wreg      void 
 18179 ;; Registers used:
 18180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18181 ;; Tracked objects:
 18182 ;;		On entry : 0/0
 18183 ;;		On exit  : 0/0
 18184 ;;		Unchanged: 0/0
 18185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18186 ;;      Params:         2       0       0       0       0       0       0
 18187 ;;      Locals:         0       0       0       0       0       0       0
 18188 ;;      Temps:          4       0       0       0       0       0       0
 18189 ;;      Totals:         6       0       0       0       0       0       0
 18190 ;;Total ram usage:        6 bytes
 18191 ;; Hardware stack levels used: 1
 18192 ;; Hardware stack levels required when called: 5
 18193 ;; This function calls:
 18194 ;;		_LCD_DrawRect
 18195 ;; This function is called by:
 18196 ;;		_Menu_inGameDraw
 18197 ;;		_displayController
 18198 ;; This function uses a non-reentrant model
 18199 ;;
 18200                           
 18201                           	psect	text72
 18202  004324                     __ptext72:
 18203                           	callstack 0
 18204  004324                     _Paddle_draw:
 18205                           	callstack 21
 18206  004324                     
 18207                           ;class/paddle.c: 44: void Paddle_draw(struct Paddle* p);class/paddle.c: 45: {;class/padd
      +                          le.c: 46:     LCD_DrawRect(p->oldx,p->oldy,p->oldx+50,p->oldy+10,1,0b0000000000000000);
 18208  004324  EE20 F004          	lfsr	2,4
 18209  004328  5025               	movf	Paddle_draw@p^0,w,c
 18210  00432A  26D9               	addwf	fsr2l,f,c
 18211  00432C  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18212  00432E  22DA               	addwfc	fsr2h,f,c
 18213  004330  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
 18214  004334  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
 18215  004338  EE20 F006          	lfsr	2,6
 18216  00433C  5025               	movf	Paddle_draw@p^0,w,c
 18217  00433E  26D9               	addwf	fsr2l,f,c
 18218  004340  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18219  004342  22DA               	addwfc	fsr2h,f,c
 18220  004344  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
 18221  004348  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
 18222  00434C  EE20 F004          	lfsr	2,4
 18223  004350  5025               	movf	Paddle_draw@p^0,w,c
 18224  004352  26D9               	addwf	fsr2l,f,c
 18225  004354  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18226  004356  22DA               	addwfc	fsr2h,f,c
 18227  004358  CFDE F027          	movff	postinc2,??_Paddle_draw
 18228  00435C  CFDD F028          	movff	postdec2,??_Paddle_draw+1
 18229  004360  0E32               	movlw	50
 18230  004362  2427               	addwf	??_Paddle_draw^0,w,c
 18231  004364  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18232  004366  0E00               	movlw	0
 18233  004368  2028               	addwfc	(??_Paddle_draw+1)^0,w,c
 18234  00436A  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18235  00436C  EE20 F006          	lfsr	2,6
 18236  004370  5025               	movf	Paddle_draw@p^0,w,c
 18237  004372  26D9               	addwf	fsr2l,f,c
 18238  004374  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18239  004376  22DA               	addwfc	fsr2h,f,c
 18240  004378  CFDE F029          	movff	postinc2,??_Paddle_draw+2
 18241  00437C  CFDD F02A          	movff	postdec2,??_Paddle_draw+3
 18242  004380  0E0A               	movlw	10
 18243  004382  2429               	addwf	(??_Paddle_draw+2)^0,w,c
 18244  004384  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18245  004386  0E00               	movlw	0
 18246  004388  202A               	addwfc	(??_Paddle_draw+3)^0,w,c
 18247  00438A  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18248  00438C  0E01               	movlw	1
 18249  00438E  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18250  004390  0E00               	movlw	0
 18251  004392  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18252  004394  0E00               	movlw	0
 18253  004396  6E1B               	movwf	LCD_DrawRect@color^0,c
 18254  004398  EC69  F016         	call	_LCD_DrawRect	;wreg free
 18255  00439C                     
 18256                           ;class/paddle.c: 47:     p->oldx=p->x;
 18257  00439C  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18258  0043A0  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18259  0043A4  EE10 F004          	lfsr	1,4
 18260  0043A8  5025               	movf	Paddle_draw@p^0,w,c
 18261  0043AA  26E1               	addwf	fsr1l,f,c
 18262  0043AC  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18263  0043AE  22E2               	addwfc	fsr1h,f,c
 18264  0043B0  CFDE FFE6          	movff	postinc2,postinc1
 18265  0043B4  CFDD FFE5          	movff	postdec2,postdec1
 18266  0043B8                     
 18267                           ;class/paddle.c: 48:     p->oldy=p->y;
 18268  0043B8  EE20 F002          	lfsr	2,2
 18269  0043BC  5025               	movf	Paddle_draw@p^0,w,c
 18270  0043BE  26D9               	addwf	fsr2l,f,c
 18271  0043C0  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18272  0043C2  22DA               	addwfc	fsr2h,f,c
 18273  0043C4  EE10 F006          	lfsr	1,6
 18274  0043C8  5025               	movf	Paddle_draw@p^0,w,c
 18275  0043CA  26E1               	addwf	fsr1l,f,c
 18276  0043CC  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18277  0043CE  22E2               	addwfc	fsr1h,f,c
 18278  0043D0  CFDE FFE6          	movff	postinc2,postinc1
 18279  0043D4  CFDD FFE5          	movff	postdec2,postdec1
 18280                           
 18281                           ;class/paddle.c: 50:     LCD_DrawRect(p->x,p->y,p->x+50,p->y+10,1,p->color);
 18282  0043D8  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18283  0043DC  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18284  0043E0  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
 18285  0043E4  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
 18286  0043E8  EE20 F002          	lfsr	2,2
 18287  0043EC  5025               	movf	Paddle_draw@p^0,w,c
 18288  0043EE  26D9               	addwf	fsr2l,f,c
 18289  0043F0  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18290  0043F2  22DA               	addwfc	fsr2h,f,c
 18291  0043F4  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
 18292  0043F8  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
 18293  0043FC  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18294  004400  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18295  004404  CFDE F027          	movff	postinc2,??_Paddle_draw
 18296  004408  CFDD F028          	movff	postdec2,??_Paddle_draw+1
 18297  00440C  0E32               	movlw	50
 18298  00440E  2427               	addwf	??_Paddle_draw^0,w,c
 18299  004410  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18300  004412  0E00               	movlw	0
 18301  004414  2028               	addwfc	(??_Paddle_draw+1)^0,w,c
 18302  004416  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18303  004418  EE20 F002          	lfsr	2,2
 18304  00441C  5025               	movf	Paddle_draw@p^0,w,c
 18305  00441E  26D9               	addwf	fsr2l,f,c
 18306  004420  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18307  004422  22DA               	addwfc	fsr2h,f,c
 18308  004424  CFDE F029          	movff	postinc2,??_Paddle_draw+2
 18309  004428  CFDD F02A          	movff	postdec2,??_Paddle_draw+3
 18310  00442C  0E0A               	movlw	10
 18311  00442E  2429               	addwf	(??_Paddle_draw+2)^0,w,c
 18312  004430  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18313  004432  0E00               	movlw	0
 18314  004434  202A               	addwfc	(??_Paddle_draw+3)^0,w,c
 18315  004436  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18316  004438  0E01               	movlw	1
 18317  00443A  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18318  00443C  EE20 F008          	lfsr	2,8
 18319  004440  5025               	movf	Paddle_draw@p^0,w,c
 18320  004442  26D9               	addwf	fsr2l,f,c
 18321  004444  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18322  004446  22DA               	addwfc	fsr2h,f,c
 18323  004448  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 18324  00444C  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 18325  004450  EC69  F016         	call	_LCD_DrawRect	;wreg free
 18326  004454  0012               	return		;funcret
 18327  004456                     __end_of_Paddle_draw:
 18328                           	callstack 0
 18329                           
 18330 ;; *************** function _LCD_Fill *****************
 18331 ;; Defined at:
 18332 ;;		line 218 in file "libraries/lcd_highlevel.c"
 18333 ;; Parameters:    Size  Location     Type
 18334 ;;  color           2   17[COMRAM] unsigned short 
 18335 ;; Auto vars:     Size  Location     Type
 18336 ;;  page            2   23[COMRAM] unsigned short 
 18337 ;;  column          2   21[COMRAM] unsigned short 
 18338 ;;  colorL          1   20[COMRAM] unsigned char 
 18339 ;;  colorH          1   19[COMRAM] unsigned char 
 18340 ;; Return value:  Size  Location     Type
 18341 ;;                  1    wreg      void 
 18342 ;; Registers used:
 18343 ;;		wreg, status,2, status,0
 18344 ;; Tracked objects:
 18345 ;;		On entry : 0/0
 18346 ;;		On exit  : 0/0
 18347 ;;		Unchanged: 0/0
 18348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18349 ;;      Params:         2       0       0       0       0       0       0
 18350 ;;      Locals:         6       0       0       0       0       0       0
 18351 ;;      Temps:          0       0       0       0       0       0       0
 18352 ;;      Totals:         8       0       0       0       0       0       0
 18353 ;;Total ram usage:        8 bytes
 18354 ;; Hardware stack levels used: 1
 18355 ;; Hardware stack levels required when called: 4
 18356 ;; This function calls:
 18357 ;;		Nothing
 18358 ;; This function is called by:
 18359 ;;		_Factory_init
 18360 ;;		_Menu_welcomeDraw
 18361 ;;		_Menu_parametersDraw
 18362 ;;		_Menu_inGameDraw
 18363 ;;		_Menu_endGame
 18364 ;; This function uses a non-reentrant model
 18365 ;;
 18366                           
 18367                           	psect	text73
 18368  0052EC                     __ptext73:
 18369                           	callstack 0
 18370  0052EC                     _LCD_Fill:
 18371                           	callstack 21
 18372  0052EC                     
 18373                           ;libraries/lcd_highlevel.c: 218: void LCD_Fill(uint16_t color);libraries/lcd_highlevel.c
      +                          : 219: {;libraries/lcd_highlevel.c: 220:   uint16_t column;;libraries/lcd_highlevel.c: 2
      +                          21:   uint16_t page;;libraries/lcd_highlevel.c: 222:   uint8_t colorH, colorL;;libraries
      +                          /lcd_highlevel.c: 223:   colorH = color >> 8;
 18374  0052EC  5013               	movf	(LCD_Fill@color+1)^0,w,c
 18375  0052EE  6E14               	movwf	LCD_Fill@colorH^0,c
 18376  0052F0                     
 18377                           ;libraries/lcd_highlevel.c: 224:   colorL = color;
 18378  0052F0  C012  F015         	movff	LCD_Fill@color,LCD_Fill@colorL
 18379                           
 18380                           ;libraries/lcd_highlevel.c: 226:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18381  0052F4  0E2A               	movlw	42
 18382  0052F6  6E80               	movwf	128,c	;volatile
 18383  0052F8  988B               	bcf	3979,4,c	;volatile
 18384  0052FA  968B               	bcf	3979,3,c	;volatile
 18385  0052FC  868B               	bsf	3979,3,c	;volatile
 18386  0052FE  888B               	bsf	3979,4,c	;volatile
 18387                           
 18388                           ;libraries/lcd_highlevel.c: 227:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18389  005300  0E00               	movlw	0
 18390  005302  6E80               	movwf	128,c	;volatile
 18391  005304  968B               	bcf	3979,3,c	;volatile
 18392  005306  868B               	bsf	3979,3,c	;volatile
 18393                           
 18394                           ;libraries/lcd_highlevel.c: 228:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18395  005308  0E00               	movlw	0
 18396  00530A  6E80               	movwf	128,c	;volatile
 18397  00530C  968B               	bcf	3979,3,c	;volatile
 18398  00530E  868B               	bsf	3979,3,c	;volatile
 18399                           
 18400                           ;libraries/lcd_highlevel.c: 229:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18401  005310  0E00               	movlw	0
 18402  005312  6E80               	movwf	128,c	;volatile
 18403  005314  968B               	bcf	3979,3,c	;volatile
 18404  005316  868B               	bsf	3979,3,c	;volatile
 18405                           
 18406                           ;libraries/lcd_highlevel.c: 230:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 18407  005318  0EEF               	movlw	239
 18408  00531A  6E80               	movwf	128,c	;volatile
 18409  00531C  968B               	bcf	3979,3,c	;volatile
 18410  00531E  868B               	bsf	3979,3,c	;volatile
 18411                           
 18412                           ;libraries/lcd_highlevel.c: 232:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18413  005320  0E2B               	movlw	43
 18414  005322  6E80               	movwf	128,c	;volatile
 18415  005324  988B               	bcf	3979,4,c	;volatile
 18416  005326  968B               	bcf	3979,3,c	;volatile
 18417  005328  868B               	bsf	3979,3,c	;volatile
 18418  00532A  888B               	bsf	3979,4,c	;volatile
 18419                           
 18420                           ;libraries/lcd_highlevel.c: 233:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18421  00532C  0E00               	movlw	0
 18422  00532E  6E80               	movwf	128,c	;volatile
 18423  005330  968B               	bcf	3979,3,c	;volatile
 18424  005332  868B               	bsf	3979,3,c	;volatile
 18425                           
 18426                           ;libraries/lcd_highlevel.c: 234:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18427  005334  0E00               	movlw	0
 18428  005336  6E80               	movwf	128,c	;volatile
 18429  005338  968B               	bcf	3979,3,c	;volatile
 18430  00533A  868B               	bsf	3979,3,c	;volatile
 18431                           
 18432                           ;libraries/lcd_highlevel.c: 235:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18433  00533C  0E01               	movlw	1
 18434  00533E  6E80               	movwf	128,c	;volatile
 18435  005340  968B               	bcf	3979,3,c	;volatile
 18436  005342  868B               	bsf	3979,3,c	;volatile
 18437                           
 18438                           ;libraries/lcd_highlevel.c: 236:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18439  005344  0E3F               	movlw	63
 18440  005346  6E80               	movwf	128,c	;volatile
 18441  005348  968B               	bcf	3979,3,c	;volatile
 18442  00534A  868B               	bsf	3979,3,c	;volatile
 18443                           
 18444                           ;libraries/lcd_highlevel.c: 238:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18445  00534C  0E2C               	movlw	44
 18446  00534E  6E80               	movwf	128,c	;volatile
 18447  005350  988B               	bcf	3979,4,c	;volatile
 18448  005352  968B               	bcf	3979,3,c	;volatile
 18449  005354  868B               	bsf	3979,3,c	;volatile
 18450  005356  888B               	bsf	3979,4,c	;volatile
 18451                           
 18452                           ;libraries/lcd_highlevel.c: 239:   for(column=0; column<320; column++)
 18453  005358  0E00               	movlw	0
 18454  00535A  6E17               	movwf	(LCD_Fill@column+1)^0,c
 18455  00535C  0E00               	movlw	0
 18456  00535E  6E16               	movwf	LCD_Fill@column^0,c
 18457  005360                     l9522:
 18458                           
 18459                           ;libraries/lcd_highlevel.c: 240:   {;libraries/lcd_highlevel.c: 241:     for(page=0; pag
      +                          e<240; page++)
 18460  005360  0E00               	movlw	0
 18461  005362  6E19               	movwf	(LCD_Fill@page+1)^0,c
 18462  005364  0E00               	movlw	0
 18463  005366  6E18               	movwf	LCD_Fill@page^0,c
 18464  005368                     l225:
 18465                           
 18466                           ;libraries/lcd_highlevel.c: 242:     {;libraries/lcd_highlevel.c: 243:       PORTA = col
      +                          orH;
 18467  005368  C014  FF80         	movff	LCD_Fill@colorH,3968	;volatile
 18468                           
 18469                           ;libraries/lcd_highlevel.c: 244:       LATC3 = 0;
 18470  00536C  968B               	bcf	3979,3,c	;volatile
 18471                           
 18472                           ;libraries/lcd_highlevel.c: 245:       LATC3 = 1;
 18473  00536E  868B               	bsf	3979,3,c	;volatile
 18474                           
 18475                           ;libraries/lcd_highlevel.c: 246:       PORTA = colorL;
 18476  005370  C015  FF80         	movff	LCD_Fill@colorL,3968	;volatile
 18477                           
 18478                           ;libraries/lcd_highlevel.c: 247:       LATC3 = 0;
 18479  005374  968B               	bcf	3979,3,c	;volatile
 18480                           
 18481                           ;libraries/lcd_highlevel.c: 248:       LATC3 = 1;
 18482  005376  868B               	bsf	3979,3,c	;volatile
 18483  005378                     
 18484                           ;libraries/lcd_highlevel.c: 249:     }
 18485  005378  4A18               	infsnz	LCD_Fill@page^0,f,c
 18486  00537A  2A19               	incf	(LCD_Fill@page+1)^0,f,c
 18487  00537C  5019               	movf	(LCD_Fill@page+1)^0,w,c
 18488  00537E  E109               	bnz	u6660
 18489  005380  0EF0               	movlw	240
 18490  005382  5C18               	subwf	LCD_Fill@page^0,w,c
 18491  005384  A0D8               	btfss	status,0,c
 18492  005386  EFC7  F029         	goto	u6661
 18493  00538A  EFC9  F029         	goto	u6660
 18494  00538E                     u6661:
 18495  00538E  EFB4  F029         	goto	l225
 18496  005392                     u6660:
 18497  005392                     
 18498                           ;libraries/lcd_highlevel.c: 250:   }
 18499  005392  4A16               	infsnz	LCD_Fill@column^0,f,c
 18500  005394  2A17               	incf	(LCD_Fill@column+1)^0,f,c
 18501  005396  0E40               	movlw	64
 18502  005398  5C16               	subwf	LCD_Fill@column^0,w,c
 18503  00539A  0E01               	movlw	1
 18504  00539C  5817               	subwfb	(LCD_Fill@column+1)^0,w,c
 18505  00539E  A0D8               	btfss	status,0,c
 18506  0053A0  EFD4  F029         	goto	u6671
 18507  0053A4  EFD6  F029         	goto	u6670
 18508  0053A8                     u6671:
 18509  0053A8  EFB0  F029         	goto	l9522
 18510  0053AC                     u6670:
 18511  0053AC  0012               	return		;funcret
 18512  0053AE                     __end_of_LCD_Fill:
 18513                           	callstack 0
 18514                           
 18515 ;; *************** function _Ball_draw *****************
 18516 ;; Defined at:
 18517 ;;		line 17 in file "class/ball.c"
 18518 ;; Parameters:    Size  Location     Type
 18519 ;;  b               2   36[COMRAM] PTR struct Ball
 18520 ;;		 -> g1(239), 
 18521 ;; Auto vars:     Size  Location     Type
 18522 ;;		None
 18523 ;; Return value:  Size  Location     Type
 18524 ;;                  1    wreg      void 
 18525 ;; Registers used:
 18526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18527 ;; Tracked objects:
 18528 ;;		On entry : 0/0
 18529 ;;		On exit  : 0/0
 18530 ;;		Unchanged: 0/0
 18531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18532 ;;      Params:         2       0       0       0       0       0       0
 18533 ;;      Locals:         0       0       0       0       0       0       0
 18534 ;;      Temps:          8       0       0       0       0       0       0
 18535 ;;      Totals:        10       0       0       0       0       0       0
 18536 ;;Total ram usage:       10 bytes
 18537 ;; Hardware stack levels used: 1
 18538 ;; Hardware stack levels required when called: 5
 18539 ;; This function calls:
 18540 ;;		_LCD_DrawRect
 18541 ;; This function is called by:
 18542 ;;		_Menu_inGameDraw
 18543 ;;		_displayController
 18544 ;; This function uses a non-reentrant model
 18545 ;;
 18546                           
 18547                           	psect	text74
 18548  00408C                     __ptext74:
 18549                           	callstack 0
 18550  00408C                     _Ball_draw:
 18551                           	callstack 21
 18552  00408C                     
 18553                           ;class/ball.c: 17: void Ball_draw(struct Ball* b);class/ball.c: 18: {;class/ball.c: 19: 
      +                              LCD_DrawRect(b->oldx-4,b->oldy-4,b->oldx+4,b->oldy+4,1,0b0000000000000000);
 18554  00408C  EE20 F004          	lfsr	2,4
 18555  004090  5025               	movf	Ball_draw@b^0,w,c
 18556  004092  26D9               	addwf	fsr2l,f,c
 18557  004094  5026               	movf	(Ball_draw@b+1)^0,w,c
 18558  004096  22DA               	addwfc	fsr2h,f,c
 18559  004098  CFDE F027          	movff	postinc2,??_Ball_draw
 18560  00409C  CFDD F028          	movff	postdec2,??_Ball_draw+1
 18561  0040A0  0EFC               	movlw	252
 18562  0040A2  2427               	addwf	??_Ball_draw^0,w,c
 18563  0040A4  6E12               	movwf	LCD_DrawRect@posX1^0,c
 18564  0040A6  0EFF               	movlw	255
 18565  0040A8  2028               	addwfc	(??_Ball_draw+1)^0,w,c
 18566  0040AA  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 18567  0040AC  EE20 F006          	lfsr	2,6
 18568  0040B0  5025               	movf	Ball_draw@b^0,w,c
 18569  0040B2  26D9               	addwf	fsr2l,f,c
 18570  0040B4  5026               	movf	(Ball_draw@b+1)^0,w,c
 18571  0040B6  22DA               	addwfc	fsr2h,f,c
 18572  0040B8  CFDE F029          	movff	postinc2,??_Ball_draw+2
 18573  0040BC  CFDD F02A          	movff	postdec2,??_Ball_draw+3
 18574  0040C0  0EFC               	movlw	252
 18575  0040C2  2429               	addwf	(??_Ball_draw+2)^0,w,c
 18576  0040C4  6E14               	movwf	LCD_DrawRect@posY1^0,c
 18577  0040C6  0EFF               	movlw	255
 18578  0040C8  202A               	addwfc	(??_Ball_draw+3)^0,w,c
 18579  0040CA  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 18580  0040CC  EE20 F004          	lfsr	2,4
 18581  0040D0  5025               	movf	Ball_draw@b^0,w,c
 18582  0040D2  26D9               	addwf	fsr2l,f,c
 18583  0040D4  5026               	movf	(Ball_draw@b+1)^0,w,c
 18584  0040D6  22DA               	addwfc	fsr2h,f,c
 18585  0040D8  CFDE F02B          	movff	postinc2,??_Ball_draw+4
 18586  0040DC  CFDD F02C          	movff	postdec2,??_Ball_draw+5
 18587  0040E0  0E04               	movlw	4
 18588  0040E2  242B               	addwf	(??_Ball_draw+4)^0,w,c
 18589  0040E4  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18590  0040E6  0E00               	movlw	0
 18591  0040E8  202C               	addwfc	(??_Ball_draw+5)^0,w,c
 18592  0040EA  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18593  0040EC  EE20 F006          	lfsr	2,6
 18594  0040F0  5025               	movf	Ball_draw@b^0,w,c
 18595  0040F2  26D9               	addwf	fsr2l,f,c
 18596  0040F4  5026               	movf	(Ball_draw@b+1)^0,w,c
 18597  0040F6  22DA               	addwfc	fsr2h,f,c
 18598  0040F8  CFDE F02D          	movff	postinc2,??_Ball_draw+6
 18599  0040FC  CFDD F02E          	movff	postdec2,??_Ball_draw+7
 18600  004100  0E04               	movlw	4
 18601  004102  242D               	addwf	(??_Ball_draw+6)^0,w,c
 18602  004104  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18603  004106  0E00               	movlw	0
 18604  004108  202E               	addwfc	(??_Ball_draw+7)^0,w,c
 18605  00410A  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18606  00410C  0E01               	movlw	1
 18607  00410E  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18608  004110  0E00               	movlw	0
 18609  004112  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18610  004114  0E00               	movlw	0
 18611  004116  6E1B               	movwf	LCD_DrawRect@color^0,c
 18612  004118  EC69  F016         	call	_LCD_DrawRect	;wreg free
 18613  00411C                     
 18614                           ;class/ball.c: 20:     b->oldx=b->x;
 18615  00411C  C025  FFD9         	movff	Ball_draw@b,fsr2l
 18616  004120  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 18617  004124  EE10 F004          	lfsr	1,4
 18618  004128  5025               	movf	Ball_draw@b^0,w,c
 18619  00412A  26E1               	addwf	fsr1l,f,c
 18620  00412C  5026               	movf	(Ball_draw@b+1)^0,w,c
 18621  00412E  22E2               	addwfc	fsr1h,f,c
 18622  004130  CFDE FFE6          	movff	postinc2,postinc1
 18623  004134  CFDD FFE5          	movff	postdec2,postdec1
 18624  004138                     
 18625                           ;class/ball.c: 21:     b->oldy=b->y;
 18626  004138  EE20 F002          	lfsr	2,2
 18627  00413C  5025               	movf	Ball_draw@b^0,w,c
 18628  00413E  26D9               	addwf	fsr2l,f,c
 18629  004140  5026               	movf	(Ball_draw@b+1)^0,w,c
 18630  004142  22DA               	addwfc	fsr2h,f,c
 18631  004144  EE10 F006          	lfsr	1,6
 18632  004148  5025               	movf	Ball_draw@b^0,w,c
 18633  00414A  26E1               	addwf	fsr1l,f,c
 18634  00414C  5026               	movf	(Ball_draw@b+1)^0,w,c
 18635  00414E  22E2               	addwfc	fsr1h,f,c
 18636  004150  CFDE FFE6          	movff	postinc2,postinc1
 18637  004154  CFDD FFE5          	movff	postdec2,postdec1
 18638                           
 18639                           ;class/ball.c: 22:     LCD_DrawRect(b->x-4,b->y-4,b->x+4,b->y+4,1,0b1111100000000000);
 18640  004158  C025  FFD9         	movff	Ball_draw@b,fsr2l
 18641  00415C  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 18642  004160  CFDE F027          	movff	postinc2,??_Ball_draw
 18643  004164  CFDD F028          	movff	postdec2,??_Ball_draw+1
 18644  004168  0EFC               	movlw	252
 18645  00416A  2427               	addwf	??_Ball_draw^0,w,c
 18646  00416C  6E12               	movwf	LCD_DrawRect@posX1^0,c
 18647  00416E  0EFF               	movlw	255
 18648  004170  2028               	addwfc	(??_Ball_draw+1)^0,w,c
 18649  004172  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 18650  004174  EE20 F002          	lfsr	2,2
 18651  004178  5025               	movf	Ball_draw@b^0,w,c
 18652  00417A  26D9               	addwf	fsr2l,f,c
 18653  00417C  5026               	movf	(Ball_draw@b+1)^0,w,c
 18654  00417E  22DA               	addwfc	fsr2h,f,c
 18655  004180  CFDE F029          	movff	postinc2,??_Ball_draw+2
 18656  004184  CFDD F02A          	movff	postdec2,??_Ball_draw+3
 18657  004188  0EFC               	movlw	252
 18658  00418A  2429               	addwf	(??_Ball_draw+2)^0,w,c
 18659  00418C  6E14               	movwf	LCD_DrawRect@posY1^0,c
 18660  00418E  0EFF               	movlw	255
 18661  004190  202A               	addwfc	(??_Ball_draw+3)^0,w,c
 18662  004192  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 18663  004194  C025  FFD9         	movff	Ball_draw@b,fsr2l
 18664  004198  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 18665  00419C  CFDE F02B          	movff	postinc2,??_Ball_draw+4
 18666  0041A0  CFDD F02C          	movff	postdec2,??_Ball_draw+5
 18667  0041A4  0E04               	movlw	4
 18668  0041A6  242B               	addwf	(??_Ball_draw+4)^0,w,c
 18669  0041A8  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18670  0041AA  0E00               	movlw	0
 18671  0041AC  202C               	addwfc	(??_Ball_draw+5)^0,w,c
 18672  0041AE  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18673  0041B0  EE20 F002          	lfsr	2,2
 18674  0041B4  5025               	movf	Ball_draw@b^0,w,c
 18675  0041B6  26D9               	addwf	fsr2l,f,c
 18676  0041B8  5026               	movf	(Ball_draw@b+1)^0,w,c
 18677  0041BA  22DA               	addwfc	fsr2h,f,c
 18678  0041BC  CFDE F02D          	movff	postinc2,??_Ball_draw+6
 18679  0041C0  CFDD F02E          	movff	postdec2,??_Ball_draw+7
 18680  0041C4  0E04               	movlw	4
 18681  0041C6  242D               	addwf	(??_Ball_draw+6)^0,w,c
 18682  0041C8  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18683  0041CA  0E00               	movlw	0
 18684  0041CC  202E               	addwfc	(??_Ball_draw+7)^0,w,c
 18685  0041CE  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18686  0041D0  0E01               	movlw	1
 18687  0041D2  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18688  0041D4  0EF8               	movlw	248
 18689  0041D6  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18690  0041D8  0E00               	movlw	0
 18691  0041DA  6E1B               	movwf	LCD_DrawRect@color^0,c
 18692  0041DC  EC69  F016         	call	_LCD_DrawRect	;wreg free
 18693  0041E0  0012               	return		;funcret
 18694  0041E2                     __end_of_Ball_draw:
 18695                           	callstack 0
 18696                           
 18697 ;; *************** function _LCD_DrawRect *****************
 18698 ;; Defined at:
 18699 ;;		line 584 in file "libraries/lcd_highlevel.c"
 18700 ;; Parameters:    Size  Location     Type
 18701 ;;  posX1           2   17[COMRAM] unsigned short 
 18702 ;;  posY1           2   19[COMRAM] unsigned short 
 18703 ;;  posX2           2   21[COMRAM] unsigned short 
 18704 ;;  posY2           2   23[COMRAM] unsigned short 
 18705 ;;  fill            1   25[COMRAM] unsigned char 
 18706 ;;  color           2   26[COMRAM] unsigned short 
 18707 ;; Auto vars:     Size  Location     Type
 18708 ;;  i               2   34[COMRAM] unsigned short 
 18709 ;;  temp            2   30[COMRAM] unsigned short 
 18710 ;;  j               2   28[COMRAM] unsigned short 
 18711 ;;  colorL          1   33[COMRAM] unsigned char 
 18712 ;;  colorH          1   32[COMRAM] unsigned char 
 18713 ;; Return value:  Size  Location     Type
 18714 ;;                  1    wreg      void 
 18715 ;; Registers used:
 18716 ;;		wreg, status,2, status,0
 18717 ;; Tracked objects:
 18718 ;;		On entry : 0/0
 18719 ;;		On exit  : 0/0
 18720 ;;		Unchanged: 0/0
 18721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18722 ;;      Params:        11       0       0       0       0       0       0
 18723 ;;      Locals:         8       0       0       0       0       0       0
 18724 ;;      Temps:          0       0       0       0       0       0       0
 18725 ;;      Totals:        19       0       0       0       0       0       0
 18726 ;;Total ram usage:       19 bytes
 18727 ;; Hardware stack levels used: 1
 18728 ;; Hardware stack levels required when called: 4
 18729 ;; This function calls:
 18730 ;;		Nothing
 18731 ;; This function is called by:
 18732 ;;		_Ball_draw
 18733 ;;		_Paddle_draw
 18734 ;;		_LCD_SliderUpdate
 18735 ;;		_LCD_SliderDraw
 18736 ;;		_LCD_ButtonUpdate
 18737 ;;		_LCD_ButtonDraw
 18738 ;; This function uses a non-reentrant model
 18739 ;;
 18740                           
 18741                           	psect	text75
 18742  002CD2                     __ptext75:
 18743                           	callstack 0
 18744  002CD2                     _LCD_DrawRect:
 18745                           	callstack 21
 18746  002CD2                     
 18747                           ;libraries/lcd_highlevel.c: 584: void LCD_DrawRect(uint16_t posX1,uint16_t posY1, uint16
      +                          _t posX2,;libraries/lcd_highlevel.c: 585:   uint16_t posY2,uint8_t fill,uint16_t color);
      +                          libraries/lcd_highlevel.c: 586: {;libraries/lcd_highlevel.c: 587:   uint16_t i;;librarie
      +                          s/lcd_highlevel.c: 588:   uint16_t j;;libraries/lcd_highlevel.c: 589:   uint16_t temp;;l
      +                          ibraries/lcd_highlevel.c: 590:   uint8_t colorH,colorL;;libraries/lcd_highlevel.c: 592: 
      +                            colorH = color>>8;
 18748  002CD2  501C               	movf	(LCD_DrawRect@color+1)^0,w,c
 18749  002CD4  6E21               	movwf	LCD_DrawRect@colorH^0,c
 18750  002CD6                     
 18751                           ;libraries/lcd_highlevel.c: 593:   colorL = color;
 18752  002CD6  C01B  F022         	movff	LCD_DrawRect@color,LCD_DrawRect@colorL
 18753  002CDA                     
 18754                           ;libraries/lcd_highlevel.c: 597:   if(posX1 > posX2)
 18755  002CDA  5012               	movf	LCD_DrawRect@posX1^0,w,c
 18756  002CDC  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18757  002CDE  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18758  002CE0  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18759  002CE2  B0D8               	btfsc	status,0,c
 18760  002CE4  EF76  F016         	goto	u5941
 18761  002CE8  EF78  F016         	goto	u5940
 18762  002CEC                     u5941:
 18763  002CEC  EF84  F016         	goto	l8250
 18764  002CF0                     u5940:
 18765  002CF0                     
 18766                           ;libraries/lcd_highlevel.c: 598:   {;libraries/lcd_highlevel.c: 599:     temp = posX1;
 18767  002CF0  C012  F01F         	movff	LCD_DrawRect@posX1,LCD_DrawRect@temp
 18768  002CF4  C013  F020         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@temp+1
 18769                           
 18770                           ;libraries/lcd_highlevel.c: 600:     posX1 = posX2;
 18771  002CF8  C016  F012         	movff	LCD_DrawRect@posX2,LCD_DrawRect@posX1
 18772  002CFC  C017  F013         	movff	LCD_DrawRect@posX2+1,LCD_DrawRect@posX1+1
 18773                           
 18774                           ;libraries/lcd_highlevel.c: 601:     posX2 = temp;
 18775  002D00  C01F  F016         	movff	LCD_DrawRect@temp,LCD_DrawRect@posX2
 18776  002D04  C020  F017         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posX2+1
 18777  002D08                     l8250:
 18778                           
 18779                           ;libraries/lcd_highlevel.c: 603:   if(posY1 > posY2)
 18780  002D08  5014               	movf	LCD_DrawRect@posY1^0,w,c
 18781  002D0A  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18782  002D0C  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18783  002D0E  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18784  002D10  B0D8               	btfsc	status,0,c
 18785  002D12  EF8D  F016         	goto	u5951
 18786  002D16  EF8F  F016         	goto	u5950
 18787  002D1A                     u5951:
 18788  002D1A  EF9B  F016         	goto	l8254
 18789  002D1E                     u5950:
 18790  002D1E                     
 18791                           ;libraries/lcd_highlevel.c: 604:   {;libraries/lcd_highlevel.c: 605:     temp = posY1;
 18792  002D1E  C014  F01F         	movff	LCD_DrawRect@posY1,LCD_DrawRect@temp
 18793  002D22  C015  F020         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@temp+1
 18794                           
 18795                           ;libraries/lcd_highlevel.c: 606:     posY1 = posY2;
 18796  002D26  C018  F014         	movff	LCD_DrawRect@posY2,LCD_DrawRect@posY1
 18797  002D2A  C019  F015         	movff	LCD_DrawRect@posY2+1,LCD_DrawRect@posY1+1
 18798                           
 18799                           ;libraries/lcd_highlevel.c: 607:     posY2 = temp;
 18800  002D2E  C01F  F018         	movff	LCD_DrawRect@temp,LCD_DrawRect@posY2
 18801  002D32  C020  F019         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posY2+1
 18802  002D36                     l8254:
 18803                           
 18804                           ;libraries/lcd_highlevel.c: 610:   if(fill==1)
 18805  002D36  041A               	decf	LCD_DrawRect@fill^0,w,c
 18806  002D38  A4D8               	btfss	status,2,c
 18807  002D3A  EFA1  F016         	goto	u5961
 18808  002D3E  EFA3  F016         	goto	u5960
 18809  002D42                     u5961:
 18810  002D42  EF05  F017         	goto	l8330
 18811  002D46                     u5960:
 18812  002D46                     
 18813                           ;libraries/lcd_highlevel.c: 611:   {;libraries/lcd_highlevel.c: 613:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 18814  002D46  0E2A               	movlw	42
 18815  002D48  6E80               	movwf	128,c	;volatile
 18816  002D4A  988B               	bcf	3979,4,c	;volatile
 18817  002D4C  968B               	bcf	3979,3,c	;volatile
 18818  002D4E  868B               	bsf	3979,3,c	;volatile
 18819  002D50  888B               	bsf	3979,4,c	;volatile
 18820                           
 18821                           ;libraries/lcd_highlevel.c: 614:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18822  002D52  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18823  002D54  6E80               	movwf	128,c	;volatile
 18824  002D56  968B               	bcf	3979,3,c	;volatile
 18825  002D58  868B               	bsf	3979,3,c	;volatile
 18826  002D5A                     
 18827                           ;libraries/lcd_highlevel.c: 615:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18828  002D5A  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18829  002D5E  968B               	bcf	3979,3,c	;volatile
 18830  002D60  868B               	bsf	3979,3,c	;volatile
 18831                           
 18832                           ;libraries/lcd_highlevel.c: 616:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18833  002D62  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18834  002D64  6E80               	movwf	128,c	;volatile
 18835  002D66  968B               	bcf	3979,3,c	;volatile
 18836  002D68  868B               	bsf	3979,3,c	;volatile
 18837  002D6A                     
 18838                           ;libraries/lcd_highlevel.c: 617:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18839  002D6A  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18840  002D6E  968B               	bcf	3979,3,c	;volatile
 18841  002D70  868B               	bsf	3979,3,c	;volatile
 18842                           
 18843                           ;libraries/lcd_highlevel.c: 619:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18844  002D72  0E2B               	movlw	43
 18845  002D74  6E80               	movwf	128,c	;volatile
 18846  002D76  988B               	bcf	3979,4,c	;volatile
 18847  002D78  968B               	bcf	3979,3,c	;volatile
 18848  002D7A  868B               	bsf	3979,3,c	;volatile
 18849  002D7C  888B               	bsf	3979,4,c	;volatile
 18850                           
 18851                           ;libraries/lcd_highlevel.c: 620:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 18852  002D7E  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18853  002D80  6E80               	movwf	128,c	;volatile
 18854  002D82  968B               	bcf	3979,3,c	;volatile
 18855  002D84  868B               	bsf	3979,3,c	;volatile
 18856  002D86                     
 18857                           ;libraries/lcd_highlevel.c: 621:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 18858  002D86  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 18859  002D8A  968B               	bcf	3979,3,c	;volatile
 18860  002D8C  868B               	bsf	3979,3,c	;volatile
 18861                           
 18862                           ;libraries/lcd_highlevel.c: 622:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18863  002D8E  0E01               	movlw	1
 18864  002D90  6E80               	movwf	128,c	;volatile
 18865  002D92  968B               	bcf	3979,3,c	;volatile
 18866  002D94  868B               	bsf	3979,3,c	;volatile
 18867                           
 18868                           ;libraries/lcd_highlevel.c: 623:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18869  002D96  0E3F               	movlw	63
 18870  002D98  6E80               	movwf	128,c	;volatile
 18871  002D9A  968B               	bcf	3979,3,c	;volatile
 18872  002D9C  868B               	bsf	3979,3,c	;volatile
 18873                           
 18874                           ;libraries/lcd_highlevel.c: 625:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18875  002D9E  0E2C               	movlw	44
 18876  002DA0  6E80               	movwf	128,c	;volatile
 18877  002DA2  988B               	bcf	3979,4,c	;volatile
 18878  002DA4  968B               	bcf	3979,3,c	;volatile
 18879  002DA6  868B               	bsf	3979,3,c	;volatile
 18880  002DA8  888B               	bsf	3979,4,c	;volatile
 18881  002DAA                     
 18882                           ;libraries/lcd_highlevel.c: 626:     for(i=posX1;i<=posX2;i++)
 18883  002DAA  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18884  002DAE  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18885  002DB2  EFF8  F016         	goto	l8328
 18886  002DB6                     l282:
 18887                           
 18888                           ;libraries/lcd_highlevel.c: 627:     {;libraries/lcd_highlevel.c: 628:       for(j=posY1
      +                          ;j<=posY2;j++)
 18889  002DB6  C014  F01D         	movff	LCD_DrawRect@posY1,LCD_DrawRect@j
 18890  002DBA  C015  F01E         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@j+1
 18891  002DBE  EFEB  F016         	goto	l8324
 18892  002DC2                     l284:
 18893                           
 18894                           ;libraries/lcd_highlevel.c: 629:       {;libraries/lcd_highlevel.c: 630:         PORTA =
      +                           colorH; LATC3 = 0; LATC3 = 1;;
 18895  002DC2  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18896  002DC6  968B               	bcf	3979,3,c	;volatile
 18897  002DC8  868B               	bsf	3979,3,c	;volatile
 18898                           
 18899                           ;libraries/lcd_highlevel.c: 631:         PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18900  002DCA  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18901  002DCE  968B               	bcf	3979,3,c	;volatile
 18902  002DD0  868B               	bsf	3979,3,c	;volatile
 18903  002DD2                     
 18904                           ;libraries/lcd_highlevel.c: 632:       }
 18905  002DD2  4A1D               	infsnz	LCD_DrawRect@j^0,f,c
 18906  002DD4  2A1E               	incf	(LCD_DrawRect@j+1)^0,f,c
 18907  002DD6                     l8324:
 18908  002DD6  501D               	movf	LCD_DrawRect@j^0,w,c
 18909  002DD8  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18910  002DDA  501E               	movf	(LCD_DrawRect@j+1)^0,w,c
 18911  002DDC  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18912  002DDE  B0D8               	btfsc	status,0,c
 18913  002DE0  EFF4  F016         	goto	u5971
 18914  002DE4  EFF6  F016         	goto	u5970
 18915  002DE8                     u5971:
 18916  002DE8  EFE1  F016         	goto	l284
 18917  002DEC                     u5970:
 18918  002DEC                     
 18919                           ;libraries/lcd_highlevel.c: 633:     }
 18920  002DEC  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18921  002DEE  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18922  002DF0                     l8328:
 18923  002DF0  5023               	movf	LCD_DrawRect@i^0,w,c
 18924  002DF2  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18925  002DF4  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18926  002DF6  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18927  002DF8  B0D8               	btfsc	status,0,c
 18928  002DFA  EF01  F017         	goto	u5981
 18929  002DFE  EF03  F017         	goto	u5980
 18930  002E02                     u5981:
 18931  002E02  EFDB  F016         	goto	l282
 18932  002E06                     u5980:
 18933  002E06  EF05  F018         	goto	l300
 18934  002E0A                     l8330:
 18935                           
 18936                           ;libraries/lcd_highlevel.c: 637:   {;libraries/lcd_highlevel.c: 639:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 18937  002E0A  0E2A               	movlw	42
 18938  002E0C  6E80               	movwf	128,c	;volatile
 18939  002E0E  988B               	bcf	3979,4,c	;volatile
 18940  002E10  968B               	bcf	3979,3,c	;volatile
 18941  002E12  868B               	bsf	3979,3,c	;volatile
 18942  002E14  888B               	bsf	3979,4,c	;volatile
 18943                           
 18944                           ;libraries/lcd_highlevel.c: 640:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18945  002E16  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18946  002E18  6E80               	movwf	128,c	;volatile
 18947  002E1A  968B               	bcf	3979,3,c	;volatile
 18948  002E1C  868B               	bsf	3979,3,c	;volatile
 18949  002E1E                     
 18950                           ;libraries/lcd_highlevel.c: 641:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18951  002E1E  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18952  002E22  968B               	bcf	3979,3,c	;volatile
 18953  002E24  868B               	bsf	3979,3,c	;volatile
 18954                           
 18955                           ;libraries/lcd_highlevel.c: 642:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18956  002E26  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18957  002E28  6E80               	movwf	128,c	;volatile
 18958  002E2A  968B               	bcf	3979,3,c	;volatile
 18959  002E2C  868B               	bsf	3979,3,c	;volatile
 18960  002E2E                     
 18961                           ;libraries/lcd_highlevel.c: 643:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18962  002E2E  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18963  002E32  968B               	bcf	3979,3,c	;volatile
 18964  002E34  868B               	bsf	3979,3,c	;volatile
 18965                           
 18966                           ;libraries/lcd_highlevel.c: 645:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18967  002E36  0E2B               	movlw	43
 18968  002E38  6E80               	movwf	128,c	;volatile
 18969  002E3A  988B               	bcf	3979,4,c	;volatile
 18970  002E3C  968B               	bcf	3979,3,c	;volatile
 18971  002E3E  868B               	bsf	3979,3,c	;volatile
 18972  002E40  888B               	bsf	3979,4,c	;volatile
 18973                           
 18974                           ;libraries/lcd_highlevel.c: 646:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 18975  002E42  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18976  002E44  6E80               	movwf	128,c	;volatile
 18977  002E46  968B               	bcf	3979,3,c	;volatile
 18978  002E48  868B               	bsf	3979,3,c	;volatile
 18979  002E4A                     
 18980                           ;libraries/lcd_highlevel.c: 647:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 18981  002E4A  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 18982  002E4E  968B               	bcf	3979,3,c	;volatile
 18983  002E50  868B               	bsf	3979,3,c	;volatile
 18984                           
 18985                           ;libraries/lcd_highlevel.c: 648:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18986  002E52  0E01               	movlw	1
 18987  002E54  6E80               	movwf	128,c	;volatile
 18988  002E56  968B               	bcf	3979,3,c	;volatile
 18989  002E58  868B               	bsf	3979,3,c	;volatile
 18990                           
 18991                           ;libraries/lcd_highlevel.c: 649:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18992  002E5A  0E3F               	movlw	63
 18993  002E5C  6E80               	movwf	128,c	;volatile
 18994  002E5E  968B               	bcf	3979,3,c	;volatile
 18995  002E60  868B               	bsf	3979,3,c	;volatile
 18996                           
 18997                           ;libraries/lcd_highlevel.c: 651:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18998  002E62  0E2C               	movlw	44
 18999  002E64  6E80               	movwf	128,c	;volatile
 19000  002E66  988B               	bcf	3979,4,c	;volatile
 19001  002E68  968B               	bcf	3979,3,c	;volatile
 19002  002E6A  868B               	bsf	3979,3,c	;volatile
 19003  002E6C  888B               	bsf	3979,4,c	;volatile
 19004  002E6E                     
 19005                           ;libraries/lcd_highlevel.c: 653:     for(i=posX1;i<=posX2;i++)
 19006  002E6E  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 19007  002E72  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 19008  002E76  EF47  F017         	goto	l8398
 19009  002E7A                     l289:
 19010                           
 19011                           ;libraries/lcd_highlevel.c: 654:     {;libraries/lcd_highlevel.c: 655:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19012  002E7A  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19013  002E7E  968B               	bcf	3979,3,c	;volatile
 19014  002E80  868B               	bsf	3979,3,c	;volatile
 19015                           
 19016                           ;libraries/lcd_highlevel.c: 656:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19017  002E82  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19018  002E86  968B               	bcf	3979,3,c	;volatile
 19019  002E88  868B               	bsf	3979,3,c	;volatile
 19020  002E8A                     
 19021                           ;libraries/lcd_highlevel.c: 657:     }
 19022  002E8A  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19023  002E8C  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19024  002E8E                     l8398:
 19025  002E8E  5023               	movf	LCD_DrawRect@i^0,w,c
 19026  002E90  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 19027  002E92  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19028  002E94  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 19029  002E96  B0D8               	btfsc	status,0,c
 19030  002E98  EF50  F017         	goto	u5991
 19031  002E9C  EF52  F017         	goto	u5990
 19032  002EA0                     u5991:
 19033  002EA0  EF3D  F017         	goto	l289
 19034  002EA4                     u5990:
 19035  002EA4                     
 19036                           ;libraries/lcd_highlevel.c: 659:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19037  002EA4  0E2B               	movlw	43
 19038  002EA6  6E80               	movwf	128,c	;volatile
 19039  002EA8  988B               	bcf	3979,4,c	;volatile
 19040  002EAA  968B               	bcf	3979,3,c	;volatile
 19041  002EAC  868B               	bsf	3979,3,c	;volatile
 19042  002EAE  888B               	bsf	3979,4,c	;volatile
 19043                           
 19044                           ;libraries/lcd_highlevel.c: 660:     PORTA = posY2>>8; LATC3 = 0; LATC3 = 1;;
 19045  002EB0  5019               	movf	(LCD_DrawRect@posY2+1)^0,w,c
 19046  002EB2  6E80               	movwf	128,c	;volatile
 19047  002EB4  968B               	bcf	3979,3,c	;volatile
 19048  002EB6  868B               	bsf	3979,3,c	;volatile
 19049  002EB8                     
 19050                           ;libraries/lcd_highlevel.c: 661:     PORTA = posY2; LATC3 = 0; LATC3 = 1;;
 19051  002EB8  C018  FF80         	movff	LCD_DrawRect@posY2,3968	;volatile
 19052  002EBC  968B               	bcf	3979,3,c	;volatile
 19053  002EBE  868B               	bsf	3979,3,c	;volatile
 19054                           
 19055                           ;libraries/lcd_highlevel.c: 662:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19056  002EC0  0E2C               	movlw	44
 19057  002EC2  6E80               	movwf	128,c	;volatile
 19058  002EC4  988B               	bcf	3979,4,c	;volatile
 19059  002EC6  968B               	bcf	3979,3,c	;volatile
 19060  002EC8  868B               	bsf	3979,3,c	;volatile
 19061  002ECA  888B               	bsf	3979,4,c	;volatile
 19062  002ECC                     
 19063                           ;libraries/lcd_highlevel.c: 663:     for(i=posX1;i<=posX2;i++)
 19064  002ECC  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 19065  002ED0  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 19066  002ED4  EF76  F017         	goto	l8432
 19067  002ED8                     l292:
 19068                           
 19069                           ;libraries/lcd_highlevel.c: 664:     {;libraries/lcd_highlevel.c: 665:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19070  002ED8  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19071  002EDC  968B               	bcf	3979,3,c	;volatile
 19072  002EDE  868B               	bsf	3979,3,c	;volatile
 19073                           
 19074                           ;libraries/lcd_highlevel.c: 666:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19075  002EE0  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19076  002EE4  968B               	bcf	3979,3,c	;volatile
 19077  002EE6  868B               	bsf	3979,3,c	;volatile
 19078  002EE8                     
 19079                           ;libraries/lcd_highlevel.c: 667:     }
 19080  002EE8  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19081  002EEA  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19082  002EEC                     l8432:
 19083  002EEC  5023               	movf	LCD_DrawRect@i^0,w,c
 19084  002EEE  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 19085  002EF0  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19086  002EF2  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 19087  002EF4  B0D8               	btfsc	status,0,c
 19088  002EF6  EF7F  F017         	goto	u6001
 19089  002EFA  EF81  F017         	goto	u6000
 19090  002EFE                     u6001:
 19091  002EFE  EF6C  F017         	goto	l292
 19092  002F02                     u6000:
 19093  002F02                     
 19094                           ;libraries/lcd_highlevel.c: 669:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19095  002F02  0E2A               	movlw	42
 19096  002F04  6E80               	movwf	128,c	;volatile
 19097  002F06  988B               	bcf	3979,4,c	;volatile
 19098  002F08  968B               	bcf	3979,3,c	;volatile
 19099  002F0A  868B               	bsf	3979,3,c	;volatile
 19100  002F0C  888B               	bsf	3979,4,c	;volatile
 19101                           
 19102                           ;libraries/lcd_highlevel.c: 670:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 19103  002F0E  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 19104  002F10  6E80               	movwf	128,c	;volatile
 19105  002F12  968B               	bcf	3979,3,c	;volatile
 19106  002F14  868B               	bsf	3979,3,c	;volatile
 19107  002F16                     
 19108                           ;libraries/lcd_highlevel.c: 671:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 19109  002F16  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 19110  002F1A  968B               	bcf	3979,3,c	;volatile
 19111  002F1C  868B               	bsf	3979,3,c	;volatile
 19112                           
 19113                           ;libraries/lcd_highlevel.c: 672:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 19114  002F1E  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 19115  002F20  6E80               	movwf	128,c	;volatile
 19116  002F22  968B               	bcf	3979,3,c	;volatile
 19117  002F24  868B               	bsf	3979,3,c	;volatile
 19118  002F26                     
 19119                           ;libraries/lcd_highlevel.c: 673:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 19120  002F26  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 19121  002F2A  968B               	bcf	3979,3,c	;volatile
 19122  002F2C  868B               	bsf	3979,3,c	;volatile
 19123                           
 19124                           ;libraries/lcd_highlevel.c: 675:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19125  002F2E  0E2B               	movlw	43
 19126  002F30  6E80               	movwf	128,c	;volatile
 19127  002F32  988B               	bcf	3979,4,c	;volatile
 19128  002F34  968B               	bcf	3979,3,c	;volatile
 19129  002F36  868B               	bsf	3979,3,c	;volatile
 19130  002F38  888B               	bsf	3979,4,c	;volatile
 19131                           
 19132                           ;libraries/lcd_highlevel.c: 676:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 19133  002F3A  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 19134  002F3C  6E80               	movwf	128,c	;volatile
 19135  002F3E  968B               	bcf	3979,3,c	;volatile
 19136  002F40  868B               	bsf	3979,3,c	;volatile
 19137  002F42                     
 19138                           ;libraries/lcd_highlevel.c: 677:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 19139  002F42  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 19140  002F46  968B               	bcf	3979,3,c	;volatile
 19141  002F48  868B               	bsf	3979,3,c	;volatile
 19142                           
 19143                           ;libraries/lcd_highlevel.c: 678:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 19144  002F4A  0E01               	movlw	1
 19145  002F4C  6E80               	movwf	128,c	;volatile
 19146  002F4E  968B               	bcf	3979,3,c	;volatile
 19147  002F50  868B               	bsf	3979,3,c	;volatile
 19148                           
 19149                           ;libraries/lcd_highlevel.c: 679:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 19150  002F52  0E3F               	movlw	63
 19151  002F54  6E80               	movwf	128,c	;volatile
 19152  002F56  968B               	bcf	3979,3,c	;volatile
 19153  002F58  868B               	bsf	3979,3,c	;volatile
 19154                           
 19155                           ;libraries/lcd_highlevel.c: 680:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19156  002F5A  0E2C               	movlw	44
 19157  002F5C  6E80               	movwf	128,c	;volatile
 19158  002F5E  988B               	bcf	3979,4,c	;volatile
 19159  002F60  968B               	bcf	3979,3,c	;volatile
 19160  002F62  868B               	bsf	3979,3,c	;volatile
 19161  002F64  888B               	bsf	3979,4,c	;volatile
 19162  002F66                     
 19163                           ;libraries/lcd_highlevel.c: 681:     for(i=posY1;i<=posY2;i++)
 19164  002F66  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 19165  002F6A  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 19166  002F6E  EFC3  F017         	goto	l8502
 19167  002F72                     l295:
 19168                           
 19169                           ;libraries/lcd_highlevel.c: 682:     {;libraries/lcd_highlevel.c: 683:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19170  002F72  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19171  002F76  968B               	bcf	3979,3,c	;volatile
 19172  002F78  868B               	bsf	3979,3,c	;volatile
 19173                           
 19174                           ;libraries/lcd_highlevel.c: 684:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19175  002F7A  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19176  002F7E  968B               	bcf	3979,3,c	;volatile
 19177  002F80  868B               	bsf	3979,3,c	;volatile
 19178  002F82                     
 19179                           ;libraries/lcd_highlevel.c: 685:     }
 19180  002F82  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19181  002F84  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19182  002F86                     l8502:
 19183  002F86  5023               	movf	LCD_DrawRect@i^0,w,c
 19184  002F88  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 19185  002F8A  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19186  002F8C  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 19187  002F8E  B0D8               	btfsc	status,0,c
 19188  002F90  EFCC  F017         	goto	u6011
 19189  002F94  EFCE  F017         	goto	u6010
 19190  002F98                     u6011:
 19191  002F98  EFB9  F017         	goto	l295
 19192  002F9C                     u6010:
 19193  002F9C                     
 19194                           ;libraries/lcd_highlevel.c: 687:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19195  002F9C  0E2A               	movlw	42
 19196  002F9E  6E80               	movwf	128,c	;volatile
 19197  002FA0  988B               	bcf	3979,4,c	;volatile
 19198  002FA2  968B               	bcf	3979,3,c	;volatile
 19199  002FA4  868B               	bsf	3979,3,c	;volatile
 19200  002FA6  888B               	bsf	3979,4,c	;volatile
 19201                           
 19202                           ;libraries/lcd_highlevel.c: 688:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 19203  002FA8  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 19204  002FAA  6E80               	movwf	128,c	;volatile
 19205  002FAC  968B               	bcf	3979,3,c	;volatile
 19206  002FAE  868B               	bsf	3979,3,c	;volatile
 19207  002FB0                     
 19208                           ;libraries/lcd_highlevel.c: 689:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 19209  002FB0  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 19210  002FB4  968B               	bcf	3979,3,c	;volatile
 19211  002FB6  868B               	bsf	3979,3,c	;volatile
 19212                           
 19213                           ;libraries/lcd_highlevel.c: 690:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 19214  002FB8  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 19215  002FBA  6E80               	movwf	128,c	;volatile
 19216  002FBC  968B               	bcf	3979,3,c	;volatile
 19217  002FBE  868B               	bsf	3979,3,c	;volatile
 19218  002FC0                     
 19219                           ;libraries/lcd_highlevel.c: 691:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 19220  002FC0  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 19221  002FC4  968B               	bcf	3979,3,c	;volatile
 19222  002FC6  868B               	bsf	3979,3,c	;volatile
 19223                           
 19224                           ;libraries/lcd_highlevel.c: 692:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19225  002FC8  0E2C               	movlw	44
 19226  002FCA  6E80               	movwf	128,c	;volatile
 19227  002FCC  988B               	bcf	3979,4,c	;volatile
 19228  002FCE  968B               	bcf	3979,3,c	;volatile
 19229  002FD0  868B               	bsf	3979,3,c	;volatile
 19230  002FD2  888B               	bsf	3979,4,c	;volatile
 19231  002FD4                     
 19232                           ;libraries/lcd_highlevel.c: 693:     for(i=posY1;i<=posY2;i++)
 19233  002FD4  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 19234  002FD8  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 19235  002FDC  EFFA  F017         	goto	l8546
 19236  002FE0                     l298:
 19237                           
 19238                           ;libraries/lcd_highlevel.c: 694:     {;libraries/lcd_highlevel.c: 695:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19239  002FE0  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19240  002FE4  968B               	bcf	3979,3,c	;volatile
 19241  002FE6  868B               	bsf	3979,3,c	;volatile
 19242                           
 19243                           ;libraries/lcd_highlevel.c: 696:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19244  002FE8  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19245  002FEC  968B               	bcf	3979,3,c	;volatile
 19246  002FEE  868B               	bsf	3979,3,c	;volatile
 19247  002FF0                     
 19248                           ;libraries/lcd_highlevel.c: 697:     }
 19249  002FF0  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19250  002FF2  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19251  002FF4                     l8546:
 19252  002FF4  5023               	movf	LCD_DrawRect@i^0,w,c
 19253  002FF6  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 19254  002FF8  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19255  002FFA  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 19256  002FFC  B0D8               	btfsc	status,0,c
 19257  002FFE  EF03  F018         	goto	u6021
 19258  003002  EF05  F018         	goto	u6020
 19259  003006                     u6021:
 19260  003006  EFF0  F017         	goto	l298
 19261  00300A                     u6020:
 19262  00300A                     l300:
 19263  00300A  0012               	return		;funcret
 19264  00300C                     __end_of_LCD_DrawRect:
 19265                           	callstack 0
 19266                           
 19267 ;; *************** function _XF_popEvent *****************
 19268 ;; Defined at:
 19269 ;;		line 72 in file "xf/xf.c"
 19270 ;; Parameters:    Size  Location     Type
 19271 ;;  inISR           1    wreg     _Bool 
 19272 ;; Auto vars:     Size  Location     Type
 19273 ;;  inISR           1   24[COMRAM] _Bool 
 19274 ;;  ev              1   23[COMRAM] unsigned char 
 19275 ;; Return value:  Size  Location     Type
 19276 ;;                  1    wreg      unsigned char 
 19277 ;; Registers used:
 19278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19279 ;; Tracked objects:
 19280 ;;		On entry : 0/0
 19281 ;;		On exit  : 0/0
 19282 ;;		Unchanged: 0/0
 19283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19284 ;;      Params:         0       0       0       0       0       0       0
 19285 ;;      Locals:         2       0       0       0       0       0       0
 19286 ;;      Temps:          0       0       0       0       0       0       0
 19287 ;;      Totals:         2       0       0       0       0       0       0
 19288 ;;Total ram usage:        2 bytes
 19289 ;; Hardware stack levels used: 1
 19290 ;; Hardware stack levels required when called: 5
 19291 ;; This function calls:
 19292 ;;		_ENTERCRITICAL
 19293 ;;		_LEAVECRITICAL
 19294 ;;		___awmod
 19295 ;; This function is called by:
 19296 ;;		_Factory_exec
 19297 ;; This function uses a non-reentrant model
 19298 ;;
 19299                           
 19300                           	psect	text76
 19301  005F4E                     __ptext76:
 19302                           	callstack 0
 19303  005F4E                     _XF_popEvent:
 19304                           	callstack 24
 19305                           
 19306                           ;incstack = 0
 19307                           ;XF_popEvent@inISR stored from wreg
 19308  005F4E  6E19               	movwf	XF_popEvent@inISR^0,c
 19309  005F50                     
 19310                           ;xf/xf.c: 76:     ENTERCRITICAL(inISR);
 19311  005F50  5019               	movf	XF_popEvent@inISR^0,w,c
 19312  005F52  EC17  F032         	call	_ENTERCRITICAL
 19313  005F56                     
 19314                           ;xf/xf.c: 77:     if(theXF.in == theXF.out)
 19315  005F56  0100               	movlb	0	; () banked
 19316  005F58  51DA               	movf	(_theXF+37)& (0+255),w,b
 19317  005F5A  19D9               	xorwf	(_theXF+36)& (0+255),w,b
 19318  005F5C  A4D8               	btfss	status,2,c
 19319  005F5E  EFB3  F02F         	goto	u7901
 19320  005F62  EFB5  F02F         	goto	u7900
 19321  005F66                     u7901:
 19322  005F66  EFBB  F02F         	goto	l10454
 19323  005F6A                     u7900:
 19324  005F6A                     
 19325                           ; BSR set to: 0
 19326                           ;xf/xf.c: 78:     {;xf/xf.c: 79:       LEAVECRITICAL(inISR);
 19327  005F6A  5019               	movf	XF_popEvent@inISR^0,w,c
 19328  005F6C  EC0C  F032         	call	_LEAVECRITICAL
 19329  005F70                     
 19330                           ;xf/xf.c: 80:       return ev;
 19331  005F70  0E00               	movlw	0
 19332  005F72  EFD6  F02F         	goto	l741
 19333  005F76                     l10454:
 19334                           
 19335                           ; BSR set to: 0
 19336                           ;xf/xf.c: 82:     ev = theXF.eventQueue[theXF.out];
 19337  005F76  0ECD               	movlw	low (_theXF+24)
 19338  005F78  25DA               	addwf	(_theXF+37)& (0+255),w,b
 19339  005F7A  6ED9               	movwf	fsr2l,c
 19340  005F7C  6ADA               	clrf	fsr2h,c
 19341  005F7E  0E00               	movlw	high (_theXF+24)
 19342  005F80  22DA               	addwfc	fsr2h,f,c
 19343  005F82  50DF               	movf	indf2,w,c
 19344  005F84  6E18               	movwf	XF_popEvent@ev^0,c
 19345  005F86                     
 19346                           ; BSR set to: 0
 19347                           ;xf/xf.c: 83:     theXF.out = (theXF.out + 1)%(uint8_t)sizeof(theXF.eventQueue);
 19348  005F86  0E01               	movlw	1
 19349  005F88  25DA               	addwf	(_theXF+37)& (0+255),w,b
 19350  005F8A  6E12               	movwf	___awmod@dividend^0,c
 19351  005F8C  6A13               	clrf	(___awmod@dividend+1)^0,c
 19352  005F8E  0E00               	movlw	0
 19353  005F90  2213               	addwfc	(___awmod@dividend+1)^0,f,c
 19354  005F92  0E00               	movlw	0
 19355  005F94  6E15               	movwf	(___awmod@divisor+1)^0,c
 19356  005F96  0E0C               	movlw	12
 19357  005F98  6E14               	movwf	___awmod@divisor^0,c
 19358  005F9A  EC9F  F02B         	call	___awmod	;wreg free
 19359  005F9E  5012               	movf	?___awmod^0,w,c
 19360  005FA0  0100               	movlb	0	; () banked
 19361  005FA2  6FDA               	movwf	(_theXF+37)& (0+255),b
 19362  005FA4                     
 19363                           ; BSR set to: 0
 19364                           ;xf/xf.c: 84:     LEAVECRITICAL(inISR);
 19365  005FA4  5019               	movf	XF_popEvent@inISR^0,w,c
 19366  005FA6  EC0C  F032         	call	_LEAVECRITICAL
 19367  005FAA                     
 19368                           ;xf/xf.c: 85:     return ev;
 19369  005FAA  5018               	movf	XF_popEvent@ev^0,w,c
 19370  005FAC                     l741:
 19371  005FAC  0012               	return		;funcret
 19372  005FAE                     __end_of_XF_popEvent:
 19373                           	callstack 0
 19374                           
 19375 ;; *************** function ___awmod *****************
 19376 ;; Defined at:
 19377 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 19378 ;; Parameters:    Size  Location     Type
 19379 ;;  dividend        2   17[COMRAM] int 
 19380 ;;  divisor         2   19[COMRAM] int 
 19381 ;; Auto vars:     Size  Location     Type
 19382 ;;  sign            1   22[COMRAM] unsigned char 
 19383 ;;  counter         1   21[COMRAM] unsigned char 
 19384 ;; Return value:  Size  Location     Type
 19385 ;;                  2   17[COMRAM] int 
 19386 ;; Registers used:
 19387 ;;		wreg, status,2, status,0
 19388 ;; Tracked objects:
 19389 ;;		On entry : 0/0
 19390 ;;		On exit  : 0/0
 19391 ;;		Unchanged: 0/0
 19392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19393 ;;      Params:         4       0       0       0       0       0       0
 19394 ;;      Locals:         2       0       0       0       0       0       0
 19395 ;;      Temps:          0       0       0       0       0       0       0
 19396 ;;      Totals:         6       0       0       0       0       0       0
 19397 ;;Total ram usage:        6 bytes
 19398 ;; Hardware stack levels used: 1
 19399 ;; Hardware stack levels required when called: 4
 19400 ;; This function calls:
 19401 ;;		Nothing
 19402 ;; This function is called by:
 19403 ;;		_XF_pushEvent
 19404 ;;		_XF_popEvent
 19405 ;; This function uses a non-reentrant model
 19406 ;;
 19407                           
 19408                           	psect	text77
 19409  00573E                     __ptext77:
 19410                           	callstack 0
 19411  00573E                     ___awmod:
 19412                           	callstack 20
 19413  00573E  0E00               	movlw	0
 19414  005740  6E17               	movwf	___awmod@sign^0,c
 19415  005742  BE13               	btfsc	(___awmod@dividend+1)^0,7,c
 19416  005744  EFA8  F02B         	goto	u6150
 19417  005748  EFA6  F02B         	goto	u6151
 19418  00574C                     u6151:
 19419  00574C  EFAE  F02B         	goto	l8736
 19420  005750                     u6150:
 19421  005750  6C12               	negf	___awmod@dividend^0,c
 19422  005752  1E13               	comf	(___awmod@dividend+1)^0,f,c
 19423  005754  B0D8               	btfsc	status,0,c
 19424  005756  2A13               	incf	(___awmod@dividend+1)^0,f,c
 19425  005758  0E01               	movlw	1
 19426  00575A  6E17               	movwf	___awmod@sign^0,c
 19427  00575C                     l8736:
 19428  00575C  BE15               	btfsc	(___awmod@divisor+1)^0,7,c
 19429  00575E  EFB5  F02B         	goto	u6160
 19430  005762  EFB3  F02B         	goto	u6161
 19431  005766                     u6161:
 19432  005766  EFB9  F02B         	goto	l8740
 19433  00576A                     u6160:
 19434  00576A  6C14               	negf	___awmod@divisor^0,c
 19435  00576C  1E15               	comf	(___awmod@divisor+1)^0,f,c
 19436  00576E  B0D8               	btfsc	status,0,c
 19437  005770  2A15               	incf	(___awmod@divisor+1)^0,f,c
 19438  005772                     l8740:
 19439  005772  5014               	movf	___awmod@divisor^0,w,c
 19440  005774  1015               	iorwf	(___awmod@divisor+1)^0,w,c
 19441  005776  B4D8               	btfsc	status,2,c
 19442  005778  EFC0  F02B         	goto	u6171
 19443  00577C  EFC2  F02B         	goto	u6170
 19444  005780                     u6171:
 19445  005780  EFE6  F02B         	goto	l8756
 19446  005784                     u6170:
 19447  005784  0E01               	movlw	1
 19448  005786  6E16               	movwf	___awmod@counter^0,c
 19449  005788  EFCA  F02B         	goto	l8746
 19450  00578C                     l8744:
 19451  00578C  90D8               	bcf	status,0,c
 19452  00578E  3614               	rlcf	___awmod@divisor^0,f,c
 19453  005790  3615               	rlcf	(___awmod@divisor+1)^0,f,c
 19454  005792  2A16               	incf	___awmod@counter^0,f,c
 19455  005794                     l8746:
 19456  005794  AE15               	btfss	(___awmod@divisor+1)^0,7,c
 19457  005796  EFCF  F02B         	goto	u6181
 19458  00579A  EFD1  F02B         	goto	u6180
 19459  00579E                     u6181:
 19460  00579E  EFC6  F02B         	goto	l8744
 19461  0057A2                     u6180:
 19462  0057A2                     l8748:
 19463  0057A2  5014               	movf	___awmod@divisor^0,w,c
 19464  0057A4  5C12               	subwf	___awmod@dividend^0,w,c
 19465  0057A6  5015               	movf	(___awmod@divisor+1)^0,w,c
 19466  0057A8  5813               	subwfb	(___awmod@dividend+1)^0,w,c
 19467  0057AA  A0D8               	btfss	status,0,c
 19468  0057AC  EFDA  F02B         	goto	u6191
 19469  0057B0  EFDC  F02B         	goto	u6190
 19470  0057B4                     u6191:
 19471  0057B4  EFE0  F02B         	goto	l8752
 19472  0057B8                     u6190:
 19473  0057B8  5014               	movf	___awmod@divisor^0,w,c
 19474  0057BA  5E12               	subwf	___awmod@dividend^0,f,c
 19475  0057BC  5015               	movf	(___awmod@divisor+1)^0,w,c
 19476  0057BE  5A13               	subwfb	(___awmod@dividend+1)^0,f,c
 19477  0057C0                     l8752:
 19478  0057C0  90D8               	bcf	status,0,c
 19479  0057C2  3215               	rrcf	(___awmod@divisor+1)^0,f,c
 19480  0057C4  3214               	rrcf	___awmod@divisor^0,f,c
 19481  0057C6  2E16               	decfsz	___awmod@counter^0,f,c
 19482  0057C8  EFD1  F02B         	goto	l8748
 19483  0057CC                     l8756:
 19484  0057CC  5017               	movf	___awmod@sign^0,w,c
 19485  0057CE  B4D8               	btfsc	status,2,c
 19486  0057D0  EFEC  F02B         	goto	u6201
 19487  0057D4  EFEE  F02B         	goto	u6200
 19488  0057D8                     u6201:
 19489  0057D8  EFF2  F02B         	goto	l8760
 19490  0057DC                     u6200:
 19491  0057DC  6C12               	negf	___awmod@dividend^0,c
 19492  0057DE  1E13               	comf	(___awmod@dividend+1)^0,f,c
 19493  0057E0  B0D8               	btfsc	status,0,c
 19494  0057E2  2A13               	incf	(___awmod@dividend+1)^0,f,c
 19495  0057E4                     l8760:
 19496  0057E4  C012  F012         	movff	___awmod@dividend,?___awmod
 19497  0057E8  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
 19498  0057EC  0012               	return		;funcret
 19499  0057EE                     __end_of___awmod:
 19500                           	callstack 0
 19501                           
 19502 ;; *************** function _LEAVECRITICAL *****************
 19503 ;; Defined at:
 19504 ;;		line 186 in file "xf/xf.c"
 19505 ;; Parameters:    Size  Location     Type
 19506 ;;  inISR           1    wreg     _Bool 
 19507 ;; Auto vars:     Size  Location     Type
 19508 ;;  inISR           1   17[COMRAM] _Bool 
 19509 ;; Return value:  Size  Location     Type
 19510 ;;                  1    wreg      void 
 19511 ;; Registers used:
 19512 ;;		wreg, status,2
 19513 ;; Tracked objects:
 19514 ;;		On entry : 0/0
 19515 ;;		On exit  : 0/0
 19516 ;;		Unchanged: 0/0
 19517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19518 ;;      Params:         0       0       0       0       0       0       0
 19519 ;;      Locals:         1       0       0       0       0       0       0
 19520 ;;      Temps:          0       0       0       0       0       0       0
 19521 ;;      Totals:         1       0       0       0       0       0       0
 19522 ;;Total ram usage:        1 bytes
 19523 ;; Hardware stack levels used: 1
 19524 ;; Hardware stack levels required when called: 4
 19525 ;; This function calls:
 19526 ;;		Nothing
 19527 ;; This function is called by:
 19528 ;;		_XF_pushEvent
 19529 ;;		_XF_popEvent
 19530 ;;		_XF_scheduleTimer
 19531 ;; This function uses a non-reentrant model
 19532 ;;
 19533                           
 19534                           	psect	text78
 19535  006418                     __ptext78:
 19536                           	callstack 0
 19537  006418                     _LEAVECRITICAL:
 19538                           	callstack 20
 19539                           
 19540                           ;incstack = 0
 19541                           ;LEAVECRITICAL@inISR stored from wreg
 19542  006418  6E12               	movwf	LEAVECRITICAL@inISR^0,c
 19543  00641A                     
 19544                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 19545  00641A  5012               	movf	LEAVECRITICAL@inISR^0,w,c
 19546  00641C  A4D8               	btfss	status,2,c
 19547  00641E  EF13  F032         	goto	u6081
 19548  006422  EF15  F032         	goto	u6080
 19549  006426                     u6081:
 19550  006426  EF16  F032         	goto	l767
 19551  00642A                     u6080:
 19552  00642A                     
 19553                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 19554  00642A  8EF2               	bsf	4082,7,c	;volatile
 19555  00642C                     l767:
 19556  00642C  0012               	return		;funcret
 19557  00642E                     __end_of_LEAVECRITICAL:
 19558                           	callstack 0
 19559                           
 19560 ;; *************** function _ENTERCRITICAL *****************
 19561 ;; Defined at:
 19562 ;;		line 172 in file "xf/xf.c"
 19563 ;; Parameters:    Size  Location     Type
 19564 ;;  inISR           1    wreg     _Bool 
 19565 ;; Auto vars:     Size  Location     Type
 19566 ;;  inISR           1   17[COMRAM] _Bool 
 19567 ;; Return value:  Size  Location     Type
 19568 ;;                  1    wreg      void 
 19569 ;; Registers used:
 19570 ;;		wreg, status,2
 19571 ;; Tracked objects:
 19572 ;;		On entry : 0/0
 19573 ;;		On exit  : 0/0
 19574 ;;		Unchanged: 0/0
 19575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19576 ;;      Params:         0       0       0       0       0       0       0
 19577 ;;      Locals:         1       0       0       0       0       0       0
 19578 ;;      Temps:          0       0       0       0       0       0       0
 19579 ;;      Totals:         1       0       0       0       0       0       0
 19580 ;;Total ram usage:        1 bytes
 19581 ;; Hardware stack levels used: 1
 19582 ;; Hardware stack levels required when called: 4
 19583 ;; This function calls:
 19584 ;;		Nothing
 19585 ;; This function is called by:
 19586 ;;		_XF_pushEvent
 19587 ;;		_XF_popEvent
 19588 ;;		_XF_scheduleTimer
 19589 ;; This function uses a non-reentrant model
 19590 ;;
 19591                           
 19592                           	psect	text79
 19593  00642E                     __ptext79:
 19594                           	callstack 0
 19595  00642E                     _ENTERCRITICAL:
 19596                           	callstack 20
 19597                           
 19598                           ;incstack = 0
 19599                           ;ENTERCRITICAL@inISR stored from wreg
 19600  00642E  6E12               	movwf	ENTERCRITICAL@inISR^0,c
 19601  006430                     
 19602                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 19603  006430  5012               	movf	ENTERCRITICAL@inISR^0,w,c
 19604  006432  A4D8               	btfss	status,2,c
 19605  006434  EF1E  F032         	goto	u6071
 19606  006438  EF20  F032         	goto	u6070
 19607  00643C                     u6071:
 19608  00643C  EF21  F032         	goto	l763
 19609  006440                     u6070:
 19610  006440                     
 19611                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 19612  006440  9EF2               	bcf	4082,7,c	;volatile
 19613  006442                     l763:
 19614  006442  0012               	return		;funcret
 19615  006444                     __end_of_ENTERCRITICAL:
 19616                           	callstack 0
 19617                           
 19618 ;; *************** function _isr *****************
 19619 ;; Defined at:
 19620 ;;		line 19 in file "main.c"
 19621 ;; Parameters:    Size  Location     Type
 19622 ;;		None
 19623 ;; Auto vars:     Size  Location     Type
 19624 ;;		None
 19625 ;; Return value:  Size  Location     Type
 19626 ;;                  1    wreg      void 
 19627 ;; Registers used:
 19628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19629 ;; Tracked objects:
 19630 ;;		On entry : 0/0
 19631 ;;		On exit  : 0/0
 19632 ;;		Unchanged: 0/0
 19633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19634 ;;      Params:         0       0       0       0       0       0       0
 19635 ;;      Locals:         0       0       0       0       0       0       0
 19636 ;;      Temps:          4       0       0       0       0       0       0
 19637 ;;      Totals:         4       0       0       0       0       0       0
 19638 ;;Total ram usage:        4 bytes
 19639 ;; Hardware stack levels used: 1
 19640 ;; Hardware stack levels required when called: 3
 19641 ;; This function calls:
 19642 ;;		_XF_decrementAndQueueTimers
 19643 ;;		i2_XF_pushEvent
 19644 ;;		i2_XF_scheduleTimer
 19645 ;; This function is called by:
 19646 ;;		Interrupt level 2
 19647 ;; This function uses a non-reentrant model
 19648 ;;
 19649                           
 19650                           	psect	intcode
 19651  000008                     __pintcode:
 19652                           	callstack 0
 19653  000008                     _isr:
 19654                           	callstack 14
 19655                           
 19656                           ;incstack = 0
 19657  000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 19658  00000A  CFD9 F00E          	movff	fsr2l,??_isr
 19659  00000E  CFDA F00F          	movff	fsr2h,??_isr+1
 19660  000012  CFF3 F010          	movff	prodl,??_isr+2
 19661  000016  CFF4 F011          	movff	prodh,??_isr+3
 19662  00001A                     
 19663                           ;main.c: 21:     if((INT1IF==1)&&(INT1IE==1))
 19664  00001A  A0F0               	btfss	4080,0,c	;volatile
 19665  00001C  EF12  F000         	goto	i2u548_41
 19666  000020  EF14  F000         	goto	i2u548_40
 19667  000024                     i2u548_41:
 19668  000024  EF39  F000         	goto	i2l7808
 19669  000028                     i2u548_40:
 19670  000028  A6F0               	btfss	4080,3,c	;volatile
 19671  00002A  EF19  F000         	goto	i2u549_41
 19672  00002E  EF1B  F000         	goto	i2u549_40
 19673  000032                     i2u549_41:
 19674  000032  EF39  F000         	goto	i2l7808
 19675  000036                     i2u549_40:
 19676  000036                     
 19677                           ;main.c: 22:     {;main.c: 23:         if(INTEDG1==0)
 19678  000036  BAF1               	btfsc	4081,5,c	;volatile
 19679  000038  EF20  F000         	goto	i2u550_41
 19680  00003C  EF22  F000         	goto	i2u550_40
 19681  000040                     i2u550_41:
 19682  000040  EF2B  F000         	goto	i2l803
 19683  000044                     i2u550_40:
 19684  000044                     
 19685                           ;main.c: 24:         {;main.c: 25:             INTEDG1=1;
 19686  000044  8AF1               	bsf	4081,5,c	;volatile
 19687                           
 19688                           ;main.c: 26:             INT1IF=0;
 19689  000046  90F0               	bcf	4080,0,c	;volatile
 19690  000048                     
 19691                           ;main.c: 27:             XF_pushEvent(evPress,1);
 19692  000048  0E01               	movlw	1
 19693  00004A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19694  00004C  0E01               	movlw	1
 19695  00004E  EC44  F02F         	call	i2_XF_pushEvent
 19696                           
 19697                           ;main.c: 29:         }
 19698  000052  EF39  F000         	goto	i2l7808
 19699  000056                     i2l803:
 19700  000056  AAF1               	btfss	4081,5,c	;volatile
 19701  000058  EF30  F000         	goto	i2u551_41
 19702  00005C  EF32  F000         	goto	i2u551_40
 19703  000060                     i2u551_41:
 19704  000060  EF39  F000         	goto	i2l7808
 19705  000064                     i2u551_40:
 19706  000064                     
 19707                           ;main.c: 31:         {;main.c: 32:             INTEDG1=0;
 19708  000064  9AF1               	bcf	4081,5,c	;volatile
 19709                           
 19710                           ;main.c: 33:             INT1IF=0;
 19711  000066  90F0               	bcf	4080,0,c	;volatile
 19712  000068                     
 19713                           ;main.c: 34:             XF_pushEvent(evRelease,1);
 19714  000068  0E01               	movlw	1
 19715  00006A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19716  00006C  0E02               	movlw	2
 19717  00006E  EC44  F02F         	call	i2_XF_pushEvent
 19718  000072                     i2l7808:
 19719                           
 19720                           ;main.c: 40:     if((TMR0IF==1)&&(TMR0IE==1))
 19721  000072  A4F2               	btfss	4082,2,c	;volatile
 19722  000074  EF3E  F000         	goto	i2u552_41
 19723  000078  EF40  F000         	goto	i2u552_40
 19724  00007C                     i2u552_41:
 19725  00007C  EF58  F000         	goto	i2l807
 19726  000080                     i2u552_40:
 19727  000080  AAF2               	btfss	4082,5,c	;volatile
 19728  000082  EF45  F000         	goto	i2u553_41
 19729  000086  EF47  F000         	goto	i2u553_40
 19730  00008A                     i2u553_41:
 19731  00008A  EF58  F000         	goto	i2l807
 19732  00008E                     i2u553_40:
 19733  00008E                     
 19734                           ;main.c: 41:     {;main.c: 42:         XF_decrementAndQueueTimers();
 19735  00008E  EC2B  F022         	call	_XF_decrementAndQueueTimers	;wreg free
 19736                           
 19737                           ;main.c: 43:         XF_scheduleTimer(5,evGameUpdate,1);
 19738  000092  0E00               	movlw	0
 19739  000094  6E03               	movwf	(i2XF_scheduleTimer@tm+1)^0,c
 19740  000096  0E05               	movlw	5
 19741  000098  6E02               	movwf	i2XF_scheduleTimer@tm^0,c
 19742  00009A  0E0A               	movlw	10
 19743  00009C  6E04               	movwf	i2XF_scheduleTimer@ev^0,c
 19744  00009E  0E01               	movlw	1
 19745  0000A0  6E05               	movwf	i2XF_scheduleTimer@inISR^0,c
 19746  0000A2  ECA6  F02E         	call	i2_XF_scheduleTimer	;wreg free
 19747  0000A6                     
 19748                           ;main.c: 44:         TMR0H=0xFB;
 19749  0000A6  0EFB               	movlw	251
 19750  0000A8  6ED7               	movwf	215,c	;volatile
 19751  0000AA                     
 19752                           ;main.c: 45:         TMR0L=0x1D;
 19753  0000AA  0E1D               	movlw	29
 19754  0000AC  6ED6               	movwf	214,c	;volatile
 19755  0000AE                     
 19756                           ;main.c: 46:         TMR0IF=0;
 19757  0000AE  94F2               	bcf	4082,2,c	;volatile
 19758  0000B0                     i2l807:
 19759  0000B0  C011  FFF4         	movff	??_isr+3,prodh
 19760  0000B4  C010  FFF3         	movff	??_isr+2,prodl
 19761  0000B8  C00F  FFDA         	movff	??_isr+1,fsr2h
 19762  0000BC  C00E  FFD9         	movff	??_isr,fsr2l
 19763  0000C0  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 19764  0000C2  0011               	retfie		f
 19765  0000C4                     __end_of_isr:
 19766                           	callstack 0
 19767                           
 19768 ;; *************** function i2_XF_scheduleTimer *****************
 19769 ;; Defined at:
 19770 ;;		line 96 in file "xf/xf.c"
 19771 ;; Parameters:    Size  Location     Type
 19772 ;;  tm              2    1[COMRAM] unsigned short 
 19773 ;;  ev              1    3[COMRAM] unsigned char 
 19774 ;;  inISR           1    4[COMRAM] _Bool 
 19775 ;; Auto vars:     Size  Location     Type
 19776 ;;  i               1    5[COMRAM] unsigned char 
 19777 ;; Return value:  Size  Location     Type
 19778 ;;                  1    wreg      unsigned char 
 19779 ;; Registers used:
 19780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19781 ;; Tracked objects:
 19782 ;;		On entry : 0/0
 19783 ;;		On exit  : 0/0
 19784 ;;		Unchanged: 0/0
 19785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19786 ;;      Params:         4       0       0       0       0       0       0
 19787 ;;      Locals:         1       0       0       0       0       0       0
 19788 ;;      Temps:          0       0       0       0       0       0       0
 19789 ;;      Totals:         5       0       0       0       0       0       0
 19790 ;;Total ram usage:        5 bytes
 19791 ;; Hardware stack levels used: 1
 19792 ;; Hardware stack levels required when called: 1
 19793 ;; This function calls:
 19794 ;;		i2_ENTERCRITICAL
 19795 ;;		i2_LEAVECRITICAL
 19796 ;; This function is called by:
 19797 ;;		_isr
 19798 ;; This function uses a non-reentrant model
 19799 ;;
 19800                           
 19801                           	psect	text81
 19802  005D4C                     __ptext81:
 19803                           	callstack 0
 19804  005D4C                     i2_XF_scheduleTimer:
 19805                           	callstack 15
 19806  005D4C                     
 19807                           ;xf/xf.c: 96: TimerID XF_scheduleTimer(Time tm, Event ev, _Bool inISR);xf/xf.c: 97: {;xf
      +                          /xf.c: 98:     uint8_t i;;xf/xf.c: 100:     ENTERCRITICAL(inISR);
 19808  005D4C  5005               	movf	i2XF_scheduleTimer@inISR^0,w,c
 19809  005D4E  EC2D  F032         	call	i2_ENTERCRITICAL
 19810  005D52                     
 19811                           ;xf/xf.c: 101:     for (i=0; i<8; i++)
 19812  005D52  0E00               	movlw	0
 19813  005D54  6E06               	movwf	i2XF_scheduleTimer@i^0,c
 19814  005D56                     i2l7782:
 19815                           
 19816                           ;xf/xf.c: 102:     {;xf/xf.c: 103:         if (theXF.timerList[i].ev == NULLEVENT)
 19817  005D56  5006               	movf	i2XF_scheduleTimer@i^0,w,c
 19818  005D58  0D03               	mullw	3
 19819  005D5A  0EB7               	movlw	low (_theXF+2)
 19820  005D5C  24F3               	addwf	243,w,c
 19821  005D5E  6ED9               	movwf	fsr2l,c
 19822  005D60  0E00               	movlw	high (_theXF+2)
 19823  005D62  20F4               	addwfc	prodh,w,c
 19824  005D64  6EDA               	movwf	fsr2h,c
 19825  005D66  50DF               	movf	indf2,w,c
 19826  005D68  A4D8               	btfss	status,2,c
 19827  005D6A  EFB9  F02E         	goto	i2u546_41
 19828  005D6E  EFBB  F02E         	goto	i2u546_40
 19829  005D72                     i2u546_41:
 19830  005D72  EFD3  F02E         	goto	i2l7786
 19831  005D76                     i2u546_40:
 19832  005D76                     
 19833                           ;xf/xf.c: 104:         {;xf/xf.c: 105:             theXF.timerList[i].tm = tm;
 19834  005D76  5006               	movf	i2XF_scheduleTimer@i^0,w,c
 19835  005D78  0D03               	mullw	3
 19836  005D7A  0EB5               	movlw	low _theXF
 19837  005D7C  24F3               	addwf	243,w,c
 19838  005D7E  6ED9               	movwf	fsr2l,c
 19839  005D80  0E00               	movlw	high _theXF
 19840  005D82  20F4               	addwfc	prodh,w,c
 19841  005D84  6EDA               	movwf	fsr2h,c
 19842  005D86  C002  FFDE         	movff	i2XF_scheduleTimer@tm,postinc2
 19843  005D8A  C003  FFDD         	movff	i2XF_scheduleTimer@tm+1,postdec2
 19844                           
 19845                           ;xf/xf.c: 106:             theXF.timerList[i].ev = ev;
 19846  005D8E  5006               	movf	i2XF_scheduleTimer@i^0,w,c
 19847  005D90  0D03               	mullw	3
 19848  005D92  0EB7               	movlw	low (_theXF+2)
 19849  005D94  24F3               	addwf	243,w,c
 19850  005D96  6ED9               	movwf	fsr2l,c
 19851  005D98  0E00               	movlw	high (_theXF+2)
 19852  005D9A  20F4               	addwfc	prodh,w,c
 19853  005D9C  6EDA               	movwf	fsr2h,c
 19854  005D9E  C004  FFDF         	movff	i2XF_scheduleTimer@ev,indf2
 19855                           
 19856                           ;xf/xf.c: 107:             break;
 19857  005DA2  EFDC  F02E         	goto	i2l7790
 19858  005DA6                     i2l7786:
 19859                           
 19860                           ;xf/xf.c: 109:     }
 19861  005DA6  2A06               	incf	i2XF_scheduleTimer@i^0,f,c
 19862  005DA8  0E07               	movlw	7
 19863  005DAA  6406               	cpfsgt	i2XF_scheduleTimer@i^0,c
 19864  005DAC  EFDA  F02E         	goto	i2u547_41
 19865  005DB0  EFDC  F02E         	goto	i2u547_40
 19866  005DB4                     i2u547_41:
 19867  005DB4  EFAB  F02E         	goto	i2l7782
 19868  005DB8                     i2u547_40:
 19869  005DB8                     i2l7790:
 19870                           
 19871                           ;xf/xf.c: 114:     LEAVECRITICAL(inISR);
 19872  005DB8  5005               	movf	i2XF_scheduleTimer@inISR^0,w,c
 19873  005DBA  EC22  F032         	call	i2_LEAVECRITICAL
 19874  005DBE  0012               	return		;funcret
 19875  005DC0                     __end_ofi2_XF_scheduleTimer:
 19876                           	callstack 0
 19877                           
 19878 ;; *************** function _XF_decrementAndQueueTimers *****************
 19879 ;; Defined at:
 19880 ;;		line 139 in file "xf/xf.c"
 19881 ;; Parameters:    Size  Location     Type
 19882 ;;		None
 19883 ;; Auto vars:     Size  Location     Type
 19884 ;;  i               2   11[COMRAM] int 
 19885 ;; Return value:  Size  Location     Type
 19886 ;;                  1    wreg      void 
 19887 ;; Registers used:
 19888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19889 ;; Tracked objects:
 19890 ;;		On entry : 0/0
 19891 ;;		On exit  : 0/0
 19892 ;;		Unchanged: 0/0
 19893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19894 ;;      Params:         0       0       0       0       0       0       0
 19895 ;;      Locals:         2       0       0       0       0       0       0
 19896 ;;      Temps:          2       0       0       0       0       0       0
 19897 ;;      Totals:         4       0       0       0       0       0       0
 19898 ;;Total ram usage:        4 bytes
 19899 ;; Hardware stack levels used: 1
 19900 ;; Hardware stack levels required when called: 2
 19901 ;; This function calls:
 19902 ;;		_XF_unscheduleTimer
 19903 ;;		i2_XF_pushEvent
 19904 ;;		i2___wmul
 19905 ;; This function is called by:
 19906 ;;		_isr
 19907 ;; This function uses a non-reentrant model
 19908 ;;
 19909                           
 19910                           	psect	text82
 19911  004456                     __ptext82:
 19912                           	callstack 0
 19913  004456                     _XF_decrementAndQueueTimers:
 19914                           	callstack 14
 19915  004456                     
 19916                           ;xf/xf.c: 141:     int i;;xf/xf.c: 142:     for (i=0; i<8; i++)
 19917  004456  0E00               	movlw	0
 19918  004458  6E0D               	movwf	(XF_decrementAndQueueTimers@i+1)^0,c
 19919  00445A  0E00               	movlw	0
 19920  00445C  6E0C               	movwf	XF_decrementAndQueueTimers@i^0,c
 19921  00445E                     i2l7760:
 19922                           
 19923                           ;xf/xf.c: 143:     {;xf/xf.c: 144:         if (theXF.timerList[i].ev != NULLEVENT)
 19924  00445E  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19925  004462  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19926  004466  0E00               	movlw	0
 19927  004468  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19928  00446A  0E03               	movlw	3
 19929  00446C  6E03               	movwf	i2___wmul@multiplicand^0,c
 19930  00446E  ECBE  F031         	call	i2___wmul	;wreg free
 19931  004472  0EB7               	movlw	low (_theXF+2)
 19932  004474  2401               	addwf	?i2___wmul^0,w,c
 19933  004476  6ED9               	movwf	fsr2l,c
 19934  004478  0E00               	movlw	high (_theXF+2)
 19935  00447A  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19936  00447C  6EDA               	movwf	fsr2h,c
 19937  00447E  50DF               	movf	indf2,w,c
 19938  004480  B4D8               	btfsc	status,2,c
 19939  004482  EF45  F022         	goto	i2u542_41
 19940  004486  EF47  F022         	goto	i2u542_40
 19941  00448A                     i2u542_41:
 19942  00448A  EFAB  F022         	goto	i2l7770
 19943  00448E                     i2u542_40:
 19944  00448E                     
 19945                           ;xf/xf.c: 145:         {;xf/xf.c: 147:             theXF.timerList[i].tm-=1;
 19946  00448E  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19947  004492  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19948  004496  0E00               	movlw	0
 19949  004498  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19950  00449A  0E03               	movlw	3
 19951  00449C  6E03               	movwf	i2___wmul@multiplicand^0,c
 19952  00449E  ECBE  F031         	call	i2___wmul	;wreg free
 19953  0044A2  0EB5               	movlw	low _theXF
 19954  0044A4  2401               	addwf	?i2___wmul^0,w,c
 19955  0044A6  6ED9               	movwf	fsr2l,c
 19956  0044A8  0E00               	movlw	high _theXF
 19957  0044AA  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19958  0044AC  6EDA               	movwf	fsr2h,c
 19959  0044AE  06DE               	decf	postinc2,f,c
 19960  0044B0  0E00               	movlw	0
 19961  0044B2  5ADD               	subwfb	postdec2,f,c
 19962                           
 19963                           ;xf/xf.c: 148:             if (theXF.timerList[i].tm ==0)
 19964  0044B4  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19965  0044B8  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19966  0044BC  0E00               	movlw	0
 19967  0044BE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19968  0044C0  0E03               	movlw	3
 19969  0044C2  6E03               	movwf	i2___wmul@multiplicand^0,c
 19970  0044C4  ECBE  F031         	call	i2___wmul	;wreg free
 19971  0044C8  0EB5               	movlw	low _theXF
 19972  0044CA  2401               	addwf	?i2___wmul^0,w,c
 19973  0044CC  6ED9               	movwf	fsr2l,c
 19974  0044CE  0E00               	movlw	high _theXF
 19975  0044D0  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19976  0044D2  6EDA               	movwf	fsr2h,c
 19977  0044D4  50DE               	movf	postinc2,w,c
 19978  0044D6  10DE               	iorwf	postinc2,w,c
 19979  0044D8  A4D8               	btfss	status,2,c
 19980  0044DA  EF71  F022         	goto	i2u543_41
 19981  0044DE  EF73  F022         	goto	i2u543_40
 19982  0044E2                     i2u543_41:
 19983  0044E2  EFAB  F022         	goto	i2l7770
 19984  0044E6                     i2u543_40:
 19985  0044E6                     
 19986                           ;xf/xf.c: 149:             {;xf/xf.c: 150:                 if(XF_pushEvent(theXF.timerLi
      +                          st[i].ev, 1) == 1)
 19987  0044E6  0E01               	movlw	1
 19988  0044E8  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19989  0044EA  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19990  0044EE  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19991  0044F2  0E00               	movlw	0
 19992  0044F4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19993  0044F6  0E03               	movlw	3
 19994  0044F8  6E03               	movwf	i2___wmul@multiplicand^0,c
 19995  0044FA  ECBE  F031         	call	i2___wmul	;wreg free
 19996  0044FE  0EB7               	movlw	low (_theXF+2)
 19997  004500  2401               	addwf	?i2___wmul^0,w,c
 19998  004502  6ED9               	movwf	fsr2l,c
 19999  004504  0E00               	movlw	high (_theXF+2)
 20000  004506  2002               	addwfc	(?i2___wmul+1)^0,w,c
 20001  004508  6EDA               	movwf	fsr2h,c
 20002  00450A  50DF               	movf	indf2,w,c
 20003  00450C  EC44  F02F         	call	i2_XF_pushEvent
 20004  004510  06E8               	decf	wreg,f,c
 20005  004512  A4D8               	btfss	status,2,c
 20006  004514  EF8E  F022         	goto	i2u544_41
 20007  004518  EF90  F022         	goto	i2u544_40
 20008  00451C                     i2u544_41:
 20009  00451C  EF97  F022         	goto	i2l7768
 20010  004520                     i2u544_40:
 20011  004520                     
 20012                           ;xf/xf.c: 151:                 {;xf/xf.c: 152:                   XF_unscheduleTimer(i, 1
      +                          );
 20013  004520  0E01               	movlw	1
 20014  004522  6E02               	movwf	XF_unscheduleTimer@inISR^0,c
 20015  004524  500C               	movf	XF_decrementAndQueueTimers@i^0,w,c
 20016  004526  EC09  F031         	call	_XF_unscheduleTimer
 20017                           
 20018                           ;xf/xf.c: 153:                 }
 20019  00452A  EFAB  F022         	goto	i2l7770
 20020  00452E                     i2l7768:
 20021                           
 20022                           ;xf/xf.c: 155:                 {;xf/xf.c: 156:                   theXF.timerList[i].tm=1
      +                          ;
 20023  00452E  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 20024  004532  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 20025  004536  0E00               	movlw	0
 20026  004538  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 20027  00453A  0E03               	movlw	3
 20028  00453C  6E03               	movwf	i2___wmul@multiplicand^0,c
 20029  00453E  ECBE  F031         	call	i2___wmul	;wreg free
 20030  004542  0EB5               	movlw	low _theXF
 20031  004544  2401               	addwf	?i2___wmul^0,w,c
 20032  004546  6ED9               	movwf	fsr2l,c
 20033  004548  0E00               	movlw	high _theXF
 20034  00454A  2002               	addwfc	(?i2___wmul+1)^0,w,c
 20035  00454C  6EDA               	movwf	fsr2h,c
 20036  00454E  0E01               	movlw	1
 20037  004550  6EDE               	movwf	postinc2,c
 20038  004552  0E00               	movlw	0
 20039  004554  6EDD               	movwf	postdec2,c
 20040  004556                     i2l7770:
 20041                           
 20042                           ;xf/xf.c: 160:     }
 20043  004556  4A0C               	infsnz	XF_decrementAndQueueTimers@i^0,f,c
 20044  004558  2A0D               	incf	(XF_decrementAndQueueTimers@i+1)^0,f,c
 20045  00455A  BE0D               	btfsc	(XF_decrementAndQueueTimers@i+1)^0,7,c
 20046  00455C  EFB9  F022         	goto	i2u545_41
 20047  004560  500D               	movf	(XF_decrementAndQueueTimers@i+1)^0,w,c
 20048  004562  E109               	bnz	i2u545_40
 20049  004564  0E08               	movlw	8
 20050  004566  5C0C               	subwf	XF_decrementAndQueueTimers@i^0,w,c
 20051  004568  A0D8               	btfss	status,0,c
 20052  00456A  EFB9  F022         	goto	i2u545_41
 20053  00456E  EFBB  F022         	goto	i2u545_40
 20054  004572                     i2u545_41:
 20055  004572  EF2F  F022         	goto	i2l7760
 20056  004576                     i2u545_40:
 20057  004576  0012               	return		;funcret
 20058  004578                     __end_of_XF_decrementAndQueueTimers:
 20059                           	callstack 0
 20060                           
 20061 ;; *************** function i2___wmul *****************
 20062 ;; Defined at:
 20063 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 20064 ;; Parameters:    Size  Location     Type
 20065 ;;  multiplier      2    0[COMRAM] unsigned int 
 20066 ;;  multiplicand    2    2[COMRAM] unsigned int 
 20067 ;; Auto vars:     Size  Location     Type
 20068 ;;  product         2    4[COMRAM] unsigned int 
 20069 ;; Return value:  Size  Location     Type
 20070 ;;                  2    0[COMRAM] unsigned int 
 20071 ;; Registers used:
 20072 ;;		wreg, status,2, status,0, prodl, prodh
 20073 ;; Tracked objects:
 20074 ;;		On entry : 0/0
 20075 ;;		On exit  : 0/0
 20076 ;;		Unchanged: 0/0
 20077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20078 ;;      Params:         4       0       0       0       0       0       0
 20079 ;;      Locals:         2       0       0       0       0       0       0
 20080 ;;      Temps:          0       0       0       0       0       0       0
 20081 ;;      Totals:         6       0       0       0       0       0       0
 20082 ;;Total ram usage:        6 bytes
 20083 ;; Hardware stack levels used: 1
 20084 ;; This function calls:
 20085 ;;		Nothing
 20086 ;; This function is called by:
 20087 ;;		_XF_decrementAndQueueTimers
 20088 ;; This function uses a non-reentrant model
 20089 ;;
 20090                           
 20091                           	psect	text83
 20092  00637C                     __ptext83:
 20093                           	callstack 0
 20094  00637C                     i2___wmul:
 20095                           	callstack 15
 20096  00637C  5001               	movf	i2___wmul@multiplier^0,w,c
 20097  00637E  0203               	mulwf	i2___wmul@multiplicand^0,c
 20098  006380  CFF3 F005          	movff	prodl,i2___wmul@product
 20099  006384  CFF4 F006          	movff	prodh,i2___wmul@product+1
 20100  006388  5001               	movf	i2___wmul@multiplier^0,w,c
 20101  00638A  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 20102  00638C  50F3               	movf	243,w,c
 20103  00638E  2606               	addwf	(i2___wmul@product+1)^0,f,c
 20104  006390  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 20105  006392  0203               	mulwf	i2___wmul@multiplicand^0,c
 20106  006394  50F3               	movf	243,w,c
 20107  006396  2606               	addwf	(i2___wmul@product+1)^0,f,c
 20108  006398  C005  F001         	movff	i2___wmul@product,?i2___wmul
 20109  00639C  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 20110  0063A0  0012               	return		;funcret
 20111  0063A2                     __end_ofi2___wmul:
 20112                           	callstack 0
 20113                           
 20114 ;; *************** function i2_XF_pushEvent *****************
 20115 ;; Defined at:
 20116 ;;		line 49 in file "xf/xf.c"
 20117 ;; Parameters:    Size  Location     Type
 20118 ;;  ev              1    wreg     unsigned char 
 20119 ;;  inISR           1    6[COMRAM] _Bool 
 20120 ;; Auto vars:     Size  Location     Type
 20121 ;;  ev              1    7[COMRAM] unsigned char 
 20122 ;;  temp            1    8[COMRAM] unsigned char 
 20123 ;; Return value:  Size  Location     Type
 20124 ;;                  1    wreg      _Bool 
 20125 ;; Registers used:
 20126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20127 ;; Tracked objects:
 20128 ;;		On entry : 0/0
 20129 ;;		On exit  : 0/0
 20130 ;;		Unchanged: 0/0
 20131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20132 ;;      Params:         1       0       0       0       0       0       0
 20133 ;;      Locals:         2       0       0       0       0       0       0
 20134 ;;      Temps:          0       0       0       0       0       0       0
 20135 ;;      Totals:         3       0       0       0       0       0       0
 20136 ;;Total ram usage:        3 bytes
 20137 ;; Hardware stack levels used: 1
 20138 ;; Hardware stack levels required when called: 1
 20139 ;; This function calls:
 20140 ;;		i2_ENTERCRITICAL
 20141 ;;		i2_LEAVECRITICAL
 20142 ;;		i2___awmod
 20143 ;; This function is called by:
 20144 ;;		_XF_decrementAndQueueTimers
 20145 ;;		_isr
 20146 ;; This function uses a non-reentrant model
 20147 ;;
 20148                           
 20149                           	psect	text84
 20150  005E88                     __ptext84:
 20151                           	callstack 0
 20152  005E88                     i2_XF_pushEvent:
 20153                           	callstack 15
 20154                           
 20155                           ;incstack = 0
 20156                           ;i2XF_pushEvent@ev stored from wreg
 20157  005E88  6E08               	movwf	i2XF_pushEvent@ev^0,c
 20158  005E8A                     
 20159                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
 20160  005E8A  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 20161  005E8C  EC2D  F032         	call	i2_ENTERCRITICAL
 20162  005E90                     
 20163                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
 20164  005E90  0E01               	movlw	1
 20165  005E92  0100               	movlb	0	; () banked
 20166  005E94  25D9               	addwf	(_theXF+36)& (0+255),w,b
 20167  005E96  6E01               	movwf	i2___awmod@dividend^0,c
 20168  005E98  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 20169  005E9A  0E00               	movlw	0
 20170  005E9C  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
 20171  005E9E  0E00               	movlw	0
 20172  005EA0  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 20173  005EA2  0E0C               	movlw	12
 20174  005EA4  6E03               	movwf	i2___awmod@divisor^0,c
 20175  005EA6  ECF7  F02B         	call	i2___awmod	;wreg free
 20176  005EAA  5001               	movf	?i2___awmod^0,w,c
 20177  005EAC  6E09               	movwf	i2XF_pushEvent@temp^0,c
 20178  005EAE                     
 20179                           ;xf/xf.c: 55:     if(temp == theXF.out)
 20180  005EAE  5009               	movf	i2XF_pushEvent@temp^0,w,c
 20181  005EB0  0100               	movlb	0	; () banked
 20182  005EB2  19DA               	xorwf	(_theXF+37)& (0+255),w,b
 20183  005EB4  A4D8               	btfss	status,2,c
 20184  005EB6  EF5F  F02F         	goto	i2u540_41
 20185  005EBA  EF61  F02F         	goto	i2u540_40
 20186  005EBE                     i2u540_41:
 20187  005EBE  EF67  F02F         	goto	i2l7672
 20188  005EC2                     i2u540_40:
 20189  005EC2                     
 20190                           ; BSR set to: 0
 20191                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
 20192  005EC2  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 20193  005EC4  EC22  F032         	call	i2_LEAVECRITICAL
 20194  005EC8                     
 20195                           ;xf/xf.c: 58:       return 0;
 20196  005EC8  0E00               	movlw	0
 20197  005ECA  EF75  F02F         	goto	i2l737
 20198  005ECE                     i2l7672:
 20199                           
 20200                           ; BSR set to: 0
 20201                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
 20202  005ECE  0ECD               	movlw	low (_theXF+24)
 20203  005ED0  25D9               	addwf	(_theXF+36)& (0+255),w,b
 20204  005ED2  6ED9               	movwf	fsr2l,c
 20205  005ED4  6ADA               	clrf	fsr2h,c
 20206  005ED6  0E00               	movlw	high (_theXF+24)
 20207  005ED8  22DA               	addwfc	fsr2h,f,c
 20208  005EDA  C008  FFDF         	movff	i2XF_pushEvent@ev,indf2
 20209  005EDE                     
 20210                           ; BSR set to: 0
 20211                           ;xf/xf.c: 61:     theXF.in = temp;
 20212  005EDE  C009  F0D9         	movff	i2XF_pushEvent@temp,_theXF+36
 20213  005EE2                     
 20214                           ; BSR set to: 0
 20215                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
 20216  005EE2  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 20217  005EE4  EC22  F032         	call	i2_LEAVECRITICAL
 20218  005EE8                     
 20219                           ;xf/xf.c: 63:     return 1;
 20220  005EE8  0E01               	movlw	1
 20221  005EEA                     i2l737:
 20222  005EEA  0012               	return		;funcret
 20223  005EEC                     __end_ofi2_XF_pushEvent:
 20224                           	callstack 0
 20225                           
 20226 ;; *************** function i2___awmod *****************
 20227 ;; Defined at:
 20228 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 20229 ;; Parameters:    Size  Location     Type
 20230 ;;  dividend        2    0[COMRAM] int 
 20231 ;;  divisor         2    2[COMRAM] int 
 20232 ;; Auto vars:     Size  Location     Type
 20233 ;;  sign            1    5[COMRAM] unsigned char 
 20234 ;;  counter         1    4[COMRAM] unsigned char 
 20235 ;; Return value:  Size  Location     Type
 20236 ;;                  2    0[COMRAM] int 
 20237 ;; Registers used:
 20238 ;;		wreg, status,2, status,0
 20239 ;; Tracked objects:
 20240 ;;		On entry : 0/0
 20241 ;;		On exit  : 0/0
 20242 ;;		Unchanged: 0/0
 20243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20244 ;;      Params:         4       0       0       0       0       0       0
 20245 ;;      Locals:         2       0       0       0       0       0       0
 20246 ;;      Temps:          0       0       0       0       0       0       0
 20247 ;;      Totals:         6       0       0       0       0       0       0
 20248 ;;Total ram usage:        6 bytes
 20249 ;; Hardware stack levels used: 1
 20250 ;; This function calls:
 20251 ;;		Nothing
 20252 ;; This function is called by:
 20253 ;;		i2_XF_pushEvent
 20254 ;; This function uses a non-reentrant model
 20255 ;;
 20256                           
 20257                           	psect	text85
 20258  0057EE                     __ptext85:
 20259                           	callstack 0
 20260  0057EE                     i2___awmod:
 20261                           	callstack 15
 20262  0057EE  0E00               	movlw	0
 20263  0057F0  6E06               	movwf	i2___awmod@sign^0,c
 20264  0057F2  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
 20265  0057F4  EF00  F02C         	goto	i2u515_40
 20266  0057F8  EFFE  F02B         	goto	i2u515_41
 20267  0057FC                     i2u515_41:
 20268  0057FC  EF06  F02C         	goto	i2l7422
 20269  005800                     i2u515_40:
 20270  005800  6C01               	negf	i2___awmod@dividend^0,c
 20271  005802  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 20272  005804  B0D8               	btfsc	status,0,c
 20273  005806  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 20274  005808  0E01               	movlw	1
 20275  00580A  6E06               	movwf	i2___awmod@sign^0,c
 20276  00580C                     i2l7422:
 20277  00580C  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
 20278  00580E  EF0D  F02C         	goto	i2u516_40
 20279  005812  EF0B  F02C         	goto	i2u516_41
 20280  005816                     i2u516_41:
 20281  005816  EF11  F02C         	goto	i2l7426
 20282  00581A                     i2u516_40:
 20283  00581A  6C03               	negf	i2___awmod@divisor^0,c
 20284  00581C  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 20285  00581E  B0D8               	btfsc	status,0,c
 20286  005820  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 20287  005822                     i2l7426:
 20288  005822  5003               	movf	i2___awmod@divisor^0,w,c
 20289  005824  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 20290  005826  B4D8               	btfsc	status,2,c
 20291  005828  EF18  F02C         	goto	i2u517_41
 20292  00582C  EF1A  F02C         	goto	i2u517_40
 20293  005830                     i2u517_41:
 20294  005830  EF3E  F02C         	goto	i2l7442
 20295  005834                     i2u517_40:
 20296  005834  0E01               	movlw	1
 20297  005836  6E05               	movwf	i2___awmod@counter^0,c
 20298  005838  EF22  F02C         	goto	i2l7432
 20299  00583C                     i2l7430:
 20300  00583C  90D8               	bcf	status,0,c
 20301  00583E  3603               	rlcf	i2___awmod@divisor^0,f,c
 20302  005840  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 20303  005842  2A05               	incf	i2___awmod@counter^0,f,c
 20304  005844                     i2l7432:
 20305  005844  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 20306  005846  EF27  F02C         	goto	i2u518_41
 20307  00584A  EF29  F02C         	goto	i2u518_40
 20308  00584E                     i2u518_41:
 20309  00584E  EF1E  F02C         	goto	i2l7430
 20310  005852                     i2u518_40:
 20311  005852                     i2l7434:
 20312  005852  5003               	movf	i2___awmod@divisor^0,w,c
 20313  005854  5C01               	subwf	i2___awmod@dividend^0,w,c
 20314  005856  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 20315  005858  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 20316  00585A  A0D8               	btfss	status,0,c
 20317  00585C  EF32  F02C         	goto	i2u519_41
 20318  005860  EF34  F02C         	goto	i2u519_40
 20319  005864                     i2u519_41:
 20320  005864  EF38  F02C         	goto	i2l7438
 20321  005868                     i2u519_40:
 20322  005868  5003               	movf	i2___awmod@divisor^0,w,c
 20323  00586A  5E01               	subwf	i2___awmod@dividend^0,f,c
 20324  00586C  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 20325  00586E  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 20326  005870                     i2l7438:
 20327  005870  90D8               	bcf	status,0,c
 20328  005872  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 20329  005874  3203               	rrcf	i2___awmod@divisor^0,f,c
 20330  005876  2E05               	decfsz	i2___awmod@counter^0,f,c
 20331  005878  EF29  F02C         	goto	i2l7434
 20332  00587C                     i2l7442:
 20333  00587C  5006               	movf	i2___awmod@sign^0,w,c
 20334  00587E  B4D8               	btfsc	status,2,c
 20335  005880  EF44  F02C         	goto	i2u520_41
 20336  005884  EF46  F02C         	goto	i2u520_40
 20337  005888                     i2u520_41:
 20338  005888  EF4A  F02C         	goto	i2l7446
 20339  00588C                     i2u520_40:
 20340  00588C  6C01               	negf	i2___awmod@dividend^0,c
 20341  00588E  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 20342  005890  B0D8               	btfsc	status,0,c
 20343  005892  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 20344  005894                     i2l7446:
 20345  005894  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 20346  005898  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 20347  00589C  0012               	return		;funcret
 20348  00589E                     __end_ofi2___awmod:
 20349                           	callstack 0
 20350                           
 20351 ;; *************** function _XF_unscheduleTimer *****************
 20352 ;; Defined at:
 20353 ;;		line 125 in file "xf/xf.c"
 20354 ;; Parameters:    Size  Location     Type
 20355 ;;  id              1    wreg     unsigned char 
 20356 ;;  inISR           1    1[COMRAM] _Bool 
 20357 ;; Auto vars:     Size  Location     Type
 20358 ;;  id              1    2[COMRAM] unsigned char 
 20359 ;; Return value:  Size  Location     Type
 20360 ;;                  1    wreg      void 
 20361 ;; Registers used:
 20362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20363 ;; Tracked objects:
 20364 ;;		On entry : 0/0
 20365 ;;		On exit  : 0/0
 20366 ;;		Unchanged: 0/0
 20367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20368 ;;      Params:         1       0       0       0       0       0       0
 20369 ;;      Locals:         1       0       0       0       0       0       0
 20370 ;;      Temps:          0       0       0       0       0       0       0
 20371 ;;      Totals:         2       0       0       0       0       0       0
 20372 ;;Total ram usage:        2 bytes
 20373 ;; Hardware stack levels used: 1
 20374 ;; Hardware stack levels required when called: 1
 20375 ;; This function calls:
 20376 ;;		i2_ENTERCRITICAL
 20377 ;;		i2_LEAVECRITICAL
 20378 ;; This function is called by:
 20379 ;;		_XF_decrementAndQueueTimers
 20380 ;; This function uses a non-reentrant model
 20381 ;;
 20382                           
 20383                           	psect	text86
 20384  006212                     __ptext86:
 20385                           	callstack 0
 20386  006212                     _XF_unscheduleTimer:
 20387                           	callstack 14
 20388                           
 20389                           ;incstack = 0
 20390                           ;XF_unscheduleTimer@id stored from wreg
 20391  006212  6E03               	movwf	XF_unscheduleTimer@id^0,c
 20392  006214                     
 20393                           ;xf/xf.c: 125: void XF_unscheduleTimer(TimerID id, _Bool inISR);xf/xf.c: 126: {;xf/xf.c:
      +                           127:     ENTERCRITICAL(inISR);
 20394  006214  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 20395  006216  EC2D  F032         	call	i2_ENTERCRITICAL
 20396  00621A                     
 20397                           ;xf/xf.c: 128:     theXF.timerList[id].tm = 0;
 20398  00621A  5003               	movf	XF_unscheduleTimer@id^0,w,c
 20399  00621C  0D03               	mullw	3
 20400  00621E  0EB5               	movlw	low _theXF
 20401  006220  24F3               	addwf	243,w,c
 20402  006222  6ED9               	movwf	fsr2l,c
 20403  006224  0E00               	movlw	high _theXF
 20404  006226  20F4               	addwfc	prodh,w,c
 20405  006228  6EDA               	movwf	fsr2h,c
 20406  00622A  0E00               	movlw	0
 20407  00622C  6EDE               	movwf	postinc2,c
 20408  00622E  0E00               	movlw	0
 20409  006230  6EDD               	movwf	postdec2,c
 20410  006232                     
 20411                           ;xf/xf.c: 129:     theXF.timerList[id].ev = NULLEVENT;
 20412  006232  5003               	movf	XF_unscheduleTimer@id^0,w,c
 20413  006234  0D03               	mullw	3
 20414  006236  0EB7               	movlw	low (_theXF+2)
 20415  006238  24F3               	addwf	243,w,c
 20416  00623A  6ED9               	movwf	fsr2l,c
 20417  00623C  0E00               	movlw	high (_theXF+2)
 20418  00623E  20F4               	addwfc	prodh,w,c
 20419  006240  6EDA               	movwf	fsr2h,c
 20420  006242  0E00               	movlw	0
 20421  006244  6EDF               	movwf	indf2,c
 20422                           
 20423                           ;xf/xf.c: 130:     LEAVECRITICAL(inISR);
 20424  006246  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 20425  006248  EC22  F032         	call	i2_LEAVECRITICAL
 20426  00624C  0012               	return		;funcret
 20427  00624E                     __end_of_XF_unscheduleTimer:
 20428                           	callstack 0
 20429                           
 20430 ;; *************** function i2_LEAVECRITICAL *****************
 20431 ;; Defined at:
 20432 ;;		line 186 in file "xf/xf.c"
 20433 ;; Parameters:    Size  Location     Type
 20434 ;;  inISR           1    wreg     _Bool 
 20435 ;; Auto vars:     Size  Location     Type
 20436 ;;  inISR           1    0[COMRAM] _Bool 
 20437 ;; Return value:  Size  Location     Type
 20438 ;;                  1    wreg      void 
 20439 ;; Registers used:
 20440 ;;		wreg, status,2
 20441 ;; Tracked objects:
 20442 ;;		On entry : 0/0
 20443 ;;		On exit  : 0/0
 20444 ;;		Unchanged: 0/0
 20445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20446 ;;      Params:         0       0       0       0       0       0       0
 20447 ;;      Locals:         1       0       0       0       0       0       0
 20448 ;;      Temps:          0       0       0       0       0       0       0
 20449 ;;      Totals:         1       0       0       0       0       0       0
 20450 ;;Total ram usage:        1 bytes
 20451 ;; Hardware stack levels used: 1
 20452 ;; This function calls:
 20453 ;;		Nothing
 20454 ;; This function is called by:
 20455 ;;		_XF_unscheduleTimer
 20456 ;;		i2_XF_pushEvent
 20457 ;;		i2_XF_scheduleTimer
 20458 ;; This function uses a non-reentrant model
 20459 ;;
 20460                           
 20461                           	psect	text87
 20462  006444                     __ptext87:
 20463                           	callstack 0
 20464  006444                     i2_LEAVECRITICAL:
 20465                           	callstack 15
 20466                           
 20467                           ;incstack = 0
 20468                           ;i2LEAVECRITICAL@inISR stored from wreg
 20469  006444  6E01               	movwf	i2LEAVECRITICAL@inISR^0,c
 20470  006446                     
 20471                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 20472  006446  5001               	movf	i2LEAVECRITICAL@inISR^0,w,c
 20473  006448  A4D8               	btfss	status,2,c
 20474  00644A  EF29  F032         	goto	i2u514_41
 20475  00644E  EF2B  F032         	goto	i2u514_40
 20476  006452                     i2u514_41:
 20477  006452  EF2C  F032         	goto	i2l767
 20478  006456                     i2u514_40:
 20479  006456                     
 20480                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 20481  006456  8EF2               	bsf	4082,7,c	;volatile
 20482  006458                     i2l767:
 20483  006458  0012               	return		;funcret
 20484  00645A                     __end_ofi2_LEAVECRITICAL:
 20485                           	callstack 0
 20486                           
 20487 ;; *************** function i2_ENTERCRITICAL *****************
 20488 ;; Defined at:
 20489 ;;		line 172 in file "xf/xf.c"
 20490 ;; Parameters:    Size  Location     Type
 20491 ;;  inISR           1    wreg     _Bool 
 20492 ;; Auto vars:     Size  Location     Type
 20493 ;;  inISR           1    0[COMRAM] _Bool 
 20494 ;; Return value:  Size  Location     Type
 20495 ;;                  1    wreg      void 
 20496 ;; Registers used:
 20497 ;;		wreg, status,2
 20498 ;; Tracked objects:
 20499 ;;		On entry : 0/0
 20500 ;;		On exit  : 0/0
 20501 ;;		Unchanged: 0/0
 20502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20503 ;;      Params:         0       0       0       0       0       0       0
 20504 ;;      Locals:         1       0       0       0       0       0       0
 20505 ;;      Temps:          0       0       0       0       0       0       0
 20506 ;;      Totals:         1       0       0       0       0       0       0
 20507 ;;Total ram usage:        1 bytes
 20508 ;; Hardware stack levels used: 1
 20509 ;; This function calls:
 20510 ;;		Nothing
 20511 ;; This function is called by:
 20512 ;;		_XF_unscheduleTimer
 20513 ;;		i2_XF_pushEvent
 20514 ;;		i2_XF_scheduleTimer
 20515 ;; This function uses a non-reentrant model
 20516 ;;
 20517                           
 20518                           	psect	text88
 20519  00645A                     __ptext88:
 20520                           	callstack 0
 20521  00645A                     i2_ENTERCRITICAL:
 20522                           	callstack 15
 20523                           
 20524                           ;incstack = 0
 20525                           ;i2ENTERCRITICAL@inISR stored from wreg
 20526  00645A  6E01               	movwf	i2ENTERCRITICAL@inISR^0,c
 20527  00645C                     
 20528                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 20529  00645C  5001               	movf	i2ENTERCRITICAL@inISR^0,w,c
 20530  00645E  A4D8               	btfss	status,2,c
 20531  006460  EF34  F032         	goto	i2u513_41
 20532  006464  EF36  F032         	goto	i2u513_40
 20533  006468                     i2u513_41:
 20534  006468  EF37  F032         	goto	i2l763
 20535  00646C                     i2u513_40:
 20536  00646C                     
 20537                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 20538  00646C  9EF2               	bcf	4082,7,c	;volatile
 20539  00646E                     i2l763:
 20540  00646E  0012               	return		;funcret
 20541  006470                     __end_ofi2_ENTERCRITICAL:
 20542                           	callstack 0
 20543                           
 20544                           	psect	rparam
 20545  0000                     
 20546                           	psect	temp
 20547  00004E                     btemp:
 20548                           	callstack 0
 20549  00004E                     	ds	1
 20550  0000                     int$flags	set	btemp
 20551  0000                     wtemp8	set	btemp+1
 20552  0000                     ttemp5	set	btemp+1
 20553  0000                     ttemp6	set	btemp+4
 20554  0000                     ttemp7	set	btemp+8
 20555                           
 20556                           	psect	idloc
 20557                           
 20558                           ;Config register IDLOC0 @ 0x200000
 20559                           ;	unspecified, using default values
 20560  200000                     	org	2097152
 20561  200000  FF                 	db	255
 20562                           
 20563                           ;Config register IDLOC1 @ 0x200001
 20564                           ;	unspecified, using default values
 20565  200001                     	org	2097153
 20566  200001  FF                 	db	255
 20567                           
 20568                           ;Config register IDLOC2 @ 0x200002
 20569                           ;	unspecified, using default values
 20570  200002                     	org	2097154
 20571  200002  FF                 	db	255
 20572                           
 20573                           ;Config register IDLOC3 @ 0x200003
 20574                           ;	unspecified, using default values
 20575  200003                     	org	2097155
 20576  200003  FF                 	db	255
 20577                           
 20578                           ;Config register IDLOC4 @ 0x200004
 20579                           ;	unspecified, using default values
 20580  200004                     	org	2097156
 20581  200004  FF                 	db	255
 20582                           
 20583                           ;Config register IDLOC5 @ 0x200005
 20584                           ;	unspecified, using default values
 20585  200005                     	org	2097157
 20586  200005  FF                 	db	255
 20587                           
 20588                           ;Config register IDLOC6 @ 0x200006
 20589                           ;	unspecified, using default values
 20590  200006                     	org	2097158
 20591  200006  FF                 	db	255
 20592                           
 20593                           ;Config register IDLOC7 @ 0x200007
 20594                           ;	unspecified, using default values
 20595  200007                     	org	2097159
 20596  200007  FF                 	db	255
 20597                           
 20598                           	psect	config
 20599                           
 20600                           ; Padding undefined space
 20601  300000                     	org	3145728
 20602  300000  FF                 	db	255
 20603                           
 20604                           ;Config register CONFIG1H @ 0x300001
 20605                           ;	Oscillator Selection bits
 20606                           ;	FOSC = INTIO67, Internal oscillator block
 20607                           ;	4X PLL Enable
 20608                           ;	PLLCFG = ON, Oscillator multiplied by 4
 20609                           ;	Primary clock enable bit
 20610                           ;	PRICLKEN = ON, Primary clock is always enabled
 20611                           ;	Fail-Safe Clock Monitor Enable bit
 20612                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 20613                           ;	Internal/External Oscillator Switchover bit
 20614                           ;	IESO = OFF, Oscillator Switchover mode disabled
 20615  300001                     	org	3145729
 20616  300001  38                 	db	56
 20617                           
 20618                           ;Config register CONFIG2L @ 0x300002
 20619                           ;	Power-up Timer Enable bit
 20620                           ;	PWRTEN = OFF, Power up timer disabled
 20621                           ;	Brown-out Reset Enable bits
 20622                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 20623                           ;	Brown Out Reset Voltage bits
 20624                           ;	BORV = 190, VBOR set to 1.90 V nominal
 20625  300002                     	org	3145730
 20626  300002  1F                 	db	31
 20627                           
 20628                           ;Config register CONFIG2H @ 0x300003
 20629                           ;	Watchdog Timer Enable bits
 20630                           ;	WDTEN = SWON, WDT is controlled by SWDTEN bit of the WDTCON register
 20631                           ;	Watchdog Timer Postscale Select bits
 20632                           ;	WDTPS = 32768, 1:32768
 20633  300003                     	org	3145731
 20634  300003  3E                 	db	62
 20635                           
 20636                           ; Padding undefined space
 20637  300004                     	org	3145732
 20638  300004  FF                 	db	255
 20639                           
 20640                           ;Config register CONFIG3H @ 0x300005
 20641                           ;	CCP2 MUX bit
 20642                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 20643                           ;	PORTB A/D Enable bit
 20644                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 20645                           ;	P3A/CCP3 Mux bit
 20646                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 20647                           ;	HFINTOSC Fast Start-up
 20648                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 20649                           ;	Timer3 Clock input mux bit
 20650                           ;	T3CMX = PORTC0, T3CKI is on RC0
 20651                           ;	ECCP2 B output mux bit
 20652                           ;	P2BMX = PORTB5, P2B is on RB5
 20653                           ;	MCLR Pin Enable bit
 20654                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 20655  300005                     	org	3145733
 20656  300005  BD                 	db	189
 20657                           
 20658                           ;Config register CONFIG4L @ 0x300006
 20659                           ;	Stack Full/Underflow Reset Enable bit
 20660                           ;	STVREN = ON, Stack full/underflow will cause Reset
 20661                           ;	Single-Supply ICSP Enable bit
 20662                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 20663                           ;	Extended Instruction Set Enable bit
 20664                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 20665                           ;	Background Debug
 20666                           ;	DEBUG = 0x1, unprogrammed default
 20667  300006                     	org	3145734
 20668  300006  85                 	db	133
 20669                           
 20670                           ; Padding undefined space
 20671  300007                     	org	3145735
 20672  300007  FF                 	db	255
 20673                           
 20674                           ;Config register CONFIG5L @ 0x300008
 20675                           ;	Code Protection Block 0
 20676                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 20677                           ;	Code Protection Block 1
 20678                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 20679                           ;	Code Protection Block 2
 20680                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 20681                           ;	Code Protection Block 3
 20682                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 20683  300008                     	org	3145736
 20684  300008  0F                 	db	15
 20685                           
 20686                           ;Config register CONFIG5H @ 0x300009
 20687                           ;	Boot Block Code Protection bit
 20688                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 20689                           ;	Data EEPROM Code Protection bit
 20690                           ;	CPD = OFF, Data EEPROM not code-protected
 20691  300009                     	org	3145737
 20692  300009  C0                 	db	192
 20693                           
 20694                           ;Config register CONFIG6L @ 0x30000A
 20695                           ;	Write Protection Block 0
 20696                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 20697                           ;	Write Protection Block 1
 20698                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 20699                           ;	Write Protection Block 2
 20700                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 20701                           ;	Write Protection Block 3
 20702                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 20703  30000A                     	org	3145738
 20704  30000A  0F                 	db	15
 20705                           
 20706                           ;Config register CONFIG6H @ 0x30000B
 20707                           ;	Configuration Register Write Protection bit
 20708                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 20709                           ;	Boot Block Write Protection bit
 20710                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 20711                           ;	Data EEPROM Write Protection bit
 20712                           ;	WRTD = OFF, Data EEPROM not write-protected
 20713  30000B                     	org	3145739
 20714  30000B  E0                 	db	224
 20715                           
 20716                           ;Config register CONFIG7L @ 0x30000C
 20717                           ;	Table Read Protection Block 0
 20718                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 20719                           ;	Table Read Protection Block 1
 20720                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 20721                           ;	Table Read Protection Block 2
 20722                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 20723                           ;	Table Read Protection Block 3
 20724                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 20725  30000C                     	org	3145740
 20726  30000C  0F                 	db	15
 20727                           
 20728                           ;Config register CONFIG7H @ 0x30000D
 20729                           ;	Boot Block Table Read Protection bit
 20730                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 20731  30000D                     	org	3145741
 20732  30000D  40                 	db	64
 20733                           tosu	equ	0xFFF
 20734                           tosh	equ	0xFFE
 20735                           tosl	equ	0xFFD
 20736                           stkptr	equ	0xFFC
 20737                           pclatu	equ	0xFFB
 20738                           pclath	equ	0xFFA
 20739                           pcl	equ	0xFF9
 20740                           tblptru	equ	0xFF8
 20741                           tblptrh	equ	0xFF7
 20742                           tblptrl	equ	0xFF6
 20743                           tablat	equ	0xFF5
 20744                           prodh	equ	0xFF4
 20745                           prodl	equ	0xFF3
 20746                           indf0	equ	0xFEF
 20747                           postinc0	equ	0xFEE
 20748                           postdec0	equ	0xFED
 20749                           preinc0	equ	0xFEC
 20750                           plusw0	equ	0xFEB
 20751                           fsr0h	equ	0xFEA
 20752                           fsr0l	equ	0xFE9
 20753                           wreg	equ	0xFE8
 20754                           indf1	equ	0xFE7
 20755                           postinc1	equ	0xFE6
 20756                           postdec1	equ	0xFE5
 20757                           preinc1	equ	0xFE4
 20758                           plusw1	equ	0xFE3
 20759                           fsr1h	equ	0xFE2
 20760                           fsr1l	equ	0xFE1
 20761                           bsr	equ	0xFE0
 20762                           indf2	equ	0xFDF
 20763                           postinc2	equ	0xFDE
 20764                           postdec2	equ	0xFDD
 20765                           preinc2	equ	0xFDC
 20766                           plusw2	equ	0xFDB
 20767                           fsr2h	equ	0xFDA
 20768                           fsr2l	equ	0xFD9
 20769                           status	equ	0xFD8

Data Sizes:
    Strings     121
    Constant    1867
    Data        0
    BSS         321
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      77
    BANK0           160     85     160
    BANK1           256      1     240
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    g1.font.bitmap	PTR const unsigned char  size(2) Largest target is 0
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    g1.font.descriptor	PTR const struct . size(2) Largest target is 0
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    g1.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.font	PTR struct . size(2) Largest target is 0
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.text	PTR const unsigned char  size(2) Largest target is 0
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.fpPress	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 253
		 -> g1.str(BANK1[2]), dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[11]), STR_11(CODE[8]), STR_10(CODE[9]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), STR_6(CODE[9]), 
		 -> STR_5(CODE[9]), STR_4(CODE[11]), g1(BANK1[239]), STR_1(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 253
		 -> g1.str(BANK1[2]), dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[11]), STR_11(CODE[8]), STR_10(CODE[9]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), STR_6(CODE[9]), 
		 -> STR_5(CODE[9]), STR_4(CODE[11]), g1(BANK1[239]), STR_1(CODE[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S4872_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    backlightController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    checkCollision@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    mooveBall@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    moovePaddle@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    gameControllerController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    gameControllerSM@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    gameControllerInit@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    displayController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    displaySM@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    displayInit@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    touchScreenController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    touchScreenSM@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    sleepInit@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_Bitmap@colorTablePtr	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_Bitmap@bmpPtr	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_Bitmap@strPtr	PTR struct . size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    RGB2LCD@colorTableEntry	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_DrawText@font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_DrawText@font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_DrawText@font	PTR const struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_DrawText@msg	PTR const unsigned char  size(2) Largest target is 253
		 -> g1.str(BANK1[2]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), STR_13(CODE[13]), 
		 -> STR_12(CODE[11]), STR_11(CODE[8]), STR_10(CODE[9]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[8]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), g1(BANK1[239]), STR_1(CODE[10]), 

    LCD_InSlider@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InSlider@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_InButton@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_InButton@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_InButton@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_ButtonDraw@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonDraw@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonDraw@bmpPtr	PTR struct . size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonDraw@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonDraw@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonDraw@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_ButtonUpdate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonUpdate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonUpdate@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_ButtonCreate@fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonCreate@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonCreate@font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@textOrBmp	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonCreate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonCreate@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_SliderDraw@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderDraw@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_SliderUpdate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderUpdate@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_SliderCreate@fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_endGame@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_inGameDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_parametersDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_welcomeDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_setY@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_setX@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_resetPos@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_setPlayer@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_init@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Score_draw@s	PTR struct Score size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Score_init@s	PTR struct Score size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    S135$fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    S108$fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    S108$text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    S99$bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    arialNarrow_12ptFontInfo.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    S99$descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    arialNarrow_12ptFontInfo.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    Paddle_draw@p	PTR struct Paddle size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Paddle_addX@p	PTR struct Paddle size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Paddle_init@p	PTR struct Paddle size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Ball_draw@b	PTR struct Ball size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Ball_Update@b	PTR struct Ball size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Ball_init@b	PTR struct Ball size(2) Largest target is 253
		 -> g1(BANK1[239]), 


Critical Paths under _main in COMRAM

    _gameControllerInit->_gameControllerController
    _XF_init->___wmul
    _LCD_Init->_LCD_Lowlevel_Init
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _XF_scheduleTimer->_ENTERCRITICAL
    _XF_scheduleTimer->_LEAVECRITICAL
    _sleepSM->_sleepController
    _gameControllerSM->_gameControllerController
    _gameControllerController->_LCD_SliderUpdate
    _moovePaddle->_LCD_InButton
    _mooveBall->_checkCollision
    _checkCollision->_XF_pushEvent
    _XF_pushEvent->___awmod
    _backlightController->_GameParameters_setBackLight
    _GameParameters_init->_LCD_ButtonCreate
    _Menu_welcomeDraw->_LCD_DrawText
    _Menu_parametersDraw->_LCD_SliderDraw
    _LCD_SliderDraw->_LCD_SliderUpdate
    _LCD_SliderUpdate->___lwdiv
    _Menu_endGame->_LCD_DrawText
    _LCD_ButtonDraw->_LCD_DrawText
    _LCD_ButtonUpdate->_LCD_DrawRect
    _LCD_Bitmap->___lwdiv
    ___lwdiv->___wmul
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_DrawText->___wmul
    ___wmul->___awdiv
    _Paddle_draw->_LCD_DrawRect
    _Ball_draw->_LCD_DrawRect
    _XF_popEvent->___awmod

Critical Paths under _isr in COMRAM

    _isr->_XF_decrementAndQueueTimers
    i2_XF_scheduleTimer->i2_ENTERCRITICAL
    i2_XF_scheduleTimer->i2_LEAVECRITICAL
    _XF_decrementAndQueueTimers->i2_XF_pushEvent
    i2_XF_pushEvent->i2___awmod
    i2_XF_pushEvent->i2___wmul
    _XF_unscheduleTimer->i2_ENTERCRITICAL
    _XF_unscheduleTimer->i2_LEAVECRITICAL

Critical Paths under _main in BANK0

    _Factory_init->_sleepInit
    _sleepInit->_displayInit
    _displayInit->_displayController
    _Factory_exec->_touchScreenSM
    _touchScreenSM->_touchScreenController
    _touchScreenController->_sprintf
    _displaySM->_displayController
    _displayController->_Menu_endGame
    _displayController->_Menu_parametersDraw
    _displayController->_Menu_welcomeDraw
    _Menu_welcomeDraw->_LCD_ButtonDraw
    _Menu_parametersDraw->_LCD_ButtonDraw
    _Menu_endGame->_LCD_ButtonDraw
    _LCD_ButtonDraw->_LCD_Bitmap
    _Menu_inGameDraw->_Score_draw
    _Score_draw->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Factory_exec

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  690951
                       _Factory_exec
                       _Factory_init
 ---------------------------------------------------------------------------------
 (1) _Factory_init                                         2     2      0  323631
                                             71 BANK0      2     2      0
                _GameParameters_init
                       _LCD_DrawText
                           _LCD_Fill
                           _LCD_Init
                            _XF_init
                          _sleepInit
 ---------------------------------------------------------------------------------
 (2) _sleepInit                                            2     0      2  295033
                                             69 BANK0      2     0      2
                        _displayInit
                 _gameControllerInit
                    _sleepController
                    _touchScreenInit
 ---------------------------------------------------------------------------------
 (3) _touchScreenInit                                      0     0      0       0
                        _configTouch
 ---------------------------------------------------------------------------------
 (3) _gameControllerInit                                   2     0      2   52612
                                             59 COMRAM     2     0      2
           _gameControllerController
 ---------------------------------------------------------------------------------
 (3) _displayInit                                          2     0      2  242269
                                             67 BANK0      2     0      2
                  _displayController
 ---------------------------------------------------------------------------------
 (2) _XF_init                                              2     2      0    3031
                                             31 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0      90
                                             22 COMRAM     2     2      0
                  _LCD_Lowlevel_Init
 ---------------------------------------------------------------------------------
 (3) _LCD_Lowlevel_Init                                    5     5      0      60
                                             17 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Factory_exec                                         1     1      0  367320
                                              0 BANK1      1     1      0
                        _XF_popEvent
                          _displaySM
                   _gameControllerSM
                            _sleepSM
                      _touchScreenSM
 ---------------------------------------------------------------------------------
 (2) _touchScreenSM                                        5     3      2   26905
                                             80 BANK0      5     3      2
              _touchScreenController
 ---------------------------------------------------------------------------------
 (3) _touchScreenController                               32    30      2   26629
                                             48 BANK0     32    30      2
                _GameParameters_setX
                _GameParameters_setY
                       _LCD_DrawText
                   _XF_scheduleTimer
                            ___fldiv
                            ___fltol
                           ___xxtofl
                      _configMeasure
                        _configTouch
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _configTouch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _configMeasure                                        1     1      0      62
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     566
                                             17 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     427
                                             56 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2003
                                             31 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _XF_scheduleTimer                                     5     1      4     789
                                             18 COMRAM     5     1      4
                      _ENTERCRITICAL
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setY                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setX                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _sleepSM                                              3     3      0     124
                                             19 COMRAM     3     3      0
                    _sleepController
 ---------------------------------------------------------------------------------
 (3) _sleepController                                      2     2      0       0
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _gameControllerSM                                     5     3      2   52891
                                             59 COMRAM     5     3      2
           _gameControllerController
 ---------------------------------------------------------------------------------
 (4) _gameControllerController                             5     2      3   52491
                                             54 COMRAM     5     2      3
                _GameParameters_init
            _GameParameters_resetPos
                       _LCD_InButton
                       _LCD_InSlider
                   _LCD_SliderUpdate
                       _XF_pushEvent
                _backlightController
                          _mooveBall
                        _moovePaddle
 ---------------------------------------------------------------------------------
 (5) _moovePaddle                                          2     0      2    6462
                                             27 COMRAM     2     0      2
            _GameParameters_resetPos
                       _LCD_InButton
                        _Paddle_addX
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (6) _Paddle_addX                                          8     2      6     881
                                             17 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) _LCD_InButton                                        10     4      6    2200
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (6) _GameParameters_resetPos                              2     0      2     692
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _mooveBall                                            2     0      2    7266
                                             36 COMRAM     2     0      2
                        _Ball_Update
                       _XF_pushEvent
                     _checkCollision
 ---------------------------------------------------------------------------------
 (6) _checkCollision                                      30    28      2    4549
                                             26 COMRAM    10     8      2
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (6) _XF_pushEvent                                         3     2      1    2289
                                             23 COMRAM     3     2      1
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) _Ball_Update                                          6     4      2     276
                                             17 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _backlightController                                  4     2      2    3552
                                             23 COMRAM     4     2      2
        _GameParameters_setBackLight
 ---------------------------------------------------------------------------------
 (6) _GameParameters_setBackLight                          6     2      4    2284
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _LCD_InSlider                                        10     4      6     580
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (5) _GameParameters_init                                  2     0      2   12380
                                             42 COMRAM     2     0      2
                          _Ball_init
                   _LCD_ButtonCreate
                   _LCD_SliderCreate
                        _Paddle_init
                         _Score_init
 ---------------------------------------------------------------------------------
 (6) _Score_init                                           2     0      2     152
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _Paddle_init                                          4     0      4     639
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _LCD_SliderCreate                                    22     0     22    1672
                                             17 COMRAM    22     0     22
 ---------------------------------------------------------------------------------
 (6) _LCD_ButtonCreate                                    25     0     25    8965
                                             17 COMRAM    25     0     25
 ---------------------------------------------------------------------------------
 (6) _Ball_init                                            2     0      2     276
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _displaySM                                            5     3      2  286226
                                             67 BANK0      5     3      2
                    _Menu_inGameDraw
                  _displayController
 ---------------------------------------------------------------------------------
 (4) _displayController                                    5     2      3  242148
                                             62 BANK0      5     2      3
                          _Ball_draw
                       _Menu_endGame
                _Menu_parametersDraw
                   _Menu_welcomeDraw
                        _Paddle_draw
                         _Score_draw
 ---------------------------------------------------------------------------------
 (5) _Menu_welcomeDraw                                     2     0      2   57566
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
 ---------------------------------------------------------------------------------
 (5) _Menu_parametersDraw                                  2     0      2   82977
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
                     _LCD_SliderDraw
 ---------------------------------------------------------------------------------
 (6) _LCD_SliderDraw                                      14    12      2   25380
                                             54 COMRAM    14    12      2
                       _LCD_DrawRect
                   _LCD_SliderUpdate
 ---------------------------------------------------------------------------------
 (5) _LCD_SliderUpdate                                    16    14      2   15116
                                             38 COMRAM    16    14      2
                       _LCD_DrawRect
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _Menu_endGame                                         4     2      2   57535
                                             65 COMRAM     2     2      0
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
 ---------------------------------------------------------------------------------
 (6) _LCD_ButtonDraw                                      32    30      2   44286
                                             28 BANK0     32    30      2
                         _LCD_Bitmap
                   _LCD_ButtonUpdate
                       _LCD_DrawRect
                       _LCD_DrawText
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _LCD_ButtonUpdate                                    18    16      2   11351
                                             36 COMRAM    18    16      2
                       _LCD_DrawRect
                           _LCD_Read
 ---------------------------------------------------------------------------------
 (8) _LCD_Read                                            10     6      4     548
                                             17 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _LCD_Bitmap                                          38    32      6    7372
                                             38 COMRAM    10     4      6
                                              0 BANK0     28    28      0
                            _RGB2LCD
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     412
                                             17 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     901
                                             31 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _RGB2LCD                                             14    12      2     499
                                             17 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (3) _Menu_inGameDraw                                      2     0      2   43399
                                             50 BANK0      2     0      2
                          _Ball_draw
                           _LCD_Fill
                        _Paddle_draw
                         _Score_draw
 ---------------------------------------------------------------------------------
 (5) _Score_draw                                           2     0      2   21884
                                             48 BANK0      2     0      2
                       _LCD_DrawText
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             16    10      6    9137
                                             34 BANK0     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (7) _vfprintf                                             8     2      6    8111
                                             26 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (8) _vfpfcnvrt                                           42    36      6    7638
                                             62 COMRAM     8     2      6
                                             18 BANK0      8     8      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _dtoa                                                36    26     10    5863
                                             44 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (10) _pad                                                11     5      6    3597
                                             33 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _fputs                                               7     3      4    1537
                                             26 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1037
                                             17 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (10) _abs                                                 4     2      2     183
                                             35 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (10) ___aomod                                            18     2     16     613
                                             17 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (10) ___aodiv                                            26    10     16     625
                                             17 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawText                                        34    21     13   12381
                                             31 COMRAM    34    21     13
                            ___awdiv
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _strlen                                              4     2      2     400
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    2802
                                             25 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1105
                                             17 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _Paddle_draw                                          6     4      2   10398
                                             36 COMRAM     6     4      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_Fill                                             8     6      2     716
                                             17 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _Ball_draw                                           10     8      2   10187
                                             36 COMRAM    10     8      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawRect                                        19     8     11    9635
                                             17 COMRAM    19     8     11
 ---------------------------------------------------------------------------------
 (2) _XF_popEvent                                          2     2      0    1016
                                             23 COMRAM     2     2      0
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     793
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _LEAVECRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ENTERCRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _isr                                                 4     4      0    2339
                                             13 COMRAM     4     4      0
         _XF_decrementAndQueueTimers
                     i2_XF_pushEvent
                 i2_XF_scheduleTimer
 ---------------------------------------------------------------------------------
 (15) i2_XF_scheduleTimer                                  5     1      4     328
                                              1 COMRAM     5     1      4
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (15) _XF_decrementAndQueueTimers                          4     4      0    1408
                                              9 COMRAM     4     4      0
                 _XF_unscheduleTimer
                     i2_XF_pushEvent
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4     419
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2_XF_pushEvent                                      3     2      1     603
                                              6 COMRAM     3     2      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
                          i2___awmod
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) _XF_unscheduleTimer                                  2     1      1     208
                                              1 COMRAM     2     1      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (16) i2_LEAVECRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_ENTERCRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Factory_exec
     _XF_popEvent
       _ENTERCRITICAL
       _LEAVECRITICAL
       ___awmod
     _displaySM
       _Menu_inGameDraw
         _Ball_draw
           _LCD_DrawRect
         _LCD_Fill
         _Paddle_draw
           _LCD_DrawRect
         _Score_draw
           _LCD_DrawText
             ___awdiv
             ___wmul
               ___awdiv (ARG)
             _strlen
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                     _strlen
                 _fputc
       _displayController
         _Ball_draw
         _Menu_endGame
           _LCD_ButtonDraw
             _LCD_Bitmap
               _RGB2LCD
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
               ___wmul
             _LCD_ButtonUpdate
               _LCD_DrawRect
               _LCD_Read
             _LCD_DrawRect
             _LCD_DrawText
             ___awdiv
             _strlen
           _LCD_DrawText
           _LCD_Fill
         _Menu_parametersDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
           _LCD_SliderDraw
             _LCD_DrawRect
             _LCD_SliderUpdate
               _LCD_DrawRect
               ___lwdiv
               ___wmul
         _Menu_welcomeDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
         _Paddle_draw
         _Score_draw
     _gameControllerSM
       _gameControllerController
         _GameParameters_init
           _Ball_init
           _LCD_ButtonCreate
           _LCD_SliderCreate
           _Paddle_init
           _Score_init
         _GameParameters_resetPos
         _LCD_InButton
         _LCD_InSlider
         _LCD_SliderUpdate
         _XF_pushEvent
           _ENTERCRITICAL
           _LEAVECRITICAL
           ___awmod
         _backlightController
           _GameParameters_setBackLight
         _mooveBall
           _Ball_Update
           _XF_pushEvent
           _checkCollision
             _XF_pushEvent
         _moovePaddle
           _GameParameters_resetPos
           _LCD_InButton
           _Paddle_addX
           _XF_pushEvent
     _sleepSM
       _sleepController
     _touchScreenSM
       _touchScreenController
         _GameParameters_setX
         _GameParameters_setY
         _LCD_DrawText
         _XF_scheduleTimer
           _ENTERCRITICAL
           _LEAVECRITICAL
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _configMeasure
         _configTouch
         _sprintf
   _Factory_init
     _GameParameters_init
     _LCD_DrawText
     _LCD_Fill
     _LCD_Init
       _LCD_Lowlevel_Init
     _XF_init
       ___wmul
     _sleepInit
       _displayInit
         _displayController
       _gameControllerInit
         _gameControllerController
       _sleepController
       _touchScreenInit
         _configTouch

 _isr (ROOT)
   _XF_decrementAndQueueTimers
     _XF_unscheduleTimer
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
     i2_XF_pushEvent
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
       i2___awmod
       i2___wmul (ARG)
     i2___wmul
   i2_XF_pushEvent
   i2_XF_scheduleTimer
     i2_ENTERCRITICAL
     i2_LEAVECRITICAL

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      1      F0       6       93.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     55      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      4D       1       81.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DD       9        0.0%
DATA                 0      0     1DD      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 06 13:02:34 2021

                      _LCD_ButtonDraw 0F54                           ?_LCD_Bitmap 0027  
                                   l5 5C62                                     l8 5AF2  
                        ___fldiv@aexp 0038                          ___fldiv@bexp 0037  
                    _LCD_ButtonCreate 4990                          ___fldiv@sign 0030  
                        ?_displayInit 00A3                  __end_of_Factory_exec 6004  
                __end_of_Factory_init 5526                                    l11 41E0  
                                  l18 568C                                    l26 4F00  
                                  l29 4454                                    _g1 0100  
                        ___awdiv@sign 0017               __end_of_sleepController 6284  
                   ??i2_ENTERCRITICAL 0001              __end_of_Menu_welcomeDraw 5BEE  
                 ___wmul@multiplicand 001C                  backlightController@g 0018  
                    _LCD_ButtonUpdate 3802                         ?_LCD_InButton 0012  
                       ?_LCD_InSlider 0012                         ?_LCD_DrawRect 0012  
                       ?_LCD_DrawText 0020                                   l100 5524  
                                 l104 6002                                   l113 6354  
                                 l122 4FD2                                   l300 300A  
                                 l220 3594                                   l400 4322  
                                 l240 1916                                   l144 618C  
                                 l225 5368                                   l321 21FE  
                                 l233 4C6A                                   l153 62DE  
                                 l330 0F52                                   l227 53AC  
                                 l243 4684                                   l139 25E2  
                                 l324 546A                                   l252 3A36  
                                 l156 6416                                   l261 1440  
                                 l181 5B74                                   l413 6306  
                                 l246 4A88                                   l159 6400  
                                 l184 6058                                   l272 4E26  
                                 l265 4D48                                   l513 35A2  
                                 l282 2DB6                                   l178 5BEC  
                                 l426 593E                                   l514 35AA  
                                 l435 6282                                   l507 5A70  
                                 l292 2ED8                                   l284 2DC2  
                                 l532 60FA                                   l524 3800  
                                 l189 573C                                   l518 366C  
                                 l295 2F72                                   l527 63BC  
                                 l712 1D98                                   l289 2E7A  
                                 l633 5164                                   l553 63D4  
                                 l298 2FE0                                   l394 59DC  
                                 l618 63EA                                   l571 498E  
                                 l660 4B7C                                   l812 6474  
                                 l741 5FAC                                   l733 55DC  
                                 l718 1DB4                                   l670 041A  
                                 l638 29E0                                   l663 632E  
                                 l655 2CD0                                   l639 2A3E  
                                 l496 648A                                   l585 488E  
                                 l737 5E22                                   l681 0788  
                                 l818 637A                                   l658 4AFE  
                                 l763 6442                                   l659 4B72  
                                 l747 5CD6                                   l932 3F26  
                                 l692 095C                                   l767 642C  
                                 l688 0806                                   l945 408A  
                                 l689 086C                                   _GIE 007F97  
                                 _PR2 000FBB                                   _abs 61D2  
                                 _pad 522A                                   _isr 0008  
                configMeasure@channel 0012                       ??_ENTERCRITICAL 0012  
                        ___awmod@sign 0017                                   prod 000FF3  
                                 wreg 000FE8                __size_of_touchScreenSM 0094  
                     __end_of_RGB2LCD 546C                          ___fltol@exp1 0042  
                    _touchScreenState 00DE                           _Ball_Update 5A72  
                       ??_Paddle_addX 0018                                  l1115 478A  
                                ?_abs 0024                                  l1062 57EC  
                                l1400 297C                                  l1049 5228  
                                l1402 27DC                                  l1411 2822  
                                l1316 5D4A                                  l1309 5D42  
                                l1413 289A                                  l1405 27A0  
                                l1326 5E86                                  l1414 2888  
                                l1319 5E7E                                  l1523 526E  
                                l1604 6148                                  l4100 335C  
                                l1526 52B0                                  l1534 30AC  
                                l4110 3372                                  l4102 3362  
                                l1528 52EA                                  l1536 30B4  
                                l1480 3B26                                  l4200 3404  
                                l4120 3380                                  l4112 3374  
                                l4104 3364                                  l1561 3D9E  
                                l1473 3A8E                                  l1554 32EC  
                                l4210 3412                                  l4202 3406  
                                l4130 3392                                  l4122 3386  
                                l4114 337A                                  l4106 336A  
                                l4050 32FA                                  l4042 32EE  
                                l1572 6208                                  l1476 3BEA  
                                l4300 34C0                                  l4220 3428  
                                l4212 3418                                  l4204 340C  
                                l4140 33A4                                  l4132 3394  
                                l4124 3388                                  l4116 337C  
                                l4108 336C                                  l4060 3302  
                                l4052 32FC                                  l4044 32F2  
                                l4310 34D2                                  l4302 34C2  
                                l4230 3436                                  l4222 342A  
                                l4214 341A                                  l4206 340E  
                                l4150 33B6                                  l4142 33A6  
                                l4134 339A                                  l4126 338E  
                                l4118 337E                                  l4070 332A  
                                l4062 3310                                  l4054 32FE  
                                l4046 32F6                                  l1575 6210  
                                l1567 5F44                                  l1487 3B82  
                                l1568 5F4C                                  l1496 60AA  
                                l4400 357C                                  l4320 34E8  
                                l4312 34D8                                  l4304 34C8  
                                l4240 344C                                  l4232 343C  
                                l4224 342C                                  l4216 3420  
                                l4208 3410                                  l4160 33C4  
                                l4152 33B8                                  l4144 33A8  
                                l4136 339C                                  l4128 3390  
                                l4080 333C                                  l4072 332C  
                                l4064 3322                                  l4048 32F8  
                                l4410 358E                                  l4402 357E  
                                l4330 34FA                                  l4322 34EA  
                                l4314 34DA                                  l4306 34CA  
                                l4250 345E                                  l4242 344E  
                                l4234 343E                                  l4226 342E  
                                l4218 3422                                  l4170 33D2  
                                l4162 33C6                                  l4154 33BA  
                                l4146 33AE                                  l4138 33A2  
                                l4090 334E                                  l4082 333E  
                                l4074 3332                                  l4066 3326  
                                l1587 509C                                  l1595 61D0  
                                l4412 3590                                  l4404 3584  
                                l4340 3510                                  l4332 3500  
                                l4324 34F0                                  l4316 34E0  
                                l4308 34D0                                  l4260 3474  
                                l4252 3464                                  l4244 3454  
                                l4236 3444                                  l4228 3434  
                                l4180 33E4                                  l4172 33D4  
                                l4164 33C8                                  l4156 33BC  
                                l4148 33B0                                  l4092 3350  
                                l4084 3340                                  l4076 3334  
                                l4068 3328                                  l1598 648C  
                                l4414 3592                                  l4406 3586  
                                l4350 3522                                  l4342 3512  
                                l4334 3502                                  l4326 34F2  
                                l4318 34E2                                  l4270 3486  
                                l4262 3476                                  l4254 3466  
                                l4246 3456                                  l4238 3446  
                                l4190 33F2                                  l4182 33E6  
                                l4174 33D6                                  l4166 33CA  
                                l4158 33C2                                  l4094 3352  
                                l4086 3346                                  l4078 333A  
                                l4408 358C                                  l4360 3534  
                                l4352 3524                                  l4344 3518  
                                l4336 3508                                  l4328 34F8  
                                l4280 349C                                  l4272 348C  
                                l4264 347C                                  l4256 346C  
                                l4248 345C                                  l4192 33F8  
                                l4184 33E8                                  l4176 33DC  
                                l4168 33D0                                  l4096 3354  
                                l4088 3348                                  l4370 3546  
                                l4362 3536                                  l4354 3526  
                                l4346 351A                                  l4338 350A  
                                l4290 34AA                                  l4282 349E  
                                l4274 348E                                  l4266 347E  
                                l4258 346E                                  l4194 33FA  
                                l4186 33EA                                  l4178 33DE  
                                l4098 335A                                  l3900 5952  
                                l4380 3558                                  l4372 354C  
                                l4364 353C                                  l4356 352C  
                                l4348 3520                                  l4292 34B0  
                                l4284 34A4                                  l4276 3494  
                                l4268 3484                                  l4196 33FC  
                                l4188 33F0                                  l3910 597E  
                                l4390 356A                                  l4382 355A  
                                l4374 354E                                  l4366 353E  
                                l4358 352E                                  l4294 34B2  
                                l4286 34A6                                  l4278 3496  
                                l4198 33FE                                  ?_pad 0022  
                                l3920 59B6                                  l3912 5998  
                                l4392 3570                                  l4384 3560  
                                l4376 3550                                  l4368 3544  
                                l4296 34B8                                  l4288 34A8  
                                l3922 59C2                                  l3906 5964  
                                l4394 3572                                  l4386 3562  
                                l4378 3552                                  l4298 34BA  
                                l8100 3E6E                                  l3908 5972  
                                l4396 3578                                  l4388 3568  
                                l8102 3E9C                                  l8110 3ED6  
                                l3918 59A8                                  l4398 357A  
                                l9000 2184                                  l8112 3EE6  
                                l8104 3EBC                                  l8120 3F2C  
                                l8200 30E2                                  l9002 2186  
                                l8114 3F06                                  l8106 3EBE  
                                l8130 3F8C                                  l8122 3F3A  
                                l8050 5020                                  l8042 4FD4  
                                l8210 3182                                  l8202 30EA  
                                l3890 5940                                  l8300 2D8A  
                                l8060 610C                                  l9020 21CE  
                                l9004 218A                                  l9012 2194  
                                l8108 3ED0                                  l8140 4002  
                                l8132 3FAA                                  l8124 3F5A  
                                l8052 5056                                  l8044 4FE6  
                                l8220 3240                                  l8212 3188  
                                l8204 30F2                                  l9100 0A7E  
                                l3892 5948                                  l8310 2D9C  
                                l8302 2D8C                                  l8062 613C  
                                l9006 218C                                  l9014 2196  
                                l8150 406A                                  l8142 4022  
                                l8134 3FB2                                  l8126 3F5E  
                                l8118 3F28                                  l8046 4FF8  
                                l8070 61AC                                  l8230 328E  
                                l8222 325A                                  l8206 30F8  
                                l8214 31EC                                  l9110 0A8E  
                                l9102 0A82                                  l9030 1538  
                                l9022 1442                                  l3894 594C  
                                l8400 2EA4                                  l8320 2DAA  
                                l8312 2DA2                                  l8304 2D92  
                                l8056 60FC                                  l9016 21B2  
                                l9008 218E                                  l8080 3DD2  
                                l8144 4034                                  l8136 3FC6  
                                l8128 3F6C                                  l8048 5002  
                                l8072 61B0                                  l8160 525A  
                                l8232 32A0                                  l8216 3208  
                                l8224 3268                                  l8208 317A  
                                l9200 0B74                                  l9120 0ABE  
                                l9112 0A90                                  l9104 0A84  
                                l9040 1660                                  l9024 1460  
                                l9032 1578                                  l3896 594E  
                                l8410 2EB4                                  l8402 2EA8  
                                l8322 2DD2                                  l8314 2DA4  
                                l8306 2D94                                  l8330 2E0A  
                                l8250 2D08                                  l8242 2CD2  
                                l8058 6108                                  l9018 21CA  
                                l8090 3E14                                  l8082 3DD6  
                                l8074 3DA0                                  l8138 3FD4  
                                l8146 403A                                  l8066 618E  
                                l8170 52BE                                  l8162 5266  
                                l8154 522A                                  l8234 32AC  
                                l8226 327A                                  l8218 3226  
                                l9202 0B76                                  l9130 0ACA  
                                l9122 0AC2                                  l9114 0A92  
                                l9106 0A86                                  l9050 1766  
                                l9042 169C                                  l9034 1594  
                                l9026 14F0                                  l3898 5950  
                                l8500 2F82                                  l8420 2EC4  
                                l8412 2EB6                                  l8404 2EAA  
                                l8340 2E1A                                  l8332 2E0E  
                                l8324 2DD6                                  l8316 2DA6  
                                l8308 2D9A                                  l8260 2D4C  
                                l8252 2D1E                                  l8244 2CD6  
                                l8092 3E32                                  l8084 3DE4  
                                l8076 3DA4                                  l8148 404A  
                                l8068 619A                                  l8172 52D2  
                                l8164 527A                                  l8156 5238  
                                l8236 32B4                                  l8228 3288  
                                l8180 300C                                  l9300 0D78  
                                l9220 0BC2                                  l9212 0BA8  
                                l9204 0B78                                  l9140 0AD8  
                                l9132 0ACE                                  l9124 0AC4  
                                l9116 0A9E                                  l9108 0A88  
                                l9060 189E                                  l9052 1786  
                                l9044 16BC                                  l9036 1604  
                                l9028 1518                                  ?_isr 0001  
                                l8510 2FA4                                  l8502 2F86  
                                l8430 2EE8                                  l8422 2EC6  
                                l8414 2EB8                                  l8406 2EAC  
                                l8350 2E2A                                  l8342 2E1C  
                                l8334 2E10                                  l8326 2DEC  
                                l8318 2DA8                                  l8270 2D5A  
                                l8262 2D4E                                  l8254 2D36  
                                l8246 2CDA                                  l8094 3E3A  
                                l8086 3E04                                  l8078 3DB2  
                                l8166 528E                                  l8158 524C  
                                l8238 32C4                                  l8190 3086  
                                l8182 302C                                  l9310 0DEA  
                                l9302 0D92                                  l9222 0BC4  
                                l9230 0BD0                                  l9214 0BB0  
                                l9206 0B80                                  l9150 0AFC  
                                l9142 0ADA                                  l9134 0AD0  
                                l9126 0AC6                                  l9118 0AAA  
                                l9070 3856                                  l9062 18DA  
                                l9046 16DA                                  l9054 17C6  
                                l9038 1624                                  l8520 2FB4  
                                l8512 2FA6                                  l8504 2F9C  
                                l8440 2F0A                                  l8432 2EEC  
                                l8424 2EC8                                  l8416 2EBC  
                                l8408 2EAE                                  l8360 2E3A  
                                l8352 2E2C                                  l8344 2E1E  
                                l8336 2E12                                  l8328 2DF0  
                                l8280 2D6A                                  l8272 2D5E  
                                l8264 2D50                                  l8256 2D46  
                                l8248 2CF0                                  l8096 3E4E  
                                l8088 3E08                                  l8176 61D2  
                                l8168 5292                                  l8192 30A0  
                                l8184 3056                                  l9320 0DF6  
                                l9312 0DEC                                  l9304 0D9E  
                                l9240 0C12                                  l9232 0BF2  
                                l9224 0BC8                                  l9216 0BBC  
                                l9208 0B88                                  l9160 0B0A  
                                l9152 0B00                                  l9144 0AF4  
                                l9136 0AD2                                  l9128 0AC8  
                                l8600 4238                                  l9080 3906  
                                l9072 388A                                  l9064 3802  
                                l9056 1856                                  l9048 16F6  
                                l9400 5E16                                  l8530 2FC4  
                                l8522 2FB6                                  l8514 2FAC  
                                l8506 2FA0                                  l8450 2F1A  
                                l8442 2F0C                                  l8434 2F02  
                                l8426 2ECA                                  l8418 2EBE  
                                l8370 2E48                                  l8362 2E3C  
                                l8354 2E2E                                  l8346 2E22  
                                l8338 2E14                                  l8290 2D7A  
                                l8282 2D6E                                  l8274 2D60  
                                l8266 2D56                                  l8258 2D4A  
                                l8098 3E5C                                  l8178 61EC  
                                l8194 30BC                                  l8186 3076  
                                l9410 5EF4                                  l9314 0DEE  
                                l9306 0DE0                                  l9322 0DFA  
                                l9250 0C1E                                  l9242 0C14  
                                l9234 0BFA                                  l9226 0BCA  
                                l9218 0BC0                                  l9170 0B38  
                                l9162 0B0C                                  l9154 0B02  
                                l9146 0AF8                                  l9138 0AD6  
                                l9090 09B4                                  l8610 4246  
                                l8602 423E                                  l9082 3936  
                                l9074 38A6                                  l9066 3812  
                                l9058 187E                                  l9402 5E1A  
                                l8540 2FD2                                  l8532 2FC6  
                                l8524 2FBC                                  l8516 2FAE  
                                l8508 2FA2                                  l8460 2F2A  
                                l8452 2F1C                                  l8444 2F12  
                                l8436 2F06                                  l8428 2ECC  
                                l8380 2E58                                  l8372 2E4A  
                                l8364 2E3E                                  l8356 2E32  
                                l8348 2E24                                  l8292 2D7C  
                                l8284 2D70                                  l8276 2D66  
                                l8268 2D58                                  l9500 533A  
                                l8700 51A6                                  l8196 30CE  
                                l8188 3084                                  l9412 5F02  
                                l9340 0EF0                                  l9324 0E16  
                                l9316 0DF2                                  l9308 0DE6  
                                l9260 0C56                                  l9244 0C16  
                                l9252 0C22                                  l9236 0C02  
                                l9228 0BCC                                  l9332 0E52  
                                l9180 0B44                                  l9172 0B3A  
                                l9164 0B0E                                  l9156 0B04  
                                l9148 0AFA                                  l9092 09D4  
                                l9084 095E                                  l8620 4250  
                                l8612 4248                                  l8604 4240  
                                l9076 38D2                                  l9068 3842  
                                l9420 5C12                                  l9404 5E20  
                                l8542 2FD4                                  l8534 2FCC  
                                l8526 2FBE                                  l8518 2FB0  
                                l8470 2F38                                  l8462 2F2C  
                                l8454 2F22                                  l8446 2F14  
                                l8438 2F08                                  l8390 2E6A  
                                l8382 2E5E                                  l8374 2E4E  
                                l8366 2E40                                  l8358 2E34  
                                l8294 2D82                                  l8286 2D76  
                                l8278 2D68                                  l9510 5350  
                                l9502 5340                                  l8710 51DC  
                                l8702 51B8                                  l8198 30DC  
                                l9414 5F28                                  l9350 0F00  
                                l9342 0EF4                                  l9326 0E26  
                                l9318 0DF4                                  l9262 0C58  
                                l9270 0C64                                  l9254 0C44  
                                l9246 0C1A                                  l9238 0C0E  
                                l9334 0E9A                                  l9190 0B68  
                                l9182 0B5C                                  l9174 0B3C  
                                l9166 0B10                                  l9158 0B08  
                                l9094 0A00                                  l9086 0966  
                                l8630 427E                                  l8622 4252  
                                l8614 424A                                  l8606 4242  
                                l8550 41E6                                  l9078 38F2  
                                l9422 5C26                                  l9430 55DE  
                                l8544 2FF0                                  l8536 2FCE  
                                l8528 2FC0                                  l8480 2F48  
                                l8472 2F3E                                  l8464 2F32  
                                l8456 2F24                                  l8448 2F16  
                                l8392 2E6C                                  l8384 2E60  
                                l8376 2E50                                  l8368 2E46  
                                l8296 2D84                                  l8288 2D78  
                                l9512 5352                                  l9504 5342  
                                l8712 51F2                                  l8704 51C0  
                                l8720 5208                                  l9408 5EEC  
                                l8800 5E78                                  l9352 0F02  
                                l9344 0EF8                                  l9336 0EA8  
                                l9328 0E46                                  l9280 0D04  
                                l9272 0CA0                                  l9264 0C5C  
                                l9256 0C50                                  l9248 0C1C  
                                l9360 0F2C                                  l9192 0B6A  
                                l9184 0B60                                  l9176 0B40  
                                l9168 0B34                                  l9096 0A36  
                                l9088 0994                                  l8640 42A8  
                                l8632 429C                                  l8624 4254  
                                l8616 424C                                  l8608 4244  
                                l8560 41F4                                  l8552 41E8  
                                l9424 5C3A                                  l9416 5BEE  
                                l9600 4C56                                  l9440 5654  
                                l9432 5606                                  l8730 5742  
                                l8546 2FF4                                  l8538 2FD0  
                                l8490 2F5E                                  l8482 2F4E  
                                l8474 2F40                                  l8466 2F34  
                                l8458 2F26                                  l8394 2E6E  
                                l8386 2E66                                  l8378 2E56  
                                l8298 2D86                                  l9530 537C  
                                l9522 5360                                  l9514 5354  
                                l9506 5348                                  l8722 5218  
                                l8714 51FA                                  l8706 51C8  
                                l8810 3C32                                  l8802 3BEC  
                                l9370 0F48                                  l9362 0F3E  
                                l9354 0F04                                  l9346 0EFA  
                                l9338 0EE2                                  l9290 0D12  
                                l9282 0D08                                  l9274 0CA8  
                                l9266 0C5E                                  l9258 0C54  
                                l9194 0B6C                                  l9186 0B62  
                                l9178 0B42                                  l9098 0A58  
                                l8650 42EA                                  l8642 42C4  
                                l8634 429E                                  l8626 425A  
                                l8618 424E                                  l8570 4204  
                                l8562 41F6                                  l8554 41EA  
                                l9426 5C4E                                  l9418 5BFE  
                                l9442 5664                                  l9434 5618  
                                l9602 614A                                  l9610 62B6  
                                l9450 4E90                                  l8740 5772  
                                l8732 5750                                  l8492 2F60  
                                l8484 2F50                                  l8476 2F42  
                                l8468 2F36                                  l8396 2E8A  
                                l8388 2E68                                  l9532 5392  
                                l9516 5356                                  l9508 534A  
                                l9460 52F0                                  l8724 5220  
                                l8716 51FC                                  l8708 51D6  
                                l8900 2002                                  l8820 3CFC  
                                l8812 3C56                                  l8804 3C10  
                                l9540 605A                                  l9372 0F4E  
                                l9364 0F42                                  l9348 0EFC  
                                l9356 0F08                                  l9292 0D14  
                                l9284 0D0A                                  l9276 0CF4  
                                l9268 0C60                                  l9196 0B70  
                                l9188 0B64                                  l8652 42EC  
                                l8644 42E2                                  l8636 42A0  
                                l8628 425C                                  l8580 4216  
                                l8572 420A                                  l8564 41FA  
                                l8556 41EC                                  l8548 41E2  
                                l9620 0FB2                                  l9612 0F54  
                                l9444 5678                                  l9436 5628  
                                l9604 615A                                  l9428 5A72  
                                l9700 011E                                  l9452 4EA4  
                                l8670 6430                                  l8750 57B8  
                                l8742 5784                                  l8734 5758  
                                l8494 2F62                                  l8486 2F56  
                                l8478 2F46                                  l8398 2E8E  
                                l9534 5396                                  l9470 5304  
                                l9462 52F8                                  l8718 5202  
                                l8910 200E                                  l8902 2004  
                                l8822 3D20                                  l8830 3D4E  
                                l8814 3C7A                                  l8806 3C1E  
                                l9542 606C                                  l8662 53AE  
                                l9374 0F50                                  l9366 0F44  
                                l9358 0F24                                  l9286 0D0C  
                                l9278 0D00                                  l9294 0D18  
                                l9198 0B72                                  l8654 430E  
                                l8646 42E4                                  l8638 42A6  
                                l8590 4226                                  l8582 4218  
                                l8574 420C                                  l8566 41FC  
                                l8558 41F2                                  l9630 10F2  
                                l9622 0FE6                                  l9614 0F5E  
                                l9438 563C                                  l9606 6176  
                                l9390 5DE6                                  l9710 0286  
                                l9702 015C                                  l9454 4EC4  
                                l9446 4E28                                  l8672 6440  
                                l8760 57E4                                  l8752 57C0  
                                l8744 578C                                  l8736 575C  
                                l8728 573E                                  l8496 2F64  
                                l8488 2F58                                  l9528 5378  
                                l9480 5316                                  l9472 5306  
                                l9464 52FA                                  l8680 6372  
                                l8920 201A                                  l8912 2010  
                                l8904 2006                                  l8832 3D5C  
                                l8824 3D2E                                  l8816 3CC4  
                                l8808 3C2E                                  l9544 6074  
                                l8664 5422                                  l9368 0F46  
                                l9296 0D2E                                  l9288 0D10  
                                l8656 4316                                  l8648 42E6  
                                l8592 4228                                  l8584 421E  
                                l8576 4212                                  l8568 4202  
                                l9640 128A                                  l9632 1106  
                                l9624 1016                                  l9616 0F6E  
                                l9560 49DC                                  l9552 4990  
                                l9536 6330                                  l9800 229E  
                                l9608 617C                                  l9392 5DFA  
                                l9720 03D6                                  l9712 02CE  
                                l9704 01B2                                  l9456 4ED8  
                                l9448 4E3A                                  l8674 641A  
                                l8754 57C6                                  l8746 5794  
                                l8738 576A                                  l8498 2F66  
                                l9490 5328                                  l9482 531C  
                                l9474 530C                                  l9466 52FC  
                                l9458 52EC                                  l8690 5180  
                                l8930 2048                                  l8922 201E  
                                l8914 2012                                  l8906 200A  
                                l8850 1E5E                                  l8826 3D42  
                                l9546 607C                                  l8666 5462  
                                l8770 5CFA                                  l9298 0D6C  
                                l8658 431A                                  l8594 422E  
                                l8586 4220                                  l8578 4214  
                                l9650 1380                                  l9642 1292  
                                l9634 1182                                  l9626 1090  
                                l9618 0F9E                                  l9570 4A40  
                                l9562 49F0                                  l9554 49A0  
                                l9538 6340                                  l9810 24B0  
                                l9802 2308                                  l9394 5E00  
                                l9386 5DC2                                  l9730 0520  
                                l9722 042C                                  l9714 0314  
                                l9706 01F8                         ??_Paddle_draw 0027  
                                l8676 642A                                  l8748 57A2  
                                l8756 57CC                                  l9492 532A  
                                l9484 531E                                  l9476 530E  
                                l9468 52FE                                  l8692 5184  
                                l8684 5166                                  l8940 2054  
                                l8932 204A                                  l8924 2020  
                                l8916 2016                                  l8908 200C  
                                l8860 1EBC                                  l8852 1E60  
                                l8844 1DB6                                  l8836 3D68  
                                l9548 6098                                  l9820 4F68  
                                l8780 5D34                                  l8772 5D02  
                                l8764 5CD8                                  l8596 4230  
                                l8588 4222                                  l9652 13CC  
                                l9644 12EC                                  l9636 11FA  
                                l9628 10BA                                  l9660 45B8  
                                l9572 4A54                                  l9564 4A04  
                                l9556 49B4                                  l9580 4B8E  
                                l9812 251A                                  l9804 2372  
                                l9900 1A5C                                  l9388 5DC8  
                                l9740 0682                                  l9732 0566  
                                l9716 0348                                  l9708 0240  
                                l9724 0436                                  l8758 57DC  
                                l9494 5330                                  l9486 5324  
                                l9478 5314                                  l8694 5192  
                                l8686 516A                                  l8678 6356  
                                l8950 2060                                  l8942 2058  
                                l8934 204C                                  l8926 2022  
                                l8918 2018                                  l8870 1FC6  
                                l8862 1EDA                                  l8854 1E88  
                                l8846 1DC2                                  l8838 3D8C  
                                l8782 5D36                                  l8774 5D10  
                                l8766 5CE0                                  l8790 5E3E  
                                l8598 4236                                  l9646 1348  
                                l9654 1434                                  l9638 121A  
                                l9662 45CC                                  l9830 5BDA  
                                l9822 5B76                                  l9574 4A68  
                                l9566 4A18                                  l9558 49C8  
                                l9590 4BF2                                  l9582 4BA2  
                                l9814 2584                                  l9806 23DC  
                                l9910 1AF8                                  l9902 1A80  
                                l9398 5E06                                  l9742 06B6  
                                l9734 05AE                                  l9726 048C  
                                l9750 07A4                                  l9718 038E  
                                l9670 4C6C                                  l9496 5332  
                                l9488 5326                                  l8696 519A  
                                l8688 5178                                  l8960 211E  
                                l8952 2068                                  l8944 205A  
                                l8936 2050                                  l8928 2044  
                                l8880 1FD2                                  l8872 1FC8  
                                l8864 1F1C                                  l8856 1E98  
                                l8848 1E10                                  l9816 4F02  
                                l8784 5D3C                                  l8776 5D16  
                                l8768 5CF2                                  l8792 5E46  
                                l9648 134A                                  l9664 4600  
                                l9656 4578                                  l9840 5B64  
                                l9832 5AF4                                  l9824 5B80  
                                l9576 4A78                                  l9568 4A2C  
                                l9592 4C06                                  l9584 4BB6  
                                l9808 2446                                  l9920 1BA0  
                                l9912 1B1C                                  l9904 1A98  
                                l9760 08E8                                  l9752 07D6  
                                l9744 06FC                                  l9736 05F4  
                                l9728 04CA                                  l9672 4C8A  
                                l9770 408C                                  l9498 5338  
                                l8698 519E                                  l8970 213A  
                                l8962 212E                                  l8954 209E  
                                l8946 205C                                  l8938 2052  
                                l8890 1FDE                                  l8882 1FD4  
                                l8874 1FCA                                  l8866 1F76  
                                l8858 1EAA                                  l9818 4F2C  
                                l8778 5D2C                                  l8794 5E54  
                                l8786 5E24                                  l9850 5706  
                                l9842 568E                                  l9666 463C  
                                l9658 4588                                  l9834 5AFE  
                                l9826 5BB6                                  l9594 4C1A  
                                l9586 4BCA                                  l9578 4B7E  
                                l9930 1C3C                                  l9922 1BB8  
                                l9914 1B40                                  l9906 1ABC  
                                l9762 08EC                                  l9754 083C  
                                l9746 0744                                  l9738 063C  
                                l9682 4CD6                                  l9772 411C  
                                l9780 43B8                                  l8980 214A  
                                l8972 213C                                  l8964 2132  
                                l8956 20A6                                  l8948 205E  
                                l8892 1FF6                                  l8884 1FD6  
                                l8876 1FCC                                  l8868 1FC2  
                                l8796 5E6A                                  l8788 5E36  
                                l9844 569A                                  l9668 4678  
                                l9836 5B34                                  l9828 5BC8  
                                l9596 4C2E                                  l9588 4BDE  
                                l9852 4D4A                                  l9940 1CD8  
                                l9932 1C60                                  l9924 1BDC  
                                l9916 1B58                                  l9908 1AE0  
                                l9764 093A                                  l9756 08CA  
                                l9748 079A                                  l9676 4C90  
                                l9774 4138                                  l8990 2166  
                                l8966 2134                                  l8974 2142  
                                l8958 20F6                                  l8894 1FFA  
                                l8886 1FDA                                  l8878 1FCE  
                                l8798 5E72                                  l9846 56AC  
                                l9838 5B46                                  l9598 4C42  
                                l9790 223A                                  l9782 2200  
                                l9870 4DDA                                  l9854 4D68  
                                l9950 1D80                                  l9942 1CFC  
                                l9934 1C78                                  l9926 1C00  
                                l9918 1B7C                                  l9766 0944  
                                l9758 08D4                                  l9694 4D46  
                 __end_of_XF_popEvent 5FAE                                  STR_1 7FB6  
                                l9776 4324                                  l8992 216A  
                                l8976 2146                                  l8968 2136  
                                l8896 1FFC                                  l8888 1FDC  
                                l9848 56CC                                  l9792 224E  
                                l9784 2210                                  l9864 4DB4  
                                l9944 1D20                                  l9936 1C9C  
                                l9928 1C18                                  l9952 1D98  
                                l9880 1918                                  l9768 0958  
                                l9960 6308                                  l9688 4CFC  
                                STR_2 7FEE                                  STR_3 7FEE  
                                l9778 439C                                  l8978 2148  
                                l8986 2152                                  l8898 1FFE  
                                l9794 225E                                  l9786 2212  
                                l9858 4D6E                                  l9946 1D38  
                                l9938 1CC0                                  l9890 19C0  
                                l9882 193C                                  l9698 00C8  
                                l9954 4A8A                                  l9962 6402  
                                l9970 63B4                                  STR_4 7FAB  
                                STR_5 7FC9                                  l8996 217E  
                                l8988 2154                                  l9796 226E  
                                l9788 2226                                  l9876 4E24  
                                l9948 1D5C                                  l9892 19D8  
                                l9884 1960                                  l9956 4AD2  
                                l9964 63EC                                  l9980 60BE  
                                l9972 63B6                                  STR_6 7FD2  
                                STR_7 7FE3                                  l8998 2182  
                                l9798 2286                                  l9894 19FC  
                                l9886 1978                                  l9958 4B46  
                                l9990 5C64                                  l9982 60D0  
                                l9974 63B8                                  l9966 63A2  
                                STR_8 7FF7                                  STR_9 7FFB  
                                l9896 1A20                                  l9888 199C  
                                l9992 5C6A                                  l9984 60D4  
                                l9976 63BA                                  l9968 63B0  
                                l9898 1A38                                  l9986 60E4  
                                l9978 60AE                                  l9988 60F6  
                                l9998 5C6E                         ??_Paddle_init 0016  
                                u2300 5998                                  u2301 5994  
                                u2310 59DC                                  u2311 59D8  
                                u2450 3322                                  u2451 331E  
                                u6000 2F02                                  u6001 2EFE  
                                u6010 2F9C                                  u6011 2F98  
                                u6020 300A                                  u6100 5192  
                                u6021 3006                                  u6101 518E  
                                u6110 51B8                                  u6111 51B4  
                                u6200 57DC                                  u6120 51D6  
                                u7000 193C                                  u6201 57D8  
                                u6121 51D2                                  u7001 1938  
                                u6130 51F2                                  u6210 5CF2  
                                u7010 1960                                  u6131 51EE  
                                u6211 5CEE                                  u6035 4288  
                                u7011 195C                                  u6140 5218  
                                u6300 3D20                                  u6220 5D10  
                                u7100 1B1C                                  u7020 199C  
                                u6141 5214                                  u6301 3D1C  
                                u6221 5D0C                                  u6045 42CE  
                                u7101 1B18                                  u7021 1998  
                                u6070 6440                                  u6150 5750  
                                u6310 1E08                                  u6230 5D2C  
                                u7110 1B40                                  u7030 19C0  
                                u6071 643C                                  u6151 574C  
                                u6055 542C                                  u6231 5D28  
                                u7111 1B3C                                  u7031 19BC  
                                u6080 642A                                  u6160 576A  
                                u6400 21B2                                  u6320 1E88  
                                u5600 61D0                                  u6240 5E36  
                                u8000 48F0                                  u7200 1CFC  
                                u7120 1B7C                                  u7040 19FC  
                                u6081 6426                                  u6161 5766  
                                u6401 21AE                                  u6321 1E84  
                                u5601 61CC                                  u6065 5442  
                                u6241 5E32                                  u8001 48EC  
                                u7201 1CF8                                  u7121 1B78  
                                u7041 19F8                                  u6170 5784  
                                u6090 5178                                  u6410 21EE  
                                u6330 1E98                                  u5610 3DB2  
                                u6250 5E54                                  u8010 491A  
                                u7210 1D20                                  u7130 1BA0  
                                u7050 1A20                                  u6171 5780  
                                u6091 5174                                  u6331 1E94  
                                u5611 3DAE                                  u6251 5E50  
                                u8011 4916                                  u7211 1D1C  
                                u7131 1B9C                                  u7051 1A1C  
                                u6180 57A2                                  u6420 21FE  
                                u6340 1EBC                                  u5620 3DE4  
                                u5700 3FAA                                  u5540 4FE6  
                                u6260 5E6A                                  u6500 0A7A  
                                u7300 47C2                                  u8020 4934  
                                u7220 1D5C                                  u7140 1BDC  
                                u7060 1A5C                                  u6181 579E  
                                u6421 21FA                                  u6341 1EB8  
                                u6317 1DFE                                  u5621 3DE0  
                                u5701 3FA6                                  u5541 4FE2  
                                u6261 5E66                                  u6501 0A76  
                                u7301 47BE                                  u8021 4930  
                                u7221 1D58                                  u7141 1BD8  
                                u7061 1A58                                  u6190 57B8  
                                u6350 1F14                                  u5710 3FD4  
                                u5550 4FF8                                  u6270 3C10  
                                u6510 0BA4                                  u6430 1460  
                                u7310 47E6                                  u8030 494E  
                                u7230 1D80                                  u7150 1C00  
                                u7070 1A80                                  u6191 57B4  
                                u5631 3E0E                                  u5711 3FD0  
                                u5551 4FF4                                  u6271 3C0C  
                                u6511 0BA0                                  u6431 145C  
                                u7311 47E2                                  u8031 494A  
                                u7231 1D7C                                  u7151 1BFC  
                                u7071 1A7C                                  u5640 3E32  
                                u5720 4002                                  u5560 5020  
                                u5800 3040                                  u6280 3C56  
                                u6520 0BF2                                  u6440 16DA  
                                u7320 480A                                  u7160 1C3C  
                                u7080 1ABC                                  u6600 5DFA  
                                u7240 4AD2                                  u7400 2BA4  
                                u8040 50C6                                  u6417 21E4  
                                u5641 3E2E                                  u5721 3FFE  
                                u5561 501C                                  u6281 3C52  
                                u6521 0BEE                                  u6441 16D6  
                                u7321 4806                                  u7161 1C38  
                                u7081 1AB8                                  u6601 5DF6  
                                u7241 4ACE                                  u7401 2BA0  
                                u8041 50C2                                  u6370 212E  
                                u5650 3E5C                                  u5730 404A  
                                u5570 5056                                  u5810 3056  
                                u6290 3C7A                                  u6610 5F44  
                                u6530 0C44                                  u6450 38A6  
                                u7330 482E                                  u7170 1C60  
                                u7090 1AE0                                  u7250 4B46  
                                u7410 2BE2                                  u8050 50DC  
                                u6371 212A                                  u5651 3E58  
                                u5731 4046                                  u5571 5052  
                                u5811 3052                                  u6291 3C76  
                                u6611 5F40                                  u6531 0C40  
                                u6451 38A2                                  u7331 482A  
                                u7171 1C5C                                  u7091 1ADC  
                                u7251 4B42                                  u7411 2BDE  
                                u8051 50D8                                  u8107 596A  
                                u5580 612C                                  u6380 2166  
                                u6364 2112                                  u5660 3E9C  
                                u5740 5238                                  u5900 3268  
                                u5820 3084                                  u6540 0CA0  
                                u6460 3936                                  u6700 10BA  
                                u6620 5618                                  u7180 1C9C  
                                u7420 2C70                                  u7340 29CA  
                                u8060 5106                                  u7500 2706  
                                u7260 60BE                                  u6381 2162  
                                u6365 210C                                  u6357 1F0A  
                                u5661 3E98                                  u5741 5234  
                                u5901 3264                                  u5821 3080  
                                u6541 0C9C                                  u6461 3932  
                                u6701 10B6                                  u6621 5614  
                                u7181 1C98                                  u7421 2C6C  
                                u7341 29C6                                  u8061 5102  
                                u7501 2702                                  u7261 60BA  
                                u8117 59AE                                  u5590 613C  
                                u6390 217A                                  u5670 3EE6  
                                u5750 525A                                  u5910 327A  
                                u5830 30A0                                  u6550 0D2E  
                                u6470 0A00                                  u6710 10F2  
                                u7190 1CC0                                  u6630 4E3A  
                                u7350 2A28                                  u7510 277C  
                                u7430 25FE                                  u7270 60E4  
                                u8070 5FC8                                  u5591 6138  
                                u6391 2176                                  u5671 3EE2  
                                u5751 5256                                  u5911 3276  
                                u5831 309C                                  u6551 0D2A  
                                u6471 09FC                                  u6711 10EE  
                                u7191 1CBC                                  u6631 4E36  
                                u7351 2A24                                  u7511 2778  
                                u7431 25FA                                  u7271 60E0  
                                u8071 5FC4                                  u5680 3F3A  
                                u5760 52B0                                  u5920 3288  
                                u5840 30CE                                  u6560 0E16  
                                u6480 0A32                                  u6720 1380  
                                u6800 01F8                                  u6640 4E90  
                                u7360 2A86                                  u7280 5C8E  
                                u7600 2896                                  u7520 279E  
                                u7440 2610                                  u5681 3F36  
                                u5761 52AC                                  u5921 3284  
                                u5841 30CA                                  u6561 0E12  
                                u6481 0A2E                                  u6721 137C  
                                u6801 01F4                                  u6641 4E8C  
                                u7361 2A82                                  u7281 5C8A  
                                u7601 2892                                  u7521 279A  
                                u7441 260C                                  u5690 3F6C  
                                u5770 52BE                                  u5930 32A0  
                                u5850 30DC                                  u6570 0E26  
                                u6490 0A58                                  u6810 0286  
                                u6730 4C8A                                  u6650 4EC4  
                                u7370 2AE8                                  u7290 5CD0  
                                u7610 28AA                                  u7530 27C8  
                                u7450 2620                                  u5587 6122  
                                u5691 3F68                                  u5771 52BA  
                                u5931 329C                                  u5851 30D8  
                                u6571 0E22                                  u6491 0A54  
                                u6811 0282                                  u6731 4C86  
                                u6651 4EC0                                  u7371 2AE4  
                                u7291 5CCC                                  u7611 28A6  
                                u7531 27C4                                  u7451 261C  
                                u5940 2CF0                                  u6660 5392  
                                u5780 61EC                                  u5860 3208  
                                u6580 0F24                                  u6900 06FC  
                                u6820 0314                                  u6740 4CD2  
                                u7380 2B58                                  u7620 28C4  
                                u7540 27EC                                  u7460 2664  
                                u7700 473A                                  u5941 2CEC  
                                u6661 538E                                  u5781 61E8  
                                u5861 3204                                  u6581 0F20  
                                u6901 06F8                                  u6821 0310  
                                u6741 4CCE                                  u7381 2B54  
                                u7621 28C0                                  u7541 27E8  
                                u7461 2660                                  u7701 4736  
                                u5950 2D1E                                  u6670 53AC  
                                u5870 3226                                  u5790 303E  
                                u6590 0F3E                                  u6910 07D6  
                                u6830 038E                                  u6750 4CF8  
                                u7390 2B82                                  u7630 290C  
                                u7550 2802                                  u7470 2676  
                                u7710 475A                                  u5951 2D1A  
                                u6671 53A8                                  u5871 3222  
                                u5791 3038                                  u6591 0F3A  
                                u6911 07D2                                  u6831 038A  
                                u6751 4CF4                                  u7391 2B7E  
                                u7631 2908                                  u7551 27FE  
                                u7471 2672                                  u7711 4756  
                                u8087 547E                                  u5960 2D46  
                                u5880 3240                                  u6680 6176  
                                u6920 083C                                  u6840 048C  
                                u6760 4D42                                  u7640 293C  
                                u7560 2820                                  u7480 2686  
                                u7720 476A                                  u7800 3B90  
                                u5961 2D42                                  u5881 323C  
                                u6681 6172                                  u6921 0838  
                                u6841 0488                                  u6761 4D3E  
                                u7641 2938                                  u7561 281C  
                                u7481 2682                                  u7721 4766  
                                u7801 3B8C                                  u8097 3308  
                                u5970 2DEC                                  u5890 325A  
                                u6690 1016                                  u6930 08CA  
                                u6850 04CA                                  u6770 011E  
                                u7650 296A                                  u7570 2840  
                                u7490 26C6                                  u7810 3BCA  
                                u7730 3A4A                                  u5971 2DE8  
                                u5891 3256                                  u6691 1012  
                                u6931 08C6                                  u6851 04C6  
                                u6771 011A                                  u7651 2966  
                                u7571 283C                                  u7491 26C2  
                                u7811 3BC6                                  u7731 3A46  
                                u7900 5F6A                                  u5980 2E06  
                                u6940 093A                                  u6860 0520  
                                u6780 015C                                  u7580 2852  
                                u7660 469C                                  u7820 3BD8  
                                u7740 3A58                                  u7901 5F66  
                                u5981 2E02                                  u6941 0936  
                                u6861 051C                                  u6781 0158  
                                u7581 284E                                  u7661 4698  
                                u7821 3BD4                                  u7741 3A54  
                                _RBPU 007F8F                                  u5990 2EA4  
                                u6950 56CC                                  u6870 0566  
                                u6790 01B2                                  u7910 58B6  
                                u7590 2880                                  u7670 46D0  
                                u7750 3AB4                                  u7830 35B8  
                                u5991 2EA0                                  u6951 56C8  
                                u6871 0562                                  u6791 01AE  
                                u7911 58B2                                  u7591 287C  
                                u7751 3AB0                                  u7831 35B4  
                                u6960 4D68                                  u6880 05F4  
                                u7920 58D4                                  u7680 46FE  
                                u7760 3B0A                                  u7840 35E2  
                                u6961 4D64                                  u6881 05F0  
                                u7921 58D0                                  u7681 46FA  
                                u7761 3B06                                  u7841 35DE  
                                u6970 4DB0                                  u6890 0682  
                                u7930 58EC                                  u7690 4712  
                                u7770 3B54                                  u7850 367A  
                                u6971 4DAC                                  u6891 067E  
                                u7931 58E8                                  u7691 470E  
                                u7675 46C6                                  u7771 3B50  
                                u7851 3676                                  u6980 4DD6  
                                u7940 5906                                  u7780 3B72  
                                u7860 36A4                                  u6981 4DD2  
                                u7941 5902                                  u7781 3B6E  
                                u7861 36A0                                  u6990 4E20  
                                u7790 3B82                                  u7870 3700  
                                u7950 59F6                                  u6991 4E1C  
                                u7791 3B7E                                  u7871 36FC  
                                u7951 59F2                                  u7960 5A1C  
                                u7880 555E                                  u7961 5A18  
                                u7881 555A                                  u7970 5A40  
                                u7890 55D2                                  u7971 5A3C  
                                u7891 55CE                                  u7980 48AA  
                                u7981 48A6                                  u7990 48BC  
                                u7991 48B8                                  _WPUB 000F61  
                         displaySM@ev 00A7                           LCD_Bitmap@i 007A  
                                abs@a 0024                                  _dbuf 00E0  
                     ?_checkCollision 001B             __size_of_LCD_SliderCreate 00EE  
                                _main 6470                                  _dtoa 300C  
                    _XF_scheduleTimer 5C64                                  _prec 0049  
                                _nout 00DB                                  pad@i 0029  
                                pad@p 0026                                  fsr1h 000FE2  
                                fsr2h 000FDA                                  indf1 000FE7  
                                indf2 000FDF                                  fsr1l 000FE1  
                                pad@w 002B                                  fsr2l 000FD9  
                                btemp 004E                      Menu_inGameDraw@g 0092  
                      touchScreenSM@g 00B0                                  prodh 000FF4  
                                prodl 000FF3      __end_of_arialNarrow_12ptFontInfo 7F86  
                                start 00C4                           RGB2LCD@blue 001C  
              __end_of_LCD_ButtonDraw 1442             __size_of_LCD_SliderUpdate 04D6  
                     ___fldiv@new_exp 0031                        _LCD_SliderDraw 4578  
                  LCD_InSlider@slider 0012                       __end_of_XF_init 55DE  
                        ___param_bank 000000                LCD_ButtonCreate@height 0018  
                  XF_scheduleTimer@ev 0015                    XF_scheduleTimer@tm 0013  
              LCD_ButtonCreate@button 0028                                 ??_abs 0026  
                               ??_pad 0028                                 ??_isr 000E  
                    __end_of_LCD_Fill 53AE                        ??_LCD_InButton 0018  
                    __end_of_LCD_Init 3596                      __end_of_LCD_Read 4324  
                      ??_LCD_InSlider 0018                        ??_LCD_DrawRect 001D  
         LCD_SliderCreate@cursorWidth 0020                                 l10000 5C8E  
                               l10010 478C                                 l10002 5CBE  
                               l10020 47D2                                 l10012 4790  
                               l10004 5CC0                                 l10100 2610  
                               l10030 482E                                 l10022 47E6  
                               l10014 47A0                                 l10006 5CD0  
                               l10110 264A                                 l10102 2620  
                               l10032 4842                                 l10024 47F6  
                               l10016 47B0                                 l10200 28B6  
                               l10120 2676                                 l10112 2650  
                               l10104 2630                                 l10026 480A  
                               l10018 47C2                                 l10050 2A86  
                               l10042 297E                                 l10210 2922  
                               l10202 28C4                                 l10130 26B0  
                               l10122 2686                                 l10114 2656  
                               l10106 2632                                 l10028 481A  
                               l10036 4852                                 l10060 2B58  
                               l10052 2AA0                                 l10044 2982  
                               l10220 2970                                 l10212 293C  
                               l10204 28EE                                 l10132 26C6  
                               l10124 2696                                 l10116 2664  
                               l10108 263A                                 l10300 3B64  
                               l10070 2BB0                                 l10062 2B72  
                               l10054 2AE8                                 l10046 29CA  
                               l10222 2972                                 l10214 2958  
                               l10206 28F2                                 l10150 271A  
                               l10134 26D6                                 l10142 26F6  
                               l10126 2698                                 l10118 2666  
                               l10230 4686                                 l10310 3BBA  
                               l10302 3B72                                 l10320 6004  
                               l10080 2C70                                 l10072 2BE2  
                               l10064 2B82                                 l10056 2B04  
                               l10048 2A28                                 l10216 295C  
                               l10208 290C                                 l10160 276C  
                               l10152 2734                                 l10144 2706  
                               l10136 26DE                                 l10128 26A0  
                               l10240 46DC                                 l10232 469C  
                               l10312 3BCA                                 l10304 3B90  
                               l10322 6010                                 l10082 2C86  
                               l10074 2BFA                                 l10066 2B92  
                               l10058 2B10                                 l10218 296A  
                               l10170 27C8                                 l10162 277C  
                               l10154 2744                                 l10146 2706  
                               l10138 26E2                                 l10242 46EC  
                               l10314 3BD8                                 l10306 3B92  
                               l10330 63BE                                 l10324 6022  
                               l10076 2C1A                                 l10068 2BA4  
                               l10180 2808                                 l10172 27CA  
                               l10164 2790                                 l10156 2754  
                               l10092 25E4                                 l10252 4716  
                               l10244 46F0                                 l10236 46B0  
                               l10316 3BDA                                 l10308 3B96  
                               l10500 59E2                                 l10412 552E  
                               l10332 63C4                                 l10340 6486  
                               l10326 6034                                 l10078 2C28  
                               l10086 2C8E                                 l10342 624E  
                               l10190 2844                                 l10182 2812  
                               l10174 27DA                                 l10166 279E  
                               l10158 2764                                 l10094 25F0  
                               l10270 477A                                 l10262 473E  
                               l10254 4720                                 l10246 46FE  
                               l10238 46DA                                 l10510 5A1C  
                               l10502 59E6                                 l10430 55D2  
                               l10414 553E                                 l10406 5526  
                               l10334 63D6                                 l10328 6046  
                               l10600 5122                                 l10192 2852  
                               l10184 2820                                 l10176 27EC  
                               l10168 27AA                                 l10096 25FE  
                               l10264 474A                                 l10256 472A  
                               l10280 3A9E                                 l10360 35E2  
                               l10352 3596                                 l10512 5A20  
                               l10504 59F6                                 l10520 5A44  
                               l10424 5566                                 l10416 5542  
                               l10336 63DA                                 l10440 6302  
                               l10432 62E0                                 l10450 5F70  
                               l10442 5F50                                 l10530 48AA  
                               l10346 624E                                 l10194 2880  
                               l10178 2802                                 l10186 2832  
                               l10098 2600                                 l10266 475A  
                               l10290 3ADC                                 l10282 3AB4  
                               l10274 3A3A                                 l10370 36A4  
                               l10362 35EA                                 l10354 359A  
                               l10514 5A2C                                 l10506 59FA  
                               l10426 55B2                                 l10418 555E  
                               l10338 6480                                 l10434 62E6  
                               l10610 5472                                 l10460 5FAA  
                               l10444 5F50                                 l10540 48F0  
                               l10532 48BC                                 l10188 2840  
                               l10268 476A                                 l10292 3B0E  
                               l10276 3A4A                                 l10380 36EE  
                               l10372 36AC                                 l10364 3654  
                               l10356 35A4                                 l10508 5A0A  
                               l10428 55B6                                 l10436 62F2  
                               l10620 54D4                                 l10612 548C  
                               l10454 5F76                                 l10446 5F56  
                               l10550 4922                                 l10542 48F4  
                               l10534 48C0                                 l10526 4894  
                               l10470 58BA                                 l10198 28AA  
                               l10294 3B10                                 l10286 3AC8  
                               l10278 3A58                                 l10390 3754  
                               l10382 36F0                                 l10374 36D2  
                               l10366 3666                                 l10358 35B8  
                               l10438 62FE                                 l10630 54E2  
                               l10622 54D6                                 l10614 5490  
                               l10606 546C                                 l10456 5F86  
                               l10448 5F6A                                 l10552 4934  
                               l10544 4908                                 l10536 48CC  
                               l10528 4898                                 l10480 58EC  
                               l10472 58C2                                 l10464 58A0  
                               l10296 3B1C                                 l10288 3AD0  
                               l10392 3768                                 l10384 36F2  
                               l10376 36E6                                 l10368 367A  
                               l10640 54F4                                 l10632 54E6  
                               l10624 54D8                                 l10616 549C  
                               l10608 546E                                 l10458 5FA4  
                               l10546 491A                                 l10538 48DC  
                               l10474 58D4                                 l10466 58A4  
                               l10298 3B58                                 l10394 3786  
                               l10386 3700                                 l10378 36EA  
                               l10650 5500                                 l10642 54F6  
                               l10634 54E8                                 l10626 54DA  
                               l10618 54D2                                 l10580 50CA  
                               l10572 50A0                                 l10900 6264  
                               l10484 58F6                                 l10476 58D8  
                               l10468 58B6                                 l10492 590A  
                               l10388 371E                                 l10660 5FAE  
                               l10652 5502                                 l10644 54FA  
                               l10636 54EA                                 l10628 54DE  
                               l10910 0E7C                                 l10558 493C  
                               l10566 4952                                 l10902 5136  
                               l10590 50F4                                 l10582 50DC  
                               l10574 50A4                                 l10478 58DC  
                               l10398 37D4                                 l10670 5FF2  
                               l10662 5FB8                                 l10654 5506  
                               l10646 54FC                                 l10638 54EC  
                      ??_LCD_DrawText 002D                                 l10904 2CA2  
                               l10592 5106                                 l10576 50B4  
                               l10664 5FC8                                 l10656 550A  
                               l10648 54FE                                 l10672 6470  
                               l10906 4968                                 l10594 510E  
                               l10578 50C6                                 l10666 5FCE  
                               l10658 5516                                 l10908 4868  
                               l10588 50E4                                 l10668 5FE0  
                               l10894 5A5A                                 l10896 37EA  
                               l10898 5920                         ___fltol@sign1 0041  
                     __end_of___aodiv 3F28                                 ?_main 0001  
                               ?_dtoa 002D                       __end_of___aomod 408C  
                     LCD_ButtonDraw@i 0099                       __end_of___fldiv 297E  
                     __end_of___awdiv 522A                                 STR_10 7FC0  
                               STR_11 7FDB                                 STR_12 7FA0  
                               STR_13 7F93                                 STR_14 7F86  
                               STR_15 7FEB                                 STR_16 7FF1  
                     __end_of___awmod 57EE                                 _ANSB1 0079C9  
                               _ANSB2 0079CA                       __end_of___fltol 478C  
                               _T0CON 000FD5                       ___awdiv@divisor 0014  
                               _LATB1 007C51                                 _LATC0 007C58  
                               _LATB2 007C52                                 _LATB3 007C53  
                               _LATC2 007C5A                                 _LATB4 007C54  
                               _LATC3 007C5B                                 _LATC4 007C5C  
                               _LATC5 007C5D                       __end_of___lwdiv 5D4C  
                     __end_of___lwmod 5E88                                 i2l803 0056  
                               i2l750 624C                                 i2l807 00B0  
                               i2l737 5EEA                                 i2l818 63A0  
                               i2l763 646E                                 i2l747 5DBE  
                               i2l767 6458                                 i2l759 4576  
                     ___awdiv@counter 0016                                 _PLLEN 007CDE  
                        vfpfcnvrt@fmt 0041                                 _TMR0H 000FD7  
                               _TMR0L 000FD6                                 _PORTA 000F80  
                     ??_configMeasure 0012                                 _TRISA 000F92  
                 LCD_Bitmap@bfOffBits 0060                          LCD_Fill@page 0018  
                               _flags 004B                          displayInit@g 00A3  
                               _fputc 4FD4                                 _theXF 00B5  
                               _fputs 618E                LCD_ButtonDraw@tempChar 008A  
                 __size_of_LCD_Bitmap 05F6                                 pad@fp 0022  
                               _width 0047                                 _putch 648C  
                               dtoa@d 002F                                 dtoa@i 0070  
                               dtoa@n 0068                                 dtoa@p 0062  
                               dtoa@s 0066                                 dtoa@w 0064  
          __end_ofi2_XF_scheduleTimer 5DC0                  __end_of_XF_pushEvent 5E24  
                     __end_of_sleepSM 5940                          Paddle_addX@p 0012  
                               tablat 000FF5            ??_gameControllerController 003A  
                     touchScreenSM@ev 00B4                      __end_ofi2___wmul 63A2  
                               plusw2 000FDB           ?_XF_decrementAndQueueTimers 0001  
                               ttemp5 004F                                 ttemp6 0052  
                               ttemp7 0056                                 status 000FD8  
                               wtemp8 004F                          Paddle_draw@p 0025  
                     __end_of_sprintf 60AC                          RGB2LCD@color 001E  
                        RGB2LCD@green 001A                __end_of_LCD_SliderDraw 4686  
                       ?_Menu_endGame 009C                          Paddle_init@p 0012  
            __size_of_touchScreenInit 000C               LCD_ButtonCreate@bgColor 001C  
                  __size_ofi2___awmod 00B0                   __end_of_Paddle_addX 4F02  
                     ?_LCD_ButtonDraw 007C                     ?_gameControllerSM 003C  
                 __end_of_Paddle_draw 4456                         _touchScreenSM 59DE  
                 __end_of_Paddle_init 568E                    __size_of_Ball_draw 0156  
                        LCD_Read@posX 0012                          LCD_Read@posY 0014  
                  __size_of_Ball_init 0076                       __initialization 6284  
                  ??_gameControllerSM 003E                          __end_of_main 6480  
                        __end_of_dtoa 32EE               LCD_ButtonCreate@fpPress 0022  
              touchScreenController@g 0090                touchScreenController@s 0098  
                    ?_sleepController 0001                      i2XF_pushEvent@ev 0008  
                              ??_main 0047                                ??_dtoa 0037  
                       __activetblptr 000002                             ??_RGB2LCD 0014  
                         _XF_popEvent 5F4E                                _ADCON0 000FC2  
                              _ADCON2 000FC0                      LCD_ButtonDraw@x1 008D  
                    LCD_ButtonDraw@x2 008F                      LCD_ButtonDraw@y1 0091  
                    LCD_ButtonDraw@y2 0093                                ?_fputc 0012  
                              ?_fputs 001B                                _ADRESH 000FC4  
                              _ADRESL 000FC3                                _CCPR2L 000F67  
                    ___awdiv@dividend 0012                                ?_putch 0001  
                              _INT1IE 007F83                                _INT1IF 007F80  
                  LCD_DrawRect@colorH 0021                    LCD_DrawRect@colorL 0022  
             _GameParameters_resetPos 62B6                                i2l1062 589C  
                              i2l7410 6446                                i2l7412 6456  
                              i2l7420 5808                                i2l7406 645C  
                              i2l7430 583C                                i2l7422 580C  
                              i2l7414 57EE                                i2l7408 646C  
                              i2l7440 5876                                i2l7432 5844  
                              i2l7424 581A                                i2l7416 57F2  
                              i2l7434 5852                                i2l7442 587C  
                              i2l7426 5822                                i2l7418 5800  
                              i2l7444 588C                                i2l7436 5868  
                              i2l7428 5834                                i2l7446 5894  
                              i2l7438 5870                                i2l7800 0044  
                              i2l7810 0080                                i2l7802 0048  
                              i2l7660 5E8A                                i2l7812 008E  
                              i2l7804 0064                                i2l7654 6214  
                              i2l7662 5E90                                i2l7814 00A6  
                              i2l7806 0068                                i2l7656 621A  
                              i2l7672 5ECE                                i2l7664 5EAE  
                              i2l7760 445E                                i2l7816 00AA  
                              i2l7808 0072                                i2l7658 6232  
                              i2l7674 5EDE                                i2l7666 5EC2  
                              i2l7682 637C                                i2l7762 448E  
                              i2l7770 4556                                i2l7754 4456  
                              i2l7818 00AE                                i2l7676 5EE2  
                              i2l7668 5EC8                                i2l7684 6398  
                              i2l7772 455A                                i2l7764 44E6  
                              i2l7678 5EE8                                i2l7766 4520  
                              i2l7790 5DB8                                i2l7782 5D56  
                              i2l7774 5D4C                                i2l7768 452E  
                              i2l7784 5D76                                i2l7776 5D52  
                              i2l7786 5DA6                                i2l7794 001A  
                              i2l7788 5DA8                                i2l7796 0028  
                              i2l7798 0036                                _OSCCON 000FD3  
                           ??_XF_init 0020                                _TMR0IE 007F95  
                              _TMR0IF 007F92                                _TMR2IF 007CF1  
                      ??_Menu_endGame 0042                                _TRISB1 007C99  
                              _TRISC0 007CA0                                _TRISB2 007C9A  
                              _TRISC1 007CA1                                _TRISB3 007C9B  
                              _TRISC2 007CA2                                _TRISB4 007C9C  
                              _TRISC3 007CA3                                _TRISC4 007CA4  
                              _TRISC5 007CA5                          ?_moovePaddle 001C  
                    __end_of___xxtofl 3BEC                       ?_LCD_SliderDraw 0037  
                 i2XF_pushEvent@inISR 0007                  LCD_DrawText@bg_color 002B  
                          _Score_draw 4F02                            _Score_init 6330  
                      ?_touchScreenSM 00B0                       i2_LEAVECRITICAL 6444  
               __size_of_Factory_exec 0056                 __size_of_Factory_init 00BA  
                        vfprintf@cfmt 0080                   LCD_Bitmap@jumpColor 0078  
                 LCD_Bitmap@jumpCount 0065                   _Menu_parametersDraw 5AF4  
                __size_of_configTouch 001C            __end_of_gameControllerInit 63EC  
                           ??___aodiv 0022                             ??___aomod 0022  
                              ___wmul 6356                             ??___fldiv 0028  
                           ??___awdiv 0016                             ??___awmod 0016  
                       LCD_Fill@color 0012                             ??___fltol 003D  
              LCD_ButtonUpdate@button 0025                             ??___lwdiv 0024  
                           ??___lwmod 0016            gameControllerController@ev 0039  
                LCD_DrawText@fontByte 0037          __size_of_GameParameters_init 03E4  
                              clear_0 628A                                clear_1 6296  
                              clear_2 62A2          __size_of_GameParameters_setX 0016  
        __size_of_GameParameters_setY 0016                      ___awdiv@quotient 0018  
           LCD_ButtonCreate@textOrBmp 001E                 _touchScreenController 3596  
                     ___awmod@divisor 0014                                isa$std 000001  
                     ___awmod@counter 0016                  __size_of_displayInit 0018  
                              pad@buf 0024                                dtoa@fp 002D  
                              _strlen 60FC                         LCD_DrawRect@i 0023  
                       LCD_DrawRect@j 001D                                fputc@c 0012  
                              fputs@c 001F                                fputs@i 0020  
                              fputs@s 001B          ?_GameParameters_setBackLight 0012  
                       LCD_DrawText@i 003E                     __end_ofi2___awmod 589E  
                       LCD_DrawText@x 0040                         LCD_DrawText@y 003D  
                LCD_DrawText@tempChar 003F                          __mediumconst 783A  
                              tblptrh 000FF7                             ??_sleepSM 0014  
                              tblptrl 000FF6                                tblptru 000FF8  
                   __end_of_Ball_draw 41E2                     __end_of_Ball_init 5C64  
                ?_Menu_parametersDraw 009C                   i2XF_scheduleTimer@i 0006  
                              putch@c 0001                      __end_of_vfprintf 5F4E  
                      i2___awmod@sign 0006                             ??_sprintf 0047  
            __end_of_LCD_ButtonCreate 4A8A                           _Paddle_addX 4E28  
                        _Factory_exec 5FAE                          _Factory_init 546C  
                         _Paddle_draw 4324                           _Paddle_init 55DE  
                    XF_pushEvent@temp 001A                          ___xxtofl@arg 001C  
               LCD_SliderCreate@width 0016                          ___xxtofl@exp 001B  
                        ___xxtofl@val 0012                  __end_of_LCD_InButton 4D4A  
               LCD_SliderCreate@steps 0022              __end_of_LCD_ButtonUpdate 3A38  
                          __accesstop 0060               __end_of__initialization 62A8  
                           ?_LCD_Fill 0012                      _LCD_SliderCreate 4B7E  
                           ?_LCD_Init 0001                             ?_LCD_Read 0012  
                __end_of_LCD_InSlider 4E28                  __end_of_LCD_DrawRect 300C  
                __end_of_LCD_DrawText 2200           __size_of_XF_unscheduleTimer 003C  
                     i2_ENTERCRITICAL 645A                         ___rparam_used 000001  
                          ___fltol@f1 0039                         LCD_Read@color 0018  
                    _LCD_SliderUpdate 1442                    LEAVECRITICAL@inISR 0012  
                           LCD_Init@i 0018                        __pcstackCOMRAM 0001  
                        ??_LCD_Bitmap 002D                     ??_touchScreenInit 0012  
         __end_of_backlightController 1DB6                         __end_of_fputc 509E  
                       __end_of_fputs 61D2                   gameControllerInit@g 003C  
          LCD_ButtonCreate@fpReleased 0024                         __end_of_putch 648E  
                   LCD_Bitmap@biWidth 0076                     ?_Menu_welcomeDraw 009C  
                LCD_Bitmap@endOfImage 0064              __end_of_XF_scheduleTimer 5CD8  
                           ?i2___wmul 0001                    ??_Menu_welcomeDraw 0042  
                   LCD_Bitmap@curXPos 006F   __size_of_XF_decrementAndQueueTimers 0122  
                   LCD_Bitmap@curYPos 0067                 __size_of_XF_pushEvent 0064  
               ??_Menu_parametersDraw 0045         ??_GameParameters_setBackLight 0016  
                        Ball_Update@b 0012             ??_GameParameters_resetPos 0014  
             _arialNarrow_12ptBitmaps 783B                      ??_checkCollision 001D  
                  __size_of_displaySM 0100                 __end_of_LEAVECRITICAL 642E  
                  LCD_DrawText@offset 0033                               ??_fputc 0016  
                             ??_fputs 001F                          ?_Ball_Update 0012  
                             ??_putch 0012      __end_of_gameControllerController 2CD2  
           gameControllerController@g 0037               __end_ofi2_LEAVECRITICAL 645A  
                      XF_pushEvent@ev 0019                            __pbssBANK0 00B5  
                          __pbssBANK1 0100                    __end_of_LCD_Bitmap 0F54  
                          ??_LCD_Fill 0014                            ??_LCD_Init 0017  
                          ??_LCD_Read 0016                       ??_touchScreenSM 00B2  
            LCD_ButtonCreate@txtColor 001A                           ?_Score_draw 0090  
                         ?_Score_init 0012                    ENTERCRITICAL@inISR 0012  
            __size_of_Menu_inGameDraw 0056                           Score_draw@s 0090  
                         Score_init@s 0012                               ?___wmul 001A  
              ?_touchScreenController 0090                          _XF_pushEvent 5DC0  
                  __size_of_mooveBall 0028                    __size_of_sleepInit 0028  
                             ?_strlen 0012                  __end_of_Menu_endGame 573E  
                          ??i2___wmul 0005               __size_ofi2_XF_pushEvent 0064  
                             _RGB2LCD 53AE                               _INTEDG1 007F8D  
                GameParameters_init@s 002B                             ?___xxtofl 0012  
                GameParameters_setX@s 0012                  GameParameters_setY@s 0012  
                  __size_of_vfpfcnvrt 01B4                 __end_of_ENTERCRITICAL 6444  
             __end_ofi2_ENTERCRITICAL 6470                      ??_LCD_ButtonDraw 007E  
                Menu_parametersDraw@g 009C   __end_of_arialNarrow_12ptDescriptors 7F7F  
         _arialNarrow_12ptDescriptors 7E62                               _XF_init 5526  
                 LCD_ButtonDraw@xText 0095                   LCD_ButtonDraw@yText 0097  
                 LCD_ButtonDraw@width 008B                               __Hparam 0000  
                __size_of_moovePaddle 00F4                               __Lparam 0000  
                  i2_XF_scheduleTimer 5D4C                               ___aodiv 3DA0  
                   __end_of_displaySM 4990                               ___aomod 3F28  
                             ___fldiv 25E4                               ___awdiv 5166  
                             ___awmod 573E                               ___fltol 4686  
                     __size_of___wmul 0026               LCD_ButtonUpdate@colorIn 002D  
                             ___lwdiv 5CD8                               ___lwmod 5E24  
                           ?_vfprintf 007A                        LCD_Bitmap@newY 0073  
                      LCD_Bitmap@posX 0029                        LCD_Bitmap@posY 002B  
                      LCD_Fill@colorH 0014                        LCD_Fill@colorL 0015  
                             __pcinit 6284                        LCD_Fill@column 0016  
                             __ramtop 0600                               __ptext0 6470  
                             __ptext1 546C                               __ptext2 62E0  
                             __ptext3 6480                               __ptext4 63D6  
                             __ptext5 63BE                               __ptext6 5526  
                             __ptext7 32EE                               __ptext8 5940  
                             __ptext9 5FAE                   ?i2_XF_scheduleTimer 0002  
                     __size_of_strlen 004E             __size_of_gameControllerSM 00C8  
                           _T2CONbits 000FBA                          __size_of_abs 0040  
                        __size_of_pad 00C2                          __size_of_isr 00BC  
                        ?_XF_popEvent 0001                            ??___xxtofl 0016  
                LCD_Bitmap@pixelCount 0075                   __size_of_Score_draw 00D2  
                    ___awmod@dividend 0012                   __size_of_Score_init 0026  
               LCD_DrawText@fontPixel 0038                               _sleepSM 589E  
               __end_of_configMeasure 60FC                 __size_of_LCD_InButton 00DE  
             XF_unscheduleTimer@inISR 0002                 __size_of_LCD_InSlider 00DE  
                   Menu_welcomeDraw@g 009C                 __size_of_LCD_DrawRect 033A  
                             _sprintf 605A                 __size_of_LCD_DrawText 044A  
                    ??_LCD_SliderDraw 0039                  end_of_initialization 62A8  
                    ?i2_LEAVECRITICAL 0001                   _GameParameters_init 2200  
                 _GameParameters_setX 6402                   _GameParameters_setY 63EC  
                   __end_of_mooveBall 6330                               fputc@fp 0014  
                ??i2_XF_scheduleTimer 0006                         __Lmediumconst 783A  
                             fputs@fp 001D                        Paddle_addX@add 0016  
                 i2___wmul@multiplier 0001                     __end_of_sleepInit 6308  
                 displayController@ev 00A0                     __end_of_vfpfcnvrt 3DA0  
                          _sleepState 00DF                  i2XF_scheduleTimer@ev 0004  
                i2XF_scheduleTimer@tm 0002                               postdec1 000FE5  
                             postdec2 000FDD                     _LCD_Lowlevel_Init 5940  
                             postinc0 000FEE                               postinc1 000FE6  
                             postinc2 000FDE                            ??_vfprintf 0047  
   __size_of_gameControllerController 0354                  ?_GameParameters_init 002B  
           ?_gameControllerController 0037                     ??_Menu_inGameDraw 0047  
                ?_GameParameters_setX 0012                    ?_LCD_Lowlevel_Init 0001  
                ?_GameParameters_setY 0012                               strlen@a 0014  
                             strlen@s 0012                          _LCD_InButton 4C6C  
                           _PORTBbits 000F81              __end_of_LCD_SliderCreate 4C6C  
              LCD_SliderCreate@height 0018                          _LCD_InSlider 4D4A  
                        _displayState 00DD                          _LCD_DrawRect 2CD2  
                        _LCD_DrawText 1DB6                     XF_pushEvent@inISR 0018  
            __end_of_LCD_SliderUpdate 1918                      XF_popEvent@inISR 0019  
              LCD_SliderCreate@slider 0026                   ??_LCD_Lowlevel_Init 0012  
                       ___xxtofl@sign 001A                    _gameControllerInit 63D6  
            __size_of_sleepController 0036                        Factory_exec@ev 01EF  
                         ___fldiv@grs 0033                           ___fldiv@rem 002C  
                           i2___awmod 57EE                      ?i2_ENTERCRITICAL 0001  
                   ?_LCD_ButtonCreate 0012                          ?_Paddle_addX 0012  
                        ?_Paddle_draw 0025                             _Ball_draw 408C  
                        ?_Paddle_init 0012                             _Ball_init 5BEE  
                 ?_gameControllerInit 003C                  __size_of_Ball_Update 0082  
                  ??_LCD_ButtonCreate 002B                     ?_LCD_ButtonUpdate 0025  
                     _touchScreenInit 6480                     _displayController 478C  
                         _CCP2CONbits 000F66                            displaySM@g 00A3  
                      LCD_Read@temp16 001A       __end_of_arialNarrow_12ptBitmaps 7E62  
              RGB2LCD@colorTableEntry 0012                         ??_configTouch 0012  
                  ??_LCD_ButtonUpdate 0027                     __size_of_LCD_Fill 00C2  
                   __size_of_LCD_Init 02A8                     __size_of_LCD_Read 0142  
                  ?_displayController 009E                            RGB2LCD@red 0018  
           __end_of_LCD_Lowlevel_Init 59DE                    LCD_Lowlevel_Init@i 0013  
               LCD_ButtonCreate@fpOut 0026                     XF_scheduleTimer@i 0017  
               LCD_ButtonCreate@index 002A                 LCD_ButtonCreate@width 0016  
                       ??_displayInit 0047                 __size_of_Menu_endGame 00B0  
               ??_GameParameters_init 002D                 ??_GameParameters_setX 0016  
               ??_GameParameters_setY 0016                   ??_displayController 00A1  
                         vfpfcnvrt@ap 0043                           vfpfcnvrt@fp 003F  
                         vfpfcnvrt@ll 0072                        __end_of___wmul 637C  
                ??_gameControllerInit 003E                    LCD_Bitmap@biHeight 006B  
                XF_unscheduleTimer@id 0003                        i2_XF_pushEvent 5E88  
                    i2___wmul@product 0005                     ?_XF_scheduleTimer 0013  
                      __end_of_strlen 614A                         XF_popEvent@ev 0018  
                 start_initialization 6284                     __size_ofi2___wmul 0026  
                  ??_XF_scheduleTimer 0017                           __end_of_abs 6212  
                  LCD_InButton@button 0012                           __end_of_pad 52EC  
                         __end_of_isr 00C4                 XF_scheduleTimer@inISR 0016  
                          ?i2___awmod 0001                            ?_Ball_draw 0025  
                          ?_Ball_init 0012             __end_of_displayController 4890  
           __size_of_Menu_welcomeDraw 0078            __end_of_XF_unscheduleTimer 624E  
                        ??_Score_draw 0047                     LCD_DrawRect@color 001B  
                        _Menu_endGame 568E                          ??_Score_init 0014  
                   LCD_DrawRect@posX1 0012                     LCD_DrawRect@posX2 0016  
                   LCD_DrawRect@posY1 0014                     LCD_DrawRect@posY2 0018  
                  i2XF_pushEvent@temp 0009               ??_touchScreenController 0092  
                         vfprintf@fmt 007C                              ??___wmul 001E  
                 LCD_DrawText@yOffset 0035                   __end_of_configTouch 63BE  
              __end_ofi2_XF_pushEvent 5EEC                   LCD_DrawText@posXEnd 003B  
                 LCD_DrawText@posYEnd 0039              _arialNarrow_12ptFontInfo 7F7F  
         __end_of_Menu_parametersDraw 5B76                              ??_strlen 0014  
                LCD_SliderCreate@posX 0012                  LCD_SliderCreate@posY 0014  
                    _gameControllerSM 509E                   __end_of_displayInit 63D6  
                           ___fldiv@a 0024                             ___fldiv@b 0020  
                            ?_RGB2LCD 0012          __size_of_backlightController 049E  
                         __pbssCOMRAM 0047                LCD_SliderUpdate@slider 0027  
                       Menu_endGame@g 009C           XF_decrementAndQueueTimers@i 000C  
                       __pcstackBANK0 0060                         __pcstackBANK1 01EF  
                  __end_of_Score_draw 4FD4                  LCD_SliderDraw@slider 0037  
                  __end_of_Score_init 6356                      ___aodiv@dividend 0012  
                  gameControllerSM@ev 0040               __end_of_touchScreenInit 648C  
                __size_of_XF_popEvent 0060                     __size_of___xxtofl 01B4  
                    LCD_InButton@posX 0014                      LCD_InButton@posY 0016  
                    LCD_Bitmap@bmpPtr 0027                     LCD_DrawText@align 0024  
                            ?_XF_init 0001                     LCD_DrawText@color 0029  
                   ??_sleepController 0012                      LCD_Bitmap@strPtr 0071  
        ??_XF_decrementAndQueueTimers 000A                     LCD_DrawText@width 0041  
               __end_of_touchScreenSM 5A72               LCD_Bitmap@colorTablePtr 0069  
                i2LEAVECRITICAL@inISR 0001                      LCD_SliderDraw@x1 003D  
                    LCD_SliderDraw@x2 003F                      LCD_SliderDraw@y1 0041  
                    LCD_SliderDraw@y2 0043            __size_of_LCD_Lowlevel_Init 009E  
                    ___lwdiv@dividend 0020                             _dtoa$4941 0060  
                           __pintcode 0008                         __pmediumconst 783A  
                            ?___aodiv 0012                              ?___aomod 0012  
                            ?___fldiv 0020                              ?___awdiv 0012  
                    ___aodiv@quotient 0024                              ?___awmod 0012  
                            ?___fltol 0039                              ?___lwdiv 0020  
                            ?___lwmod 0012                __size_of_LEAVECRITICAL 0016  
                     ?i2_XF_pushEvent 0007                             _displaySM 4890  
                   __size_of_vfprintf 0062   __end_of_GameParameters_setBackLight 618E  
         _GameParameters_setBackLight 614A              ?_GameParameters_resetPos 0012  
                          mooveBall@g 0025                              ?_sleepSM 0001  
                    ___lwdiv@quotient 0025           touchScreenController@valueX 00AE  
         touchScreenController@valueY 00AC                           ??i2___awmod 0005  
                            ?_sprintf 0082                        __size_of_fputc 00CA  
                      __size_of_fputs 0044                        __size_of_putch 0002  
                         ??_Ball_draw 0027                           ??_Ball_init 0014  
          __size_of_displayController 0104                            sleepInit@g 00A5  
                            _LCD_Fill 52EC                              _LCD_Init 32EE  
                            _LCD_Read 41E2                         ??_moovePaddle 001E  
                      ___wmul@product 001E                  __size_of_Paddle_addX 00DA  
                __size_of_Paddle_draw 0132                  __size_of_Paddle_init 00B0  
                     _Menu_inGameDraw 6004                  i2ENTERCRITICAL@inISR 0001  
                  LCD_SliderUpdate@x1 0035                    LCD_SliderUpdate@x2 002F  
                  LCD_SliderUpdate@y1 0031                    LCD_SliderUpdate@y2 0033  
                  displayController@g 009E               __size_of_checkCollision 0896  
                           _mooveBall 6308                           _configTouch 63A2  
                            i2u520_40 588C                              i2u520_41 5888  
                            i2u513_40 646C                              i2u513_41 6468  
                            i2u514_40 6456                              i2u514_41 6452  
                            i2u515_40 5800                              i2u515_41 57FC  
                            i2u516_40 581A                              i2u540_40 5EC2  
                            i2u516_41 5816                              i2u540_41 5EBE  
                            i2u517_40 5834                              i2u517_41 5830  
                            XF_init@i 0020                              i2u518_40 5852  
                            i2u542_40 448E                              i2u550_40 0044  
                            i2u518_41 584E                              i2u542_41 448A  
                            i2u550_41 0040                              i2u519_40 5868  
                            i2u543_40 44E6                              i2u551_40 0064  
                            i2u519_41 5864                              i2u543_41 44E2  
                            i2u551_41 0060                              i2u544_40 4520  
                            i2u552_40 0080                              i2u544_41 451C  
                            i2u552_41 007C                             _sleepInit 62E0  
                            i2u545_40 4576                              i2u553_40 008E  
                            i2u545_41 4572                              i2u553_41 008A  
                            i2u546_40 5D76                              i2u546_41 5D72  
                            i2u547_40 5DB8                              i2u547_41 5DB4  
                            i2u548_40 0028                              i2u548_41 0024  
                            i2u549_40 0036                              i2u549_41 0032  
              __size_of_ENTERCRITICAL 0016                           _displayInit 63BE  
                           _vfpfcnvrt 3BEC                            ?_displaySM 00A3  
                   ___wmul@multiplier 001A                     ?_LCD_SliderCreate 0012  
                            i2___wmul 637C      GameParameters_setBackLight@value 0014  
                  LCD_ButtonUpdate@x1 0033                    LCD_ButtonUpdate@x2 002F  
                  LCD_ButtonUpdate@y1 0031                    LCD_ButtonUpdate@y2 0035  
             i2XF_scheduleTimer@inISR 0005                    ??_LCD_SliderCreate 0028  
                    __size_of_RGB2LCD 00BE                     ?_LCD_SliderUpdate 0027  
                    LCD_InSlider@posX 0014                      LCD_InSlider@posY 0016  
                LCD_ButtonCreate@font 0020                  LCD_ButtonCreate@posX 0012  
                LCD_ButtonCreate@posY 0014                  LCD_ButtonDraw@bmpPtr 009A  
                    ?_touchScreenInit 0001                    ??_LCD_SliderUpdate 0029  
                LCD_ButtonDraw@button 007C                         _LEAVECRITICAL 6418  
                       ?_Factory_exec 0001                         ?_Factory_init 0001  
                  i2___awmod@dividend 0001                      _Menu_welcomeDraw 5B76  
                     checkCollision@g 001B           __size_ofi2_XF_scheduleTimer 0074  
                    __size_of_XF_init 00B8                      LCD_DrawRect@fill 001A  
                          ?_mooveBall 0025                              __Hrparam 0000  
                    LCD_DrawRect@temp 001F                            ?_sleepInit 00A5  
            __size_ofi2_LEAVECRITICAL 0016                            vfprintf@ap 007E  
                            __Lrparam 0000                            vfprintf@fp 007A  
                 __end_of_moovePaddle 4B7E               __size_of_LCD_ButtonDraw 04EE  
              __size_of_configMeasure 0050             __size_of_LCD_ButtonCreate 00FA  
                    __size_of___aodiv 0188       __end_of_GameParameters_resetPos 62E0  
                    __size_of___aomod 0164                      __size_of___fldiv 039A  
                    __size_of___awdiv 00C4                      __size_of___awmod 00B0  
                    __size_of___fltol 0106                 i2___wmul@multiplicand 0003  
                          ?_vfpfcnvrt 003F                      __size_of___lwdiv 0074  
                    __size_of___lwmod 0064             __size_of_LCD_ButtonUpdate 0236  
                   gameControllerSM@g 003C                       ___aodiv@divisor 001A  
                    Paddle_addX@value 0014              LCD_ButtonUpdate@colorOut 002B  
                     ___aodiv@counter 0022                          moovePaddle@g 001C  
            GameParameters_setX@value 0014                       LCD_Bitmap@color 006D  
            GameParameters_setY@value 0014                      LCD_DrawText@font 0022  
                          sprintf@fmt 0084                      LCD_DrawText@posX 0025  
                    LCD_DrawText@posY 0027                              ___xxtofl 3A38  
                          Ball_draw@b 0025                       ___lwdiv@divisor 0022  
                          Ball_init@b 0012                       ___lwdiv@counter 0024  
                            __ptext10 59DE                              __ptext11 3596  
                            __ptext20 589E                              __ptext12 63A2  
                            __ptext21 624E                              __ptext13 60AC  
                            __ptext30 5DC0                              __ptext22 509E  
                            __ptext14 3A38                              __ptext31 5A72  
                            __ptext23 297E                              __ptext15 4686  
                            __ptext40 5BEE                              __ptext32 1918  
                            __ptext24 4A8A                              __ptext16 25E4  
                            __ptext41 4890                              __ptext33 614A  
                            __ptext25 4E28                              __ptext17 5C64  
                            __ptext50 41E2                              __ptext42 478C  
                            __ptext34 4D4A                              __ptext26 4C6C  
                            __ptext18 63EC                              __ptext51 095E  
                            __ptext43 5B76                              __ptext35 2200  
                            __ptext27 62B6                              __ptext19 6402  
                            __ptext60 300C                              __ptext52 5E24  
                            __ptext44 5AF4                              __ptext36 6330  
                            __ptext28 6308                              __ptext61 522A  
                            __ptext53 5CD8                              __ptext45 4578  
                            __ptext37 55DE                              __ptext29 00C8  
                            __ptext70 6356                              __ptext62 618E  
                            __ptext54 53AE                              __ptext46 1442  
                            __ptext38 4B7E                              __ptext71 5166  
                            __ptext63 4FD4                              __ptext55 6004  
                            __ptext47 568E                              __ptext39 4990  
                            __ptext72 4324                              __ptext64 648C  
                            __ptext56 4F02                              __ptext48 0F54  
                            __ptext81 5D4C                              __ptext73 52EC  
                            __ptext65 61D2                              __ptext57 605A  
                            __ptext49 3802                              __ptext82 4456  
                            __ptext74 408C                              __ptext66 3F28  
                            __ptext58 5EEC                              __ptext83 637C  
                            __ptext75 2CD2                              __ptext67 3DA0  
                            __ptext59 3BEC                              __ptext84 5E88  
                            __ptext76 5F4E                              __ptext68 1DB6  
                            __ptext85 57EE                              __ptext77 573E  
                            __ptext69 60FC                              __ptext86 6212  
                            __ptext78 6418                              __ptext87 6444  
                            __ptext79 642E                              __ptext88 645A  
                    __size_of_sleepSM 00A2                        ?_LEAVECRITICAL 0001  
                       _ENTERCRITICAL 642E                         ??_Ball_Update 0014  
                      ??_Factory_exec 0047                        ??_Factory_init 00A7  
             __end_of_Menu_inGameDraw 605A              GameParameters_resetPos@s 0012  
                    __size_of_sprintf 0052    __end_of_XF_decrementAndQueueTimers 4578  
          _XF_decrementAndQueueTimers 4456                         __size_of_main 0010  
                           sleepSM@ev 0016                         __size_of_dtoa 02E2  
           __size_of_XF_scheduleTimer 0074              __end_of_gameControllerSM 5166  
                 _backlightController 1918           __end_of_GameParameters_init 25E4  
         __end_of_GameParameters_setX 6418           __end_of_GameParameters_setY 6402  
            __size_ofi2_ENTERCRITICAL 0016               __size_of_LCD_SliderDraw 010E  
        GameParameters_setBackLight@s 0012              _gameControllerController 297E  
                            isa$xinst 000000                            _LCD_Bitmap 095E  
      __size_of_touchScreenController 026C                    _XF_unscheduleTimer 6212  
       __end_of_touchScreenController 3802                              int$flags 004E  
                            _vfprintf 5EEC                         ?_XF_pushEvent 0018  
         __size_of_gameControllerInit 0016                           ??_displaySM 00A5  
                    ___aomod@dividend 0012                   ?_XF_unscheduleTimer 0002  
                   i2___awmod@divisor 0003                     i2___awmod@counter 0005  
                ?_backlightController 0018                       _sleepController 624E  
                      ?_ENTERCRITICAL 0001                         _configMeasure 60AC  
                            intlevel2 0000                             sprintf@ap 0088  
                     LCD_DrawText@msg 0020                      ___lwmod@dividend 0012  
                ??_XF_unscheduleTimer 0003                           _moovePaddle 4A8A  
                 __end_of_Ball_Update 5AF4                        _checkCollision 00C8  
                         ??_mooveBall 0027                           ??_sleepInit 0047  
                    ??i2_XF_pushEvent 0008                        ??_XF_pushEvent 0019  
                     ___aomod@divisor 001A                           ??_vfpfcnvrt 0045  
                     ___aomod@counter 0022                     ??i2_LEAVECRITICAL 0001  
                            sprintf@f 008A                              sprintf@s 0082  
               ??_backlightController 001A                         ??_XF_popEvent 0018  
                     ___lwmod@divisor 0014               LCD_SliderCreate@bgColor 001C  
                     ___lwmod@counter 0016                       ??_LEAVECRITICAL 0012  
                      ?_configMeasure 0001           LCD_SliderCreate@borderColor 001E  
        __size_of_Menu_parametersDraw 0082              LCD_SliderCreate@sldColor 001A  
             LCD_SliderCreate@fpPress 0024                      ?_Menu_inGameDraw 0092  
                        ___aodiv@sign 0023                       Paddle_init@team 0014  
              __end_of_checkCollision 095E      __size_of_GameParameters_resetPos 002A  
__size_of_GameParameters_setBackLight 0044                          ___aomod@sign 0023  
                        ?_configTouch 0001                   _gameControllerState 004D  
