

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Sep 03 13:43:51 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text75,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1
    92                           	psect	text79,global,reloc=2,class=CODE,delta=1
    93                           	psect	text80,global,reloc=2,class=CODE,delta=1
    94                           	psect	text81,global,reloc=2,class=CODE,delta=1
    95                           	psect	text82,global,reloc=2,class=CODE,delta=1
    96                           	psect	text83,global,reloc=2,class=CODE,delta=1
    97                           	psect	text84,global,reloc=2,class=CODE,delta=1
    98                           	psect	text85,global,reloc=2,class=CODE,delta=1
    99                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   100                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   101                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   102                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   103                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   104  0000                     
   105                           ; Version 2.32
   106                           ; Generated 02/02/2021 GMT
   107                           ; 
   108                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   109                           ; All rights reserved.
   110                           ; 
   111                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   112                           ; 
   113                           ; Redistribution and use in source and binary forms, with or without modification, are
   114                           ; permitted provided that the following conditions are met:
   115                           ; 
   116                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   117                           ;        conditions and the following disclaimer.
   118                           ; 
   119                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   120                           ;        of conditions and the following disclaimer in the documentation and/or other
   121                           ;        materials provided with the distribution. Publication is not required when
   122                           ;        this file is used in an embedded application.
   123                           ; 
   124                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   125                           ;        software without specific prior written permission.
   126                           ; 
   127                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   128                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   129                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   130                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   131                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   132                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   133                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   134                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   135                           ; 
   136                           ; 
   137                           ; Code-generator required, PIC18LF25K22 Definitions
   138                           ; 
   139                           ; SFR Addresses
   140  0000                     
   141                           	psect	mediumconst
   142  00785C                     __pmediumconst:
   143                           	callstack 0
   144  00785C  00                 	db	0
   145  00785D                     _arialNarrow_12ptBitmaps:
   146                           	callstack 0
   147  00785D  00                 	db	0
   148  00785E  00                 	db	0
   149  00785F  00                 	db	0
   150  007860  00                 	db	0
   151  007861  00                 	db	0
   152  007862  00                 	db	0
   153  007863  00                 	db	0
   154  007864  00                 	db	0
   155  007865  00                 	db	0
   156  007866  00                 	db	0
   157  007867  00                 	db	0
   158  007868  00                 	db	0
   159  007869  00                 	db	0
   160  00786A  00                 	db	0
   161  00786B  00                 	db	0
   162  00786C  00                 	db	0
   163  00786D  C0                 	db	192
   164  00786E  C0                 	db	192
   165  00786F  C0                 	db	192
   166  007870  C0                 	db	192
   167  007871  C0                 	db	192
   168  007872  C0                 	db	192
   169  007873  C0                 	db	192
   170  007874  C0                 	db	192
   171  007875  00                 	db	0
   172  007876  C0                 	db	192
   173  007877  C0                 	db	192
   174  007878  00                 	db	0
   175  007879  00                 	db	0
   176  00787A  00                 	db	0
   177  00787B  00                 	db	0
   178  00787C  D8                 	db	216
   179  00787D  D8                 	db	216
   180  00787E  D8                 	db	216
   181  00787F  D8                 	db	216
   182  007880  00                 	db	0
   183  007881  00                 	db	0
   184  007882  00                 	db	0
   185  007883  00                 	db	0
   186  007884  00                 	db	0
   187  007885  00                 	db	0
   188  007886  00                 	db	0
   189  007887  00                 	db	0
   190  007888  00                 	db	0
   191  007889  00                 	db	0
   192  00788A  00                 	db	0
   193  00788B  12                 	db	18
   194  00788C  12                 	db	18
   195  00788D  24                 	db	36
   196  00788E  FE                 	db	254
   197  00788F  FE                 	db	254
   198  007890  48                 	db	72
   199  007891  FE                 	db	254
   200  007892  FE                 	db	254
   201  007893  48                 	db	72
   202  007894  90                 	db	144
   203  007895  90                 	db	144
   204  007896  00                 	db	0
   205  007897  00                 	db	0
   206  007898  00                 	db	0
   207  007899  10                 	db	16
   208  00789A  7C                 	db	124
   209  00789B  FC                 	db	252
   210  00789C  D6                 	db	214
   211  00789D  D0                 	db	208
   212  00789E  F0                 	db	240
   213  00789F  7C                 	db	124
   214  0078A0  1E                 	db	30
   215  0078A1  16                 	db	22
   216  0078A2  D6                 	db	214
   217  0078A3  7E                 	db	126
   218  0078A4  7C                 	db	124
   219  0078A5  10                 	db	16
   220  0078A6  00                 	db	0
   221  0078A7  00                 	db	0
   222  0078A8  00                 	db	0
   223  0078A9  00                 	db	0
   224  0078AA  61                 	db	97
   225  0078AB  00                 	db	0
   226  0078AC  91                 	db	145
   227  0078AD  00                 	db	0
   228  0078AE  92                 	db	146
   229  0078AF  00                 	db	0
   230  0078B0  92                 	db	146
   231  0078B1  00                 	db	0
   232  0078B2  94                 	db	148
   233  0078B3  00                 	db	0
   234  0078B4  65                 	db	101
   235  0078B5  80                 	db	128
   236  0078B6  06                 	db	6
   237  0078B7  40                 	db	64
   238  0078B8  0A                 	db	10
   239  0078B9  40                 	db	64
   240  0078BA  0A                 	db	10
   241  0078BB  40                 	db	64
   242  0078BC  12                 	db	18
   243  0078BD  40                 	db	64
   244  0078BE  11                 	db	17
   245  0078BF  80                 	db	128
   246  0078C0  00                 	db	0
   247  0078C1  00                 	db	0
   248  0078C2  00                 	db	0
   249  0078C3  00                 	db	0
   250  0078C4  00                 	db	0
   251  0078C5  00                 	db	0
   252  0078C6  00                 	db	0
   253  0078C7  38                 	db	56
   254  0078C8  7C                 	db	124
   255  0078C9  6C                 	db	108
   256  0078CA  7C                 	db	124
   257  0078CB  30                 	db	48
   258  0078CC  78                 	db	120
   259  0078CD  DA                 	db	218
   260  0078CE  CE                 	db	206
   261  0078CF  CE                 	db	206
   262  0078D0  FF                 	db	255
   263  0078D1  7A                 	db	122
   264  0078D2  00                 	db	0
   265  0078D3  00                 	db	0
   266  0078D4  00                 	db	0
   267  0078D5  00                 	db	0
   268  0078D6  C0                 	db	192
   269  0078D7  C0                 	db	192
   270  0078D8  C0                 	db	192
   271  0078D9  C0                 	db	192
   272  0078DA  00                 	db	0
   273  0078DB  00                 	db	0
   274  0078DC  00                 	db	0
   275  0078DD  00                 	db	0
   276  0078DE  00                 	db	0
   277  0078DF  00                 	db	0
   278  0078E0  00                 	db	0
   279  0078E1  00                 	db	0
   280  0078E2  00                 	db	0
   281  0078E3  00                 	db	0
   282  0078E4  00                 	db	0
   283  0078E5  10                 	db	16
   284  0078E6  20                 	db	32
   285  0078E7  60                 	db	96
   286  0078E8  60                 	db	96
   287  0078E9  C0                 	db	192
   288  0078EA  C0                 	db	192
   289  0078EB  C0                 	db	192
   290  0078EC  C0                 	db	192
   291  0078ED  C0                 	db	192
   292  0078EE  C0                 	db	192
   293  0078EF  60                 	db	96
   294  0078F0  60                 	db	96
   295  0078F1  20                 	db	32
   296  0078F2  10                 	db	16
   297  0078F3  00                 	db	0
   298  0078F4  80                 	db	128
   299  0078F5  40                 	db	64
   300  0078F6  60                 	db	96
   301  0078F7  20                 	db	32
   302  0078F8  30                 	db	48
   303  0078F9  30                 	db	48
   304  0078FA  30                 	db	48
   305  0078FB  30                 	db	48
   306  0078FC  30                 	db	48
   307  0078FD  30                 	db	48
   308  0078FE  60                 	db	96
   309  0078FF  60                 	db	96
   310  007900  40                 	db	64
   311  007901  80                 	db	128
   312  007902  00                 	db	0
   313  007903  20                 	db	32
   314  007904  A8                 	db	168
   315  007905  F8                 	db	248
   316  007906  20                 	db	32
   317  007907  50                 	db	80
   318  007908  50                 	db	80
   319  007909  00                 	db	0
   320  00790A  00                 	db	0
   321  00790B  00                 	db	0
   322  00790C  00                 	db	0
   323  00790D  00                 	db	0
   324  00790E  00                 	db	0
   325  00790F  00                 	db	0
   326  007910  00                 	db	0
   327  007911  00                 	db	0
   328  007912  00                 	db	0
   329  007913  00                 	db	0
   330  007914  00                 	db	0
   331  007915  30                 	db	48
   332  007916  30                 	db	48
   333  007917  30                 	db	48
   334  007918  FC                 	db	252
   335  007919  FC                 	db	252
   336  00791A  30                 	db	48
   337  00791B  30                 	db	48
   338  00791C  30                 	db	48
   339  00791D  00                 	db	0
   340  00791E  00                 	db	0
   341  00791F  00                 	db	0
   342  007920  00                 	db	0
   343  007921  00                 	db	0
   344  007922  00                 	db	0
   345  007923  00                 	db	0
   346  007924  00                 	db	0
   347  007925  00                 	db	0
   348  007926  00                 	db	0
   349  007927  00                 	db	0
   350  007928  00                 	db	0
   351  007929  00                 	db	0
   352  00792A  C0                 	db	192
   353  00792B  C0                 	db	192
   354  00792C  40                 	db	64
   355  00792D  40                 	db	64
   356  00792E  80                 	db	128
   357  00792F  00                 	db	0
   358  007930  00                 	db	0
   359  007931  00                 	db	0
   360  007932  00                 	db	0
   361  007933  00                 	db	0
   362  007934  00                 	db	0
   363  007935  00                 	db	0
   364  007936  F0                 	db	240
   365  007937  F0                 	db	240
   366  007938  00                 	db	0
   367  007939  00                 	db	0
   368  00793A  00                 	db	0
   369  00793B  00                 	db	0
   370  00793C  00                 	db	0
   371  00793D  00                 	db	0
   372  00793E  00                 	db	0
   373  00793F  00                 	db	0
   374  007940  00                 	db	0
   375  007941  00                 	db	0
   376  007942  00                 	db	0
   377  007943  00                 	db	0
   378  007944  00                 	db	0
   379  007945  00                 	db	0
   380  007946  00                 	db	0
   381  007947  00                 	db	0
   382  007948  C0                 	db	192
   383  007949  C0                 	db	192
   384  00794A  00                 	db	0
   385  00794B  00                 	db	0
   386  00794C  00                 	db	0
   387  00794D  00                 	db	0
   388  00794E  30                 	db	48
   389  00794F  30                 	db	48
   390  007950  30                 	db	48
   391  007951  60                 	db	96
   392  007952  60                 	db	96
   393  007953  60                 	db	96
   394  007954  60                 	db	96
   395  007955  60                 	db	96
   396  007956  C0                 	db	192
   397  007957  C0                 	db	192
   398  007958  C0                 	db	192
   399  007959  00                 	db	0
   400  00795A  00                 	db	0
   401  00795B  00                 	db	0
   402  00795C  00                 	db	0
   403  00795D  78                 	db	120
   404  00795E  78                 	db	120
   405  00795F  CC                 	db	204
   406  007960  CC                 	db	204
   407  007961  CC                 	db	204
   408  007962  CC                 	db	204
   409  007963  CC                 	db	204
   410  007964  CC                 	db	204
   411  007965  CC                 	db	204
   412  007966  78                 	db	120
   413  007967  78                 	db	120
   414  007968  00                 	db	0
   415  007969  00                 	db	0
   416  00796A  00                 	db	0
   417  00796B  00                 	db	0
   418  00796C  30                 	db	48
   419  00796D  30                 	db	48
   420  00796E  70                 	db	112
   421  00796F  F0                 	db	240
   422  007970  B0                 	db	176
   423  007971  30                 	db	48
   424  007972  30                 	db	48
   425  007973  30                 	db	48
   426  007974  30                 	db	48
   427  007975  30                 	db	48
   428  007976  30                 	db	48
   429  007977  00                 	db	0
   430  007978  00                 	db	0
   431  007979  00                 	db	0
   432  00797A  00                 	db	0
   433  00797B  38                 	db	56
   434  00797C  7C                 	db	124
   435  00797D  CC                 	db	204
   436  00797E  CC                 	db	204
   437  00797F  0C                 	db	12
   438  007980  18                 	db	24
   439  007981  38                 	db	56
   440  007982  70                 	db	112
   441  007983  60                 	db	96
   442  007984  FC                 	db	252
   443  007985  FC                 	db	252
   444  007986  00                 	db	0
   445  007987  00                 	db	0
   446  007988  00                 	db	0
   447  007989  00                 	db	0
   448  00798A  78                 	db	120
   449  00798B  FC                 	db	252
   450  00798C  CC                 	db	204
   451  00798D  0C                 	db	12
   452  00798E  38                 	db	56
   453  00798F  38                 	db	56
   454  007990  0C                 	db	12
   455  007991  0C                 	db	12
   456  007992  CC                 	db	204
   457  007993  F8                 	db	248
   458  007994  78                 	db	120
   459  007995  00                 	db	0
   460  007996  00                 	db	0
   461  007997  00                 	db	0
   462  007998  00                 	db	0
   463  007999  0C                 	db	12
   464  00799A  1C                 	db	28
   465  00799B  1C                 	db	28
   466  00799C  3C                 	db	60
   467  00799D  2C                 	db	44
   468  00799E  6C                 	db	108
   469  00799F  CC                 	db	204
   470  0079A0  FE                 	db	254
   471  0079A1  FE                 	db	254
   472  0079A2  0C                 	db	12
   473  0079A3  0C                 	db	12
   474  0079A4  00                 	db	0
   475  0079A5  00                 	db	0
   476  0079A6  00                 	db	0
   477  0079A7  00                 	db	0
   478  0079A8  7C                 	db	124
   479  0079A9  7C                 	db	124
   480  0079AA  60                 	db	96
   481  0079AB  D8                 	db	216
   482  0079AC  FC                 	db	252
   483  0079AD  CC                 	db	204
   484  0079AE  0C                 	db	12
   485  0079AF  CC                 	db	204
   486  0079B0  CC                 	db	204
   487  0079B1  78                 	db	120
   488  0079B2  78                 	db	120
   489  0079B3  00                 	db	0
   490  0079B4  00                 	db	0
   491  0079B5  00                 	db	0
   492  0079B6  00                 	db	0
   493  0079B7  70                 	db	112
   494  0079B8  78                 	db	120
   495  0079B9  D8                 	db	216
   496  0079BA  C0                 	db	192
   497  0079BB  F0                 	db	240
   498  0079BC  F8                 	db	248
   499  0079BD  D8                 	db	216
   500  0079BE  D8                 	db	216
   501  0079BF  D8                 	db	216
   502  0079C0  78                 	db	120
   503  0079C1  70                 	db	112
   504  0079C2  00                 	db	0
   505  0079C3  00                 	db	0
   506  0079C4  00                 	db	0
   507  0079C5  00                 	db	0
   508  0079C6  F8                 	db	248
   509  0079C7  F8                 	db	248
   510  0079C8  18                 	db	24
   511  0079C9  10                 	db	16
   512  0079CA  30                 	db	48
   513  0079CB  30                 	db	48
   514  0079CC  20                 	db	32
   515  0079CD  60                 	db	96
   516  0079CE  60                 	db	96
   517  0079CF  60                 	db	96
   518  0079D0  60                 	db	96
   519  0079D1  00                 	db	0
   520  0079D2  00                 	db	0
   521  0079D3  00                 	db	0
   522  0079D4  00                 	db	0
   523  0079D5  78                 	db	120
   524  0079D6  FC                 	db	252
   525  0079D7  CC                 	db	204
   526  0079D8  CC                 	db	204
   527  0079D9  78                 	db	120
   528  0079DA  78                 	db	120
   529  0079DB  CC                 	db	204
   530  0079DC  CC                 	db	204
   531  0079DD  CC                 	db	204
   532  0079DE  FC                 	db	252
   533  0079DF  78                 	db	120
   534  0079E0  00                 	db	0
   535  0079E1  00                 	db	0
   536  0079E2  00                 	db	0
   537  0079E3  00                 	db	0
   538  0079E4  70                 	db	112
   539  0079E5  F8                 	db	248
   540  0079E6  CC                 	db	204
   541  0079E7  CC                 	db	204
   542  0079E8  CC                 	db	204
   543  0079E9  FC                 	db	252
   544  0079EA  7C                 	db	124
   545  0079EB  0C                 	db	12
   546  0079EC  CC                 	db	204
   547  0079ED  F8                 	db	248
   548  0079EE  70                 	db	112
   549  0079EF  00                 	db	0
   550  0079F0  00                 	db	0
   551  0079F1  00                 	db	0
   552  0079F2  00                 	db	0
   553  0079F3  00                 	db	0
   554  0079F4  00                 	db	0
   555  0079F5  00                 	db	0
   556  0079F6  C0                 	db	192
   557  0079F7  C0                 	db	192
   558  0079F8  00                 	db	0
   559  0079F9  00                 	db	0
   560  0079FA  00                 	db	0
   561  0079FB  00                 	db	0
   562  0079FC  C0                 	db	192
   563  0079FD  C0                 	db	192
   564  0079FE  00                 	db	0
   565  0079FF  00                 	db	0
   566  007A00  00                 	db	0
   567  007A01  00                 	db	0
   568  007A02  00                 	db	0
   569  007A03  00                 	db	0
   570  007A04  00                 	db	0
   571  007A05  C0                 	db	192
   572  007A06  C0                 	db	192
   573  007A07  00                 	db	0
   574  007A08  00                 	db	0
   575  007A09  00                 	db	0
   576  007A0A  00                 	db	0
   577  007A0B  C0                 	db	192
   578  007A0C  C0                 	db	192
   579  007A0D  40                 	db	64
   580  007A0E  40                 	db	64
   581  007A0F  80                 	db	128
   582  007A10  00                 	db	0
   583  007A11  00                 	db	0
   584  007A12  04                 	db	4
   585  007A13  1C                 	db	28
   586  007A14  38                 	db	56
   587  007A15  F0                 	db	240
   588  007A16  C0                 	db	192
   589  007A17  F0                 	db	240
   590  007A18  38                 	db	56
   591  007A19  1C                 	db	28
   592  007A1A  04                 	db	4
   593  007A1B  00                 	db	0
   594  007A1C  00                 	db	0
   595  007A1D  00                 	db	0
   596  007A1E  00                 	db	0
   597  007A1F  00                 	db	0
   598  007A20  00                 	db	0
   599  007A21  00                 	db	0
   600  007A22  00                 	db	0
   601  007A23  FC                 	db	252
   602  007A24  FC                 	db	252
   603  007A25  00                 	db	0
   604  007A26  FC                 	db	252
   605  007A27  FC                 	db	252
   606  007A28  00                 	db	0
   607  007A29  00                 	db	0
   608  007A2A  00                 	db	0
   609  007A2B  00                 	db	0
   610  007A2C  00                 	db	0
   611  007A2D  00                 	db	0
   612  007A2E  00                 	db	0
   613  007A2F  00                 	db	0
   614  007A30  80                 	db	128
   615  007A31  E0                 	db	224
   616  007A32  70                 	db	112
   617  007A33  3C                 	db	60
   618  007A34  0C                 	db	12
   619  007A35  1C                 	db	28
   620  007A36  70                 	db	112
   621  007A37  E0                 	db	224
   622  007A38  80                 	db	128
   623  007A39  00                 	db	0
   624  007A3A  00                 	db	0
   625  007A3B  00                 	db	0
   626  007A3C  00                 	db	0
   627  007A3D  00                 	db	0
   628  007A3E  78                 	db	120
   629  007A3F  FC                 	db	252
   630  007A40  CC                 	db	204
   631  007A41  CC                 	db	204
   632  007A42  1C                 	db	28
   633  007A43  18                 	db	24
   634  007A44  30                 	db	48
   635  007A45  30                 	db	48
   636  007A46  00                 	db	0
   637  007A47  30                 	db	48
   638  007A48  30                 	db	48
   639  007A49  00                 	db	0
   640  007A4A  00                 	db	0
   641  007A4B  00                 	db	0
   642  007A4C  00                 	db	0
   643  007A4D  00                 	db	0
   644  007A4E  0F                 	db	15
   645  007A4F  C0                 	db	192
   646  007A50  1F                 	db	31
   647  007A51  E0                 	db	224
   648  007A52  30                 	db	48
   649  007A53  30                 	db	48
   650  007A54  66                 	db	102
   651  007A55  D8                 	db	216
   652  007A56  EF                 	db	239
   653  007A57  D8                 	db	216
   654  007A58  DD                 	db	221
   655  007A59  D8                 	db	216
   656  007A5A  D8                 	db	216
   657  007A5B  98                 	db	152
   658  007A5C  D9                 	db	217
   659  007A5D  98                 	db	152
   660  007A5E  D9                 	db	217
   661  007A5F  B0                 	db	176
   662  007A60  DF                 	db	223
   663  007A61  F0                 	db	240
   664  007A62  6E                 	db	110
   665  007A63  C8                 	db	200
   666  007A64  70                 	db	112
   667  007A65  10                 	db	16
   668  007A66  3F                 	db	63
   669  007A67  E0                 	db	224
   670  007A68  0F                 	db	15
   671  007A69  C0                 	db	192
   672  007A6A  00                 	db	0
   673  007A6B  00                 	db	0
   674  007A6C  1C                 	db	28
   675  007A6D  00                 	db	0
   676  007A6E  1C                 	db	28
   677  007A6F  00                 	db	0
   678  007A70  1C                 	db	28
   679  007A71  00                 	db	0
   680  007A72  36                 	db	54
   681  007A73  00                 	db	0
   682  007A74  36                 	db	54
   683  007A75  00                 	db	0
   684  007A76  36                 	db	54
   685  007A77  00                 	db	0
   686  007A78  63                 	db	99
   687  007A79  00                 	db	0
   688  007A7A  7F                 	db	127
   689  007A7B  00                 	db	0
   690  007A7C  7F                 	db	127
   691  007A7D  00                 	db	0
   692  007A7E  C1                 	db	193
   693  007A7F  80                 	db	128
   694  007A80  C1                 	db	193
   695  007A81  80                 	db	128
   696  007A82  00                 	db	0
   697  007A83  00                 	db	0
   698  007A84  00                 	db	0
   699  007A85  00                 	db	0
   700  007A86  00                 	db	0
   701  007A87  00                 	db	0
   702  007A88  00                 	db	0
   703  007A89  FC                 	db	252
   704  007A8A  FE                 	db	254
   705  007A8B  C6                 	db	198
   706  007A8C  C6                 	db	198
   707  007A8D  FC                 	db	252
   708  007A8E  FC                 	db	252
   709  007A8F  C6                 	db	198
   710  007A90  C6                 	db	198
   711  007A91  C6                 	db	198
   712  007A92  FE                 	db	254
   713  007A93  FC                 	db	252
   714  007A94  00                 	db	0
   715  007A95  00                 	db	0
   716  007A96  00                 	db	0
   717  007A97  00                 	db	0
   718  007A98  3C                 	db	60
   719  007A99  7E                 	db	126
   720  007A9A  67                 	db	103
   721  007A9B  C2                 	db	194
   722  007A9C  C0                 	db	192
   723  007A9D  C0                 	db	192
   724  007A9E  C0                 	db	192
   725  007A9F  C2                 	db	194
   726  007AA0  67                 	db	103
   727  007AA1  7E                 	db	126
   728  007AA2  3C                 	db	60
   729  007AA3  00                 	db	0
   730  007AA4  00                 	db	0
   731  007AA5  00                 	db	0
   732  007AA6  00                 	db	0
   733  007AA7  F8                 	db	248
   734  007AA8  FC                 	db	252
   735  007AA9  CE                 	db	206
   736  007AAA  C6                 	db	198
   737  007AAB  C6                 	db	198
   738  007AAC  C6                 	db	198
   739  007AAD  C6                 	db	198
   740  007AAE  C6                 	db	198
   741  007AAF  CE                 	db	206
   742  007AB0  FC                 	db	252
   743  007AB1  F8                 	db	248
   744  007AB2  00                 	db	0
   745  007AB3  00                 	db	0
   746  007AB4  00                 	db	0
   747  007AB5  00                 	db	0
   748  007AB6  FE                 	db	254
   749  007AB7  FE                 	db	254
   750  007AB8  C0                 	db	192
   751  007AB9  C0                 	db	192
   752  007ABA  FE                 	db	254
   753  007ABB  FE                 	db	254
   754  007ABC  C0                 	db	192
   755  007ABD  C0                 	db	192
   756  007ABE  C0                 	db	192
   757  007ABF  FE                 	db	254
   758  007AC0  FE                 	db	254
   759  007AC1  00                 	db	0
   760  007AC2  00                 	db	0
   761  007AC3  00                 	db	0
   762  007AC4  00                 	db	0
   763  007AC5  FC                 	db	252
   764  007AC6  FC                 	db	252
   765  007AC7  C0                 	db	192
   766  007AC8  C0                 	db	192
   767  007AC9  F8                 	db	248
   768  007ACA  F8                 	db	248
   769  007ACB  C0                 	db	192
   770  007ACC  C0                 	db	192
   771  007ACD  C0                 	db	192
   772  007ACE  C0                 	db	192
   773  007ACF  C0                 	db	192
   774  007AD0  00                 	db	0
   775  007AD1  00                 	db	0
   776  007AD2  00                 	db	0
   777  007AD3  00                 	db	0
   778  007AD4  3C                 	db	60
   779  007AD5  7E                 	db	126
   780  007AD6  67                 	db	103
   781  007AD7  C3                 	db	195
   782  007AD8  C0                 	db	192
   783  007AD9  CF                 	db	207
   784  007ADA  CF                 	db	207
   785  007ADB  C3                 	db	195
   786  007ADC  63                 	db	99
   787  007ADD  7F                 	db	127
   788  007ADE  3C                 	db	60
   789  007ADF  00                 	db	0
   790  007AE0  00                 	db	0
   791  007AE1  00                 	db	0
   792  007AE2  00                 	db	0
   793  007AE3  C6                 	db	198
   794  007AE4  C6                 	db	198
   795  007AE5  C6                 	db	198
   796  007AE6  C6                 	db	198
   797  007AE7  FE                 	db	254
   798  007AE8  FE                 	db	254
   799  007AE9  C6                 	db	198
   800  007AEA  C6                 	db	198
   801  007AEB  C6                 	db	198
   802  007AEC  C6                 	db	198
   803  007AED  C6                 	db	198
   804  007AEE  00                 	db	0
   805  007AEF  00                 	db	0
   806  007AF0  00                 	db	0
   807  007AF1  00                 	db	0
   808  007AF2  C0                 	db	192
   809  007AF3  C0                 	db	192
   810  007AF4  C0                 	db	192
   811  007AF5  C0                 	db	192
   812  007AF6  C0                 	db	192
   813  007AF7  C0                 	db	192
   814  007AF8  C0                 	db	192
   815  007AF9  C0                 	db	192
   816  007AFA  C0                 	db	192
   817  007AFB  C0                 	db	192
   818  007AFC  C0                 	db	192
   819  007AFD  00                 	db	0
   820  007AFE  00                 	db	0
   821  007AFF  00                 	db	0
   822  007B00  00                 	db	0
   823  007B01  0C                 	db	12
   824  007B02  0C                 	db	12
   825  007B03  0C                 	db	12
   826  007B04  0C                 	db	12
   827  007B05  0C                 	db	12
   828  007B06  0C                 	db	12
   829  007B07  0C                 	db	12
   830  007B08  CC                 	db	204
   831  007B09  CC                 	db	204
   832  007B0A  FC                 	db	252
   833  007B0B  78                 	db	120
   834  007B0C  00                 	db	0
   835  007B0D  00                 	db	0
   836  007B0E  00                 	db	0
   837  007B0F  00                 	db	0
   838  007B10  C3                 	db	195
   839  007B11  C6                 	db	198
   840  007B12  CC                 	db	204
   841  007B13  CC                 	db	204
   842  007B14  D8                 	db	216
   843  007B15  FC                 	db	252
   844  007B16  EC                 	db	236
   845  007B17  C6                 	db	198
   846  007B18  C6                 	db	198
   847  007B19  C3                 	db	195
   848  007B1A  C3                 	db	195
   849  007B1B  00                 	db	0
   850  007B1C  00                 	db	0
   851  007B1D  00                 	db	0
   852  007B1E  00                 	db	0
   853  007B1F  C0                 	db	192
   854  007B20  C0                 	db	192
   855  007B21  C0                 	db	192
   856  007B22  C0                 	db	192
   857  007B23  C0                 	db	192
   858  007B24  C0                 	db	192
   859  007B25  C0                 	db	192
   860  007B26  C0                 	db	192
   861  007B27  C0                 	db	192
   862  007B28  FE                 	db	254
   863  007B29  FE                 	db	254
   864  007B2A  00                 	db	0
   865  007B2B  00                 	db	0
   866  007B2C  00                 	db	0
   867  007B2D  00                 	db	0
   868  007B2E  00                 	db	0
   869  007B2F  E3                 	db	227
   870  007B30  80                 	db	128
   871  007B31  E3                 	db	227
   872  007B32  80                 	db	128
   873  007B33  E3                 	db	227
   874  007B34  80                 	db	128
   875  007B35  F7                 	db	247
   876  007B36  80                 	db	128
   877  007B37  D5                 	db	213
   878  007B38  80                 	db	128
   879  007B39  D5                 	db	213
   880  007B3A  80                 	db	128
   881  007B3B  D5                 	db	213
   882  007B3C  80                 	db	128
   883  007B3D  D5                 	db	213
   884  007B3E  80                 	db	128
   885  007B3F  DD                 	db	221
   886  007B40  80                 	db	128
   887  007B41  D9                 	db	217
   888  007B42  80                 	db	128
   889  007B43  C9                 	db	201
   890  007B44  80                 	db	128
   891  007B45  00                 	db	0
   892  007B46  00                 	db	0
   893  007B47  00                 	db	0
   894  007B48  00                 	db	0
   895  007B49  00                 	db	0
   896  007B4A  00                 	db	0
   897  007B4B  00                 	db	0
   898  007B4C  C6                 	db	198
   899  007B4D  E6                 	db	230
   900  007B4E  E6                 	db	230
   901  007B4F  E6                 	db	230
   902  007B50  F6                 	db	246
   903  007B51  D6                 	db	214
   904  007B52  DE                 	db	222
   905  007B53  DE                 	db	222
   906  007B54  CE                 	db	206
   907  007B55  CE                 	db	206
   908  007B56  C6                 	db	198
   909  007B57  00                 	db	0
   910  007B58  00                 	db	0
   911  007B59  00                 	db	0
   912  007B5A  00                 	db	0
   913  007B5B  3C                 	db	60
   914  007B5C  7E                 	db	126
   915  007B5D  67                 	db	103
   916  007B5E  C3                 	db	195
   917  007B5F  C3                 	db	195
   918  007B60  C3                 	db	195
   919  007B61  C3                 	db	195
   920  007B62  C3                 	db	195
   921  007B63  66                 	db	102
   922  007B64  7E                 	db	126
   923  007B65  3C                 	db	60
   924  007B66  00                 	db	0
   925  007B67  00                 	db	0
   926  007B68  00                 	db	0
   927  007B69  00                 	db	0
   928  007B6A  FC                 	db	252
   929  007B6B  FE                 	db	254
   930  007B6C  C6                 	db	198
   931  007B6D  C6                 	db	198
   932  007B6E  C6                 	db	198
   933  007B6F  FE                 	db	254
   934  007B70  FC                 	db	252
   935  007B71  C0                 	db	192
   936  007B72  C0                 	db	192
   937  007B73  C0                 	db	192
   938  007B74  C0                 	db	192
   939  007B75  00                 	db	0
   940  007B76  00                 	db	0
   941  007B77  00                 	db	0
   942  007B78  00                 	db	0
   943  007B79  00                 	db	0
   944  007B7A  3C                 	db	60
   945  007B7B  00                 	db	0
   946  007B7C  7E                 	db	126
   947  007B7D  00                 	db	0
   948  007B7E  E7                 	db	231
   949  007B7F  00                 	db	0
   950  007B80  C3                 	db	195
   951  007B81  00                 	db	0
   952  007B82  C3                 	db	195
   953  007B83  00                 	db	0
   954  007B84  C3                 	db	195
   955  007B85  00                 	db	0
   956  007B86  C3                 	db	195
   957  007B87  00                 	db	0
   958  007B88  CB                 	db	203
   959  007B89  00                 	db	0
   960  007B8A  66                 	db	102
   961  007B8B  00                 	db	0
   962  007B8C  7F                 	db	127
   963  007B8D  00                 	db	0
   964  007B8E  3D                 	db	61
   965  007B8F  80                 	db	128
   966  007B90  00                 	db	0
   967  007B91  80                 	db	128
   968  007B92  00                 	db	0
   969  007B93  00                 	db	0
   970  007B94  00                 	db	0
   971  007B95  00                 	db	0
   972  007B96  00                 	db	0
   973  007B97  FC                 	db	252
   974  007B98  FE                 	db	254
   975  007B99  C6                 	db	198
   976  007B9A  C6                 	db	198
   977  007B9B  FE                 	db	254
   978  007B9C  FC                 	db	252
   979  007B9D  CC                 	db	204
   980  007B9E  C6                 	db	198
   981  007B9F  C6                 	db	198
   982  007BA0  C6                 	db	198
   983  007BA1  C3                 	db	195
   984  007BA2  00                 	db	0
   985  007BA3  00                 	db	0
   986  007BA4  00                 	db	0
   987  007BA5  00                 	db	0
   988  007BA6  7C                 	db	124
   989  007BA7  FE                 	db	254
   990  007BA8  C6                 	db	198
   991  007BA9  C6                 	db	198
   992  007BAA  F0                 	db	240
   993  007BAB  7C                 	db	124
   994  007BAC  0E                 	db	14
   995  007BAD  C6                 	db	198
   996  007BAE  C6                 	db	198
   997  007BAF  FE                 	db	254
   998  007BB0  7C                 	db	124
   999  007BB1  00                 	db	0
  1000  007BB2  00                 	db	0
  1001  007BB3  00                 	db	0
  1002  007BB4  00                 	db	0
  1003  007BB5  FF                 	db	255
  1004  007BB6  FF                 	db	255
  1005  007BB7  18                 	db	24
  1006  007BB8  18                 	db	24
  1007  007BB9  18                 	db	24
  1008  007BBA  18                 	db	24
  1009  007BBB  18                 	db	24
  1010  007BBC  18                 	db	24
  1011  007BBD  18                 	db	24
  1012  007BBE  18                 	db	24
  1013  007BBF  18                 	db	24
  1014  007BC0  00                 	db	0
  1015  007BC1  00                 	db	0
  1016  007BC2  00                 	db	0
  1017  007BC3  00                 	db	0
  1018  007BC4  C6                 	db	198
  1019  007BC5  C6                 	db	198
  1020  007BC6  C6                 	db	198
  1021  007BC7  C6                 	db	198
  1022  007BC8  C6                 	db	198
  1023  007BC9  C6                 	db	198
  1024  007BCA  C6                 	db	198
  1025  007BCB  C6                 	db	198
  1026  007BCC  C6                 	db	198
  1027  007BCD  7E                 	db	126
  1028  007BCE  38                 	db	56
  1029  007BCF  00                 	db	0
  1030  007BD0  00                 	db	0
  1031  007BD1  00                 	db	0
  1032  007BD2  00                 	db	0
  1033  007BD3  00                 	db	0
  1034  007BD4  C1                 	db	193
  1035  007BD5  80                 	db	128
  1036  007BD6  C1                 	db	193
  1037  007BD7  80                 	db	128
  1038  007BD8  63                 	db	99
  1039  007BD9  00                 	db	0
  1040  007BDA  63                 	db	99
  1041  007BDB  00                 	db	0
  1042  007BDC  63                 	db	99
  1043  007BDD  00                 	db	0
  1044  007BDE  36                 	db	54
  1045  007BDF  00                 	db	0
  1046  007BE0  36                 	db	54
  1047  007BE1  00                 	db	0
  1048  007BE2  36                 	db	54
  1049  007BE3  00                 	db	0
  1050  007BE4  1C                 	db	28
  1051  007BE5  00                 	db	0
  1052  007BE6  1C                 	db	28
  1053  007BE7  00                 	db	0
  1054  007BE8  1C                 	db	28
  1055  007BE9  00                 	db	0
  1056  007BEA  00                 	db	0
  1057  007BEB  00                 	db	0
  1058  007BEC  00                 	db	0
  1059  007BED  00                 	db	0
  1060  007BEE  00                 	db	0
  1061  007BEF  00                 	db	0
  1062  007BF0  00                 	db	0
  1063  007BF1  00                 	db	0
  1064  007BF2  C4                 	db	196
  1065  007BF3  60                 	db	96
  1066  007BF4  C4                 	db	196
  1067  007BF5  60                 	db	96
  1068  007BF6  CA                 	db	202
  1069  007BF7  60                 	db	96
  1070  007BF8  6A                 	db	106
  1071  007BF9  C0                 	db	192
  1072  007BFA  6A                 	db	106
  1073  007BFB  C0                 	db	192
  1074  007BFC  6A                 	db	106
  1075  007BFD  C0                 	db	192
  1076  007BFE  6A                 	db	106
  1077  007BFF  C0                 	db	192
  1078  007C00  6A                 	db	106
  1079  007C01  C0                 	db	192
  1080  007C02  31                 	db	49
  1081  007C03  80                 	db	128
  1082  007C04  31                 	db	49
  1083  007C05  80                 	db	128
  1084  007C06  31                 	db	49
  1085  007C07  80                 	db	128
  1086  007C08  00                 	db	0
  1087  007C09  00                 	db	0
  1088  007C0A  00                 	db	0
  1089  007C0B  00                 	db	0
  1090  007C0C  00                 	db	0
  1091  007C0D  00                 	db	0
  1092  007C0E  00                 	db	0
  1093  007C0F  00                 	db	0
  1094  007C10  C1                 	db	193
  1095  007C11  80                 	db	128
  1096  007C12  63                 	db	99
  1097  007C13  00                 	db	0
  1098  007C14  36                 	db	54
  1099  007C15  00                 	db	0
  1100  007C16  36                 	db	54
  1101  007C17  00                 	db	0
  1102  007C18  1C                 	db	28
  1103  007C19  00                 	db	0
  1104  007C1A  1C                 	db	28
  1105  007C1B  00                 	db	0
  1106  007C1C  1C                 	db	28
  1107  007C1D  00                 	db	0
  1108  007C1E  36                 	db	54
  1109  007C1F  00                 	db	0
  1110  007C20  36                 	db	54
  1111  007C21  00                 	db	0
  1112  007C22  63                 	db	99
  1113  007C23  00                 	db	0
  1114  007C24  C1                 	db	193
  1115  007C25  80                 	db	128
  1116  007C26  00                 	db	0
  1117  007C27  00                 	db	0
  1118  007C28  00                 	db	0
  1119  007C29  00                 	db	0
  1120  007C2A  00                 	db	0
  1121  007C2B  00                 	db	0
  1122  007C2C  00                 	db	0
  1123  007C2D  C3                 	db	195
  1124  007C2E  66                 	db	102
  1125  007C2F  66                 	db	102
  1126  007C30  3C                 	db	60
  1127  007C31  3C                 	db	60
  1128  007C32  18                 	db	24
  1129  007C33  18                 	db	24
  1130  007C34  18                 	db	24
  1131  007C35  18                 	db	24
  1132  007C36  18                 	db	24
  1133  007C37  18                 	db	24
  1134  007C38  00                 	db	0
  1135  007C39  00                 	db	0
  1136  007C3A  00                 	db	0
  1137  007C3B  00                 	db	0
  1138  007C3C  FE                 	db	254
  1139  007C3D  FE                 	db	254
  1140  007C3E  06                 	db	6
  1141  007C3F  0C                 	db	12
  1142  007C40  18                 	db	24
  1143  007C41  30                 	db	48
  1144  007C42  30                 	db	48
  1145  007C43  60                 	db	96
  1146  007C44  C0                 	db	192
  1147  007C45  FE                 	db	254
  1148  007C46  FE                 	db	254
  1149  007C47  00                 	db	0
  1150  007C48  00                 	db	0
  1151  007C49  00                 	db	0
  1152  007C4A  00                 	db	0
  1153  007C4B  E0                 	db	224
  1154  007C4C  E0                 	db	224
  1155  007C4D  C0                 	db	192
  1156  007C4E  C0                 	db	192
  1157  007C4F  C0                 	db	192
  1158  007C50  C0                 	db	192
  1159  007C51  C0                 	db	192
  1160  007C52  C0                 	db	192
  1161  007C53  C0                 	db	192
  1162  007C54  C0                 	db	192
  1163  007C55  C0                 	db	192
  1164  007C56  C0                 	db	192
  1165  007C57  E0                 	db	224
  1166  007C58  E0                 	db	224
  1167  007C59  00                 	db	0
  1168  007C5A  C0                 	db	192
  1169  007C5B  C0                 	db	192
  1170  007C5C  C0                 	db	192
  1171  007C5D  60                 	db	96
  1172  007C5E  60                 	db	96
  1173  007C5F  60                 	db	96
  1174  007C60  60                 	db	96
  1175  007C61  60                 	db	96
  1176  007C62  30                 	db	48
  1177  007C63  30                 	db	48
  1178  007C64  30                 	db	48
  1179  007C65  00                 	db	0
  1180  007C66  00                 	db	0
  1181  007C67  00                 	db	0
  1182  007C68  00                 	db	0
  1183  007C69  E0                 	db	224
  1184  007C6A  E0                 	db	224
  1185  007C6B  60                 	db	96
  1186  007C6C  60                 	db	96
  1187  007C6D  60                 	db	96
  1188  007C6E  60                 	db	96
  1189  007C6F  60                 	db	96
  1190  007C70  60                 	db	96
  1191  007C71  60                 	db	96
  1192  007C72  60                 	db	96
  1193  007C73  60                 	db	96
  1194  007C74  60                 	db	96
  1195  007C75  E0                 	db	224
  1196  007C76  E0                 	db	224
  1197  007C77  00                 	db	0
  1198  007C78  38                 	db	56
  1199  007C79  38                 	db	56
  1200  007C7A  6C                 	db	108
  1201  007C7B  6C                 	db	108
  1202  007C7C  6C                 	db	108
  1203  007C7D  C6                 	db	198
  1204  007C7E  00                 	db	0
  1205  007C7F  00                 	db	0
  1206  007C80  00                 	db	0
  1207  007C81  00                 	db	0
  1208  007C82  00                 	db	0
  1209  007C83  00                 	db	0
  1210  007C84  00                 	db	0
  1211  007C85  00                 	db	0
  1212  007C86  00                 	db	0
  1213  007C87  00                 	db	0
  1214  007C88  00                 	db	0
  1215  007C89  00                 	db	0
  1216  007C8A  00                 	db	0
  1217  007C8B  00                 	db	0
  1218  007C8C  00                 	db	0
  1219  007C8D  00                 	db	0
  1220  007C8E  00                 	db	0
  1221  007C8F  00                 	db	0
  1222  007C90  00                 	db	0
  1223  007C91  00                 	db	0
  1224  007C92  00                 	db	0
  1225  007C93  FE                 	db	254
  1226  007C94  00                 	db	0
  1227  007C95  00                 	db	0
  1228  007C96  C0                 	db	192
  1229  007C97  60                 	db	96
  1230  007C98  00                 	db	0
  1231  007C99  00                 	db	0
  1232  007C9A  00                 	db	0
  1233  007C9B  00                 	db	0
  1234  007C9C  00                 	db	0
  1235  007C9D  00                 	db	0
  1236  007C9E  00                 	db	0
  1237  007C9F  00                 	db	0
  1238  007CA0  00                 	db	0
  1239  007CA1  00                 	db	0
  1240  007CA2  00                 	db	0
  1241  007CA3  00                 	db	0
  1242  007CA4  00                 	db	0
  1243  007CA5  00                 	db	0
  1244  007CA6  00                 	db	0
  1245  007CA7  00                 	db	0
  1246  007CA8  78                 	db	120
  1247  007CA9  FC                 	db	252
  1248  007CAA  CC                 	db	204
  1249  007CAB  3C                 	db	60
  1250  007CAC  FC                 	db	252
  1251  007CAD  CC                 	db	204
  1252  007CAE  FC                 	db	252
  1253  007CAF  6C                 	db	108
  1254  007CB0  00                 	db	0
  1255  007CB1  00                 	db	0
  1256  007CB2  00                 	db	0
  1257  007CB3  00                 	db	0
  1258  007CB4  C0                 	db	192
  1259  007CB5  C0                 	db	192
  1260  007CB6  C0                 	db	192
  1261  007CB7  F8                 	db	248
  1262  007CB8  FC                 	db	252
  1263  007CB9  CC                 	db	204
  1264  007CBA  CC                 	db	204
  1265  007CBB  CC                 	db	204
  1266  007CBC  CC                 	db	204
  1267  007CBD  F8                 	db	248
  1268  007CBE  F8                 	db	248
  1269  007CBF  00                 	db	0
  1270  007CC0  00                 	db	0
  1271  007CC1  00                 	db	0
  1272  007CC2  00                 	db	0
  1273  007CC3  00                 	db	0
  1274  007CC4  00                 	db	0
  1275  007CC5  00                 	db	0
  1276  007CC6  70                 	db	112
  1277  007CC7  78                 	db	120
  1278  007CC8  D8                 	db	216
  1279  007CC9  C0                 	db	192
  1280  007CCA  C0                 	db	192
  1281  007CCB  D8                 	db	216
  1282  007CCC  78                 	db	120
  1283  007CCD  70                 	db	112
  1284  007CCE  00                 	db	0
  1285  007CCF  00                 	db	0
  1286  007CD0  00                 	db	0
  1287  007CD1  00                 	db	0
  1288  007CD2  0C                 	db	12
  1289  007CD3  0C                 	db	12
  1290  007CD4  0C                 	db	12
  1291  007CD5  7C                 	db	124
  1292  007CD6  FC                 	db	252
  1293  007CD7  CC                 	db	204
  1294  007CD8  CC                 	db	204
  1295  007CD9  CC                 	db	204
  1296  007CDA  CC                 	db	204
  1297  007CDB  FC                 	db	252
  1298  007CDC  7C                 	db	124
  1299  007CDD  00                 	db	0
  1300  007CDE  00                 	db	0
  1301  007CDF  00                 	db	0
  1302  007CE0  00                 	db	0
  1303  007CE1  00                 	db	0
  1304  007CE2  00                 	db	0
  1305  007CE3  00                 	db	0
  1306  007CE4  70                 	db	112
  1307  007CE5  F8                 	db	248
  1308  007CE6  D8                 	db	216
  1309  007CE7  F8                 	db	248
  1310  007CE8  C0                 	db	192
  1311  007CE9  D8                 	db	216
  1312  007CEA  F8                 	db	248
  1313  007CEB  70                 	db	112
  1314  007CEC  00                 	db	0
  1315  007CED  00                 	db	0
  1316  007CEE  00                 	db	0
  1317  007CEF  00                 	db	0
  1318  007CF0  30                 	db	48
  1319  007CF1  70                 	db	112
  1320  007CF2  60                 	db	96
  1321  007CF3  F0                 	db	240
  1322  007CF4  F0                 	db	240
  1323  007CF5  60                 	db	96
  1324  007CF6  60                 	db	96
  1325  007CF7  60                 	db	96
  1326  007CF8  60                 	db	96
  1327  007CF9  60                 	db	96
  1328  007CFA  60                 	db	96
  1329  007CFB  00                 	db	0
  1330  007CFC  00                 	db	0
  1331  007CFD  00                 	db	0
  1332  007CFE  00                 	db	0
  1333  007CFF  00                 	db	0
  1334  007D00  00                 	db	0
  1335  007D01  00                 	db	0
  1336  007D02  6C                 	db	108
  1337  007D03  FC                 	db	252
  1338  007D04  CC                 	db	204
  1339  007D05  CC                 	db	204
  1340  007D06  CC                 	db	204
  1341  007D07  CC                 	db	204
  1342  007D08  FC                 	db	252
  1343  007D09  6C                 	db	108
  1344  007D0A  0C                 	db	12
  1345  007D0B  CC                 	db	204
  1346  007D0C  78                 	db	120
  1347  007D0D  00                 	db	0
  1348  007D0E  C0                 	db	192
  1349  007D0F  C0                 	db	192
  1350  007D10  C0                 	db	192
  1351  007D11  D8                 	db	216
  1352  007D12  FC                 	db	252
  1353  007D13  CC                 	db	204
  1354  007D14  CC                 	db	204
  1355  007D15  CC                 	db	204
  1356  007D16  CC                 	db	204
  1357  007D17  CC                 	db	204
  1358  007D18  CC                 	db	204
  1359  007D19  00                 	db	0
  1360  007D1A  00                 	db	0
  1361  007D1B  00                 	db	0
  1362  007D1C  00                 	db	0
  1363  007D1D  C0                 	db	192
  1364  007D1E  C0                 	db	192
  1365  007D1F  00                 	db	0
  1366  007D20  C0                 	db	192
  1367  007D21  C0                 	db	192
  1368  007D22  C0                 	db	192
  1369  007D23  C0                 	db	192
  1370  007D24  C0                 	db	192
  1371  007D25  C0                 	db	192
  1372  007D26  C0                 	db	192
  1373  007D27  C0                 	db	192
  1374  007D28  00                 	db	0
  1375  007D29  00                 	db	0
  1376  007D2A  00                 	db	0
  1377  007D2B  00                 	db	0
  1378  007D2C  30                 	db	48
  1379  007D2D  30                 	db	48
  1380  007D2E  00                 	db	0
  1381  007D2F  30                 	db	48
  1382  007D30  30                 	db	48
  1383  007D31  30                 	db	48
  1384  007D32  30                 	db	48
  1385  007D33  30                 	db	48
  1386  007D34  30                 	db	48
  1387  007D35  30                 	db	48
  1388  007D36  30                 	db	48
  1389  007D37  30                 	db	48
  1390  007D38  F0                 	db	240
  1391  007D39  E0                 	db	224
  1392  007D3A  00                 	db	0
  1393  007D3B  C0                 	db	192
  1394  007D3C  C0                 	db	192
  1395  007D3D  C0                 	db	192
  1396  007D3E  CC                 	db	204
  1397  007D3F  D8                 	db	216
  1398  007D40  F0                 	db	240
  1399  007D41  F8                 	db	248
  1400  007D42  D8                 	db	216
  1401  007D43  D8                 	db	216
  1402  007D44  CC                 	db	204
  1403  007D45  CC                 	db	204
  1404  007D46  00                 	db	0
  1405  007D47  00                 	db	0
  1406  007D48  00                 	db	0
  1407  007D49  00                 	db	0
  1408  007D4A  C0                 	db	192
  1409  007D4B  C0                 	db	192
  1410  007D4C  C0                 	db	192
  1411  007D4D  C0                 	db	192
  1412  007D4E  C0                 	db	192
  1413  007D4F  C0                 	db	192
  1414  007D50  C0                 	db	192
  1415  007D51  C0                 	db	192
  1416  007D52  C0                 	db	192
  1417  007D53  C0                 	db	192
  1418  007D54  C0                 	db	192
  1419  007D55  00                 	db	0
  1420  007D56  00                 	db	0
  1421  007D57  00                 	db	0
  1422  007D58  00                 	db	0
  1423  007D59  00                 	db	0
  1424  007D5A  00                 	db	0
  1425  007D5B  00                 	db	0
  1426  007D5C  00                 	db	0
  1427  007D5D  00                 	db	0
  1428  007D5E  00                 	db	0
  1429  007D5F  00                 	db	0
  1430  007D60  D9                 	db	217
  1431  007D61  80                 	db	128
  1432  007D62  FF                 	db	255
  1433  007D63  C0                 	db	192
  1434  007D64  CC                 	db	204
  1435  007D65  C0                 	db	192
  1436  007D66  CC                 	db	204
  1437  007D67  C0                 	db	192
  1438  007D68  CC                 	db	204
  1439  007D69  C0                 	db	192
  1440  007D6A  CC                 	db	204
  1441  007D6B  C0                 	db	192
  1442  007D6C  CC                 	db	204
  1443  007D6D  C0                 	db	192
  1444  007D6E  CC                 	db	204
  1445  007D6F  C0                 	db	192
  1446  007D70  00                 	db	0
  1447  007D71  00                 	db	0
  1448  007D72  00                 	db	0
  1449  007D73  00                 	db	0
  1450  007D74  00                 	db	0
  1451  007D75  00                 	db	0
  1452  007D76  00                 	db	0
  1453  007D77  00                 	db	0
  1454  007D78  00                 	db	0
  1455  007D79  00                 	db	0
  1456  007D7A  D8                 	db	216
  1457  007D7B  FC                 	db	252
  1458  007D7C  CC                 	db	204
  1459  007D7D  CC                 	db	204
  1460  007D7E  CC                 	db	204
  1461  007D7F  CC                 	db	204
  1462  007D80  CC                 	db	204
  1463  007D81  CC                 	db	204
  1464  007D82  00                 	db	0
  1465  007D83  00                 	db	0
  1466  007D84  00                 	db	0
  1467  007D85  00                 	db	0
  1468  007D86  00                 	db	0
  1469  007D87  00                 	db	0
  1470  007D88  00                 	db	0
  1471  007D89  78                 	db	120
  1472  007D8A  78                 	db	120
  1473  007D8B  CC                 	db	204
  1474  007D8C  CC                 	db	204
  1475  007D8D  CC                 	db	204
  1476  007D8E  CC                 	db	204
  1477  007D8F  78                 	db	120
  1478  007D90  78                 	db	120
  1479  007D91  00                 	db	0
  1480  007D92  00                 	db	0
  1481  007D93  00                 	db	0
  1482  007D94  00                 	db	0
  1483  007D95  00                 	db	0
  1484  007D96  00                 	db	0
  1485  007D97  00                 	db	0
  1486  007D98  D8                 	db	216
  1487  007D99  FC                 	db	252
  1488  007D9A  CC                 	db	204
  1489  007D9B  CC                 	db	204
  1490  007D9C  CC                 	db	204
  1491  007D9D  CC                 	db	204
  1492  007D9E  F8                 	db	248
  1493  007D9F  D8                 	db	216
  1494  007DA0  C0                 	db	192
  1495  007DA1  C0                 	db	192
  1496  007DA2  C0                 	db	192
  1497  007DA3  00                 	db	0
  1498  007DA4  00                 	db	0
  1499  007DA5  00                 	db	0
  1500  007DA6  00                 	db	0
  1501  007DA7  6C                 	db	108
  1502  007DA8  FC                 	db	252
  1503  007DA9  CC                 	db	204
  1504  007DAA  CC                 	db	204
  1505  007DAB  CC                 	db	204
  1506  007DAC  CC                 	db	204
  1507  007DAD  FC                 	db	252
  1508  007DAE  6C                 	db	108
  1509  007DAF  0C                 	db	12
  1510  007DB0  0C                 	db	12
  1511  007DB1  0C                 	db	12
  1512  007DB2  00                 	db	0
  1513  007DB3  00                 	db	0
  1514  007DB4  00                 	db	0
  1515  007DB5  00                 	db	0
  1516  007DB6  D0                 	db	208
  1517  007DB7  F0                 	db	240
  1518  007DB8  C0                 	db	192
  1519  007DB9  C0                 	db	192
  1520  007DBA  C0                 	db	192
  1521  007DBB  C0                 	db	192
  1522  007DBC  C0                 	db	192
  1523  007DBD  C0                 	db	192
  1524  007DBE  00                 	db	0
  1525  007DBF  00                 	db	0
  1526  007DC0  00                 	db	0
  1527  007DC1  00                 	db	0
  1528  007DC2  00                 	db	0
  1529  007DC3  00                 	db	0
  1530  007DC4  00                 	db	0
  1531  007DC5  70                 	db	112
  1532  007DC6  F8                 	db	248
  1533  007DC7  C8                 	db	200
  1534  007DC8  E0                 	db	224
  1535  007DC9  38                 	db	56
  1536  007DCA  98                 	db	152
  1537  007DCB  F8                 	db	248
  1538  007DCC  70                 	db	112
  1539  007DCD  00                 	db	0
  1540  007DCE  00                 	db	0
  1541  007DCF  00                 	db	0
  1542  007DD0  00                 	db	0
  1543  007DD1  20                 	db	32
  1544  007DD2  60                 	db	96
  1545  007DD3  60                 	db	96
  1546  007DD4  F0                 	db	240
  1547  007DD5  F0                 	db	240
  1548  007DD6  60                 	db	96
  1549  007DD7  60                 	db	96
  1550  007DD8  60                 	db	96
  1551  007DD9  60                 	db	96
  1552  007DDA  70                 	db	112
  1553  007DDB  70                 	db	112
  1554  007DDC  00                 	db	0
  1555  007DDD  00                 	db	0
  1556  007DDE  00                 	db	0
  1557  007DDF  00                 	db	0
  1558  007DE0  00                 	db	0
  1559  007DE1  00                 	db	0
  1560  007DE2  00                 	db	0
  1561  007DE3  CC                 	db	204
  1562  007DE4  CC                 	db	204
  1563  007DE5  CC                 	db	204
  1564  007DE6  CC                 	db	204
  1565  007DE7  CC                 	db	204
  1566  007DE8  CC                 	db	204
  1567  007DE9  FC                 	db	252
  1568  007DEA  6C                 	db	108
  1569  007DEB  00                 	db	0
  1570  007DEC  00                 	db	0
  1571  007DED  00                 	db	0
  1572  007DEE  00                 	db	0
  1573  007DEF  00                 	db	0
  1574  007DF0  00                 	db	0
  1575  007DF1  00                 	db	0
  1576  007DF2  C6                 	db	198
  1577  007DF3  C6                 	db	198
  1578  007DF4  6C                 	db	108
  1579  007DF5  6C                 	db	108
  1580  007DF6  6C                 	db	108
  1581  007DF7  38                 	db	56
  1582  007DF8  38                 	db	56
  1583  007DF9  38                 	db	56
  1584  007DFA  00                 	db	0
  1585  007DFB  00                 	db	0
  1586  007DFC  00                 	db	0
  1587  007DFD  00                 	db	0
  1588  007DFE  00                 	db	0
  1589  007DFF  00                 	db	0
  1590  007E00  00                 	db	0
  1591  007E01  00                 	db	0
  1592  007E02  00                 	db	0
  1593  007E03  00                 	db	0
  1594  007E04  00                 	db	0
  1595  007E05  DD                 	db	221
  1596  007E06  80                 	db	128
  1597  007E07  DD                 	db	221
  1598  007E08  80                 	db	128
  1599  007E09  DD                 	db	221
  1600  007E0A  80                 	db	128
  1601  007E0B  D5                 	db	213
  1602  007E0C  80                 	db	128
  1603  007E0D  55                 	db	85
  1604  007E0E  00                 	db	0
  1605  007E0F  77                 	db	119
  1606  007E10  00                 	db	0
  1607  007E11  77                 	db	119
  1608  007E12  00                 	db	0
  1609  007E13  77                 	db	119
  1610  007E14  00                 	db	0
  1611  007E15  00                 	db	0
  1612  007E16  00                 	db	0
  1613  007E17  00                 	db	0
  1614  007E18  00                 	db	0
  1615  007E19  00                 	db	0
  1616  007E1A  00                 	db	0
  1617  007E1B  00                 	db	0
  1618  007E1C  00                 	db	0
  1619  007E1D  00                 	db	0
  1620  007E1E  00                 	db	0
  1621  007E1F  CC                 	db	204
  1622  007E20  78                 	db	120
  1623  007E21  78                 	db	120
  1624  007E22  30                 	db	48
  1625  007E23  30                 	db	48
  1626  007E24  78                 	db	120
  1627  007E25  78                 	db	120
  1628  007E26  CC                 	db	204
  1629  007E27  00                 	db	0
  1630  007E28  00                 	db	0
  1631  007E29  00                 	db	0
  1632  007E2A  00                 	db	0
  1633  007E2B  00                 	db	0
  1634  007E2C  00                 	db	0
  1635  007E2D  00                 	db	0
  1636  007E2E  C6                 	db	198
  1637  007E2F  C6                 	db	198
  1638  007E30  6C                 	db	108
  1639  007E31  6C                 	db	108
  1640  007E32  6C                 	db	108
  1641  007E33  38                 	db	56
  1642  007E34  38                 	db	56
  1643  007E35  38                 	db	56
  1644  007E36  30                 	db	48
  1645  007E37  F0                 	db	240
  1646  007E38  E0                 	db	224
  1647  007E39  00                 	db	0
  1648  007E3A  00                 	db	0
  1649  007E3B  00                 	db	0
  1650  007E3C  00                 	db	0
  1651  007E3D  FC                 	db	252
  1652  007E3E  FC                 	db	252
  1653  007E3F  18                 	db	24
  1654  007E40  30                 	db	48
  1655  007E41  30                 	db	48
  1656  007E42  60                 	db	96
  1657  007E43  FC                 	db	252
  1658  007E44  FC                 	db	252
  1659  007E45  00                 	db	0
  1660  007E46  00                 	db	0
  1661  007E47  00                 	db	0
  1662  007E48  00                 	db	0
  1663  007E49  30                 	db	48
  1664  007E4A  70                 	db	112
  1665  007E4B  60                 	db	96
  1666  007E4C  60                 	db	96
  1667  007E4D  60                 	db	96
  1668  007E4E  60                 	db	96
  1669  007E4F  C0                 	db	192
  1670  007E50  C0                 	db	192
  1671  007E51  60                 	db	96
  1672  007E52  60                 	db	96
  1673  007E53  60                 	db	96
  1674  007E54  60                 	db	96
  1675  007E55  70                 	db	112
  1676  007E56  30                 	db	48
  1677  007E57  00                 	db	0
  1678  007E58  C0                 	db	192
  1679  007E59  C0                 	db	192
  1680  007E5A  C0                 	db	192
  1681  007E5B  C0                 	db	192
  1682  007E5C  C0                 	db	192
  1683  007E5D  C0                 	db	192
  1684  007E5E  C0                 	db	192
  1685  007E5F  C0                 	db	192
  1686  007E60  C0                 	db	192
  1687  007E61  C0                 	db	192
  1688  007E62  C0                 	db	192
  1689  007E63  C0                 	db	192
  1690  007E64  C0                 	db	192
  1691  007E65  C0                 	db	192
  1692  007E66  00                 	db	0
  1693  007E67  C0                 	db	192
  1694  007E68  E0                 	db	224
  1695  007E69  60                 	db	96
  1696  007E6A  60                 	db	96
  1697  007E6B  60                 	db	96
  1698  007E6C  60                 	db	96
  1699  007E6D  30                 	db	48
  1700  007E6E  30                 	db	48
  1701  007E6F  60                 	db	96
  1702  007E70  60                 	db	96
  1703  007E71  60                 	db	96
  1704  007E72  60                 	db	96
  1705  007E73  E0                 	db	224
  1706  007E74  C0                 	db	192
  1707  007E75  00                 	db	0
  1708  007E76  00                 	db	0
  1709  007E77  00                 	db	0
  1710  007E78  00                 	db	0
  1711  007E79  00                 	db	0
  1712  007E7A  E4                 	db	228
  1713  007E7B  FC                 	db	252
  1714  007E7C  9C                 	db	156
  1715  007E7D  00                 	db	0
  1716  007E7E  00                 	db	0
  1717  007E7F  00                 	db	0
  1718  007E80  00                 	db	0
  1719  007E81  00                 	db	0
  1720  007E82  00                 	db	0
  1721  007E83  00                 	db	0
  1722  007E84                     __end_of_arialNarrow_12ptBitmaps:
  1723                           	callstack 0
  1724  007E84                     _arialNarrow_12ptDescriptors:
  1725                           	callstack 0
  1726  007E84  08                 	db	8
  1727  007E85  0000               	dw	0
  1728  007E87  02                 	db	2
  1729  007E88  000F               	dw	15
  1730  007E8A  05                 	db	5
  1731  007E8B  001E               	dw	30
  1732  007E8D  07                 	db	7
  1733  007E8E  002D               	dw	45
  1734  007E90  07                 	db	7
  1735  007E91  003C               	dw	60
  1736  007E93  0A                 	db	10
  1737  007E94  004B               	dw	75
  1738  007E96  08                 	db	8
  1739  007E97  0069               	dw	105
  1740  007E99  02                 	db	2
  1741  007E9A  0078               	dw	120
  1742  007E9C  04                 	db	4
  1743  007E9D  0087               	dw	135
  1744  007E9F  04                 	db	4
  1745  007EA0  0096               	dw	150
  1746  007EA2  05                 	db	5
  1747  007EA3  00A5               	dw	165
  1748  007EA5  06                 	db	6
  1749  007EA6  00B4               	dw	180
  1750  007EA8  02                 	db	2
  1751  007EA9  00C3               	dw	195
  1752  007EAB  04                 	db	4
  1753  007EAC  00D2               	dw	210
  1754  007EAE  02                 	db	2
  1755  007EAF  00E1               	dw	225
  1756  007EB1  04                 	db	4
  1757  007EB2  00F0               	dw	240
  1758  007EB4  06                 	db	6
  1759  007EB5  00FF               	dw	255
  1760  007EB7  04                 	db	4
  1761  007EB8  010E               	dw	270
  1762  007EBA  06                 	db	6
  1763  007EBB  011D               	dw	285
  1764  007EBD  06                 	db	6
  1765  007EBE  012C               	dw	300
  1766  007EC0  07                 	db	7
  1767  007EC1  013B               	dw	315
  1768  007EC3  06                 	db	6
  1769  007EC4  014A               	dw	330
  1770  007EC6  05                 	db	5
  1771  007EC7  0159               	dw	345
  1772  007EC9  05                 	db	5
  1773  007ECA  0168               	dw	360
  1774  007ECC  06                 	db	6
  1775  007ECD  0177               	dw	375
  1776  007ECF  06                 	db	6
  1777  007ED0  0186               	dw	390
  1778  007ED2  02                 	db	2
  1779  007ED3  0195               	dw	405
  1780  007ED5  02                 	db	2
  1781  007ED6  01A4               	dw	420
  1782  007ED8  06                 	db	6
  1783  007ED9  01B3               	dw	435
  1784  007EDB  06                 	db	6
  1785  007EDC  01C2               	dw	450
  1786  007EDE  06                 	db	6
  1787  007EDF  01D1               	dw	465
  1788  007EE1  06                 	db	6
  1789  007EE2  01E0               	dw	480
  1790  007EE4  0D                 	db	13
  1791  007EE5  01EF               	dw	495
  1792  007EE7  09                 	db	9
  1793  007EE8  020D               	dw	525
  1794  007EEA  07                 	db	7
  1795  007EEB  022B               	dw	555
  1796  007EED  08                 	db	8
  1797  007EEE  023A               	dw	570
  1798  007EF0  07                 	db	7
  1799  007EF1  0249               	dw	585
  1800  007EF3  07                 	db	7
  1801  007EF4  0258               	dw	600
  1802  007EF6  06                 	db	6
  1803  007EF7  0267               	dw	615
  1804  007EF9  08                 	db	8
  1805  007EFA  0276               	dw	630
  1806  007EFC  07                 	db	7
  1807  007EFD  0285               	dw	645
  1808  007EFF  02                 	db	2
  1809  007F00  0294               	dw	660
  1810  007F02  06                 	db	6
  1811  007F03  02A3               	dw	675
  1812  007F05  08                 	db	8
  1813  007F06  02B2               	dw	690
  1814  007F08  07                 	db	7
  1815  007F09  02C1               	dw	705
  1816  007F0B  09                 	db	9
  1817  007F0C  02D0               	dw	720
  1818  007F0E  07                 	db	7
  1819  007F0F  02EE               	dw	750
  1820  007F11  08                 	db	8
  1821  007F12  02FD               	dw	765
  1822  007F14  07                 	db	7
  1823  007F15  030C               	dw	780
  1824  007F17  09                 	db	9
  1825  007F18  031B               	dw	795
  1826  007F1A  08                 	db	8
  1827  007F1B  0339               	dw	825
  1828  007F1D  07                 	db	7
  1829  007F1E  0348               	dw	840
  1830  007F20  08                 	db	8
  1831  007F21  0357               	dw	855
  1832  007F23  07                 	db	7
  1833  007F24  0366               	dw	870
  1834  007F26  09                 	db	9
  1835  007F27  0375               	dw	885
  1836  007F29  0B                 	db	11
  1837  007F2A  0393               	dw	915
  1838  007F2C  09                 	db	9
  1839  007F2D  03B1               	dw	945
  1840  007F2F  08                 	db	8
  1841  007F30  03CF               	dw	975
  1842  007F32  07                 	db	7
  1843  007F33  03DE               	dw	990
  1844  007F35  03                 	db	3
  1845  007F36  03ED               	dw	1005
  1846  007F38  04                 	db	4
  1847  007F39  03FC               	dw	1020
  1848  007F3B  03                 	db	3
  1849  007F3C  040B               	dw	1035
  1850  007F3E  07                 	db	7
  1851  007F3F  041A               	dw	1050
  1852  007F41  07                 	db	7
  1853  007F42  0429               	dw	1065
  1854  007F44  03                 	db	3
  1855  007F45  0438               	dw	1080
  1856  007F47  06                 	db	6
  1857  007F48  0447               	dw	1095
  1858  007F4A  06                 	db	6
  1859  007F4B  0456               	dw	1110
  1860  007F4D  05                 	db	5
  1861  007F4E  0465               	dw	1125
  1862  007F50  06                 	db	6
  1863  007F51  0474               	dw	1140
  1864  007F53  05                 	db	5
  1865  007F54  0483               	dw	1155
  1866  007F56  04                 	db	4
  1867  007F57  0492               	dw	1170
  1868  007F59  06                 	db	6
  1869  007F5A  04A1               	dw	1185
  1870  007F5C  06                 	db	6
  1871  007F5D  04B0               	dw	1200
  1872  007F5F  02                 	db	2
  1873  007F60  04BF               	dw	1215
  1874  007F62  04                 	db	4
  1875  007F63  04CE               	dw	1230
  1876  007F65  06                 	db	6
  1877  007F66  04DD               	dw	1245
  1878  007F68  02                 	db	2
  1879  007F69  04EC               	dw	1260
  1880  007F6B  0A                 	db	10
  1881  007F6C  04FB               	dw	1275
  1882  007F6E  06                 	db	6
  1883  007F6F  0519               	dw	1305
  1884  007F71  06                 	db	6
  1885  007F72  0528               	dw	1320
  1886  007F74  06                 	db	6
  1887  007F75  0537               	dw	1335
  1888  007F77  06                 	db	6
  1889  007F78  0546               	dw	1350
  1890  007F7A  04                 	db	4
  1891  007F7B  0555               	dw	1365
  1892  007F7D  05                 	db	5
  1893  007F7E  0564               	dw	1380
  1894  007F80  04                 	db	4
  1895  007F81  0573               	dw	1395
  1896  007F83  06                 	db	6
  1897  007F84  0582               	dw	1410
  1898  007F86  07                 	db	7
  1899  007F87  0591               	dw	1425
  1900  007F89  09                 	db	9
  1901  007F8A  05A0               	dw	1440
  1902  007F8C  06                 	db	6
  1903  007F8D  05BE               	dw	1470
  1904  007F8F  07                 	db	7
  1905  007F90  05CD               	dw	1485
  1906  007F92  06                 	db	6
  1907  007F93  05DC               	dw	1500
  1908  007F95  04                 	db	4
  1909  007F96  05EB               	dw	1515
  1910  007F98  02                 	db	2
  1911  007F99  05FA               	dw	1530
  1912  007F9B  04                 	db	4
  1913  007F9C  0609               	dw	1545
  1914  007F9E  06                 	db	6
  1915  007F9F  0618               	dw	1560
  1916  007FA1                     __end_of_arialNarrow_12ptDescriptors:
  1917                           	callstack 0
  1918  007FA1                     _arialNarrow_12ptFontInfo:
  1919                           	callstack 0
  1920  007FA1  0F                 	db	15
  1921  007FA2  20                 	db	32
  1922  007FA3  7E                 	db	126
  1923  007FA4  84                 	db	low _arialNarrow_12ptDescriptors
  1924  007FA5  7E                 	db	high _arialNarrow_12ptDescriptors
  1925  007FA6  5D                 	db	low _arialNarrow_12ptBitmaps
  1926  007FA7  78                 	db	high _arialNarrow_12ptBitmaps
  1927  007FA8                     __end_of_arialNarrow_12ptFontInfo:
  1928                           	callstack 0
  1929  0000                     _ANSB2	set	31178
  1930  0000                     _ANSB1	set	31177
  1931  0000                     _WPUB	set	3937
  1932  0000                     _PORTBbits	set	3969
  1933  0000                     _ADRESL	set	4035
  1934  0000                     _ADRESH	set	4036
  1935  0000                     _ADCON0	set	4034
  1936  0000                     _TRISA	set	3986
  1937  0000                     _PORTA	set	3968
  1938  0000                     _ADCON2	set	4032
  1939  0000                     _T2CONbits	set	4026
  1940  0000                     _CCPR2L	set	3943
  1941  0000                     _CCP2CONbits	set	3942
  1942  0000                     _PR2	set	4027
  1943  0000                     _TMR0L	set	4054
  1944  0000                     _TMR0H	set	4055
  1945  0000                     _T0CON	set	4053
  1946  0000                     _OSCCON	set	4051
  1947  0000                     _TMR0IF	set	32658
  1948  0000                     _LATB4	set	31828
  1949  0000                     _LATB3	set	31827
  1950  0000                     _LATB1	set	31825
  1951  0000                     _TRISB4	set	31900
  1952  0000                     _TRISB3	set	31899
  1953  0000                     _INTEDG1	set	32653
  1954  0000                     _RBPU	set	32655
  1955  0000                     _TRISB1	set	31897
  1956  0000                     _LATB2	set	31826
  1957  0000                     _TRISB2	set	31898
  1958  0000                     _INT1IF	set	32640
  1959  0000                     _LATC2	set	31834
  1960  0000                     _LATC5	set	31837
  1961  0000                     _TRISC4	set	31908
  1962  0000                     _TRISC3	set	31907
  1963  0000                     _TRISC2	set	31906
  1964  0000                     _TRISC5	set	31909
  1965  0000                     _LATC3	set	31835
  1966  0000                     _LATC4	set	31836
  1967  0000                     _TMR2IF	set	31985
  1968  0000                     _TRISC1	set	31905
  1969  0000                     _TMR0IE	set	32661
  1970  0000                     _LATC0	set	31832
  1971  0000                     _TRISC0	set	31904
  1972  0000                     _INT1IE	set	32643
  1973  0000                     _GIE	set	32663
  1974  0000                     _PLLEN	set	31966
  1975  007FA8                     STR_9:
  1976  007FA8  50                 	db	80	;'P'
  1977  007FA9  41                 	db	65	;'A'
  1978  007FAA  52                 	db	82	;'R'
  1979  007FAB  41                 	db	65	;'A'
  1980  007FAC  4D                 	db	77	;'M'
  1981  007FAD  45                 	db	69	;'E'
  1982  007FAE  54                 	db	84	;'T'
  1983  007FAF  45                 	db	69	;'E'
  1984  007FB0  52                 	db	82	;'R'
  1985  007FB1  53                 	db	83	;'S'
  1986  007FB2  00                 	db	0
  1987  007FB3                     STR_2:
  1988  007FB3  50                 	db	80	;'P'
  1989  007FB4  61                 	db	97	;'a'
  1990  007FB5  72                 	db	114	;'r'
  1991  007FB6  61                 	db	97	;'a'
  1992  007FB7  6D                 	db	109	;'m'
  1993  007FB8  65                 	db	101	;'e'
  1994  007FB9  74                 	db	116	;'t'
  1995  007FBA  72                 	db	114	;'r'
  1996  007FBB  65                 	db	101	;'e'
  1997  007FBC  73                 	db	115	;'s'
  1998  007FBD  00                 	db	0
  1999  007FBE                     STR_1:
  2000  007FBE  4D                 	db	77	;'M'
  2001  007FBF  65                 	db	101	;'e'
  2002  007FC0  6E                 	db	110	;'n'
  2003  007FC1  75                 	db	117	;'u'
  2004  007FC2  53                 	db	83	;'S'
  2005  007FC3  74                 	db	116	;'t'
  2006  007FC4  61                 	db	97	;'a'
  2007  007FC5  72                 	db	114	;'r'
  2008  007FC6  74                 	db	116	;'t'
  2009  007FC7  00                 	db	0
  2010  007FC8                     STR_3:
  2011  007FC8  31                 	db	49	;'1'
  2012  007FC9  20                 	db	32
  2013  007FCA  50                 	db	80	;'P'
  2014  007FCB  6C                 	db	108	;'l'
  2015  007FCC  61                 	db	97	;'a'
  2016  007FCD  79                 	db	121	;'y'
  2017  007FCE  65                 	db	101	;'e'
  2018  007FCF  72                 	db	114	;'r'
  2019  007FD0  00                 	db	0
  2020  007FD1                     STR_4:
  2021  007FD1  32                 	db	50	;'2'
  2022  007FD2  20                 	db	32
  2023  007FD3  50                 	db	80	;'P'
  2024  007FD4  6C                 	db	108	;'l'
  2025  007FD5  61                 	db	97	;'a'
  2026  007FD6  79                 	db	121	;'y'
  2027  007FD7  65                 	db	101	;'e'
  2028  007FD8  72                 	db	114	;'r'
  2029  007FD9  00                 	db	0
  2030  007FDA                     STR_8:
  2031  007FDA  57                 	db	87	;'W'
  2032  007FDB  45                 	db	69	;'E'
  2033  007FDC  4C                 	db	76	;'L'
  2034  007FDD  43                 	db	67	;'C'
  2035  007FDE  4F                 	db	79	;'O'
  2036  007FDF  4D                 	db	77	;'M'
  2037  007FE0  45                 	db	69	;'E'
  2038  007FE1  00                 	db	0
  2039  007FE2                     STR_5:
  2040  007FE2  51                 	db	81	;'Q'
  2041  007FE3  55                 	db	85	;'U'
  2042  007FE4  49                 	db	73	;'I'
  2043  007FE5  54                 	db	84	;'T'
  2044  007FE6  54                 	db	84	;'T'
  2045  007FE7  45                 	db	69	;'E'
  2046  007FE8  52                 	db	82	;'R'
  2047  007FE9  00                 	db	0
  2048  007FEA                     STR_10:
  2049  007FEA  58                 	db	88	;'X'
  2050  007FEB  3A                 	db	58	;':'
  2051  007FEC  20                 	db	32
  2052  007FED  25                 	db	37
  2053  007FEE  64                 	db	100	;'d'
  2054  007FEF  00                 	db	0
  2055  007FF0                     STR_11:
  2056  007FF0  59                 	db	89	;'Y'
  2057  007FF1  3A                 	db	58	;':'
  2058  007FF2  20                 	db	32
  2059  007FF3  25                 	db	37
  2060  007FF4  64                 	db	100	;'d'
  2061  007FF5  00                 	db	0
  2062  007FF6                     STR_6:
  2063  007FF6  3C                 	db	60	;'<'
  2064  007FF7  2D                 	db	45
  2065  007FF8  2D                 	db	45
  2066  007FF9  00                 	db	0
  2067  007FFA                     STR_7:
  2068  007FFA  2D                 	db	45
  2069  007FFB  2D                 	db	45
  2070  007FFC  3E                 	db	62	;'>'
  2071  007FFD  00                 	db	0
  2072  007FFE  00                 	db	0	; dummy byte at the end
  2073  0000                     
  2074                           ; #config settings
  2075                           
  2076                           	psect	cinit
  2077  005D9E                     __pcinit:
  2078                           	callstack 0
  2079  005D9E                     start_initialization:
  2080                           	callstack 0
  2081  005D9E                     __initialization:
  2082                           	callstack 0
  2083                           
  2084                           ; Clear objects allocated to BANK1 (201 bytes)
  2085  005D9E  EE01  F000         	lfsr	0,__pbssBANK1
  2086  005DA2  0EC9               	movlw	201
  2087  005DA4                     clear_0:
  2088  005DA4  6AEE               	clrf	postinc0,c
  2089  005DA6  06E8               	decf	wreg,f,c
  2090  005DA8  E1FD               	bnz	clear_0
  2091                           
  2092                           ; Clear objects allocated to BANK0 (75 bytes)
  2093  005DAA  EE00  F0B5         	lfsr	0,__pbssBANK0
  2094  005DAE  0E4B               	movlw	75
  2095  005DB0                     clear_1:
  2096  005DB0  6AEE               	clrf	postinc0,c
  2097  005DB2  06E8               	decf	wreg,f,c
  2098  005DB4  E1FD               	bnz	clear_1
  2099                           
  2100                           ; Clear objects allocated to COMRAM (7 bytes)
  2101  005DB6  EE00  F047         	lfsr	0,__pbssCOMRAM
  2102  005DBA  0E07               	movlw	7
  2103  005DBC                     clear_2:
  2104  005DBC  6AEE               	clrf	postinc0,c
  2105  005DBE  06E8               	decf	wreg,f,c
  2106  005DC0  E1FD               	bnz	clear_2
  2107  005DC2                     end_of_initialization:
  2108                           	callstack 0
  2109  005DC2                     __end_of__initialization:
  2110                           	callstack 0
  2111  005DC2  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2112  005DC4  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2113  005DC6  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2114  005DC8  6EF8               	movwf	tblptru,c
  2115  005DCA  0100               	movlb	0
  2116  005DCC  EFA9  F02F         	goto	_main	;jump to C main() function
  2117                           
  2118                           	psect	bssCOMRAM
  2119  000047                     __pbssCOMRAM:
  2120                           	callstack 0
  2121  000047                     _width:
  2122                           	callstack 0
  2123  000047                     	ds	2
  2124  000049                     _prec:
  2125                           	callstack 0
  2126  000049                     	ds	2
  2127  00004B                     _flags:
  2128                           	callstack 0
  2129  00004B                     	ds	2
  2130  00004D                     _gameControllerState:
  2131                           	callstack 0
  2132  00004D                     	ds	1
  2133                           
  2134                           	psect	bssBANK0
  2135  0000B5                     __pbssBANK0:
  2136                           	callstack 0
  2137  0000B5                     _theXF:
  2138                           	callstack 0
  2139  0000B5                     	ds	38
  2140  0000DB                     _nout:
  2141                           	callstack 0
  2142  0000DB                     	ds	2
  2143  0000DD                     _displayState:
  2144                           	callstack 0
  2145  0000DD                     	ds	1
  2146  0000DE                     _touchScreenState:
  2147                           	callstack 0
  2148  0000DE                     	ds	1
  2149  0000DF                     _sleepState:
  2150                           	callstack 0
  2151  0000DF                     	ds	1
  2152  0000E0                     _dbuf:
  2153                           	callstack 0
  2154  0000E0                     	ds	32
  2155                           
  2156                           	psect	bssBANK1
  2157  000100                     __pbssBANK1:
  2158                           	callstack 0
  2159  000100                     _g1:
  2160                           	callstack 0
  2161  000100                     	ds	201
  2162                           
  2163                           	psect	cstackBANK1
  2164  0001C9                     __pcstackBANK1:
  2165                           	callstack 0
  2166  0001C9                     Factory_exec@ev:
  2167                           	callstack 0
  2168                           
  2169                           ; 1 bytes @ 0x0
  2170  0001C9                     	ds	1
  2171                           
  2172                           	psect	cstackBANK0
  2173  000060                     __pcstackBANK0:
  2174                           	callstack 0
  2175  000060                     _dtoa$4330:
  2176                           	callstack 0
  2177  000060                     LCD_Bitmap@bfOffBits:
  2178                           	callstack 0
  2179                           
  2180                           ; 4 bytes @ 0x0
  2181  000060                     	ds	2
  2182  000062                     dtoa@p:
  2183                           	callstack 0
  2184                           
  2185                           ; 2 bytes @ 0x2
  2186  000062                     	ds	2
  2187  000064                     LCD_Bitmap@endOfImage:
  2188                           	callstack 0
  2189  000064                     dtoa@w:
  2190                           	callstack 0
  2191                           
  2192                           ; 2 bytes @ 0x4
  2193  000064                     	ds	1
  2194  000065                     LCD_Bitmap@jumpCount:
  2195                           	callstack 0
  2196                           
  2197                           ; 2 bytes @ 0x5
  2198  000065                     	ds	1
  2199  000066                     dtoa@s:
  2200                           	callstack 0
  2201                           
  2202                           ; 2 bytes @ 0x6
  2203  000066                     	ds	1
  2204  000067                     LCD_Bitmap@curYPos:
  2205                           	callstack 0
  2206                           
  2207                           ; 2 bytes @ 0x7
  2208  000067                     	ds	1
  2209  000068                     dtoa@n:
  2210                           	callstack 0
  2211                           
  2212                           ; 8 bytes @ 0x8
  2213  000068                     	ds	1
  2214  000069                     LCD_Bitmap@colorTablePtr:
  2215                           	callstack 0
  2216                           
  2217                           ; 2 bytes @ 0x9
  2218  000069                     	ds	2
  2219  00006B                     LCD_Bitmap@biHeight:
  2220                           	callstack 0
  2221                           
  2222                           ; 2 bytes @ 0xB
  2223  00006B                     	ds	2
  2224  00006D                     LCD_Bitmap@color:
  2225                           	callstack 0
  2226                           
  2227                           ; 2 bytes @ 0xD
  2228  00006D                     	ds	2
  2229  00006F                     LCD_Bitmap@curXPos:
  2230                           	callstack 0
  2231                           
  2232                           ; 2 bytes @ 0xF
  2233  00006F                     	ds	1
  2234  000070                     dtoa@i:
  2235                           	callstack 0
  2236                           
  2237                           ; 2 bytes @ 0x10
  2238  000070                     	ds	1
  2239  000071                     LCD_Bitmap@strPtr:
  2240                           	callstack 0
  2241                           
  2242                           ; 2 bytes @ 0x11
  2243  000071                     	ds	1
  2244  000072                     vfpfcnvrt@ll:
  2245                           	callstack 0
  2246                           
  2247                           ; 8 bytes @ 0x12
  2248  000072                     	ds	1
  2249  000073                     LCD_Bitmap@newY:
  2250                           	callstack 0
  2251                           
  2252                           ; 2 bytes @ 0x13
  2253  000073                     	ds	2
  2254  000075                     LCD_Bitmap@pixelCount:
  2255                           	callstack 0
  2256                           
  2257                           ; 1 bytes @ 0x15
  2258  000075                     	ds	1
  2259  000076                     LCD_Bitmap@biWidth:
  2260                           	callstack 0
  2261                           
  2262                           ; 2 bytes @ 0x16
  2263  000076                     	ds	2
  2264  000078                     LCD_Bitmap@jumpColor:
  2265                           	callstack 0
  2266                           
  2267                           ; 2 bytes @ 0x18
  2268  000078                     	ds	2
  2269  00007A                     ?_vfprintf:
  2270                           	callstack 0
  2271  00007A                     LCD_Bitmap@i:
  2272                           	callstack 0
  2273  00007A                     vfprintf@fp:
  2274                           	callstack 0
  2275                           
  2276                           ; 2 bytes @ 0x1A
  2277  00007A                     	ds	2
  2278  00007C                     LCD_ButtonDraw@button:
  2279                           	callstack 0
  2280  00007C                     vfprintf@fmt:
  2281                           	callstack 0
  2282                           
  2283                           ; 2 bytes @ 0x1C
  2284  00007C                     	ds	2
  2285  00007E                     ??_LCD_ButtonDraw:
  2286  00007E                     vfprintf@ap:
  2287                           	callstack 0
  2288                           
  2289                           ; 2 bytes @ 0x1E
  2290  00007E                     	ds	2
  2291  000080                     vfprintf@cfmt:
  2292                           	callstack 0
  2293                           
  2294                           ; 2 bytes @ 0x20
  2295  000080                     	ds	2
  2296  000082                     ?_sprintf:
  2297                           	callstack 0
  2298  000082                     sprintf@s:
  2299                           	callstack 0
  2300                           
  2301                           ; 2 bytes @ 0x22
  2302  000082                     	ds	2
  2303  000084                     sprintf@fmt:
  2304                           	callstack 0
  2305                           
  2306                           ; 2 bytes @ 0x24
  2307  000084                     	ds	4
  2308  000088                     sprintf@ap:
  2309                           	callstack 0
  2310                           
  2311                           ; 2 bytes @ 0x28
  2312  000088                     	ds	2
  2313  00008A                     LCD_ButtonDraw@tempChar:
  2314                           	callstack 0
  2315  00008A                     sprintf@f:
  2316                           	callstack 0
  2317                           
  2318                           ; 6 bytes @ 0x2A
  2319  00008A                     	ds	1
  2320  00008B                     LCD_ButtonDraw@width:
  2321                           	callstack 0
  2322                           
  2323                           ; 2 bytes @ 0x2B
  2324  00008B                     	ds	2
  2325  00008D                     LCD_ButtonDraw@x1:
  2326                           	callstack 0
  2327                           
  2328                           ; 2 bytes @ 0x2D
  2329  00008D                     	ds	2
  2330  00008F                     LCD_ButtonDraw@x2:
  2331                           	callstack 0
  2332                           
  2333                           ; 2 bytes @ 0x2F
  2334  00008F                     	ds	1
  2335  000090                     touchScreenController@g:
  2336                           	callstack 0
  2337                           
  2338                           ; 2 bytes @ 0x30
  2339  000090                     	ds	1
  2340  000091                     LCD_ButtonDraw@y1:
  2341                           	callstack 0
  2342                           
  2343                           ; 2 bytes @ 0x31
  2344  000091                     	ds	1
  2345  000092                     ??_touchScreenController:
  2346                           
  2347                           ; 1 bytes @ 0x32
  2348  000092                     	ds	1
  2349  000093                     LCD_ButtonDraw@y2:
  2350                           	callstack 0
  2351                           
  2352                           ; 2 bytes @ 0x33
  2353  000093                     	ds	2
  2354  000095                     LCD_ButtonDraw@xText:
  2355                           	callstack 0
  2356                           
  2357                           ; 2 bytes @ 0x35
  2358  000095                     	ds	2
  2359  000097                     LCD_ButtonDraw@yText:
  2360                           	callstack 0
  2361                           
  2362                           ; 2 bytes @ 0x37
  2363  000097                     	ds	1
  2364  000098                     touchScreenController@s:
  2365                           	callstack 0
  2366                           
  2367                           ; 20 bytes @ 0x38
  2368  000098                     	ds	1
  2369  000099                     LCD_ButtonDraw@i:
  2370                           	callstack 0
  2371                           
  2372                           ; 1 bytes @ 0x39
  2373  000099                     	ds	1
  2374  00009A                     LCD_ButtonDraw@bmpPtr:
  2375                           	callstack 0
  2376                           
  2377                           ; 2 bytes @ 0x3A
  2378  00009A                     	ds	2
  2379  00009C                     Menu_welcomeDraw@g:
  2380                           	callstack 0
  2381  00009C                     Menu_parametersDraw@g:
  2382                           	callstack 0
  2383  00009C                     Menu_inGameDraw@g:
  2384                           	callstack 0
  2385                           
  2386                           ; 2 bytes @ 0x3C
  2387  00009C                     	ds	2
  2388  00009E                     displayController@g:
  2389                           	callstack 0
  2390                           
  2391                           ; 2 bytes @ 0x3E
  2392  00009E                     	ds	2
  2393  0000A0                     displayInit@g:
  2394                           	callstack 0
  2395  0000A0                     displaySM@g:
  2396                           	callstack 0
  2397                           
  2398                           ; 2 bytes @ 0x40
  2399  0000A0                     	ds	2
  2400  0000A2                     ??_displaySM:
  2401  0000A2                     sleepInit@g:
  2402                           	callstack 0
  2403                           
  2404                           ; 2 bytes @ 0x42
  2405  0000A2                     	ds	2
  2406  0000A4                     ??_Factory_init:
  2407  0000A4                     displaySM@ev:
  2408                           	callstack 0
  2409                           
  2410                           ; 1 bytes @ 0x44
  2411  0000A4                     	ds	8
  2412  0000AC                     touchScreenController@valueY:
  2413                           	callstack 0
  2414                           
  2415                           ; 2 bytes @ 0x4C
  2416  0000AC                     	ds	2
  2417  0000AE                     touchScreenController@valueX:
  2418                           	callstack 0
  2419                           
  2420                           ; 2 bytes @ 0x4E
  2421  0000AE                     	ds	2
  2422  0000B0                     touchScreenSM@g:
  2423                           	callstack 0
  2424                           
  2425                           ; 2 bytes @ 0x50
  2426  0000B0                     	ds	2
  2427  0000B2                     ??_touchScreenSM:
  2428                           
  2429                           ; 1 bytes @ 0x52
  2430  0000B2                     	ds	2
  2431  0000B4                     touchScreenSM@ev:
  2432                           	callstack 0
  2433                           
  2434                           ; 1 bytes @ 0x54
  2435  0000B4                     	ds	1
  2436                           
  2437                           	psect	cstackCOMRAM
  2438  000001                     __pcstackCOMRAM:
  2439                           	callstack 0
  2440  000001                     ?i2___wmul:
  2441                           	callstack 0
  2442  000001                     ?i2___awmod:
  2443                           	callstack 0
  2444  000001                     i2ENTERCRITICAL@inISR:
  2445                           	callstack 0
  2446  000001                     i2LEAVECRITICAL@inISR:
  2447                           	callstack 0
  2448  000001                     i2___wmul@multiplier:
  2449                           	callstack 0
  2450  000001                     i2___awmod@dividend:
  2451                           	callstack 0
  2452                           
  2453                           ; 2 bytes @ 0x0
  2454  000001                     	ds	1
  2455  000002                     XF_unscheduleTimer@inISR:
  2456                           	callstack 0
  2457  000002                     i2XF_scheduleTimer@tm:
  2458                           	callstack 0
  2459                           
  2460                           ; 2 bytes @ 0x1
  2461  000002                     	ds	1
  2462  000003                     XF_unscheduleTimer@id:
  2463                           	callstack 0
  2464  000003                     i2___wmul@multiplicand:
  2465                           	callstack 0
  2466  000003                     i2___awmod@divisor:
  2467                           	callstack 0
  2468                           
  2469                           ; 2 bytes @ 0x2
  2470  000003                     	ds	1
  2471  000004                     i2XF_scheduleTimer@ev:
  2472                           	callstack 0
  2473                           
  2474                           ; 1 bytes @ 0x3
  2475  000004                     	ds	1
  2476  000005                     i2XF_scheduleTimer@inISR:
  2477                           	callstack 0
  2478  000005                     i2___awmod@counter:
  2479                           	callstack 0
  2480  000005                     i2___wmul@product:
  2481                           	callstack 0
  2482                           
  2483                           ; 2 bytes @ 0x4
  2484  000005                     	ds	1
  2485  000006                     i2XF_scheduleTimer@i:
  2486                           	callstack 0
  2487  000006                     i2___awmod@sign:
  2488                           	callstack 0
  2489                           
  2490                           ; 1 bytes @ 0x5
  2491  000006                     	ds	1
  2492  000007                     i2XF_pushEvent@inISR:
  2493                           	callstack 0
  2494                           
  2495                           ; 1 bytes @ 0x6
  2496  000007                     	ds	1
  2497  000008                     i2XF_pushEvent@ev:
  2498                           	callstack 0
  2499                           
  2500                           ; 1 bytes @ 0x7
  2501  000008                     	ds	1
  2502  000009                     i2XF_pushEvent@temp:
  2503                           	callstack 0
  2504                           
  2505                           ; 1 bytes @ 0x8
  2506  000009                     	ds	1
  2507  00000A                     
  2508                           ; 1 bytes @ 0x9
  2509  00000A                     	ds	2
  2510  00000C                     XF_decrementAndQueueTimers@i:
  2511                           	callstack 0
  2512                           
  2513                           ; 2 bytes @ 0xB
  2514  00000C                     	ds	2
  2515  00000E                     ??_isr:
  2516                           
  2517                           ; 1 bytes @ 0xD
  2518  00000E                     	ds	4
  2519  000012                     ??_LCD_Lowlevel_Init:
  2520  000012                     ??_sleepController:
  2521  000012                     ?_LCD_Read:
  2522                           	callstack 0
  2523  000012                     ?_strlen:
  2524                           	callstack 0
  2525  000012                     ?_RGB2LCD:
  2526                           	callstack 0
  2527  000012                     ?___awdiv:
  2528                           	callstack 0
  2529  000012                     ?___awmod:
  2530                           	callstack 0
  2531  000012                     ?___lwmod:
  2532                           	callstack 0
  2533  000012                     ?___xxtofl:
  2534                           	callstack 0
  2535  000012                     ?___aodiv:
  2536                           	callstack 0
  2537  000012                     ?___aomod:
  2538                           	callstack 0
  2539  000012                     configMeasure@channel:
  2540                           	callstack 0
  2541  000012                     ENTERCRITICAL@inISR:
  2542                           	callstack 0
  2543  000012                     LEAVECRITICAL@inISR:
  2544                           	callstack 0
  2545  000012                     Ball_init@b:
  2546                           	callstack 0
  2547  000012                     Paddle_init@p:
  2548                           	callstack 0
  2549  000012                     GameParameters_setBackLight@s:
  2550                           	callstack 0
  2551  000012                     GameParameters_resetPos@s:
  2552                           	callstack 0
  2553  000012                     GameParameters_setX@s:
  2554                           	callstack 0
  2555  000012                     GameParameters_setY@s:
  2556                           	callstack 0
  2557  000012                     LCD_Fill@color:
  2558                           	callstack 0
  2559  000012                     LCD_SliderCreate@posX:
  2560                           	callstack 0
  2561  000012                     LCD_ButtonCreate@posX:
  2562                           	callstack 0
  2563  000012                     LCD_InButton@button:
  2564                           	callstack 0
  2565  000012                     LCD_InSlider@slider:
  2566                           	callstack 0
  2567  000012                     LCD_DrawRect@posX1:
  2568                           	callstack 0
  2569  000012                     RGB2LCD@colorTableEntry:
  2570                           	callstack 0
  2571  000012                     LCD_Read@posX:
  2572                           	callstack 0
  2573  000012                     checkCollision@g:
  2574                           	callstack 0
  2575  000012                     ___awdiv@dividend:
  2576                           	callstack 0
  2577  000012                     ___awmod@dividend:
  2578                           	callstack 0
  2579  000012                     ___lwmod@dividend:
  2580                           	callstack 0
  2581  000012                     fputc@c:
  2582                           	callstack 0
  2583  000012                     strlen@s:
  2584                           	callstack 0
  2585  000012                     ___xxtofl@val:
  2586                           	callstack 0
  2587  000012                     ___aodiv@dividend:
  2588                           	callstack 0
  2589  000012                     ___aomod@dividend:
  2590                           	callstack 0
  2591                           
  2592                           ; 8 bytes @ 0x11
  2593  000012                     	ds	1
  2594  000013                     XF_scheduleTimer@tm:
  2595                           	callstack 0
  2596  000013                     LCD_Lowlevel_Init@i:
  2597                           	callstack 0
  2598                           
  2599                           ; 4 bytes @ 0x12
  2600  000013                     	ds	1
  2601  000014                     ??_sleepSM:
  2602  000014                     ??_checkCollision:
  2603  000014                     ??_RGB2LCD:
  2604  000014                     LCD_Fill@colorH:
  2605                           	callstack 0
  2606  000014                     Paddle_init@team:
  2607                           	callstack 0
  2608  000014                     GameParameters_setBackLight@value:
  2609                           	callstack 0
  2610  000014                     GameParameters_setX@value:
  2611                           	callstack 0
  2612  000014                     GameParameters_setY@value:
  2613                           	callstack 0
  2614  000014                     LCD_SliderCreate@posY:
  2615                           	callstack 0
  2616  000014                     LCD_ButtonCreate@posY:
  2617                           	callstack 0
  2618  000014                     LCD_InButton@posX:
  2619                           	callstack 0
  2620  000014                     LCD_InSlider@posX:
  2621                           	callstack 0
  2622  000014                     LCD_DrawRect@posY1:
  2623                           	callstack 0
  2624  000014                     LCD_Read@posY:
  2625                           	callstack 0
  2626  000014                     ___awdiv@divisor:
  2627                           	callstack 0
  2628  000014                     ___awmod@divisor:
  2629                           	callstack 0
  2630  000014                     ___lwmod@divisor:
  2631                           	callstack 0
  2632  000014                     fputc@fp:
  2633                           	callstack 0
  2634  000014                     strlen@a:
  2635                           	callstack 0
  2636                           
  2637                           ; 2 bytes @ 0x13
  2638  000014                     	ds	1
  2639  000015                     LCD_Fill@colorL:
  2640                           	callstack 0
  2641  000015                     XF_scheduleTimer@ev:
  2642                           	callstack 0
  2643                           
  2644                           ; 1 bytes @ 0x14
  2645  000015                     	ds	1
  2646  000016                     ??_LCD_Read:
  2647  000016                     ??_fputc:
  2648  000016                     ??___xxtofl:
  2649  000016                     sleepSM@ev:
  2650                           	callstack 0
  2651  000016                     XF_scheduleTimer@inISR:
  2652                           	callstack 0
  2653  000016                     ___awdiv@counter:
  2654                           	callstack 0
  2655  000016                     ___awmod@counter:
  2656                           	callstack 0
  2657  000016                     ___lwmod@counter:
  2658                           	callstack 0
  2659  000016                     LCD_Fill@column:
  2660                           	callstack 0
  2661  000016                     LCD_SliderCreate@width:
  2662                           	callstack 0
  2663  000016                     LCD_ButtonCreate@width:
  2664                           	callstack 0
  2665  000016                     LCD_InButton@posY:
  2666                           	callstack 0
  2667  000016                     LCD_InSlider@posY:
  2668                           	callstack 0
  2669  000016                     LCD_DrawRect@posX2:
  2670                           	callstack 0
  2671                           
  2672                           ; 2 bytes @ 0x15
  2673  000016                     	ds	1
  2674  000017                     ??_LCD_Init:
  2675  000017                     XF_scheduleTimer@i:
  2676                           	callstack 0
  2677  000017                     ___awdiv@sign:
  2678                           	callstack 0
  2679  000017                     ___awmod@sign:
  2680                           	callstack 0
  2681                           
  2682                           ; 1 bytes @ 0x16
  2683  000017                     	ds	1
  2684  000018                     ??_LCD_InButton:
  2685  000018                     ??_LCD_InSlider:
  2686  000018                     LCD_Init@i:
  2687                           	callstack 0
  2688  000018                     XF_pushEvent@inISR:
  2689                           	callstack 0
  2690  000018                     XF_popEvent@ev:
  2691                           	callstack 0
  2692  000018                     LCD_Fill@page:
  2693                           	callstack 0
  2694  000018                     LCD_SliderCreate@height:
  2695                           	callstack 0
  2696  000018                     LCD_ButtonCreate@height:
  2697                           	callstack 0
  2698  000018                     LCD_DrawRect@posY2:
  2699                           	callstack 0
  2700  000018                     RGB2LCD@red:
  2701                           	callstack 0
  2702  000018                     LCD_Read@color:
  2703                           	callstack 0
  2704  000018                     backlightController@g:
  2705                           	callstack 0
  2706  000018                     ___awdiv@quotient:
  2707                           	callstack 0
  2708                           
  2709                           ; 2 bytes @ 0x17
  2710  000018                     	ds	1
  2711  000019                     XF_pushEvent@ev:
  2712                           	callstack 0
  2713  000019                     XF_popEvent@inISR:
  2714                           	callstack 0
  2715                           
  2716                           ; 1 bytes @ 0x18
  2717  000019                     	ds	1
  2718  00001A                     ?___wmul:
  2719                           	callstack 0
  2720  00001A                     LCD_DrawRect@fill:
  2721                           	callstack 0
  2722  00001A                     XF_pushEvent@temp:
  2723                           	callstack 0
  2724  00001A                     ___xxtofl@sign:
  2725                           	callstack 0
  2726  00001A                     LCD_SliderCreate@sldColor:
  2727                           	callstack 0
  2728  00001A                     LCD_ButtonCreate@txtColor:
  2729                           	callstack 0
  2730  00001A                     RGB2LCD@green:
  2731                           	callstack 0
  2732  00001A                     LCD_Read@temp16:
  2733                           	callstack 0
  2734  00001A                     ___wmul@multiplier:
  2735                           	callstack 0
  2736  00001A                     ___aodiv@divisor:
  2737                           	callstack 0
  2738  00001A                     ___aomod@divisor:
  2739                           	callstack 0
  2740                           
  2741                           ; 8 bytes @ 0x19
  2742  00001A                     	ds	1
  2743  00001B                     ___xxtofl@exp:
  2744                           	callstack 0
  2745  00001B                     LCD_DrawRect@color:
  2746                           	callstack 0
  2747  00001B                     fputs@s:
  2748                           	callstack 0
  2749                           
  2750                           ; 2 bytes @ 0x1A
  2751  00001B                     	ds	1
  2752  00001C                     LCD_SliderCreate@bgColor:
  2753                           	callstack 0
  2754  00001C                     LCD_ButtonCreate@bgColor:
  2755                           	callstack 0
  2756  00001C                     RGB2LCD@blue:
  2757                           	callstack 0
  2758  00001C                     ___wmul@multiplicand:
  2759                           	callstack 0
  2760  00001C                     ___xxtofl@arg:
  2761                           	callstack 0
  2762                           
  2763                           ; 4 bytes @ 0x1B
  2764  00001C                     	ds	1
  2765  00001D                     LCD_DrawRect@j:
  2766                           	callstack 0
  2767  00001D                     fputs@fp:
  2768                           	callstack 0
  2769                           
  2770                           ; 2 bytes @ 0x1C
  2771  00001D                     	ds	1
  2772  00001E                     LCD_SliderCreate@borderColor:
  2773                           	callstack 0
  2774  00001E                     LCD_ButtonCreate@textOrBmp:
  2775                           	callstack 0
  2776  00001E                     RGB2LCD@color:
  2777                           	callstack 0
  2778  00001E                     ___wmul@product:
  2779                           	callstack 0
  2780                           
  2781                           ; 2 bytes @ 0x1D
  2782  00001E                     	ds	1
  2783  00001F                     fputs@c:
  2784                           	callstack 0
  2785  00001F                     LCD_DrawRect@temp:
  2786                           	callstack 0
  2787                           
  2788                           ; 2 bytes @ 0x1E
  2789  00001F                     	ds	1
  2790  000020                     ?___lwdiv:
  2791                           	callstack 0
  2792  000020                     ?___fldiv:
  2793                           	callstack 0
  2794  000020                     LCD_SliderCreate@cursorWidth:
  2795                           	callstack 0
  2796  000020                     LCD_ButtonCreate@font:
  2797                           	callstack 0
  2798  000020                     LCD_DrawText@msg:
  2799                           	callstack 0
  2800  000020                     XF_init@i:
  2801                           	callstack 0
  2802  000020                     ___lwdiv@dividend:
  2803                           	callstack 0
  2804  000020                     fputs@i:
  2805                           	callstack 0
  2806  000020                     ___fldiv@b:
  2807                           	callstack 0
  2808                           
  2809                           ; 4 bytes @ 0x1F
  2810  000020                     	ds	1
  2811  000021                     LCD_DrawRect@colorH:
  2812                           	callstack 0
  2813                           
  2814                           ; 1 bytes @ 0x20
  2815  000021                     	ds	1
  2816  000022                     ?_pad:
  2817                           	callstack 0
  2818  000022                     LCD_DrawRect@colorL:
  2819                           	callstack 0
  2820  000022                     ___aodiv@counter:
  2821                           	callstack 0
  2822  000022                     ___aomod@counter:
  2823                           	callstack 0
  2824  000022                     LCD_SliderCreate@steps:
  2825                           	callstack 0
  2826  000022                     LCD_ButtonCreate@fpPress:
  2827                           	callstack 0
  2828  000022                     LCD_DrawText@font:
  2829                           	callstack 0
  2830  000022                     ___lwdiv@divisor:
  2831                           	callstack 0
  2832  000022                     pad@fp:
  2833                           	callstack 0
  2834                           
  2835                           ; 2 bytes @ 0x21
  2836  000022                     	ds	1
  2837  000023                     ___aodiv@sign:
  2838                           	callstack 0
  2839  000023                     ___aomod@sign:
  2840                           	callstack 0
  2841  000023                     LCD_DrawRect@i:
  2842                           	callstack 0
  2843                           
  2844                           ; 2 bytes @ 0x22
  2845  000023                     	ds	1
  2846  000024                     ?_abs:
  2847                           	callstack 0
  2848  000024                     LCD_DrawText@align:
  2849                           	callstack 0
  2850  000024                     ___lwdiv@counter:
  2851                           	callstack 0
  2852  000024                     LCD_SliderCreate@fpPress:
  2853                           	callstack 0
  2854  000024                     LCD_ButtonCreate@fpReleased:
  2855                           	callstack 0
  2856  000024                     pad@buf:
  2857                           	callstack 0
  2858  000024                     abs@a:
  2859                           	callstack 0
  2860  000024                     ___fldiv@a:
  2861                           	callstack 0
  2862  000024                     ___aodiv@quotient:
  2863                           	callstack 0
  2864                           
  2865                           ; 8 bytes @ 0x23
  2866  000024                     	ds	1
  2867  000025                     Ball_draw@b:
  2868                           	callstack 0
  2869  000025                     Paddle_addX@p:
  2870                           	callstack 0
  2871  000025                     Paddle_draw@p:
  2872                           	callstack 0
  2873  000025                     LCD_ButtonUpdate@button:
  2874                           	callstack 0
  2875  000025                     LCD_DrawText@posX:
  2876                           	callstack 0
  2877  000025                     ___lwdiv@quotient:
  2878                           	callstack 0
  2879                           
  2880                           ; 2 bytes @ 0x24
  2881  000025                     	ds	1
  2882  000026                     ??_abs:
  2883  000026                     LCD_SliderCreate@slider:
  2884                           	callstack 0
  2885  000026                     LCD_ButtonCreate@fpOut:
  2886                           	callstack 0
  2887  000026                     pad@p:
  2888                           	callstack 0
  2889                           
  2890                           ; 2 bytes @ 0x25
  2891  000026                     	ds	1
  2892  000027                     ??_Ball_draw:
  2893  000027                     ??_Paddle_draw:
  2894  000027                     ??_LCD_ButtonUpdate:
  2895  000027                     Paddle_addX@value:
  2896                           	callstack 0
  2897  000027                     LCD_SliderUpdate@slider:
  2898                           	callstack 0
  2899  000027                     LCD_DrawText@posY:
  2900                           	callstack 0
  2901  000027                     LCD_Bitmap@bmpPtr:
  2902                           	callstack 0
  2903                           
  2904                           ; 2 bytes @ 0x26
  2905  000027                     	ds	1
  2906  000028                     ??___fldiv:
  2907  000028                     ??_pad:
  2908  000028                     LCD_ButtonCreate@button:
  2909                           	callstack 0
  2910                           
  2911                           ; 2 bytes @ 0x27
  2912  000028                     	ds	1
  2913  000029                     ??_LCD_SliderUpdate:
  2914  000029                     Paddle_addX@add:
  2915                           	callstack 0
  2916  000029                     LCD_DrawText@color:
  2917                           	callstack 0
  2918  000029                     LCD_Bitmap@posX:
  2919                           	callstack 0
  2920  000029                     pad@i:
  2921                           	callstack 0
  2922                           
  2923                           ; 2 bytes @ 0x28
  2924  000029                     	ds	1
  2925  00002A                     LCD_ButtonCreate@index:
  2926                           	callstack 0
  2927                           
  2928                           ; 1 bytes @ 0x29
  2929  00002A                     	ds	1
  2930  00002B                     ??_Paddle_addX:
  2931  00002B                     GameParameters_init@s:
  2932                           	callstack 0
  2933  00002B                     LCD_ButtonUpdate@colorOut:
  2934                           	callstack 0
  2935  00002B                     LCD_DrawText@bg_color:
  2936                           	callstack 0
  2937  00002B                     LCD_Bitmap@posY:
  2938                           	callstack 0
  2939  00002B                     pad@w:
  2940                           	callstack 0
  2941                           
  2942                           ; 2 bytes @ 0x2A
  2943  00002B                     	ds	1
  2944  00002C                     ___fldiv@rem:
  2945                           	callstack 0
  2946                           
  2947                           ; 4 bytes @ 0x2B
  2948  00002C                     	ds	1
  2949  00002D                     ??_LCD_DrawText:
  2950  00002D                     ??_LCD_Bitmap:
  2951  00002D                     ?_dtoa:
  2952                           	callstack 0
  2953  00002D                     LCD_ButtonUpdate@colorIn:
  2954                           	callstack 0
  2955  00002D                     dtoa@fp:
  2956                           	callstack 0
  2957                           
  2958                           ; 2 bytes @ 0x2C
  2959  00002D                     	ds	2
  2960  00002F                     Ball_Update@b:
  2961                           	callstack 0
  2962  00002F                     LCD_SliderUpdate@x2:
  2963                           	callstack 0
  2964  00002F                     LCD_ButtonUpdate@x2:
  2965                           	callstack 0
  2966  00002F                     moovePaddle@g:
  2967                           	callstack 0
  2968  00002F                     dtoa@d:
  2969                           	callstack 0
  2970                           
  2971                           ; 8 bytes @ 0x2E
  2972  00002F                     	ds	1
  2973  000030                     ___fldiv@sign:
  2974                           	callstack 0
  2975                           
  2976                           ; 1 bytes @ 0x2F
  2977  000030                     	ds	1
  2978  000031                     ??_Ball_Update:
  2979  000031                     LCD_SliderUpdate@y1:
  2980                           	callstack 0
  2981  000031                     LCD_ButtonUpdate@y1:
  2982                           	callstack 0
  2983  000031                     ___fldiv@new_exp:
  2984                           	callstack 0
  2985                           
  2986                           ; 2 bytes @ 0x30
  2987  000031                     	ds	2
  2988  000033                     LCD_SliderUpdate@y2:
  2989                           	callstack 0
  2990  000033                     LCD_ButtonUpdate@x1:
  2991                           	callstack 0
  2992  000033                     LCD_DrawText@offset:
  2993                           	callstack 0
  2994  000033                     ___fldiv@grs:
  2995                           	callstack 0
  2996                           
  2997                           ; 4 bytes @ 0x32
  2998  000033                     	ds	2
  2999  000035                     LCD_SliderUpdate@x1:
  3000                           	callstack 0
  3001  000035                     LCD_ButtonUpdate@y2:
  3002                           	callstack 0
  3003  000035                     LCD_DrawText@yOffset:
  3004                           	callstack 0
  3005                           
  3006                           ; 2 bytes @ 0x34
  3007  000035                     	ds	2
  3008  000037                     ??_dtoa:
  3009  000037                     LCD_DrawText@fontByte:
  3010                           	callstack 0
  3011  000037                     ___fldiv@bexp:
  3012                           	callstack 0
  3013  000037                     LCD_SliderDraw@slider:
  3014                           	callstack 0
  3015  000037                     gameControllerController@g:
  3016                           	callstack 0
  3017                           
  3018                           ; 2 bytes @ 0x36
  3019  000037                     	ds	1
  3020  000038                     LCD_DrawText@fontPixel:
  3021                           	callstack 0
  3022  000038                     ___fldiv@aexp:
  3023                           	callstack 0
  3024                           
  3025                           ; 1 bytes @ 0x37
  3026  000038                     	ds	1
  3027  000039                     ??_LCD_SliderDraw:
  3028  000039                     ??_gameControllerController:
  3029  000039                     ?___fltol:
  3030                           	callstack 0
  3031  000039                     LCD_DrawText@posYEnd:
  3032                           	callstack 0
  3033  000039                     mooveBall@g:
  3034                           	callstack 0
  3035  000039                     ___fltol@f1:
  3036                           	callstack 0
  3037                           
  3038                           ; 4 bytes @ 0x38
  3039  000039                     	ds	2
  3040  00003B                     LCD_DrawText@posXEnd:
  3041                           	callstack 0
  3042  00003B                     gameControllerInit@g:
  3043                           	callstack 0
  3044  00003B                     gameControllerSM@g:
  3045                           	callstack 0
  3046                           
  3047                           ; 2 bytes @ 0x3A
  3048  00003B                     	ds	2
  3049  00003D                     ??_gameControllerSM:
  3050  00003D                     ??___fltol:
  3051  00003D                     LCD_DrawText@y:
  3052                           	callstack 0
  3053  00003D                     LCD_SliderDraw@x1:
  3054                           	callstack 0
  3055                           
  3056                           ; 2 bytes @ 0x3C
  3057  00003D                     	ds	1
  3058  00003E                     LCD_DrawText@i:
  3059                           	callstack 0
  3060                           
  3061                           ; 1 bytes @ 0x3D
  3062  00003E                     	ds	1
  3063  00003F                     ?_vfpfcnvrt:
  3064                           	callstack 0
  3065  00003F                     LCD_DrawText@tempChar:
  3066                           	callstack 0
  3067  00003F                     LCD_SliderDraw@x2:
  3068                           	callstack 0
  3069  00003F                     vfpfcnvrt@fp:
  3070                           	callstack 0
  3071                           
  3072                           ; 2 bytes @ 0x3E
  3073  00003F                     	ds	1
  3074  000040                     LCD_DrawText@x:
  3075                           	callstack 0
  3076                           
  3077                           ; 1 bytes @ 0x3F
  3078  000040                     	ds	1
  3079  000041                     LCD_DrawText@width:
  3080                           	callstack 0
  3081  000041                     gameControllerSM@ev:
  3082                           	callstack 0
  3083  000041                     ___fltol@sign1:
  3084                           	callstack 0
  3085  000041                     LCD_SliderDraw@y1:
  3086                           	callstack 0
  3087  000041                     vfpfcnvrt@fmt:
  3088                           	callstack 0
  3089                           
  3090                           ; 2 bytes @ 0x40
  3091  000041                     	ds	1
  3092  000042                     ___fltol@exp1:
  3093                           	callstack 0
  3094                           
  3095                           ; 1 bytes @ 0x41
  3096  000042                     	ds	1
  3097  000043                     LCD_SliderDraw@y2:
  3098                           	callstack 0
  3099  000043                     vfpfcnvrt@ap:
  3100                           	callstack 0
  3101                           
  3102                           ; 2 bytes @ 0x42
  3103  000043                     	ds	2
  3104  000045                     ??_displayController:
  3105  000045                     ??_vfpfcnvrt:
  3106                           
  3107                           ; 1 bytes @ 0x44
  3108  000045                     	ds	2
  3109  000047                     
  3110                           ; 1 bytes @ 0x46
  3111 ;;
  3112 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3113 ;;
  3114 ;; *************** function _main *****************
  3115 ;; Defined at:
  3116 ;;		line 49 in file "main.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;		None
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;		None
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      void 
  3123 ;; Registers used:
  3124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3130 ;;      Params:         0       0       0       0       0       0       0
  3131 ;;      Locals:         0       0       0       0       0       0       0
  3132 ;;      Temps:          0       0       0       0       0       0       0
  3133 ;;      Totals:         0       0       0       0       0       0       0
  3134 ;;Total ram usage:        0 bytes
  3135 ;; Hardware stack levels required when called: 15
  3136 ;; This function calls:
  3137 ;;		_Factory_exec
  3138 ;;		_Factory_init
  3139 ;; This function is called by:
  3140 ;;		Startup code after reset
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text0
  3145  005F52                     __ptext0:
  3146                           	callstack 0
  3147  005F52                     _main:
  3148                           	callstack 16
  3149  005F52                     
  3150                           ;main.c: 51:     Factory_init();
  3151  005F52  ECC3  F027         	call	_Factory_init	;wreg free
  3152  005F56                     l780:
  3153                           
  3154                           ;main.c: 53:     {;main.c: 54:         Factory_exec();
  3155  005F56  EC68  F02D         	call	_Factory_exec	;wreg free
  3156  005F5A  EFAB  F02F         	goto	l780
  3157  005F5E  EF62  F000         	goto	start
  3158  005F62                     __end_of_main:
  3159                           	callstack 0
  3160                           
  3161 ;; *************** function _Factory_init *****************
  3162 ;; Defined at:
  3163 ;;		line 11 in file "class/factory.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;		None
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3177 ;;      Params:         0       0       0       0       0       0       0
  3178 ;;      Locals:         0       0       0       0       0       0       0
  3179 ;;      Temps:          0       2       0       0       0       0       0
  3180 ;;      Totals:         0       2       0       0       0       0       0
  3181 ;;Total ram usage:        2 bytes
  3182 ;; Hardware stack levels used: 1
  3183 ;; Hardware stack levels required when called: 11
  3184 ;; This function calls:
  3185 ;;		_GameParameters_init
  3186 ;;		_LCD_DrawText
  3187 ;;		_LCD_Fill
  3188 ;;		_LCD_Init
  3189 ;;		_XF_init
  3190 ;;		_sleepInit
  3191 ;; This function is called by:
  3192 ;;		_main
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text1
  3197  004F86                     __ptext1:
  3198                           	callstack 0
  3199  004F86                     _Factory_init:
  3200                           	callstack 19
  3201  004F86                     
  3202                           ;class/factory.c: 14:     PLLEN = 1;
  3203  004F86  8C9B               	bsf	3995,6,c	;volatile
  3204  004F88                     
  3205                           ;class/factory.c: 15:     OSCCON = 0b01110000;
  3206  004F88  0E70               	movlw	112
  3207  004F8A  6ED3               	movwf	211,c	;volatile
  3208  004F8C                     
  3209                           ;class/factory.c: 16:     _delay((unsigned long)((100)*(64000000L/4000.0)));
  3210  004F8C  0E09               	movlw	9
  3211  004F8E  0100               	movlb	0	; () banked
  3212  004F90  6FA5               	movwf	(??_Factory_init+1)& (0+255),b
  3213  004F92  0E1E               	movlw	30
  3214  004F94  6FA4               	movwf	??_Factory_init& (0+255),b
  3215  004F96  0EE4               	movlw	228
  3216  004F98                     u7777:
  3217  004F98  2EE8               	decfsz	wreg,f,c
  3218  004F9A  D7FE               	bra	u7777
  3219  004F9C  2FA4               	decfsz	??_Factory_init& (0+255),f,b
  3220  004F9E  D7FC               	bra	u7777
  3221  004FA0  2FA5               	decfsz	(??_Factory_init+1)& (0+255),f,b
  3222  004FA2  D7FA               	bra	u7777
  3223  004FA4  F000               	nop	
  3224  004FA6                     
  3225                           ;class/factory.c: 18:     LCD_Init();
  3226  004FA6  EC10  F017         	call	_LCD_Init	;wreg free
  3227  004FAA                     
  3228                           ;class/factory.c: 19:     LCD_Fill(0b0000000000011111);
  3229  004FAA  0E00               	movlw	0
  3230  004FAC  6E13               	movwf	(LCD_Fill@color+1)^0,c
  3231  004FAE  0E1F               	movlw	31
  3232  004FB0  6E12               	movwf	LCD_Fill@color^0,c
  3233  004FB2  EC03  F027         	call	_LCD_Fill	;wreg free
  3234  004FB6                     
  3235                           ;class/factory.c: 20:     LCD_DrawText("MenuStart",&arialNarrow_12ptFontInfo,A_CENTER,50
      +                          ,50,0b0000000000000000,0b1111111111111111);
  3236  004FB6  0EBE               	movlw	low STR_1
  3237  004FB8  6E20               	movwf	LCD_DrawText@msg^0,c
  3238  004FBA  0E7F               	movlw	high STR_1
  3239  004FBC  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  3240  004FBE  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  3241  004FC0  6E22               	movwf	LCD_DrawText@font^0,c
  3242  004FC2  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  3243  004FC4  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  3244  004FC6  0E02               	movlw	2
  3245  004FC8  6E24               	movwf	LCD_DrawText@align^0,c
  3246  004FCA  0E00               	movlw	0
  3247  004FCC  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  3248  004FCE  0E32               	movlw	50
  3249  004FD0  6E25               	movwf	LCD_DrawText@posX^0,c
  3250  004FD2  0E00               	movlw	0
  3251  004FD4  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  3252  004FD6  0E32               	movlw	50
  3253  004FD8  6E27               	movwf	LCD_DrawText@posY^0,c
  3254  004FDA  0E00               	movlw	0
  3255  004FDC  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  3256  004FDE  0E00               	movlw	0
  3257  004FE0  6E29               	movwf	LCD_DrawText@color^0,c
  3258  004FE2  0EFF               	movlw	255
  3259  004FE4  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  3260  004FE6  682B               	setf	LCD_DrawText@bg_color^0,c
  3261  004FE8  EC5B  F00E         	call	_LCD_DrawText	;wreg free
  3262  004FEC                     
  3263                           ;class/factory.c: 25:     GIE=1;
  3264  004FEC  8EF2               	bsf	4082,7,c	;volatile
  3265  004FEE                     
  3266                           ;class/factory.c: 26:     INT1IE=0;
  3267  004FEE  96F0               	bcf	4080,3,c	;volatile
  3268  004FF0                     
  3269                           ;class/factory.c: 27:     TRISC0=0;
  3270  004FF0  9094               	bcf	3988,0,c	;volatile
  3271  004FF2                     
  3272                           ;class/factory.c: 28:     LATC0=1;
  3273  004FF2  808B               	bsf	3979,0,c	;volatile
  3274  004FF4                     
  3275                           ;class/factory.c: 31:     T0CON=0b10000110;
  3276  004FF4  0E86               	movlw	134
  3277  004FF6  6ED5               	movwf	213,c	;volatile
  3278  004FF8                     
  3279                           ;class/factory.c: 32:     TMR0H=0xFB;
  3280  004FF8  0EFB               	movlw	251
  3281  004FFA  6ED7               	movwf	215,c	;volatile
  3282  004FFC                     
  3283                           ;class/factory.c: 33:     TMR0L=0x1D;
  3284  004FFC  0E1D               	movlw	29
  3285  004FFE  6ED6               	movwf	214,c	;volatile
  3286  005000                     
  3287                           ;class/factory.c: 34:     TMR0IE=1;
  3288  005000  8AF2               	bsf	4082,5,c	;volatile
  3289  005002                     
  3290                           ;class/factory.c: 37:     TRISC1=0;
  3291  005002  9294               	bcf	3988,1,c	;volatile
  3292  005004                     
  3293                           ;class/factory.c: 38:     PR2=255;
  3294  005004  68BB               	setf	187,c	;volatile
  3295  005006                     
  3296                           ;class/factory.c: 39:     CCP2CONbits.CCP2M = 0xC;
  3297  005006  5066               	movf	102,w,c	;volatile
  3298  005008  0BF0               	andlw	-16
  3299  00500A  090C               	iorlw	12
  3300  00500C  6E66               	movwf	102,c	;volatile
  3301  00500E                     
  3302                           ;class/factory.c: 40:     CCPR2L = 255;
  3303  00500E  6867               	setf	103,c	;volatile
  3304  005010                     
  3305                           ;class/factory.c: 41:     CCP2CONbits.DC2B = 0;
  3306  005010  0ECF               	movlw	-49
  3307  005012  1666               	andwf	102,f,c	;volatile
  3308  005014                     
  3309                           ;class/factory.c: 42:     TMR2IF=0;
  3310  005014  929E               	bcf	3998,1,c	;volatile
  3311  005016                     
  3312                           ;class/factory.c: 43:     T2CONbits.T2CKPS0 = 1;
  3313  005016  80BA               	bsf	186,0,c	;volatile
  3314  005018                     
  3315                           ;class/factory.c: 44:     T2CONbits.T2CKPS1 = 0;
  3316  005018  92BA               	bcf	186,1,c	;volatile
  3317  00501A                     
  3318                           ;class/factory.c: 45:     T2CONbits.TMR2ON = 1;
  3319  00501A  84BA               	bsf	186,2,c	;volatile
  3320  00501C                     
  3321                           ;class/factory.c: 47:     ADCON2=0b10100110;
  3322  00501C  0EA6               	movlw	166
  3323  00501E  6EC0               	movwf	192,c	;volatile
  3324  005020                     
  3325                           ;class/factory.c: 50:     XF_init();
  3326  005020  EC20  F028         	call	_XF_init	;wreg free
  3327  005024                     
  3328                           ;class/factory.c: 51:     GameParameters_init(&g1);
  3329  005024  0E00               	movlw	low _g1
  3330  005026  6E2B               	movwf	GameParameters_init@s^0,c
  3331  005028  0E01               	movlw	high _g1
  3332  00502A  6E2C               	movwf	(GameParameters_init@s+1)^0,c
  3333  00502C  EC4D  F012         	call	_GameParameters_init	;wreg free
  3334  005030                     
  3335                           ;class/factory.c: 52:     sleepInit(&g1);
  3336  005030  0E00               	movlw	low _g1
  3337  005032  0100               	movlb	0	; () banked
  3338  005034  6FA2               	movwf	sleepInit@g& (0+255),b
  3339  005036  0E01               	movlw	high _g1
  3340  005038  6FA3               	movwf	(sleepInit@g+1)& (0+255),b
  3341  00503A  ECFD  F02E         	call	_sleepInit	;wreg free
  3342  00503E  0012               	return		;funcret
  3343  005040                     __end_of_Factory_init:
  3344                           	callstack 0
  3345                           
  3346 ;; *************** function _sleepInit *****************
  3347 ;; Defined at:
  3348 ;;		line 11 in file "stateMachine/sleepSM.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  g               2   66[BANK0 ] PTR struct GameParameter
  3351 ;;		 -> g1(201), 
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;		None
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  1    wreg      void 
  3356 ;; Registers used:
  3357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3363 ;;      Params:         0       2       0       0       0       0       0
  3364 ;;      Locals:         0       0       0       0       0       0       0
  3365 ;;      Temps:          0       0       0       0       0       0       0
  3366 ;;      Totals:         0       2       0       0       0       0       0
  3367 ;;Total ram usage:        2 bytes
  3368 ;; Hardware stack levels used: 1
  3369 ;; Hardware stack levels required when called: 10
  3370 ;; This function calls:
  3371 ;;		_displayInit
  3372 ;;		_gameControllerInit
  3373 ;;		_sleepController
  3374 ;;		_touchScreenInit
  3375 ;; This function is called by:
  3376 ;;		_Factory_init
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text2
  3381  005DFA                     __ptext2:
  3382                           	callstack 0
  3383  005DFA                     _sleepInit:
  3384                           	callstack 19
  3385  005DFA                     
  3386                           ;stateMachine/sleepSM.c: 11: void sleepInit(GameParameters* g);stateMachine/sleepSM.c: 1
      +                          2: {;stateMachine/sleepSM.c: 13:     sleepState=WAKEUP;
  3387  005DFA  0E00               	movlw	0
  3388  005DFC  0100               	movlb	0	; () banked
  3389  005DFE  6FDF               	movwf	_sleepState& (0+255),b
  3390  005E00                     
  3391                           ; BSR set to: 0
  3392                           ;stateMachine/sleepSM.c: 14:     displayInit(g);
  3393  005E00  C0A2  F0A0         	movff	sleepInit@g,displayInit@g
  3394  005E04  C0A3  F0A1         	movff	sleepInit@g+1,displayInit@g+1
  3395  005E08  EC96  F02F         	call	_displayInit	;wreg free
  3396  005E0C                     
  3397                           ;stateMachine/sleepSM.c: 15:     gameControllerInit(g);
  3398  005E0C  C0A2  F03B         	movff	sleepInit@g,gameControllerInit@g
  3399  005E10  C0A3  F03C         	movff	sleepInit@g+1,gameControllerInit@g+1
  3400  005E14  ECA0  F02F         	call	_gameControllerInit	;wreg free
  3401  005E18                     
  3402                           ;stateMachine/sleepSM.c: 16:     touchScreenInit();
  3403  005E18  ECB1  F02F         	call	_touchScreenInit	;wreg free
  3404  005E1C                     
  3405                           ;stateMachine/sleepSM.c: 17:     sleepController();
  3406  005E1C  ECB4  F02E         	call	_sleepController	;wreg free
  3407  005E20  0012               	return		;funcret
  3408  005E22                     __end_of_sleepInit:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function _touchScreenInit *****************
  3412 ;; Defined at:
  3413 ;;		line 17 in file "stateMachine/touchScreenSM.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;		None
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;		None
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      void 
  3420 ;; Registers used:
  3421 ;;		wreg, status,2, cstack
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3427 ;;      Params:         0       0       0       0       0       0       0
  3428 ;;      Locals:         0       0       0       0       0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0       0
  3430 ;;      Totals:         0       0       0       0       0       0       0
  3431 ;;Total ram usage:        0 bytes
  3432 ;; Hardware stack levels used: 1
  3433 ;; Hardware stack levels required when called: 5
  3434 ;; This function calls:
  3435 ;;		_configTouch
  3436 ;; This function is called by:
  3437 ;;		_sleepInit
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text3
  3442  005F62                     __ptext3:
  3443                           	callstack 0
  3444  005F62                     _touchScreenInit:
  3445                           	callstack 23
  3446  005F62                     
  3447                           ;stateMachine/touchScreenSM.c: 19:     touchScreenState=WAITING;
  3448  005F62  0E00               	movlw	0
  3449  005F64  0100               	movlb	0	; () banked
  3450  005F66  6FDE               	movwf	_touchScreenState& (0+255),b
  3451  005F68                     
  3452                           ; BSR set to: 0
  3453                           ;stateMachine/touchScreenSM.c: 20:     configTouch();
  3454  005F68  EC46  F02F         	call	_configTouch	;wreg free
  3455  005F6C  0012               	return		;funcret
  3456  005F6E                     __end_of_touchScreenInit:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _gameControllerInit *****************
  3460 ;; Defined at:
  3461 ;;		line 15 in file "stateMachine/gameController.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  g               2   58[COMRAM] PTR struct GameParameter
  3464 ;;		 -> g1(201), 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3476 ;;      Params:         2       0       0       0       0       0       0
  3477 ;;      Locals:         0       0       0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0
  3479 ;;      Totals:         2       0       0       0       0       0       0
  3480 ;;Total ram usage:        2 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 7
  3483 ;; This function calls:
  3484 ;;		_gameControllerController
  3485 ;; This function is called by:
  3486 ;;		_sleepInit
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text4
  3491  005F40                     __ptext4:
  3492                           	callstack 0
  3493  005F40                     _gameControllerInit:
  3494                           	callstack 21
  3495  005F40                     
  3496                           ;stateMachine/gameController.c: 15: void gameControllerInit(GameParameters* g);stateMach
      +                          ine/gameController.c: 16: {;stateMachine/gameController.c: 17:     gameControllerState=N
      +                          OGAME;
  3497  005F40  0E00               	movlw	0
  3498  005F42  6E4D               	movwf	_gameControllerState^0,c
  3499  005F44                     
  3500                           ;stateMachine/gameController.c: 18:     gameControllerController(g);
  3501  005F44  C03B  F037         	movff	gameControllerInit@g,gameControllerController@g
  3502  005F48  C03C  F038         	movff	gameControllerInit@g+1,gameControllerController@g+1
  3503  005F4C  ECB5  F01A         	call	_gameControllerController	;wreg free
  3504  005F50  0012               	return		;funcret
  3505  005F52                     __end_of_gameControllerInit:
  3506                           	callstack 0
  3507                           
  3508 ;; *************** function _displayInit *****************
  3509 ;; Defined at:
  3510 ;;		line 13 in file "stateMachine/display.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  g               2   64[BANK0 ] PTR struct GameParameter
  3513 ;;		 -> g1(201), 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;		None
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3525 ;;      Params:         0       2       0       0       0       0       0
  3526 ;;      Locals:         0       0       0       0       0       0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0
  3528 ;;      Totals:         0       2       0       0       0       0       0
  3529 ;;Total ram usage:        2 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; Hardware stack levels required when called: 9
  3532 ;; This function calls:
  3533 ;;		_displayController
  3534 ;; This function is called by:
  3535 ;;		_sleepInit
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text5
  3540  005F2C                     __ptext5:
  3541                           	callstack 0
  3542  005F2C                     _displayInit:
  3543                           	callstack 19
  3544  005F2C                     
  3545                           ;stateMachine/display.c: 13: void displayInit(GameParameters* g);stateMachine/display.c:
      +                           14: {;stateMachine/display.c: 15:     displayState=WELCOME;
  3546  005F2C  0E00               	movlw	0
  3547  005F2E  0100               	movlb	0	; () banked
  3548  005F30  6FDD               	movwf	_displayState& (0+255),b
  3549  005F32                     
  3550                           ; BSR set to: 0
  3551                           ;stateMachine/display.c: 16:     displayController(g);
  3552  005F32  C0A0  F09E         	movff	displayInit@g,displayController@g
  3553  005F36  C0A1  F09F         	movff	displayInit@g+1,displayController@g+1
  3554  005F3A  EC09  F02C         	call	_displayController	;wreg free
  3555  005F3E  0012               	return		;funcret
  3556  005F40                     __end_of_displayInit:
  3557                           	callstack 0
  3558                           
  3559 ;; *************** function _XF_init *****************
  3560 ;; Defined at:
  3561 ;;		line 25 in file "xf/xf.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  i               2   31[COMRAM] int 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3575 ;;      Params:         0       0       0       0       0       0       0
  3576 ;;      Locals:         2       0       0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0
  3578 ;;      Totals:         2       0       0       0       0       0       0
  3579 ;;Total ram usage:        2 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; Hardware stack levels required when called: 5
  3582 ;; This function calls:
  3583 ;;		___wmul
  3584 ;; This function is called by:
  3585 ;;		_Factory_init
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text6
  3590  005040                     __ptext6:
  3591                           	callstack 0
  3592  005040                     _XF_init:
  3593                           	callstack 24
  3594  005040                     
  3595                           ;xf/xf.c: 27:     int i;;xf/xf.c: 28:     for (i=0; i<12; i++)
  3596  005040  0E00               	movlw	0
  3597  005042  6E21               	movwf	(XF_init@i+1)^0,c
  3598  005044  0E00               	movlw	0
  3599  005046  6E20               	movwf	XF_init@i^0,c
  3600  005048                     l10008:
  3601                           
  3602                           ;xf/xf.c: 29:     {;xf/xf.c: 30:         theXF.eventQueue[i] = NULLEVENT;
  3603  005048  0ECD               	movlw	low (_theXF+24)
  3604  00504A  2420               	addwf	XF_init@i^0,w,c
  3605  00504C  6ED9               	movwf	fsr2l,c
  3606  00504E  0E00               	movlw	high (_theXF+24)
  3607  005050  2021               	addwfc	(XF_init@i+1)^0,w,c
  3608  005052  6EDA               	movwf	fsr2h,c
  3609  005054  0E00               	movlw	0
  3610  005056  6EDF               	movwf	indf2,c
  3611  005058                     
  3612                           ;xf/xf.c: 31:     }
  3613  005058  4A20               	infsnz	XF_init@i^0,f,c
  3614  00505A  2A21               	incf	(XF_init@i+1)^0,f,c
  3615  00505C  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3616  00505E  EF3A  F028         	goto	u7561
  3617  005062  5021               	movf	(XF_init@i+1)^0,w,c
  3618  005064  E109               	bnz	u7560
  3619  005066  0E0C               	movlw	12
  3620  005068  5C20               	subwf	XF_init@i^0,w,c
  3621  00506A  A0D8               	btfss	status,0,c
  3622  00506C  EF3A  F028         	goto	u7561
  3623  005070  EF3C  F028         	goto	u7560
  3624  005074                     u7561:
  3625  005074  EF24  F028         	goto	l10008
  3626  005078                     u7560:
  3627  005078                     
  3628                           ;xf/xf.c: 33:     for (i=0; i<8; i++)
  3629  005078  0E00               	movlw	0
  3630  00507A  6E21               	movwf	(XF_init@i+1)^0,c
  3631  00507C  0E00               	movlw	0
  3632  00507E  6E20               	movwf	XF_init@i^0,c
  3633  005080                     l10020:
  3634                           
  3635                           ;xf/xf.c: 34:     {;xf/xf.c: 35:         theXF.timerList[i].tm = 0;
  3636  005080  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3637  005084  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3638  005088  0E00               	movlw	0
  3639  00508A  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3640  00508C  0E03               	movlw	3
  3641  00508E  6E1C               	movwf	___wmul@multiplicand^0,c
  3642  005090  EC11  F02F         	call	___wmul	;wreg free
  3643  005094  0EB5               	movlw	low _theXF
  3644  005096  241A               	addwf	?___wmul^0,w,c
  3645  005098  6ED9               	movwf	fsr2l,c
  3646  00509A  0E00               	movlw	high _theXF
  3647  00509C  201B               	addwfc	(?___wmul+1)^0,w,c
  3648  00509E  6EDA               	movwf	fsr2h,c
  3649  0050A0  0E00               	movlw	0
  3650  0050A2  6EDE               	movwf	postinc2,c
  3651  0050A4  0E00               	movlw	0
  3652  0050A6  6EDD               	movwf	postdec2,c
  3653                           
  3654                           ;xf/xf.c: 36:         theXF.timerList[i].ev = NULLEVENT;
  3655  0050A8  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3656  0050AC  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3657  0050B0  0E00               	movlw	0
  3658  0050B2  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3659  0050B4  0E03               	movlw	3
  3660  0050B6  6E1C               	movwf	___wmul@multiplicand^0,c
  3661  0050B8  EC11  F02F         	call	___wmul	;wreg free
  3662  0050BC  0EB7               	movlw	low (_theXF+2)
  3663  0050BE  241A               	addwf	?___wmul^0,w,c
  3664  0050C0  6ED9               	movwf	fsr2l,c
  3665  0050C2  0E00               	movlw	high (_theXF+2)
  3666  0050C4  201B               	addwfc	(?___wmul+1)^0,w,c
  3667  0050C6  6EDA               	movwf	fsr2h,c
  3668  0050C8  0E00               	movlw	0
  3669  0050CA  6EDF               	movwf	indf2,c
  3670  0050CC                     
  3671                           ;xf/xf.c: 37:     }
  3672  0050CC  4A20               	infsnz	XF_init@i^0,f,c
  3673  0050CE  2A21               	incf	(XF_init@i+1)^0,f,c
  3674  0050D0  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3675  0050D2  EF74  F028         	goto	u7571
  3676  0050D6  5021               	movf	(XF_init@i+1)^0,w,c
  3677  0050D8  E109               	bnz	u7570
  3678  0050DA  0E08               	movlw	8
  3679  0050DC  5C20               	subwf	XF_init@i^0,w,c
  3680  0050DE  A0D8               	btfss	status,0,c
  3681  0050E0  EF74  F028         	goto	u7571
  3682  0050E4  EF76  F028         	goto	u7570
  3683  0050E8                     u7571:
  3684  0050E8  EF40  F028         	goto	l10020
  3685  0050EC                     u7570:
  3686  0050EC                     
  3687                           ;xf/xf.c: 38:     theXF.in = 0;
  3688  0050EC  0E00               	movlw	0
  3689  0050EE  0100               	movlb	0	; () banked
  3690  0050F0  6FD9               	movwf	(_theXF+36)& (0+255),b
  3691                           
  3692                           ;xf/xf.c: 39:     theXF.out = 0;
  3693  0050F2  0E00               	movlw	0
  3694  0050F4  6FDA               	movwf	(_theXF+37)& (0+255),b
  3695  0050F6                     
  3696                           ; BSR set to: 0
  3697  0050F6  0012               	return		;funcret
  3698  0050F8                     __end_of_XF_init:
  3699                           	callstack 0
  3700                           
  3701 ;; *************** function _LCD_Init *****************
  3702 ;; Defined at:
  3703 ;;		line 20 in file "libraries/lcd_highlevel.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  i               1   23[COMRAM] unsigned char 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3717 ;;      Params:         0       0       0       0       0       0       0
  3718 ;;      Locals:         1       0       0       0       0       0       0
  3719 ;;      Temps:          1       0       0       0       0       0       0
  3720 ;;      Totals:         2       0       0       0       0       0       0
  3721 ;;Total ram usage:        2 bytes
  3722 ;; Hardware stack levels used: 1
  3723 ;; Hardware stack levels required when called: 5
  3724 ;; This function calls:
  3725 ;;		_LCD_Lowlevel_Init
  3726 ;; This function is called by:
  3727 ;;		_Factory_init
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text7
  3732  002E20                     __ptext7:
  3733                           	callstack 0
  3734  002E20                     _LCD_Init:
  3735                           	callstack 24
  3736  002E20                     
  3737                           ;libraries/lcd_highlevel.c: 22:   uint8_t i;;libraries/lcd_highlevel.c: 86:   LCD_Lowlev
      +                          el_Init();
  3738  002E20  EC7D  F029         	call	_LCD_Lowlevel_Init	;wreg free
  3739  002E24                     
  3740                           ;libraries/lcd_highlevel.c: 87:   PORTA = 0x11; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3741  002E24  0E11               	movlw	17
  3742  002E26  6E80               	movwf	128,c	;volatile
  3743  002E28  988B               	bcf	3979,4,c	;volatile
  3744  002E2A  968B               	bcf	3979,3,c	;volatile
  3745  002E2C  868B               	bsf	3979,3,c	;volatile
  3746  002E2E  888B               	bsf	3979,4,c	;volatile
  3747  002E30                     
  3748                           ;libraries/lcd_highlevel.c: 88:   for(i=0;i<10;i++)
  3749  002E30  0E00               	movlw	0
  3750  002E32  6E18               	movwf	LCD_Init@i^0,c
  3751  002E34                     l3912:
  3752                           
  3753                           ;libraries/lcd_highlevel.c: 89:   {;libraries/lcd_highlevel.c: 90:     _delay((unsigned 
      +                          long)((10)*(64000000L/4000.0)));
  3754  002E34  0ED0               	movlw	208
  3755  002E36  6E17               	movwf	??_LCD_Init^0,c
  3756  002E38  0ECA               	movlw	202
  3757  002E3A                     u7787:
  3758  002E3A  2EE8               	decfsz	wreg,f,c
  3759  002E3C  D7FE               	bra	u7787
  3760  002E3E  2E17               	decfsz	??_LCD_Init^0,f,c
  3761  002E40  D7FC               	bra	u7787
  3762  002E42                     
  3763                           ;libraries/lcd_highlevel.c: 91:   }
  3764  002E42  2A18               	incf	LCD_Init@i^0,f,c
  3765  002E44  0E09               	movlw	9
  3766  002E46  6418               	cpfsgt	LCD_Init@i^0,c
  3767  002E48  EF28  F017         	goto	u2341
  3768  002E4C  EF2A  F017         	goto	u2340
  3769  002E50                     u2341:
  3770  002E50  EF1A  F017         	goto	l3912
  3771  002E54                     u2340:
  3772  002E54                     
  3773                           ;libraries/lcd_highlevel.c: 92:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3774  002E54  0E36               	movlw	54
  3775  002E56  6E80               	movwf	128,c	;volatile
  3776  002E58  988B               	bcf	3979,4,c	;volatile
  3777  002E5A  968B               	bcf	3979,3,c	;volatile
  3778  002E5C  868B               	bsf	3979,3,c	;volatile
  3779  002E5E  888B               	bsf	3979,4,c	;volatile
  3780                           
  3781                           ;libraries/lcd_highlevel.c: 93:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
  3782  002E60  0E00               	movlw	0
  3783  002E62  6E80               	movwf	128,c	;volatile
  3784  002E64  968B               	bcf	3979,3,c	;volatile
  3785  002E66  868B               	bsf	3979,3,c	;volatile
  3786                           
  3787                           ;libraries/lcd_highlevel.c: 94:   PORTA = 0x3A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3788  002E68  0E3A               	movlw	58
  3789  002E6A  6E80               	movwf	128,c	;volatile
  3790  002E6C  988B               	bcf	3979,4,c	;volatile
  3791  002E6E  968B               	bcf	3979,3,c	;volatile
  3792  002E70  868B               	bsf	3979,3,c	;volatile
  3793  002E72  888B               	bsf	3979,4,c	;volatile
  3794                           
  3795                           ;libraries/lcd_highlevel.c: 95:   PORTA = 0x55; LATC3 = 0; LATC3 = 1;;
  3796  002E74  0E55               	movlw	85
  3797  002E76  6E80               	movwf	128,c	;volatile
  3798  002E78  968B               	bcf	3979,3,c	;volatile
  3799  002E7A  868B               	bsf	3979,3,c	;volatile
  3800                           
  3801                           ;libraries/lcd_highlevel.c: 96:   PORTA = 0xB2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3802  002E7C  0EB2               	movlw	178
  3803  002E7E  6E80               	movwf	128,c	;volatile
  3804  002E80  988B               	bcf	3979,4,c	;volatile
  3805  002E82  968B               	bcf	3979,3,c	;volatile
  3806  002E84  868B               	bsf	3979,3,c	;volatile
  3807  002E86  888B               	bsf	3979,4,c	;volatile
  3808                           
  3809                           ;libraries/lcd_highlevel.c: 97:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3810  002E88  0E0C               	movlw	12
  3811  002E8A  6E80               	movwf	128,c	;volatile
  3812  002E8C  968B               	bcf	3979,3,c	;volatile
  3813  002E8E  868B               	bsf	3979,3,c	;volatile
  3814                           
  3815                           ;libraries/lcd_highlevel.c: 98:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3816  002E90  0E0C               	movlw	12
  3817  002E92  6E80               	movwf	128,c	;volatile
  3818  002E94  968B               	bcf	3979,3,c	;volatile
  3819  002E96  868B               	bsf	3979,3,c	;volatile
  3820                           
  3821                           ;libraries/lcd_highlevel.c: 99:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3822  002E98  0E33               	movlw	51
  3823  002E9A  6E80               	movwf	128,c	;volatile
  3824  002E9C  968B               	bcf	3979,3,c	;volatile
  3825  002E9E  868B               	bsf	3979,3,c	;volatile
  3826                           
  3827                           ;libraries/lcd_highlevel.c: 100:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3828  002EA0  0E33               	movlw	51
  3829  002EA2  6E80               	movwf	128,c	;volatile
  3830  002EA4  968B               	bcf	3979,3,c	;volatile
  3831  002EA6  868B               	bsf	3979,3,c	;volatile
  3832                           
  3833                           ;libraries/lcd_highlevel.c: 101:   PORTA = 0xB7; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3834  002EA8  0EB7               	movlw	183
  3835  002EAA  6E80               	movwf	128,c	;volatile
  3836  002EAC  988B               	bcf	3979,4,c	;volatile
  3837  002EAE  968B               	bcf	3979,3,c	;volatile
  3838  002EB0  868B               	bsf	3979,3,c	;volatile
  3839  002EB2  888B               	bsf	3979,4,c	;volatile
  3840                           
  3841                           ;libraries/lcd_highlevel.c: 102:   PORTA = 0x35; LATC3 = 0; LATC3 = 1;;
  3842  002EB4  0E35               	movlw	53
  3843  002EB6  6E80               	movwf	128,c	;volatile
  3844  002EB8  968B               	bcf	3979,3,c	;volatile
  3845  002EBA  868B               	bsf	3979,3,c	;volatile
  3846                           
  3847                           ;libraries/lcd_highlevel.c: 103:   PORTA = 0xBB; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3848  002EBC  0EBB               	movlw	187
  3849  002EBE  6E80               	movwf	128,c	;volatile
  3850  002EC0  988B               	bcf	3979,4,c	;volatile
  3851  002EC2  968B               	bcf	3979,3,c	;volatile
  3852  002EC4  868B               	bsf	3979,3,c	;volatile
  3853  002EC6  888B               	bsf	3979,4,c	;volatile
  3854                           
  3855                           ;libraries/lcd_highlevel.c: 104:   PORTA = 0x2B; LATC3 = 0; LATC3 = 1;;
  3856  002EC8  0E2B               	movlw	43
  3857  002ECA  6E80               	movwf	128,c	;volatile
  3858  002ECC  968B               	bcf	3979,3,c	;volatile
  3859  002ECE  868B               	bsf	3979,3,c	;volatile
  3860                           
  3861                           ;libraries/lcd_highlevel.c: 105:   PORTA = 0xC0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3862  002ED0  0EC0               	movlw	192
  3863  002ED2  6E80               	movwf	128,c	;volatile
  3864  002ED4  988B               	bcf	3979,4,c	;volatile
  3865  002ED6  968B               	bcf	3979,3,c	;volatile
  3866  002ED8  868B               	bsf	3979,3,c	;volatile
  3867  002EDA  888B               	bsf	3979,4,c	;volatile
  3868                           
  3869                           ;libraries/lcd_highlevel.c: 106:   PORTA = 0x2C; LATC3 = 0; LATC3 = 1;;
  3870  002EDC  0E2C               	movlw	44
  3871  002EDE  6E80               	movwf	128,c	;volatile
  3872  002EE0  968B               	bcf	3979,3,c	;volatile
  3873  002EE2  868B               	bsf	3979,3,c	;volatile
  3874                           
  3875                           ;libraries/lcd_highlevel.c: 107:   PORTA = 0xC2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3876  002EE4  0EC2               	movlw	194
  3877  002EE6  6E80               	movwf	128,c	;volatile
  3878  002EE8  988B               	bcf	3979,4,c	;volatile
  3879  002EEA  968B               	bcf	3979,3,c	;volatile
  3880  002EEC  868B               	bsf	3979,3,c	;volatile
  3881  002EEE  888B               	bsf	3979,4,c	;volatile
  3882                           
  3883                           ;libraries/lcd_highlevel.c: 108:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  3884  002EF0  0E01               	movlw	1
  3885  002EF2  6E80               	movwf	128,c	;volatile
  3886  002EF4  968B               	bcf	3979,3,c	;volatile
  3887  002EF6  868B               	bsf	3979,3,c	;volatile
  3888  002EF8                     
  3889                           ;libraries/lcd_highlevel.c: 109:   PORTA = 0xFF; LATC3 = 0; LATC3 = 1;;
  3890  002EF8  6880               	setf	128,c	;volatile
  3891  002EFA  968B               	bcf	3979,3,c	;volatile
  3892  002EFC  868B               	bsf	3979,3,c	;volatile
  3893                           
  3894                           ;libraries/lcd_highlevel.c: 110:   PORTA = 0XC3; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3895  002EFE  0EC3               	movlw	195
  3896  002F00  6E80               	movwf	128,c	;volatile
  3897  002F02  988B               	bcf	3979,4,c	;volatile
  3898  002F04  968B               	bcf	3979,3,c	;volatile
  3899  002F06  868B               	bsf	3979,3,c	;volatile
  3900  002F08  888B               	bsf	3979,4,c	;volatile
  3901                           
  3902                           ;libraries/lcd_highlevel.c: 111:   PORTA = 0x11; LATC3 = 0; LATC3 = 1;;
  3903  002F0A  0E11               	movlw	17
  3904  002F0C  6E80               	movwf	128,c	;volatile
  3905  002F0E  968B               	bcf	3979,3,c	;volatile
  3906  002F10  868B               	bsf	3979,3,c	;volatile
  3907                           
  3908                           ;libraries/lcd_highlevel.c: 112:   PORTA = 0xC4; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3909  002F12  0EC4               	movlw	196
  3910  002F14  6E80               	movwf	128,c	;volatile
  3911  002F16  988B               	bcf	3979,4,c	;volatile
  3912  002F18  968B               	bcf	3979,3,c	;volatile
  3913  002F1A  868B               	bsf	3979,3,c	;volatile
  3914  002F1C  888B               	bsf	3979,4,c	;volatile
  3915                           
  3916                           ;libraries/lcd_highlevel.c: 113:   PORTA = 0x20; LATC3 = 0; LATC3 = 1;;
  3917  002F1E  0E20               	movlw	32
  3918  002F20  6E80               	movwf	128,c	;volatile
  3919  002F22  968B               	bcf	3979,3,c	;volatile
  3920  002F24  868B               	bsf	3979,3,c	;volatile
  3921                           
  3922                           ;libraries/lcd_highlevel.c: 114:   PORTA = 0xC6; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3923  002F26  0EC6               	movlw	198
  3924  002F28  6E80               	movwf	128,c	;volatile
  3925  002F2A  988B               	bcf	3979,4,c	;volatile
  3926  002F2C  968B               	bcf	3979,3,c	;volatile
  3927  002F2E  868B               	bsf	3979,3,c	;volatile
  3928  002F30  888B               	bsf	3979,4,c	;volatile
  3929                           
  3930                           ;libraries/lcd_highlevel.c: 115:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  3931  002F32  0E09               	movlw	9
  3932  002F34  6E80               	movwf	128,c	;volatile
  3933  002F36  968B               	bcf	3979,3,c	;volatile
  3934  002F38  868B               	bsf	3979,3,c	;volatile
  3935                           
  3936                           ;libraries/lcd_highlevel.c: 116:   PORTA = 0xD0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3937  002F3A  0ED0               	movlw	208
  3938  002F3C  6E80               	movwf	128,c	;volatile
  3939  002F3E  988B               	bcf	3979,4,c	;volatile
  3940  002F40  968B               	bcf	3979,3,c	;volatile
  3941  002F42  868B               	bsf	3979,3,c	;volatile
  3942  002F44  888B               	bsf	3979,4,c	;volatile
  3943                           
  3944                           ;libraries/lcd_highlevel.c: 117:   PORTA = 0xA4; LATC3 = 0; LATC3 = 1;;
  3945  002F46  0EA4               	movlw	164
  3946  002F48  6E80               	movwf	128,c	;volatile
  3947  002F4A  968B               	bcf	3979,3,c	;volatile
  3948  002F4C  868B               	bsf	3979,3,c	;volatile
  3949                           
  3950                           ;libraries/lcd_highlevel.c: 118:   PORTA = 0xA1; LATC3 = 0; LATC3 = 1;;
  3951  002F4E  0EA1               	movlw	161
  3952  002F50  6E80               	movwf	128,c	;volatile
  3953  002F52  968B               	bcf	3979,3,c	;volatile
  3954  002F54  868B               	bsf	3979,3,c	;volatile
  3955                           
  3956                           ;libraries/lcd_highlevel.c: 119:   PORTA = 0xE0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3957  002F56  0EE0               	movlw	224
  3958  002F58  6E80               	movwf	128,c	;volatile
  3959  002F5A  988B               	bcf	3979,4,c	;volatile
  3960  002F5C  968B               	bcf	3979,3,c	;volatile
  3961  002F5E  868B               	bsf	3979,3,c	;volatile
  3962  002F60  888B               	bsf	3979,4,c	;volatile
  3963                           
  3964                           ;libraries/lcd_highlevel.c: 120:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  3965  002F62  0ED0               	movlw	208
  3966  002F64  6E80               	movwf	128,c	;volatile
  3967  002F66  968B               	bcf	3979,3,c	;volatile
  3968  002F68  868B               	bsf	3979,3,c	;volatile
  3969                           
  3970                           ;libraries/lcd_highlevel.c: 121:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  3971  002F6A  0E00               	movlw	0
  3972  002F6C  6E80               	movwf	128,c	;volatile
  3973  002F6E  968B               	bcf	3979,3,c	;volatile
  3974  002F70  868B               	bsf	3979,3,c	;volatile
  3975                           
  3976                           ;libraries/lcd_highlevel.c: 122:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  3977  002F72  0E05               	movlw	5
  3978  002F74  6E80               	movwf	128,c	;volatile
  3979  002F76  968B               	bcf	3979,3,c	;volatile
  3980  002F78  868B               	bsf	3979,3,c	;volatile
  3981                           
  3982                           ;libraries/lcd_highlevel.c: 123:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  3983  002F7A  0E0E               	movlw	14
  3984  002F7C  6E80               	movwf	128,c	;volatile
  3985  002F7E  968B               	bcf	3979,3,c	;volatile
  3986  002F80  868B               	bsf	3979,3,c	;volatile
  3987                           
  3988                           ;libraries/lcd_highlevel.c: 124:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  3989  002F82  0E15               	movlw	21
  3990  002F84  6E80               	movwf	128,c	;volatile
  3991  002F86  968B               	bcf	3979,3,c	;volatile
  3992  002F88  868B               	bsf	3979,3,c	;volatile
  3993                           
  3994                           ;libraries/lcd_highlevel.c: 125:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  3995  002F8A  0E0D               	movlw	13
  3996  002F8C  6E80               	movwf	128,c	;volatile
  3997  002F8E  968B               	bcf	3979,3,c	;volatile
  3998  002F90  868B               	bsf	3979,3,c	;volatile
  3999                           
  4000                           ;libraries/lcd_highlevel.c: 126:   PORTA = 0x37; LATC3 = 0; LATC3 = 1;;
  4001  002F92  0E37               	movlw	55
  4002  002F94  6E80               	movwf	128,c	;volatile
  4003  002F96  968B               	bcf	3979,3,c	;volatile
  4004  002F98  868B               	bsf	3979,3,c	;volatile
  4005                           
  4006                           ;libraries/lcd_highlevel.c: 127:   PORTA = 0x43; LATC3 = 0; LATC3 = 1;;
  4007  002F9A  0E43               	movlw	67
  4008  002F9C  6E80               	movwf	128,c	;volatile
  4009  002F9E  968B               	bcf	3979,3,c	;volatile
  4010  002FA0  868B               	bsf	3979,3,c	;volatile
  4011                           
  4012                           ;libraries/lcd_highlevel.c: 128:   PORTA = 0x47; LATC3 = 0; LATC3 = 1;;
  4013  002FA2  0E47               	movlw	71
  4014  002FA4  6E80               	movwf	128,c	;volatile
  4015  002FA6  968B               	bcf	3979,3,c	;volatile
  4016  002FA8  868B               	bsf	3979,3,c	;volatile
  4017                           
  4018                           ;libraries/lcd_highlevel.c: 129:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  4019  002FAA  0E09               	movlw	9
  4020  002FAC  6E80               	movwf	128,c	;volatile
  4021  002FAE  968B               	bcf	3979,3,c	;volatile
  4022  002FB0  868B               	bsf	3979,3,c	;volatile
  4023                           
  4024                           ;libraries/lcd_highlevel.c: 130:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  4025  002FB2  0E15               	movlw	21
  4026  002FB4  6E80               	movwf	128,c	;volatile
  4027  002FB6  968B               	bcf	3979,3,c	;volatile
  4028  002FB8  868B               	bsf	3979,3,c	;volatile
  4029                           
  4030                           ;libraries/lcd_highlevel.c: 131:   PORTA = 0x12; LATC3 = 0; LATC3 = 1;;
  4031  002FBA  0E12               	movlw	18
  4032  002FBC  6E80               	movwf	128,c	;volatile
  4033  002FBE  968B               	bcf	3979,3,c	;volatile
  4034  002FC0  868B               	bsf	3979,3,c	;volatile
  4035                           
  4036                           ;libraries/lcd_highlevel.c: 132:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4037  002FC2  0E16               	movlw	22
  4038  002FC4  6E80               	movwf	128,c	;volatile
  4039  002FC6  968B               	bcf	3979,3,c	;volatile
  4040  002FC8  868B               	bsf	3979,3,c	;volatile
  4041                           
  4042                           ;libraries/lcd_highlevel.c: 133:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4043  002FCA  0E19               	movlw	25
  4044  002FCC  6E80               	movwf	128,c	;volatile
  4045  002FCE  968B               	bcf	3979,3,c	;volatile
  4046  002FD0  868B               	bsf	3979,3,c	;volatile
  4047                           
  4048                           ;libraries/lcd_highlevel.c: 134:   PORTA = 0xE1; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4049  002FD2  0EE1               	movlw	225
  4050  002FD4  6E80               	movwf	128,c	;volatile
  4051  002FD6  988B               	bcf	3979,4,c	;volatile
  4052  002FD8  968B               	bcf	3979,3,c	;volatile
  4053  002FDA  868B               	bsf	3979,3,c	;volatile
  4054  002FDC  888B               	bsf	3979,4,c	;volatile
  4055                           
  4056                           ;libraries/lcd_highlevel.c: 135:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  4057  002FDE  0ED0               	movlw	208
  4058  002FE0  6E80               	movwf	128,c	;volatile
  4059  002FE2  968B               	bcf	3979,3,c	;volatile
  4060  002FE4  868B               	bsf	3979,3,c	;volatile
  4061                           
  4062                           ;libraries/lcd_highlevel.c: 136:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4063  002FE6  0E00               	movlw	0
  4064  002FE8  6E80               	movwf	128,c	;volatile
  4065  002FEA  968B               	bcf	3979,3,c	;volatile
  4066  002FEC  868B               	bsf	3979,3,c	;volatile
  4067                           
  4068                           ;libraries/lcd_highlevel.c: 137:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  4069  002FEE  0E05               	movlw	5
  4070  002FF0  6E80               	movwf	128,c	;volatile
  4071  002FF2  968B               	bcf	3979,3,c	;volatile
  4072  002FF4  868B               	bsf	3979,3,c	;volatile
  4073                           
  4074                           ;libraries/lcd_highlevel.c: 138:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  4075  002FF6  0E0D               	movlw	13
  4076  002FF8  6E80               	movwf	128,c	;volatile
  4077  002FFA  968B               	bcf	3979,3,c	;volatile
  4078  002FFC  868B               	bsf	3979,3,c	;volatile
  4079                           
  4080                           ;libraries/lcd_highlevel.c: 139:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  4081  002FFE  0E0C               	movlw	12
  4082  003000  6E80               	movwf	128,c	;volatile
  4083  003002  968B               	bcf	3979,3,c	;volatile
  4084  003004  868B               	bsf	3979,3,c	;volatile
  4085                           
  4086                           ;libraries/lcd_highlevel.c: 140:   PORTA = 0x06; LATC3 = 0; LATC3 = 1;;
  4087  003006  0E06               	movlw	6
  4088  003008  6E80               	movwf	128,c	;volatile
  4089  00300A  968B               	bcf	3979,3,c	;volatile
  4090  00300C  868B               	bsf	3979,3,c	;volatile
  4091                           
  4092                           ;libraries/lcd_highlevel.c: 141:   PORTA = 0x2D; LATC3 = 0; LATC3 = 1;;
  4093  00300E  0E2D               	movlw	45
  4094  003010  6E80               	movwf	128,c	;volatile
  4095  003012  968B               	bcf	3979,3,c	;volatile
  4096  003014  868B               	bsf	3979,3,c	;volatile
  4097                           
  4098                           ;libraries/lcd_highlevel.c: 142:   PORTA = 0x44; LATC3 = 0; LATC3 = 1;;
  4099  003016  0E44               	movlw	68
  4100  003018  6E80               	movwf	128,c	;volatile
  4101  00301A  968B               	bcf	3979,3,c	;volatile
  4102  00301C  868B               	bsf	3979,3,c	;volatile
  4103                           
  4104                           ;libraries/lcd_highlevel.c: 143:   PORTA = 0x40; LATC3 = 0; LATC3 = 1;;
  4105  00301E  0E40               	movlw	64
  4106  003020  6E80               	movwf	128,c	;volatile
  4107  003022  968B               	bcf	3979,3,c	;volatile
  4108  003024  868B               	bsf	3979,3,c	;volatile
  4109                           
  4110                           ;libraries/lcd_highlevel.c: 144:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  4111  003026  0E0E               	movlw	14
  4112  003028  6E80               	movwf	128,c	;volatile
  4113  00302A  968B               	bcf	3979,3,c	;volatile
  4114  00302C  868B               	bsf	3979,3,c	;volatile
  4115                           
  4116                           ;libraries/lcd_highlevel.c: 145:   PORTA = 0x1C; LATC3 = 0; LATC3 = 1;;
  4117  00302E  0E1C               	movlw	28
  4118  003030  6E80               	movwf	128,c	;volatile
  4119  003032  968B               	bcf	3979,3,c	;volatile
  4120  003034  868B               	bsf	3979,3,c	;volatile
  4121                           
  4122                           ;libraries/lcd_highlevel.c: 146:   PORTA = 0x18; LATC3 = 0; LATC3 = 1;;
  4123  003036  0E18               	movlw	24
  4124  003038  6E80               	movwf	128,c	;volatile
  4125  00303A  968B               	bcf	3979,3,c	;volatile
  4126  00303C  868B               	bsf	3979,3,c	;volatile
  4127                           
  4128                           ;libraries/lcd_highlevel.c: 147:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4129  00303E  0E16               	movlw	22
  4130  003040  6E80               	movwf	128,c	;volatile
  4131  003042  968B               	bcf	3979,3,c	;volatile
  4132  003044  868B               	bsf	3979,3,c	;volatile
  4133                           
  4134                           ;libraries/lcd_highlevel.c: 148:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4135  003046  0E19               	movlw	25
  4136  003048  6E80               	movwf	128,c	;volatile
  4137  00304A  968B               	bcf	3979,3,c	;volatile
  4138  00304C  868B               	bsf	3979,3,c	;volatile
  4139                           
  4140                           ;libraries/lcd_highlevel.c: 149:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4141  00304E  0E2A               	movlw	42
  4142  003050  6E80               	movwf	128,c	;volatile
  4143  003052  988B               	bcf	3979,4,c	;volatile
  4144  003054  968B               	bcf	3979,3,c	;volatile
  4145  003056  868B               	bsf	3979,3,c	;volatile
  4146  003058  888B               	bsf	3979,4,c	;volatile
  4147                           
  4148                           ;libraries/lcd_highlevel.c: 150:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4149  00305A  0E00               	movlw	0
  4150  00305C  6E80               	movwf	128,c	;volatile
  4151  00305E  968B               	bcf	3979,3,c	;volatile
  4152  003060  868B               	bsf	3979,3,c	;volatile
  4153                           
  4154                           ;libraries/lcd_highlevel.c: 151:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4155  003062  0E00               	movlw	0
  4156  003064  6E80               	movwf	128,c	;volatile
  4157  003066  968B               	bcf	3979,3,c	;volatile
  4158  003068  868B               	bsf	3979,3,c	;volatile
  4159                           
  4160                           ;libraries/lcd_highlevel.c: 152:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4161  00306A  0E00               	movlw	0
  4162  00306C  6E80               	movwf	128,c	;volatile
  4163  00306E  968B               	bcf	3979,3,c	;volatile
  4164  003070  868B               	bsf	3979,3,c	;volatile
  4165                           
  4166                           ;libraries/lcd_highlevel.c: 153:   PORTA = 0xEF; LATC3 = 0; LATC3 = 1;;
  4167  003072  0EEF               	movlw	239
  4168  003074  6E80               	movwf	128,c	;volatile
  4169  003076  968B               	bcf	3979,3,c	;volatile
  4170  003078  868B               	bsf	3979,3,c	;volatile
  4171                           
  4172                           ;libraries/lcd_highlevel.c: 154:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4173  00307A  0E2B               	movlw	43
  4174  00307C  6E80               	movwf	128,c	;volatile
  4175  00307E  988B               	bcf	3979,4,c	;volatile
  4176  003080  968B               	bcf	3979,3,c	;volatile
  4177  003082  868B               	bsf	3979,3,c	;volatile
  4178  003084  888B               	bsf	3979,4,c	;volatile
  4179                           
  4180                           ;libraries/lcd_highlevel.c: 155:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4181  003086  0E00               	movlw	0
  4182  003088  6E80               	movwf	128,c	;volatile
  4183  00308A  968B               	bcf	3979,3,c	;volatile
  4184  00308C  868B               	bsf	3979,3,c	;volatile
  4185                           
  4186                           ;libraries/lcd_highlevel.c: 156:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4187  00308E  0E00               	movlw	0
  4188  003090  6E80               	movwf	128,c	;volatile
  4189  003092  968B               	bcf	3979,3,c	;volatile
  4190  003094  868B               	bsf	3979,3,c	;volatile
  4191                           
  4192                           ;libraries/lcd_highlevel.c: 157:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4193  003096  0E01               	movlw	1
  4194  003098  6E80               	movwf	128,c	;volatile
  4195  00309A  968B               	bcf	3979,3,c	;volatile
  4196  00309C  868B               	bsf	3979,3,c	;volatile
  4197                           
  4198                           ;libraries/lcd_highlevel.c: 158:   PORTA = 0x3F; LATC3 = 0; LATC3 = 1;;
  4199  00309E  0E3F               	movlw	63
  4200  0030A0  6E80               	movwf	128,c	;volatile
  4201  0030A2  968B               	bcf	3979,3,c	;volatile
  4202  0030A4  868B               	bsf	3979,3,c	;volatile
  4203                           
  4204                           ;libraries/lcd_highlevel.c: 159:   PORTA = 0x26; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4205  0030A6  0E26               	movlw	38
  4206  0030A8  6E80               	movwf	128,c	;volatile
  4207  0030AA  988B               	bcf	3979,4,c	;volatile
  4208  0030AC  968B               	bcf	3979,3,c	;volatile
  4209  0030AE  868B               	bsf	3979,3,c	;volatile
  4210  0030B0  888B               	bsf	3979,4,c	;volatile
  4211                           
  4212                           ;libraries/lcd_highlevel.c: 160:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4213  0030B2  0E01               	movlw	1
  4214  0030B4  6E80               	movwf	128,c	;volatile
  4215  0030B6  968B               	bcf	3979,3,c	;volatile
  4216  0030B8  868B               	bsf	3979,3,c	;volatile
  4217                           
  4218                           ;libraries/lcd_highlevel.c: 161:   PORTA = 0x29; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4219  0030BA  0E29               	movlw	41
  4220  0030BC  6E80               	movwf	128,c	;volatile
  4221  0030BE  988B               	bcf	3979,4,c	;volatile
  4222  0030C0  968B               	bcf	3979,3,c	;volatile
  4223  0030C2  868B               	bsf	3979,3,c	;volatile
  4224  0030C4  888B               	bsf	3979,4,c	;volatile
  4225  0030C6  0012               	return		;funcret
  4226  0030C8                     __end_of_LCD_Init:
  4227                           	callstack 0
  4228                           
  4229 ;; *************** function _LCD_Lowlevel_Init *****************
  4230 ;; Defined at:
  4231 ;;		line 17 in file "libraries/lcd_lowlevel.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  i               4   18[COMRAM] unsigned long 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      void 
  4238 ;; Registers used:
  4239 ;;		wreg, status,2, status,0
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4245 ;;      Params:         0       0       0       0       0       0       0
  4246 ;;      Locals:         4       0       0       0       0       0       0
  4247 ;;      Temps:          1       0       0       0       0       0       0
  4248 ;;      Totals:         5       0       0       0       0       0       0
  4249 ;;Total ram usage:        5 bytes
  4250 ;; Hardware stack levels used: 1
  4251 ;; Hardware stack levels required when called: 4
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_LCD_Init
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text8
  4260  0052FA                     __ptext8:
  4261                           	callstack 0
  4262  0052FA                     _LCD_Lowlevel_Init:
  4263                           	callstack 24
  4264  0052FA                     
  4265                           ;libraries/lcd_lowlevel.c: 19:   uint32_t i;;libraries/lcd_lowlevel.c: 20:   TRISC5 = 0;
  4266  0052FA  9A94               	bcf	3988,5,c	;volatile
  4267                           
  4268                           ;libraries/lcd_lowlevel.c: 21:   TRISC2 = 0;
  4269  0052FC  9494               	bcf	3988,2,c	;volatile
  4270                           
  4271                           ;libraries/lcd_lowlevel.c: 22:   TRISC3 = 0;
  4272  0052FE  9694               	bcf	3988,3,c	;volatile
  4273                           
  4274                           ;libraries/lcd_lowlevel.c: 23:   TRISC4 = 0;
  4275  005300  9894               	bcf	3988,4,c	;volatile
  4276  005302                     
  4277                           ;libraries/lcd_lowlevel.c: 25:   TRISA = 0x00;
  4278  005302  0E00               	movlw	0
  4279  005304  6E92               	movwf	146,c	;volatile
  4280  005306                     
  4281                           ;libraries/lcd_lowlevel.c: 28:  LATC5 = 0;
  4282  005306  9A8B               	bcf	3979,5,c	;volatile
  4283  005308                     
  4284                           ;libraries/lcd_lowlevel.c: 29:  LATC2 = 1;
  4285  005308  848B               	bsf	3979,2,c	;volatile
  4286  00530A                     
  4287                           ;libraries/lcd_lowlevel.c: 30:  LATC3 = 1;
  4288  00530A  868B               	bsf	3979,3,c	;volatile
  4289  00530C                     
  4290                           ;libraries/lcd_lowlevel.c: 31:  LATC4 = 1;
  4291  00530C  888B               	bsf	3979,4,c	;volatile
  4292                           
  4293                           ;libraries/lcd_lowlevel.c: 33:   for(i=0;i<12;i++)
  4294  00530E  0E00               	movlw	0
  4295  005310  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4296  005312  0E00               	movlw	0
  4297  005314  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4298  005316  0E00               	movlw	0
  4299  005318  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4300  00531A  0E00               	movlw	0
  4301  00531C  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4302  00531E                     l3748:
  4303                           
  4304                           ;libraries/lcd_lowlevel.c: 34:   {;libraries/lcd_lowlevel.c: 35:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4305  00531E  0ED0               	movlw	208
  4306  005320  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4307  005322  0ECA               	movlw	202
  4308  005324                     u7797:
  4309  005324  2EE8               	decfsz	wreg,f,c
  4310  005326  D7FE               	bra	u7797
  4311  005328  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4312  00532A  D7FC               	bra	u7797
  4313  00532C                     
  4314                           ;libraries/lcd_lowlevel.c: 36:   }
  4315  00532C  0E01               	movlw	1
  4316  00532E  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4317  005330  0E00               	movlw	0
  4318  005332  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4319  005334  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4320  005336  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4321  005338  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4322  00533A  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4323  00533C  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4324  00533E  E109               	bnz	u2170
  4325  005340  0E0C               	movlw	12
  4326  005342  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4327  005344  A0D8               	btfss	status,0,c
  4328  005346  EFA7  F029         	goto	u2171
  4329  00534A  EFA9  F029         	goto	u2170
  4330  00534E                     u2171:
  4331  00534E  EF8F  F029         	goto	l3748
  4332  005352                     u2170:
  4333  005352                     
  4334                           ;libraries/lcd_lowlevel.c: 38:   for(i=0;i<12;i++)
  4335  005352  0E00               	movlw	0
  4336  005354  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4337  005356  0E00               	movlw	0
  4338  005358  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4339  00535A  0E00               	movlw	0
  4340  00535C  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4341  00535E  0E00               	movlw	0
  4342  005360  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4343  005362                     l3760:
  4344                           
  4345                           ;libraries/lcd_lowlevel.c: 39:   {;libraries/lcd_lowlevel.c: 40:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4346  005362  0ED0               	movlw	208
  4347  005364  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4348  005366  0ECA               	movlw	202
  4349  005368                     u7807:
  4350  005368  2EE8               	decfsz	wreg,f,c
  4351  00536A  D7FE               	bra	u7807
  4352  00536C  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4353  00536E  D7FC               	bra	u7807
  4354  005370                     
  4355                           ;libraries/lcd_lowlevel.c: 41:   }
  4356  005370  0E01               	movlw	1
  4357  005372  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4358  005374  0E00               	movlw	0
  4359  005376  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4360  005378  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4361  00537A  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4362  00537C  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4363  00537E  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4364  005380  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4365  005382  E109               	bnz	u2180
  4366  005384  0E0C               	movlw	12
  4367  005386  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4368  005388  A0D8               	btfss	status,0,c
  4369  00538A  EFC9  F029         	goto	u2181
  4370  00538E  EFCB  F029         	goto	u2180
  4371  005392                     u2181:
  4372  005392  EFB1  F029         	goto	l3760
  4373  005396                     u2180:
  4374  005396  0012               	return		;funcret
  4375  005398                     __end_of_LCD_Lowlevel_Init:
  4376                           	callstack 0
  4377                           
  4378 ;; *************** function _GameParameters_init *****************
  4379 ;; Defined at:
  4380 ;;		line 3 in file "class/gameParameters.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;  s               2   42[COMRAM] PTR struct GameParameter
  4383 ;;		 -> g1(201), 
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;		None
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  1    wreg      void 
  4388 ;; Registers used:
  4389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4395 ;;      Params:         2       0       0       0       0       0       0
  4396 ;;      Locals:         0       0       0       0       0       0       0
  4397 ;;      Temps:          0       0       0       0       0       0       0
  4398 ;;      Totals:         2       0       0       0       0       0       0
  4399 ;;Total ram usage:        2 bytes
  4400 ;; Hardware stack levels used: 1
  4401 ;; Hardware stack levels required when called: 5
  4402 ;; This function calls:
  4403 ;;		_Ball_init
  4404 ;;		_LCD_ButtonCreate
  4405 ;;		_LCD_SliderCreate
  4406 ;;		_Paddle_init
  4407 ;; This function is called by:
  4408 ;;		_Factory_init
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           	psect	text9
  4413  00249A                     __ptext9:
  4414                           	callstack 0
  4415  00249A                     _GameParameters_init:
  4416                           	callstack 24
  4417  00249A                     
  4418                           ;class/gameParameters.c: 3: void GameParameters_init(struct GameParameters* s);class/gam
      +                          eParameters.c: 4: {;class/gameParameters.c: 5:     s->backlight = 11;
  4419  00249A  C02B  FFD9         	movff	GameParameters_init@s,fsr2l
  4420  00249E  C02C  FFDA         	movff	GameParameters_init@s+1,fsr2h
  4421  0024A2  0E0B               	movlw	11
  4422  0024A4  6EDE               	movwf	postinc2,c
  4423  0024A6  0E00               	movlw	0
  4424  0024A8  6EDD               	movwf	postdec2,c
  4425  0024AA                     
  4426                           ;class/gameParameters.c: 6:     CCPR2L = 255;
  4427  0024AA  6867               	setf	103,c	;volatile
  4428  0024AC                     
  4429                           ;class/gameParameters.c: 7:     s->player = 0;
  4430  0024AC  EE20 F002          	lfsr	2,2
  4431  0024B0  502B               	movf	GameParameters_init@s^0,w,c
  4432  0024B2  26D9               	addwf	fsr2l,f,c
  4433  0024B4  502C               	movf	(GameParameters_init@s+1)^0,w,c
  4434  0024B6  22DA               	addwfc	fsr2h,f,c
  4435  0024B8  0E00               	movlw	0
  4436  0024BA  6EDE               	movwf	postinc2,c
  4437  0024BC  0E00               	movlw	0
  4438  0024BE  6EDD               	movwf	postdec2,c
  4439  0024C0                     
  4440                           ;class/gameParameters.c: 8:     s->x=0;
  4441  0024C0  EE20 F004          	lfsr	2,4
  4442  0024C4  502B               	movf	GameParameters_init@s^0,w,c
  4443  0024C6  26D9               	addwf	fsr2l,f,c
  4444  0024C8  502C               	movf	(GameParameters_init@s+1)^0,w,c
  4445  0024CA  22DA               	addwfc	fsr2h,f,c
  4446  0024CC  0E00               	movlw	0
  4447  0024CE  6EDE               	movwf	postinc2,c
  4448  0024D0  0E00               	movlw	0
  4449  0024D2  6EDD               	movwf	postdec2,c
  4450  0024D4                     
  4451                           ;class/gameParameters.c: 9:     s->y=0;
  4452  0024D4  EE20 F006          	lfsr	2,6
  4453  0024D8  502B               	movf	GameParameters_init@s^0,w,c
  4454  0024DA  26D9               	addwf	fsr2l,f,c
  4455  0024DC  502C               	movf	(GameParameters_init@s+1)^0,w,c
  4456  0024DE  22DA               	addwfc	fsr2h,f,c
  4457  0024E0  0E00               	movlw	0
  4458  0024E2  6EDE               	movwf	postinc2,c
  4459  0024E4  0E00               	movlw	0
  4460  0024E6  6EDD               	movwf	postdec2,c
  4461  0024E8                     
  4462                           ;class/gameParameters.c: 10:     Ball_init(&(s->b));
  4463  0024E8  0EB1               	movlw	177
  4464  0024EA  242B               	addwf	GameParameters_init@s^0,w,c
  4465  0024EC  6E12               	movwf	Ball_init@b^0,c
  4466  0024EE  0E00               	movlw	0
  4467  0024F0  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4468  0024F2  6E13               	movwf	(Ball_init@b+1)^0,c
  4469  0024F4  ECE4  F02D         	call	_Ball_init	;wreg free
  4470  0024F8                     
  4471                           ;class/gameParameters.c: 11:     Paddle_init(&(s->p1),0);
  4472  0024F8  0EB9               	movlw	185
  4473  0024FA  242B               	addwf	GameParameters_init@s^0,w,c
  4474  0024FC  6E12               	movwf	Paddle_init@p^0,c
  4475  0024FE  0E00               	movlw	0
  4476  002500  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4477  002502  6E13               	movwf	(Paddle_init@p+1)^0,c
  4478  002504  0E00               	movlw	0
  4479  002506  6E15               	movwf	(Paddle_init@team+1)^0,c
  4480  002508  0E00               	movlw	0
  4481  00250A  6E14               	movwf	Paddle_init@team^0,c
  4482  00250C  EC5B  F02A         	call	_Paddle_init	;wreg free
  4483  002510                     
  4484                           ;class/gameParameters.c: 12:     Paddle_init(&(s->p2),1);
  4485  002510  0EBF               	movlw	191
  4486  002512  242B               	addwf	GameParameters_init@s^0,w,c
  4487  002514  6E12               	movwf	Paddle_init@p^0,c
  4488  002516  0E00               	movlw	0
  4489  002518  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4490  00251A  6E13               	movwf	(Paddle_init@p+1)^0,c
  4491  00251C  0E00               	movlw	0
  4492  00251E  6E15               	movwf	(Paddle_init@team+1)^0,c
  4493  002520  0E01               	movlw	1
  4494  002522  6E14               	movwf	Paddle_init@team^0,c
  4495  002524  EC5B  F02A         	call	_Paddle_init	;wreg free
  4496  002528                     
  4497                           ;class/gameParameters.c: 13:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"Parametres",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s
      +                          ->btnParam),1);
  4498  002528  0E00               	movlw	0
  4499  00252A  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4500  00252C  0E82               	movlw	130
  4501  00252E  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4502  002530  0E00               	movlw	0
  4503  002532  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4504  002534  0E32               	movlw	50
  4505  002536  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4506  002538  0E00               	movlw	0
  4507  00253A  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4508  00253C  0E5A               	movlw	90
  4509  00253E  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4510  002540  0E00               	movlw	0
  4511  002542  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4512  002544  0E14               	movlw	20
  4513  002546  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4514  002548  0EFF               	movlw	255
  4515  00254A  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4516  00254C  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4517  00254E  0E00               	movlw	0
  4518  002550  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4519  002552  0E00               	movlw	0
  4520  002554  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4521  002556  0EB3               	movlw	low STR_2
  4522  002558  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4523  00255A  0E7F               	movlw	high STR_2
  4524  00255C  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4525  00255E  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  4526  002560  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4527  002562  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4528  002564  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4529  002566  0E00               	movlw	0
  4530  002568  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4531  00256A  0E00               	movlw	0
  4532  00256C  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4533  00256E  0E00               	movlw	0
  4534  002570  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4535  002572  0E00               	movlw	0
  4536  002574  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4537  002576  0E00               	movlw	0
  4538  002578  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4539  00257A  0E00               	movlw	0
  4540  00257C  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4541  00257E  0E08               	movlw	8
  4542  002580  242B               	addwf	GameParameters_init@s^0,w,c
  4543  002582  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4544  002584  0E00               	movlw	0
  4545  002586  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4546  002588  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4547  00258A  0E01               	movlw	1
  4548  00258C  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4549  00258E  EC27  F023         	call	_LCD_ButtonCreate	;wreg free
  4550  002592                     
  4551                           ;class/gameParameters.c: 14:     LCD_ButtonCreate(10,250,70,20,0b1111111111111111,0b0000
      +                          000000000000,"1 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->
      +                          btnOnePlayer),2);
  4552  002592  0E00               	movlw	0
  4553  002594  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4554  002596  0E0A               	movlw	10
  4555  002598  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4556  00259A  0E00               	movlw	0
  4557  00259C  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4558  00259E  0EFA               	movlw	250
  4559  0025A0  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4560  0025A2  0E00               	movlw	0
  4561  0025A4  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4562  0025A6  0E46               	movlw	70
  4563  0025A8  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4564  0025AA  0E00               	movlw	0
  4565  0025AC  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4566  0025AE  0E14               	movlw	20
  4567  0025B0  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4568  0025B2  0EFF               	movlw	255
  4569  0025B4  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4570  0025B6  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4571  0025B8  0E00               	movlw	0
  4572  0025BA  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4573  0025BC  0E00               	movlw	0
  4574  0025BE  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4575  0025C0  0EC8               	movlw	low STR_3
  4576  0025C2  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4577  0025C4  0E7F               	movlw	high STR_3
  4578  0025C6  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4579  0025C8  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  4580  0025CA  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4581  0025CC  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4582  0025CE  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4583  0025D0  0E00               	movlw	0
  4584  0025D2  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4585  0025D4  0E00               	movlw	0
  4586  0025D6  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4587  0025D8  0E00               	movlw	0
  4588  0025DA  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4589  0025DC  0E00               	movlw	0
  4590  0025DE  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4591  0025E0  0E00               	movlw	0
  4592  0025E2  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4593  0025E4  0E00               	movlw	0
  4594  0025E6  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4595  0025E8  0E20               	movlw	32
  4596  0025EA  242B               	addwf	GameParameters_init@s^0,w,c
  4597  0025EC  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4598  0025EE  0E00               	movlw	0
  4599  0025F0  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4600  0025F2  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4601  0025F4  0E02               	movlw	2
  4602  0025F6  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4603  0025F8  EC27  F023         	call	_LCD_ButtonCreate	;wreg free
  4604  0025FC                     
  4605                           ;class/gameParameters.c: 15:     LCD_ButtonCreate(150,250,70,20,0b1111111111111111,0b000
      +                          0000000000000,"2 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s-
      +                          >btnTwoPlayer),3);
  4606  0025FC  0E00               	movlw	0
  4607  0025FE  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4608  002600  0E96               	movlw	150
  4609  002602  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4610  002604  0E00               	movlw	0
  4611  002606  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4612  002608  0EFA               	movlw	250
  4613  00260A  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4614  00260C  0E00               	movlw	0
  4615  00260E  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4616  002610  0E46               	movlw	70
  4617  002612  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4618  002614  0E00               	movlw	0
  4619  002616  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4620  002618  0E14               	movlw	20
  4621  00261A  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4622  00261C  0EFF               	movlw	255
  4623  00261E  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4624  002620  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4625  002622  0E00               	movlw	0
  4626  002624  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4627  002626  0E00               	movlw	0
  4628  002628  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4629  00262A  0ED1               	movlw	low STR_4
  4630  00262C  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4631  00262E  0E7F               	movlw	high STR_4
  4632  002630  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4633  002632  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  4634  002634  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4635  002636  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4636  002638  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4637  00263A  0E00               	movlw	0
  4638  00263C  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4639  00263E  0E00               	movlw	0
  4640  002640  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4641  002642  0E00               	movlw	0
  4642  002644  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4643  002646  0E00               	movlw	0
  4644  002648  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4645  00264A  0E00               	movlw	0
  4646  00264C  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4647  00264E  0E00               	movlw	0
  4648  002650  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4649  002652  0E38               	movlw	56
  4650  002654  242B               	addwf	GameParameters_init@s^0,w,c
  4651  002656  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4652  002658  0E00               	movlw	0
  4653  00265A  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4654  00265C  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4655  00265E  0E03               	movlw	3
  4656  002660  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4657  002662  EC27  F023         	call	_LCD_ButtonCreate	;wreg free
  4658  002666                     
  4659                           ;class/gameParameters.c: 16:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"QUITTER",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->b
      +                          tnLeaveParam),4);
  4660  002666  0E00               	movlw	0
  4661  002668  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4662  00266A  0E82               	movlw	130
  4663  00266C  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4664  00266E  0E00               	movlw	0
  4665  002670  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4666  002672  0E32               	movlw	50
  4667  002674  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4668  002676  0E00               	movlw	0
  4669  002678  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4670  00267A  0E5A               	movlw	90
  4671  00267C  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4672  00267E  0E00               	movlw	0
  4673  002680  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4674  002682  0E14               	movlw	20
  4675  002684  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4676  002686  0EFF               	movlw	255
  4677  002688  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4678  00268A  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4679  00268C  0E00               	movlw	0
  4680  00268E  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4681  002690  0E00               	movlw	0
  4682  002692  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4683  002694  0EE2               	movlw	low STR_5
  4684  002696  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4685  002698  0E7F               	movlw	high STR_5
  4686  00269A  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4687  00269C  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  4688  00269E  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4689  0026A0  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4690  0026A2  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4691  0026A4  0E00               	movlw	0
  4692  0026A6  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4693  0026A8  0E00               	movlw	0
  4694  0026AA  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4695  0026AC  0E00               	movlw	0
  4696  0026AE  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4697  0026B0  0E00               	movlw	0
  4698  0026B2  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4699  0026B4  0E00               	movlw	0
  4700  0026B6  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4701  0026B8  0E00               	movlw	0
  4702  0026BA  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4703  0026BC  0E50               	movlw	80
  4704  0026BE  242B               	addwf	GameParameters_init@s^0,w,c
  4705  0026C0  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4706  0026C2  0E00               	movlw	0
  4707  0026C4  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4708  0026C6  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4709  0026C8  0E04               	movlw	4
  4710  0026CA  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4711  0026CC  EC27  F023         	call	_LCD_ButtonCreate	;wreg free
  4712  0026D0                     
  4713                           ;class/gameParameters.c: 17:     LCD_ButtonCreate(10,220,70,50,0b0000000000000000,0b1111
      +                          111111111111,"<--",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnLe
      +                          ft),5);
  4714  0026D0  0E00               	movlw	0
  4715  0026D2  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4716  0026D4  0E0A               	movlw	10
  4717  0026D6  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4718  0026D8  0E00               	movlw	0
  4719  0026DA  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4720  0026DC  0EDC               	movlw	220
  4721  0026DE  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4722  0026E0  0E00               	movlw	0
  4723  0026E2  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4724  0026E4  0E46               	movlw	70
  4725  0026E6  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4726  0026E8  0E00               	movlw	0
  4727  0026EA  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4728  0026EC  0E32               	movlw	50
  4729  0026EE  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4730  0026F0  0E00               	movlw	0
  4731  0026F2  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4732  0026F4  0E00               	movlw	0
  4733  0026F6  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
  4734  0026F8  0EFF               	movlw	255
  4735  0026FA  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4736  0026FC  681C               	setf	LCD_ButtonCreate@bgColor^0,c
  4737  0026FE  0EF6               	movlw	low STR_6
  4738  002700  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4739  002702  0E7F               	movlw	high STR_6
  4740  002704  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4741  002706  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  4742  002708  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4743  00270A  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4744  00270C  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4745  00270E  0E00               	movlw	0
  4746  002710  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4747  002712  0E00               	movlw	0
  4748  002714  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4749  002716  0E00               	movlw	0
  4750  002718  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4751  00271A  0E00               	movlw	0
  4752  00271C  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4753  00271E  0E00               	movlw	0
  4754  002720  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4755  002722  0E00               	movlw	0
  4756  002724  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4757  002726  0E68               	movlw	104
  4758  002728  242B               	addwf	GameParameters_init@s^0,w,c
  4759  00272A  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4760  00272C  0E00               	movlw	0
  4761  00272E  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4762  002730  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4763  002732  0E05               	movlw	5
  4764  002734  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4765  002736  EC27  F023         	call	_LCD_ButtonCreate	;wreg free
  4766  00273A                     
  4767                           ;class/gameParameters.c: 18:     LCD_ButtonCreate(150,220,70,50,0b0000000000000000,0b111
      +                          1111111111111,"-->",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnR
      +                          ight),6);
  4768  00273A  0E00               	movlw	0
  4769  00273C  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4770  00273E  0E96               	movlw	150
  4771  002740  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4772  002742  0E00               	movlw	0
  4773  002744  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4774  002746  0EDC               	movlw	220
  4775  002748  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4776  00274A  0E00               	movlw	0
  4777  00274C  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4778  00274E  0E46               	movlw	70
  4779  002750  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4780  002752  0E00               	movlw	0
  4781  002754  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4782  002756  0E32               	movlw	50
  4783  002758  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4784  00275A  0E00               	movlw	0
  4785  00275C  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4786  00275E  0E00               	movlw	0
  4787  002760  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
  4788  002762  0EFF               	movlw	255
  4789  002764  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4790  002766  681C               	setf	LCD_ButtonCreate@bgColor^0,c
  4791  002768  0EFA               	movlw	low STR_7
  4792  00276A  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4793  00276C  0E7F               	movlw	high STR_7
  4794  00276E  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4795  002770  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  4796  002772  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4797  002774  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4798  002776  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4799  002778  0E00               	movlw	0
  4800  00277A  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4801  00277C  0E00               	movlw	0
  4802  00277E  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4803  002780  0E00               	movlw	0
  4804  002782  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4805  002784  0E00               	movlw	0
  4806  002786  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4807  002788  0E00               	movlw	0
  4808  00278A  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4809  00278C  0E00               	movlw	0
  4810  00278E  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4811  002790  0E80               	movlw	128
  4812  002792  242B               	addwf	GameParameters_init@s^0,w,c
  4813  002794  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4814  002796  0E00               	movlw	0
  4815  002798  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4816  00279A  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4817  00279C  0E06               	movlw	6
  4818  00279E  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4819  0027A0  EC27  F023         	call	_LCD_ButtonCreate	;wreg free
  4820  0027A4                     
  4821                           ;class/gameParameters.c: 19:     LCD_SliderCreate(50,100,165,20,0b0000000000000000,0b111
      +                          1111111111111,0b1111100000000000,0,11,((void*)0),&(s->sldParam));
  4822  0027A4  0E00               	movlw	0
  4823  0027A6  6E13               	movwf	(LCD_SliderCreate@posX+1)^0,c
  4824  0027A8  0E32               	movlw	50
  4825  0027AA  6E12               	movwf	LCD_SliderCreate@posX^0,c
  4826  0027AC  0E00               	movlw	0
  4827  0027AE  6E15               	movwf	(LCD_SliderCreate@posY+1)^0,c
  4828  0027B0  0E64               	movlw	100
  4829  0027B2  6E14               	movwf	LCD_SliderCreate@posY^0,c
  4830  0027B4  0E00               	movlw	0
  4831  0027B6  6E17               	movwf	(LCD_SliderCreate@width+1)^0,c
  4832  0027B8  0EA5               	movlw	165
  4833  0027BA  6E16               	movwf	LCD_SliderCreate@width^0,c
  4834  0027BC  0E00               	movlw	0
  4835  0027BE  6E19               	movwf	(LCD_SliderCreate@height+1)^0,c
  4836  0027C0  0E14               	movlw	20
  4837  0027C2  6E18               	movwf	LCD_SliderCreate@height^0,c
  4838  0027C4  0E00               	movlw	0
  4839  0027C6  6E1B               	movwf	(LCD_SliderCreate@sldColor+1)^0,c
  4840  0027C8  0E00               	movlw	0
  4841  0027CA  6E1A               	movwf	LCD_SliderCreate@sldColor^0,c
  4842  0027CC  0EFF               	movlw	255
  4843  0027CE  6E1D               	movwf	(LCD_SliderCreate@bgColor+1)^0,c
  4844  0027D0  681C               	setf	LCD_SliderCreate@bgColor^0,c
  4845  0027D2  0EF8               	movlw	248
  4846  0027D4  6E1F               	movwf	(LCD_SliderCreate@borderColor+1)^0,c
  4847  0027D6  0E00               	movlw	0
  4848  0027D8  6E1E               	movwf	LCD_SliderCreate@borderColor^0,c
  4849  0027DA  0E00               	movlw	0
  4850  0027DC  6E21               	movwf	(LCD_SliderCreate@cursorWidth+1)^0,c
  4851  0027DE  0E00               	movlw	0
  4852  0027E0  6E20               	movwf	LCD_SliderCreate@cursorWidth^0,c
  4853  0027E2  0E00               	movlw	0
  4854  0027E4  6E23               	movwf	(LCD_SliderCreate@steps+1)^0,c
  4855  0027E6  0E0B               	movlw	11
  4856  0027E8  6E22               	movwf	LCD_SliderCreate@steps^0,c
  4857  0027EA  0E00               	movlw	0
  4858  0027EC  6E24               	movwf	LCD_SliderCreate@fpPress^0,c
  4859  0027EE  0E00               	movlw	0
  4860  0027F0  6E25               	movwf	(LCD_SliderCreate@fpPress+1)^0,c
  4861  0027F2  0E98               	movlw	152
  4862  0027F4  242B               	addwf	GameParameters_init@s^0,w,c
  4863  0027F6  6E26               	movwf	LCD_SliderCreate@slider^0,c
  4864  0027F8  0E00               	movlw	0
  4865  0027FA  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4866  0027FC  6E27               	movwf	(LCD_SliderCreate@slider+1)^0,c
  4867  0027FE  EC21  F024         	call	_LCD_SliderCreate	;wreg free
  4868  002802  0012               	return		;funcret
  4869  002804                     __end_of_GameParameters_init:
  4870                           	callstack 0
  4871                           
  4872 ;; *************** function _Paddle_init *****************
  4873 ;; Defined at:
  4874 ;;		line 3 in file "class/paddle.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;  p               2   17[COMRAM] PTR struct Paddle
  4877 ;;		 -> g1(201), 
  4878 ;;  team            2   19[COMRAM] unsigned short 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;		None
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      void 
  4883 ;; Registers used:
  4884 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4890 ;;      Params:         4       0       0       0       0       0       0
  4891 ;;      Locals:         0       0       0       0       0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0       0
  4893 ;;      Totals:         4       0       0       0       0       0       0
  4894 ;;Total ram usage:        4 bytes
  4895 ;; Hardware stack levels used: 1
  4896 ;; Hardware stack levels required when called: 4
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_GameParameters_init
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text10
  4905  0054B6                     __ptext10:
  4906                           	callstack 0
  4907  0054B6                     _Paddle_init:
  4908                           	callstack 24
  4909  0054B6                     
  4910                           ;class/paddle.c: 3: void Paddle_init(struct Paddle* p,uint16_t team);class/paddle.c: 4: 
      +                          {;class/paddle.c: 5:     if(team)
  4911  0054B6  5014               	movf	Paddle_init@team^0,w,c
  4912  0054B8  1015               	iorwf	(Paddle_init@team+1)^0,w,c
  4913  0054BA  B4D8               	btfsc	status,2,c
  4914  0054BC  EF62  F02A         	goto	u4841
  4915  0054C0  EF64  F02A         	goto	u4840
  4916  0054C4                     u4841:
  4917  0054C4  EF82  F02A         	goto	l7018
  4918  0054C8                     u4840:
  4919  0054C8                     
  4920                           ;class/paddle.c: 6:     {;class/paddle.c: 7:         p->x = 90;
  4921  0054C8  C012  FFD9         	movff	Paddle_init@p,fsr2l
  4922  0054CC  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
  4923  0054D0  0E5A               	movlw	90
  4924  0054D2  6EDE               	movwf	postinc2,c
  4925  0054D4  0E00               	movlw	0
  4926  0054D6  6EDD               	movwf	postdec2,c
  4927  0054D8                     
  4928                           ;class/paddle.c: 8:         p->y = 20;
  4929  0054D8  EE20 F002          	lfsr	2,2
  4930  0054DC  5012               	movf	Paddle_init@p^0,w,c
  4931  0054DE  26D9               	addwf	fsr2l,f,c
  4932  0054E0  5013               	movf	(Paddle_init@p+1)^0,w,c
  4933  0054E2  22DA               	addwfc	fsr2h,f,c
  4934  0054E4  0E14               	movlw	20
  4935  0054E6  6EDE               	movwf	postinc2,c
  4936  0054E8  0E00               	movlw	0
  4937  0054EA  6EDD               	movwf	postdec2,c
  4938  0054EC                     
  4939                           ;class/paddle.c: 9:         p->color = 0b0000000000011111;
  4940  0054EC  EE20 F004          	lfsr	2,4
  4941  0054F0  5012               	movf	Paddle_init@p^0,w,c
  4942  0054F2  26D9               	addwf	fsr2l,f,c
  4943  0054F4  5013               	movf	(Paddle_init@p+1)^0,w,c
  4944  0054F6  22DA               	addwfc	fsr2h,f,c
  4945  0054F8  0E1F               	movlw	31
  4946  0054FA  6EDE               	movwf	postinc2,c
  4947  0054FC  0E00               	movlw	0
  4948  0054FE  6EDD               	movwf	postdec2,c
  4949                           
  4950                           ;class/paddle.c: 10:     }
  4951  005500  EF9E  F02A         	goto	l20
  4952  005504                     l7018:
  4953                           
  4954                           ;class/paddle.c: 12:     {;class/paddle.c: 13:         p->x = 90;
  4955  005504  C012  FFD9         	movff	Paddle_init@p,fsr2l
  4956  005508  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
  4957  00550C  0E5A               	movlw	90
  4958  00550E  6EDE               	movwf	postinc2,c
  4959  005510  0E00               	movlw	0
  4960  005512  6EDD               	movwf	postdec2,c
  4961  005514                     
  4962                           ;class/paddle.c: 14:         p->y = 280;
  4963  005514  EE20 F002          	lfsr	2,2
  4964  005518  5012               	movf	Paddle_init@p^0,w,c
  4965  00551A  26D9               	addwf	fsr2l,f,c
  4966  00551C  5013               	movf	(Paddle_init@p+1)^0,w,c
  4967  00551E  22DA               	addwfc	fsr2h,f,c
  4968  005520  0E18               	movlw	24
  4969  005522  6EDE               	movwf	postinc2,c
  4970  005524  0E01               	movlw	1
  4971  005526  6EDD               	movwf	postdec2,c
  4972  005528                     
  4973                           ;class/paddle.c: 15:         p->color = 0b0000000000011111;
  4974  005528  EE20 F004          	lfsr	2,4
  4975  00552C  5012               	movf	Paddle_init@p^0,w,c
  4976  00552E  26D9               	addwf	fsr2l,f,c
  4977  005530  5013               	movf	(Paddle_init@p+1)^0,w,c
  4978  005532  22DA               	addwfc	fsr2h,f,c
  4979  005534  0E1F               	movlw	31
  4980  005536  6EDE               	movwf	postinc2,c
  4981  005538  0E00               	movlw	0
  4982  00553A  6EDD               	movwf	postdec2,c
  4983  00553C                     l20:
  4984  00553C  0012               	return		;funcret
  4985  00553E                     __end_of_Paddle_init:
  4986                           	callstack 0
  4987                           
  4988 ;; *************** function _LCD_SliderCreate *****************
  4989 ;; Defined at:
  4990 ;;		line 291 in file "libraries/lcd_highlevel.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  posX            2   17[COMRAM] unsigned short 
  4993 ;;  posY            2   19[COMRAM] unsigned short 
  4994 ;;  width           2   21[COMRAM] unsigned short 
  4995 ;;  height          2   23[COMRAM] unsigned short 
  4996 ;;  sldColor        2   25[COMRAM] unsigned short 
  4997 ;;  bgColor         2   27[COMRAM] unsigned short 
  4998 ;;  borderColor     2   29[COMRAM] unsigned short 
  4999 ;;  cursorWidth     2   31[COMRAM] unsigned short 
  5000 ;;  steps           2   33[COMRAM] unsigned short 
  5001 ;;  fpPress         2   35[COMRAM] PTR FTN()void 
  5002 ;;		 -> Absolute function(1), 
  5003 ;;  slider          2   37[COMRAM] PTR struct .
  5004 ;;		 -> g1(201), 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5016 ;;      Params:        22       0       0       0       0       0       0
  5017 ;;      Locals:         0       0       0       0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0       0       0
  5019 ;;      Totals:        22       0       0       0       0       0       0
  5020 ;;Total ram usage:       22 bytes
  5021 ;; Hardware stack levels used: 1
  5022 ;; Hardware stack levels required when called: 4
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_GameParameters_init
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           	psect	text11
  5031  004842                     __ptext11:
  5032                           	callstack 0
  5033  004842                     _LCD_SliderCreate:
  5034                           	callstack 24
  5035  004842                     
  5036                           ;libraries/lcd_highlevel.c: 291: void LCD_SliderCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 292:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 293:                       uint16_t sldColor, uint16_t bgColor, u
      +                          int16_t borderColor,;libraries/lcd_highlevel.c: 294:                       uint16_t curs
      +                          orWidth,;libraries/lcd_highlevel.c: 295:                       uint16_t steps,;libraries
      +                          /lcd_highlevel.c: 296:                       void (* fpPress)(),;libraries/lcd_highlevel
      +                          .c: 297:                       sld_t * slider)
  5037  004842  C026  FFD9         	movff	LCD_SliderCreate@slider,fsr2l
  5038  004846  C027  FFDA         	movff	LCD_SliderCreate@slider+1,fsr2h
  5039  00484A  C012  FFDE         	movff	LCD_SliderCreate@posX,postinc2
  5040  00484E  C013  FFDD         	movff	LCD_SliderCreate@posX+1,postdec2
  5041  004852                     
  5042                           ;libraries/lcd_highlevel.c: 300:   slider->posY = posY;
  5043  004852  EE20 F002          	lfsr	2,2
  5044  004856  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5045  004858  26D9               	addwf	fsr2l,f,c
  5046  00485A  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5047  00485C  22DA               	addwfc	fsr2h,f,c
  5048  00485E  C014  FFDE         	movff	LCD_SliderCreate@posY,postinc2
  5049  004862  C015  FFDD         	movff	LCD_SliderCreate@posY+1,postdec2
  5050  004866                     
  5051                           ;libraries/lcd_highlevel.c: 301:   slider->height = height;
  5052  004866  EE20 F006          	lfsr	2,6
  5053  00486A  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5054  00486C  26D9               	addwf	fsr2l,f,c
  5055  00486E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5056  004870  22DA               	addwfc	fsr2h,f,c
  5057  004872  C018  FFDE         	movff	LCD_SliderCreate@height,postinc2
  5058  004876  C019  FFDD         	movff	LCD_SliderCreate@height+1,postdec2
  5059  00487A                     
  5060                           ;libraries/lcd_highlevel.c: 302:   slider->width = width;
  5061  00487A  EE20 F004          	lfsr	2,4
  5062  00487E  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5063  004880  26D9               	addwf	fsr2l,f,c
  5064  004882  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5065  004884  22DA               	addwfc	fsr2h,f,c
  5066  004886  C016  FFDE         	movff	LCD_SliderCreate@width,postinc2
  5067  00488A  C017  FFDD         	movff	LCD_SliderCreate@width+1,postdec2
  5068  00488E                     
  5069                           ;libraries/lcd_highlevel.c: 303:   slider->sldColor = sldColor;
  5070  00488E  EE20 F008          	lfsr	2,8
  5071  004892  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5072  004894  26D9               	addwf	fsr2l,f,c
  5073  004896  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5074  004898  22DA               	addwfc	fsr2h,f,c
  5075  00489A  C01A  FFDE         	movff	LCD_SliderCreate@sldColor,postinc2
  5076  00489E  C01B  FFDD         	movff	LCD_SliderCreate@sldColor+1,postdec2
  5077  0048A2                     
  5078                           ;libraries/lcd_highlevel.c: 304:   slider->bgColor = bgColor;
  5079  0048A2  EE20 F00A          	lfsr	2,10
  5080  0048A6  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5081  0048A8  26D9               	addwf	fsr2l,f,c
  5082  0048AA  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5083  0048AC  22DA               	addwfc	fsr2h,f,c
  5084  0048AE  C01C  FFDE         	movff	LCD_SliderCreate@bgColor,postinc2
  5085  0048B2  C01D  FFDD         	movff	LCD_SliderCreate@bgColor+1,postdec2
  5086  0048B6                     
  5087                           ;libraries/lcd_highlevel.c: 305:   slider->borderColor = borderColor;
  5088  0048B6  EE20 F00C          	lfsr	2,12
  5089  0048BA  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5090  0048BC  26D9               	addwf	fsr2l,f,c
  5091  0048BE  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5092  0048C0  22DA               	addwfc	fsr2h,f,c
  5093  0048C2  C01E  FFDE         	movff	LCD_SliderCreate@borderColor,postinc2
  5094  0048C6  C01F  FFDD         	movff	LCD_SliderCreate@borderColor+1,postdec2
  5095  0048CA                     
  5096                           ;libraries/lcd_highlevel.c: 306:   slider->cursorWidth = cursorWidth;
  5097  0048CA  EE20 F00E          	lfsr	2,14
  5098  0048CE  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5099  0048D0  26D9               	addwf	fsr2l,f,c
  5100  0048D2  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5101  0048D4  22DA               	addwfc	fsr2h,f,c
  5102  0048D6  C020  FFDE         	movff	LCD_SliderCreate@cursorWidth,postinc2
  5103  0048DA  C021  FFDD         	movff	LCD_SliderCreate@cursorWidth+1,postdec2
  5104  0048DE                     
  5105                           ;libraries/lcd_highlevel.c: 307:   slider->fpPress = fpPress;
  5106  0048DE  EE20 F017          	lfsr	2,23
  5107  0048E2  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5108  0048E4  26D9               	addwf	fsr2l,f,c
  5109  0048E6  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5110  0048E8  22DA               	addwfc	fsr2h,f,c
  5111  0048EA  C024  FFDE         	movff	LCD_SliderCreate@fpPress,postinc2
  5112  0048EE  C025  FFDD         	movff	LCD_SliderCreate@fpPress+1,postdec2
  5113  0048F2                     
  5114                           ;libraries/lcd_highlevel.c: 308:   slider->steps = steps;
  5115  0048F2  EE20 F015          	lfsr	2,21
  5116  0048F6  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5117  0048F8  26D9               	addwf	fsr2l,f,c
  5118  0048FA  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5119  0048FC  22DA               	addwfc	fsr2h,f,c
  5120  0048FE  C022  FFDE         	movff	LCD_SliderCreate@steps,postinc2
  5121  004902  C023  FFDD         	movff	LCD_SliderCreate@steps+1,postdec2
  5122  004906                     
  5123                           ;libraries/lcd_highlevel.c: 309:   slider->value = 0;
  5124  004906  EE20 F011          	lfsr	2,17
  5125  00490A  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5126  00490C  26D9               	addwf	fsr2l,f,c
  5127  00490E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5128  004910  22DA               	addwfc	fsr2h,f,c
  5129  004912  0E00               	movlw	0
  5130  004914  6EDE               	movwf	postinc2,c
  5131  004916  0E00               	movlw	0
  5132  004918  6EDD               	movwf	postdec2,c
  5133  00491A                     
  5134                           ;libraries/lcd_highlevel.c: 310:   slider->oldValue = 0;
  5135  00491A  EE20 F013          	lfsr	2,19
  5136  00491E  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5137  004920  26D9               	addwf	fsr2l,f,c
  5138  004922  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5139  004924  22DA               	addwfc	fsr2h,f,c
  5140  004926  0E00               	movlw	0
  5141  004928  6EDE               	movwf	postinc2,c
  5142  00492A  0E00               	movlw	0
  5143  00492C  6EDD               	movwf	postdec2,c
  5144  00492E  0012               	return		;funcret
  5145  004930                     __end_of_LCD_SliderCreate:
  5146                           	callstack 0
  5147                           
  5148 ;; *************** function _LCD_ButtonCreate *****************
  5149 ;; Defined at:
  5150 ;;		line 396 in file "libraries/lcd_highlevel.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  posX            2   17[COMRAM] unsigned short 
  5153 ;;  posY            2   19[COMRAM] unsigned short 
  5154 ;;  width           2   21[COMRAM] unsigned short 
  5155 ;;  height          2   23[COMRAM] unsigned short 
  5156 ;;  txtColor        2   25[COMRAM] unsigned short 
  5157 ;;  bgColor         2   27[COMRAM] unsigned short 
  5158 ;;  textOrBmp       2   29[COMRAM] PTR const unsigned char 
  5159 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
  5160 ;;		 -> STR_3(9), STR_2(11), 
  5161 ;;  font            2   31[COMRAM] PTR struct .
  5162 ;;		 -> arialNarrow_12ptFontInfo(7), 
  5163 ;;  fpPress         2   33[COMRAM] PTR FTN(unsigned char ,)
  5164 ;;		 -> Absolute function(1), 
  5165 ;;  fpReleased      2   35[COMRAM] PTR FTN(unsigned char ,)
  5166 ;;		 -> Absolute function(1), 
  5167 ;;  fpOut           2   37[COMRAM] PTR FTN(unsigned char ,)
  5168 ;;		 -> Absolute function(1), 
  5169 ;;  button          2   39[COMRAM] PTR struct .
  5170 ;;		 -> g1(201), 
  5171 ;;  index           1   41[COMRAM] unsigned char 
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;		None
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      void 
  5176 ;; Registers used:
  5177 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5183 ;;      Params:        25       0       0       0       0       0       0
  5184 ;;      Locals:         0       0       0       0       0       0       0
  5185 ;;      Temps:          0       0       0       0       0       0       0
  5186 ;;      Totals:        25       0       0       0       0       0       0
  5187 ;;Total ram usage:       25 bytes
  5188 ;; Hardware stack levels used: 1
  5189 ;; Hardware stack levels required when called: 4
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		_GameParameters_init
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text12
  5198  00464E                     __ptext12:
  5199                           	callstack 0
  5200  00464E                     _LCD_ButtonCreate:
  5201                           	callstack 24
  5202  00464E                     
  5203                           ;libraries/lcd_highlevel.c: 396: void LCD_ButtonCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 397:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 398:                       uint16_t txtColor, uint16_t bgColor,;l
      +                          ibraries/lcd_highlevel.c: 399:                       const uint8_t * textOrBmp, FONT_INF
      +                          O * font,;libraries/lcd_highlevel.c: 400:                       void (*fpPress)(uint8_t)
      +                          , void (* fpReleased)(uint8_t), void (* fpOut)(uint8_t),;libraries/lcd_highlevel.c: 401:
      +                                                 btn_t * button,
  5204  00464E  C028  FFD9         	movff	LCD_ButtonCreate@button,fsr2l
  5205  004652  C029  FFDA         	movff	LCD_ButtonCreate@button+1,fsr2h
  5206  004656  C012  FFDE         	movff	LCD_ButtonCreate@posX,postinc2
  5207  00465A  C013  FFDD         	movff	LCD_ButtonCreate@posX+1,postdec2
  5208  00465E                     
  5209                           ;libraries/lcd_highlevel.c: 405:   button->posY = posY;
  5210  00465E  EE20 F002          	lfsr	2,2
  5211  004662  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5212  004664  26D9               	addwf	fsr2l,f,c
  5213  004666  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5214  004668  22DA               	addwfc	fsr2h,f,c
  5215  00466A  C014  FFDE         	movff	LCD_ButtonCreate@posY,postinc2
  5216  00466E  C015  FFDD         	movff	LCD_ButtonCreate@posY+1,postdec2
  5217  004672                     
  5218                           ;libraries/lcd_highlevel.c: 406:   button->height = height;
  5219  004672  EE20 F006          	lfsr	2,6
  5220  004676  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5221  004678  26D9               	addwf	fsr2l,f,c
  5222  00467A  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5223  00467C  22DA               	addwfc	fsr2h,f,c
  5224  00467E  C018  FFDE         	movff	LCD_ButtonCreate@height,postinc2
  5225  004682  C019  FFDD         	movff	LCD_ButtonCreate@height+1,postdec2
  5226  004686                     
  5227                           ;libraries/lcd_highlevel.c: 407:   button->width = width;
  5228  004686  EE20 F004          	lfsr	2,4
  5229  00468A  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5230  00468C  26D9               	addwf	fsr2l,f,c
  5231  00468E  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5232  004690  22DA               	addwfc	fsr2h,f,c
  5233  004692  C016  FFDE         	movff	LCD_ButtonCreate@width,postinc2
  5234  004696  C017  FFDD         	movff	LCD_ButtonCreate@width+1,postdec2
  5235  00469A                     
  5236                           ;libraries/lcd_highlevel.c: 408:   button->txtColor = txtColor;
  5237  00469A  EE20 F008          	lfsr	2,8
  5238  00469E  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5239  0046A0  26D9               	addwf	fsr2l,f,c
  5240  0046A2  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5241  0046A4  22DA               	addwfc	fsr2h,f,c
  5242  0046A6  C01A  FFDE         	movff	LCD_ButtonCreate@txtColor,postinc2
  5243  0046AA  C01B  FFDD         	movff	LCD_ButtonCreate@txtColor+1,postdec2
  5244  0046AE                     
  5245                           ;libraries/lcd_highlevel.c: 409:   button->bgColor = bgColor;
  5246  0046AE  EE20 F00A          	lfsr	2,10
  5247  0046B2  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5248  0046B4  26D9               	addwf	fsr2l,f,c
  5249  0046B6  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5250  0046B8  22DA               	addwfc	fsr2h,f,c
  5251  0046BA  C01C  FFDE         	movff	LCD_ButtonCreate@bgColor,postinc2
  5252  0046BE  C01D  FFDD         	movff	LCD_ButtonCreate@bgColor+1,postdec2
  5253  0046C2                     
  5254                           ;libraries/lcd_highlevel.c: 410:   button->text = textOrBmp;
  5255  0046C2  EE20 F00C          	lfsr	2,12
  5256  0046C6  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5257  0046C8  26D9               	addwf	fsr2l,f,c
  5258  0046CA  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5259  0046CC  22DA               	addwfc	fsr2h,f,c
  5260  0046CE  C01E  FFDE         	movff	LCD_ButtonCreate@textOrBmp,postinc2
  5261  0046D2  C01F  FFDD         	movff	LCD_ButtonCreate@textOrBmp+1,postdec2
  5262  0046D6                     
  5263                           ;libraries/lcd_highlevel.c: 411:   button->font = font;
  5264  0046D6  EE20 F00E          	lfsr	2,14
  5265  0046DA  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5266  0046DC  26D9               	addwf	fsr2l,f,c
  5267  0046DE  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5268  0046E0  22DA               	addwfc	fsr2h,f,c
  5269  0046E2  C020  FFDE         	movff	LCD_ButtonCreate@font,postinc2
  5270  0046E6  C021  FFDD         	movff	LCD_ButtonCreate@font+1,postdec2
  5271  0046EA                     
  5272                           ;libraries/lcd_highlevel.c: 412:   button->fpPress = fpPress;
  5273  0046EA  EE20 F011          	lfsr	2,17
  5274  0046EE  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5275  0046F0  26D9               	addwf	fsr2l,f,c
  5276  0046F2  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5277  0046F4  22DA               	addwfc	fsr2h,f,c
  5278  0046F6  C022  FFDE         	movff	LCD_ButtonCreate@fpPress,postinc2
  5279  0046FA  C023  FFDD         	movff	LCD_ButtonCreate@fpPress+1,postdec2
  5280  0046FE                     
  5281                           ;libraries/lcd_highlevel.c: 413:   button->fpReleased = fpReleased;
  5282  0046FE  EE20 F013          	lfsr	2,19
  5283  004702  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5284  004704  26D9               	addwf	fsr2l,f,c
  5285  004706  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5286  004708  22DA               	addwfc	fsr2h,f,c
  5287  00470A  C024  FFDE         	movff	LCD_ButtonCreate@fpReleased,postinc2
  5288  00470E  C025  FFDD         	movff	LCD_ButtonCreate@fpReleased+1,postdec2
  5289  004712                     
  5290                           ;libraries/lcd_highlevel.c: 414:   button->fpOut = fpOut;
  5291  004712  EE20 F015          	lfsr	2,21
  5292  004716  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5293  004718  26D9               	addwf	fsr2l,f,c
  5294  00471A  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5295  00471C  22DA               	addwfc	fsr2h,f,c
  5296  00471E  C026  FFDE         	movff	LCD_ButtonCreate@fpOut,postinc2
  5297  004722  C027  FFDD         	movff	LCD_ButtonCreate@fpOut+1,postdec2
  5298  004726                     
  5299                           ;libraries/lcd_highlevel.c: 415:   button->index = index;
  5300  004726  EE20 F017          	lfsr	2,23
  5301  00472A  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5302  00472C  26D9               	addwf	fsr2l,f,c
  5303  00472E  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5304  004730  22DA               	addwfc	fsr2h,f,c
  5305  004732  C02A  FFDF         	movff	LCD_ButtonCreate@index,indf2
  5306  004736                     
  5307                           ;libraries/lcd_highlevel.c: 416:   button->pressed = 0;
  5308  004736  EE20 F010          	lfsr	2,16
  5309  00473A  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5310  00473C  26D9               	addwf	fsr2l,f,c
  5311  00473E  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5312  004740  22DA               	addwfc	fsr2h,f,c
  5313  004742  0E00               	movlw	0
  5314  004744  6EDF               	movwf	indf2,c
  5315  004746  0012               	return		;funcret
  5316  004748                     __end_of_LCD_ButtonCreate:
  5317                           	callstack 0
  5318                           
  5319 ;; *************** function _Ball_init *****************
  5320 ;; Defined at:
  5321 ;;		line 3 in file "class/ball.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;  b               2   17[COMRAM] PTR struct Ball
  5324 ;;		 -> g1(201), 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;		None
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      void 
  5329 ;; Registers used:
  5330 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5336 ;;      Params:         2       0       0       0       0       0       0
  5337 ;;      Locals:         0       0       0       0       0       0       0
  5338 ;;      Temps:          0       0       0       0       0       0       0
  5339 ;;      Totals:         2       0       0       0       0       0       0
  5340 ;;Total ram usage:        2 bytes
  5341 ;; Hardware stack levels used: 1
  5342 ;; Hardware stack levels required when called: 4
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_GameParameters_init
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text13
  5351  005BC8                     __ptext13:
  5352                           	callstack 0
  5353  005BC8                     _Ball_init:
  5354                           	callstack 24
  5355  005BC8                     
  5356                           ;class/ball.c: 3: void Ball_init(struct Ball* b);class/ball.c: 4: {;class/ball.c: 5:    
      +                           b->x = 90;
  5357  005BC8  C012  FFD9         	movff	Ball_init@b,fsr2l
  5358  005BCC  C013  FFDA         	movff	Ball_init@b+1,fsr2h
  5359  005BD0  0E5A               	movlw	90
  5360  005BD2  6EDE               	movwf	postinc2,c
  5361  005BD4  0E00               	movlw	0
  5362  005BD6  6EDD               	movwf	postdec2,c
  5363  005BD8                     
  5364                           ;class/ball.c: 6:     b->y = 150;
  5365  005BD8  EE20 F002          	lfsr	2,2
  5366  005BDC  5012               	movf	Ball_init@b^0,w,c
  5367  005BDE  26D9               	addwf	fsr2l,f,c
  5368  005BE0  5013               	movf	(Ball_init@b+1)^0,w,c
  5369  005BE2  22DA               	addwfc	fsr2h,f,c
  5370  005BE4  0E96               	movlw	150
  5371  005BE6  6EDE               	movwf	postinc2,c
  5372  005BE8  0E00               	movlw	0
  5373  005BEA  6EDD               	movwf	postdec2,c
  5374  005BEC                     
  5375                           ;class/ball.c: 7:     b->dx = 0;
  5376  005BEC  EE20 F004          	lfsr	2,4
  5377  005BF0  5012               	movf	Ball_init@b^0,w,c
  5378  005BF2  26D9               	addwf	fsr2l,f,c
  5379  005BF4  5013               	movf	(Ball_init@b+1)^0,w,c
  5380  005BF6  22DA               	addwfc	fsr2h,f,c
  5381  005BF8  0E00               	movlw	0
  5382  005BFA  6EDE               	movwf	postinc2,c
  5383  005BFC  0E00               	movlw	0
  5384  005BFE  6EDD               	movwf	postdec2,c
  5385  005C00                     
  5386                           ;class/ball.c: 8:     b->dy = 1;
  5387  005C00  EE20 F006          	lfsr	2,6
  5388  005C04  5012               	movf	Ball_init@b^0,w,c
  5389  005C06  26D9               	addwf	fsr2l,f,c
  5390  005C08  5013               	movf	(Ball_init@b+1)^0,w,c
  5391  005C0A  22DA               	addwfc	fsr2h,f,c
  5392  005C0C  0E01               	movlw	1
  5393  005C0E  6EDE               	movwf	postinc2,c
  5394  005C10  0E00               	movlw	0
  5395  005C12  6EDD               	movwf	postdec2,c
  5396  005C14  0012               	return		;funcret
  5397  005C16                     __end_of_Ball_init:
  5398                           	callstack 0
  5399                           
  5400 ;; *************** function _Factory_exec *****************
  5401 ;; Defined at:
  5402 ;;		line 55 in file "class/factory.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;		None
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  ev              1    0[BANK1 ] unsigned char 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      void 
  5409 ;; Registers used:
  5410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5416 ;;      Params:         0       0       0       0       0       0       0
  5417 ;;      Locals:         0       0       1       0       0       0       0
  5418 ;;      Temps:          0       0       0       0       0       0       0
  5419 ;;      Totals:         0       0       1       0       0       0       0
  5420 ;;Total ram usage:        1 bytes
  5421 ;; Hardware stack levels used: 1
  5422 ;; Hardware stack levels required when called: 14
  5423 ;; This function calls:
  5424 ;;		_XF_popEvent
  5425 ;;		_displaySM
  5426 ;;		_gameControllerSM
  5427 ;;		_sleepSM
  5428 ;;		_touchScreenSM
  5429 ;; This function is called by:
  5430 ;;		_main
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text14
  5435  005AD0                     __ptext14:
  5436                           	callstack 0
  5437  005AD0                     _Factory_exec:
  5438                           	callstack 16
  5439  005AD0                     
  5440                           ;class/factory.c: 58:     Event ev;;class/factory.c: 59:     ev = XF_popEvent(0);
  5441  005AD0  0E00               	movlw	0
  5442  005AD2  EC38  F02D         	call	_XF_popEvent
  5443  005AD6  0101               	movlb	1	; () banked
  5444  005AD8  6FC9               	movwf	Factory_exec@ev& (0+255),b
  5445  005ADA                     
  5446                           ; BSR set to: 1
  5447                           ;class/factory.c: 60:     if (ev != NULLEVENT)
  5448  005ADA  51C9               	movf	Factory_exec@ev& (0+255),w,b
  5449  005ADC  B4D8               	btfsc	status,2,c
  5450  005ADE  EF73  F02D         	goto	u7761
  5451  005AE2  EF75  F02D         	goto	u7760
  5452  005AE6                     u7761:
  5453  005AE6  EF92  F02D         	goto	l106
  5454  005AEA                     u7760:
  5455  005AEA                     
  5456                           ; BSR set to: 1
  5457                           ;class/factory.c: 61:     {;class/factory.c: 62:         sleepSM(ev);
  5458  005AEA  51C9               	movf	Factory_exec@ev& (0+255),w,b
  5459  005AEC  EC2C  F029         	call	_sleepSM
  5460  005AF0                     
  5461                           ;class/factory.c: 63:         touchScreenSM(ev,&g1);
  5462  005AF0  0E00               	movlw	low _g1
  5463  005AF2  0100               	movlb	0	; () banked
  5464  005AF4  6FB0               	movwf	touchScreenSM@g& (0+255),b
  5465  005AF6  0E01               	movlw	high _g1
  5466  005AF8  6FB1               	movwf	(touchScreenSM@g+1)& (0+255),b
  5467  005AFA  0101               	movlb	1	; () banked
  5468  005AFC  51C9               	movf	Factory_exec@ev& (0+255),w,b
  5469  005AFE  ECCC  F029         	call	_touchScreenSM
  5470  005B02                     
  5471                           ;class/factory.c: 64:         displaySM(ev,&g1);
  5472  005B02  0E00               	movlw	low _g1
  5473  005B04  0100               	movlb	0	; () banked
  5474  005B06  6FA0               	movwf	displaySM@g& (0+255),b
  5475  005B08  0E01               	movlw	high _g1
  5476  005B0A  6FA1               	movwf	(displaySM@g+1)& (0+255),b
  5477  005B0C  0101               	movlb	1	; () banked
  5478  005B0E  51C9               	movf	Factory_exec@ev& (0+255),w,b
  5479  005B10  ECDB  F025         	call	_displaySM
  5480  005B14                     
  5481                           ;class/factory.c: 65:         gameControllerSM(ev,&g1);
  5482  005B14  0E00               	movlw	low _g1
  5483  005B16  6E3B               	movwf	gameControllerSM@g^0,c
  5484  005B18  0E01               	movlw	high _g1
  5485  005B1A  6E3C               	movwf	(gameControllerSM@g+1)^0,c
  5486  005B1C  0101               	movlb	1	; () banked
  5487  005B1E  51C9               	movf	Factory_exec@ev& (0+255),w,b
  5488  005B20  EC81  F01D         	call	_gameControllerSM
  5489  005B24                     l106:
  5490  005B24  0012               	return		;funcret
  5491  005B26                     __end_of_Factory_exec:
  5492                           	callstack 0
  5493                           
  5494 ;; *************** function _touchScreenSM *****************
  5495 ;; Defined at:
  5496 ;;		line 25 in file "stateMachine/touchScreenSM.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  ev              1    wreg     unsigned char 
  5499 ;;  g               2   80[BANK0 ] PTR struct GameParameter
  5500 ;;		 -> g1(201), 
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;  ev              1   84[BANK0 ] unsigned char 
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5512 ;;      Params:         0       2       0       0       0       0       0
  5513 ;;      Locals:         0       1       0       0       0       0       0
  5514 ;;      Temps:          0       2       0       0       0       0       0
  5515 ;;      Totals:         0       5       0       0       0       0       0
  5516 ;;Total ram usage:        5 bytes
  5517 ;; Hardware stack levels used: 1
  5518 ;; Hardware stack levels required when called: 13
  5519 ;; This function calls:
  5520 ;;		_touchScreenController
  5521 ;; This function is called by:
  5522 ;;		_Factory_exec
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text15
  5527  005398                     __ptext15:
  5528                           	callstack 0
  5529  005398                     _touchScreenSM:
  5530                           	callstack 16
  5531                           
  5532                           ;incstack = 0
  5533                           ;touchScreenSM@ev stored from wreg
  5534  005398  0100               	movlb	0	; () banked
  5535  00539A  6FB4               	movwf	touchScreenSM@ev& (0+255),b
  5536  00539C                     
  5537                           ;stateMachine/touchScreenSM.c: 25: void touchScreenSM(Event ev, GameParameters* g);state
      +                          Machine/touchScreenSM.c: 26: {;stateMachine/touchScreenSM.c: 27:     switch(touchScreenS
      +                          tate)
  5538  00539C  EFFF  F029         	goto	l10116
  5539  0053A0                     l10098:
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;stateMachine/touchScreenSM.c: 30:             if(ev==evPress)
  5543  0053A0  05B4               	decf	touchScreenSM@ev& (0+255),w,b
  5544  0053A2  A4D8               	btfss	status,2,c
  5545  0053A4  EFD6  F029         	goto	u7631
  5546  0053A8  EFD8  F029         	goto	u7630
  5547  0053AC                     u7631:
  5548  0053AC  EF15  F02A         	goto	l494
  5549  0053B0                     u7630:
  5550  0053B0                     
  5551                           ; BSR set to: 0
  5552                           ;stateMachine/touchScreenSM.c: 31:             {;stateMachine/touchScreenSM.c: 32:      
      +                                     touchScreenState=CALCULATEPOSITION;
  5553  0053B0  0E01               	movlw	1
  5554  0053B2  6FDE               	movwf	_touchScreenState& (0+255),b
  5555  0053B4                     l10102:
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;stateMachine/touchScreenSM.c: 33:                 touchScreenController(g);
  5559  0053B4  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  5560  0053B8  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  5561  0053BC  EC64  F018         	call	_touchScreenController	;wreg free
  5562  0053C0  EF15  F02A         	goto	l494
  5563  0053C4                     l10104:
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;stateMachine/touchScreenSM.c: 37:             if(ev==evRelease)
  5567  0053C4  0E02               	movlw	2
  5568  0053C6  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  5569  0053C8  A4D8               	btfss	status,2,c
  5570  0053CA  EFE9  F029         	goto	u7641
  5571  0053CE  EFEB  F029         	goto	u7640
  5572  0053D2                     u7641:
  5573  0053D2  EFF3  F029         	goto	l10110
  5574  0053D6                     u7640:
  5575  0053D6                     
  5576                           ; BSR set to: 0
  5577                           ;stateMachine/touchScreenSM.c: 38:             {;stateMachine/touchScreenSM.c: 39:      
      +                                     touchScreenState=WAITING;
  5578  0053D6  0E00               	movlw	0
  5579  0053D8  6FDE               	movwf	_touchScreenState& (0+255),b
  5580  0053DA                     
  5581                           ; BSR set to: 0
  5582                           ;stateMachine/touchScreenSM.c: 40:                 touchScreenController(g);
  5583  0053DA  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  5584  0053DE  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  5585  0053E2  EC64  F018         	call	_touchScreenController	;wreg free
  5586  0053E6                     l10110:
  5587                           
  5588                           ;stateMachine/touchScreenSM.c: 42:             if(ev==evTimerPos)
  5589  0053E6  0E04               	movlw	4
  5590  0053E8  0100               	movlb	0	; () banked
  5591  0053EA  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  5592  0053EC  A4D8               	btfss	status,2,c
  5593  0053EE  EFFB  F029         	goto	u7651
  5594  0053F2  EFFD  F029         	goto	u7650
  5595  0053F6                     u7651:
  5596  0053F6  EF15  F02A         	goto	l494
  5597  0053FA                     u7650:
  5598  0053FA  EFDA  F029         	goto	l10102
  5599  0053FE                     l10116:
  5600  0053FE  0100               	movlb	0	; () banked
  5601  005400  51DE               	movf	_touchScreenState& (0+255),w,b
  5602  005402  6FB2               	movwf	??_touchScreenSM& (0+255),b
  5603  005404  6BB3               	clrf	(??_touchScreenSM+1)& (0+255),b
  5604                           
  5605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5606                           ; Switch size 1, requested type "simple"
  5607                           ; Number of cases is 1, Range of values is 0 to 0
  5608                           ; switch strategies available:
  5609                           ; Name         Instructions Cycles
  5610                           ; simple_byte            4     3 (average)
  5611                           ;	Chosen strategy is simple_byte
  5612  005406  51B3               	movf	(??_touchScreenSM+1)& (0+255),w,b
  5613  005408  0A00               	xorlw	0	; case 0
  5614  00540A  B4D8               	btfsc	status,2,c
  5615  00540C  EF0A  F02A         	goto	l10490
  5616  005410  EF15  F02A         	goto	l494
  5617  005414                     l10490:
  5618                           
  5619                           ; BSR set to: 0
  5620                           ; Switch size 1, requested type "simple"
  5621                           ; Number of cases is 2, Range of values is 0 to 1
  5622                           ; switch strategies available:
  5623                           ; Name         Instructions Cycles
  5624                           ; simple_byte            7     4 (average)
  5625                           ;	Chosen strategy is simple_byte
  5626  005414  51B2               	movf	??_touchScreenSM& (0+255),w,b
  5627  005416  0A00               	xorlw	0	; case 0
  5628  005418  B4D8               	btfsc	status,2,c
  5629  00541A  EFD0  F029         	goto	l10098
  5630  00541E  0A01               	xorlw	1	; case 1
  5631  005420  B4D8               	btfsc	status,2,c
  5632  005422  EFE2  F029         	goto	l10104
  5633  005426  EF15  F02A         	goto	l494
  5634  00542A                     l494:
  5635  00542A  0012               	return		;funcret
  5636  00542C                     __end_of_touchScreenSM:
  5637                           	callstack 0
  5638                           
  5639 ;; *************** function _touchScreenController *****************
  5640 ;; Defined at:
  5641 ;;		line 54 in file "stateMachine/touchScreenSM.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  g               2   48[BANK0 ] PTR struct GameParameter
  5644 ;;		 -> g1(201), 
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;  valueX          2   78[BANK0 ] unsigned short 
  5647 ;;  valueY          2   76[BANK0 ] unsigned short 
  5648 ;;  s              20   56[BANK0 ] unsigned char [20]
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  1    wreg      void 
  5651 ;; Registers used:
  5652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5658 ;;      Params:         0       2       0       0       0       0       0
  5659 ;;      Locals:         0      24       0       0       0       0       0
  5660 ;;      Temps:          0       6       0       0       0       0       0
  5661 ;;      Totals:         0      32       0       0       0       0       0
  5662 ;;Total ram usage:       32 bytes
  5663 ;; Hardware stack levels used: 1
  5664 ;; Hardware stack levels required when called: 12
  5665 ;; This function calls:
  5666 ;;		_GameParameters_setX
  5667 ;;		_GameParameters_setY
  5668 ;;		_LCD_DrawText
  5669 ;;		_XF_scheduleTimer
  5670 ;;		___fldiv
  5671 ;;		___fltol
  5672 ;;		___xxtofl
  5673 ;;		_configMeasure
  5674 ;;		_configTouch
  5675 ;;		_sprintf
  5676 ;; This function is called by:
  5677 ;;		_touchScreenSM
  5678 ;; This function uses a non-reentrant model
  5679 ;;
  5680                           
  5681                           	psect	text16
  5682  0030C8                     __ptext16:
  5683                           	callstack 0
  5684  0030C8                     _touchScreenController:
  5685                           	callstack 16
  5686  0030C8                     
  5687                           ;stateMachine/touchScreenSM.c: 54: void touchScreenController(GameParameters* g);stateMa
      +                          chine/touchScreenSM.c: 55: {;stateMachine/touchScreenSM.c: 56:     char s[20];;stateMach
      +                          ine/touchScreenSM.c: 58:     switch(touchScreenState)
  5688  0030C8  EF83  F019         	goto	l9984
  5689  0030CC                     l9940:
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;stateMachine/touchScreenSM.c: 63:             configTouch();
  5693  0030CC  EC46  F02F         	call	_configTouch	;wreg free
  5694                           
  5695                           ;stateMachine/touchScreenSM.c: 65:             break;
  5696  0030D0  EF99  F019         	goto	l511
  5697  0030D4                     l500:
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;stateMachine/touchScreenSM.c: 70:             INT1IE=0;
  5701  0030D4  96F0               	bcf	4080,3,c	;volatile
  5702  0030D6                     
  5703                           ; BSR set to: 0
  5704                           ;stateMachine/touchScreenSM.c: 71:             configMeasure(0);
  5705  0030D6  0E00               	movlw	0
  5706  0030D8  ECBC  F02D         	call	_configMeasure
  5707  0030DC                     l501:
  5708  0030DC  B2C2               	btfsc	194,1,c	;volatile
  5709  0030DE  EF73  F018         	goto	u7491
  5710  0030E2  EF75  F018         	goto	u7490
  5711  0030E6                     u7491:
  5712  0030E6  EF6E  F018         	goto	l501
  5713  0030EA                     u7490:
  5714  0030EA                     
  5715                           ;stateMachine/touchScreenSM.c: 73:             uint16_t valueX;;stateMachine/touchScreen
      +                          SM.c: 74:             valueX=(ADRESH<<8)+ADRESL;
  5716  0030EA  50C4               	movf	196,w,c	;volatile
  5717  0030EC  0100               	movlb	0	; () banked
  5718  0030EE  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  5719  0030F0  6B92               	clrf	??_touchScreenController& (0+255),b
  5720  0030F2  50C3               	movf	195,w,c	;volatile
  5721  0030F4  2592               	addwf	??_touchScreenController& (0+255),w,b
  5722  0030F6  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  5723  0030F8  0E00               	movlw	0
  5724  0030FA  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  5725  0030FC  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  5726                           
  5727                           ;stateMachine/touchScreenSM.c: 75:             if(valueX<=120)
  5728  0030FE  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  5729  003100  E107               	bnz	u7501
  5730  003102  0E79               	movlw	121
  5731  003104  5DAE               	subwf	touchScreenController@valueX& (0+255),w,b
  5732  003106  B0D8               	btfsc	status,0,c
  5733  003108  EF88  F018         	goto	u7501
  5734  00310C  EF8A  F018         	goto	u7500
  5735  003110                     u7501:
  5736  003110  EF8E  F018         	goto	l9948
  5737  003114                     u7500:
  5738  003114                     
  5739                           ; BSR set to: 0
  5740                           ;stateMachine/touchScreenSM.c: 76:             {;stateMachine/touchScreenSM.c: 77:      
      +                                     valueX=120;
  5741  003114  0E00               	movlw	0
  5742  003116  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  5743  003118  0E78               	movlw	120
  5744  00311A  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  5745  00311C                     l9948:
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;stateMachine/touchScreenSM.c: 79:             valueX=(valueX-120)/2.35;
  5749  00311C  0E66               	movlw	102
  5750  00311E  6E24               	movwf	___fldiv@a^0,c
  5751  003120  0E66               	movlw	102
  5752  003122  6E25               	movwf	(___fldiv@a+1)^0,c
  5753  003124  0E16               	movlw	22
  5754  003126  6E26               	movwf	(___fldiv@a+2)^0,c
  5755  003128  0E40               	movlw	64
  5756  00312A  6E27               	movwf	(___fldiv@a+3)^0,c
  5757  00312C  0E88               	movlw	136
  5758  00312E  6F92               	movwf	??_touchScreenController& (0+255),b
  5759  003130  0EFF               	movlw	255
  5760  003132  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  5761  003134  C0AE  F094         	movff	touchScreenController@valueX,??_touchScreenController+2
  5762  003138  C0AF  F095         	movff	touchScreenController@valueX+1,??_touchScreenController+3
  5763  00313C  5192               	movf	??_touchScreenController& (0+255),w,b
  5764  00313E  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  5765  003140  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  5766  003142  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  5767  003144  C094  F012         	movff	??_touchScreenController+2,___xxtofl@val
  5768  003148  C095  F013         	movff	??_touchScreenController+3,___xxtofl@val+1
  5769  00314C  6A14               	clrf	(___xxtofl@val+2)^0,c
  5770  00314E  6A15               	clrf	(___xxtofl@val+3)^0,c
  5771  003150  0E00               	movlw	0
  5772  003152  ECA7  F01C         	call	___xxtofl
  5773  003156  C012  F020         	movff	?___xxtofl,___fldiv@b
  5774  00315A  C013  F021         	movff	?___xxtofl+1,___fldiv@b+1
  5775  00315E  C014  F022         	movff	?___xxtofl+2,___fldiv@b+2
  5776  003162  C015  F023         	movff	?___xxtofl+3,___fldiv@b+3
  5777  003166  EC80  F010         	call	___fldiv	;wreg free
  5778  00316A  C020  F039         	movff	?___fldiv,___fltol@f1
  5779  00316E  C021  F03A         	movff	?___fldiv+1,___fltol@f1+1
  5780  003172  C022  F03B         	movff	?___fldiv+2,___fltol@f1+2
  5781  003176  C023  F03C         	movff	?___fldiv+3,___fltol@f1+3
  5782  00317A  ECA4  F022         	call	___fltol	;wreg free
  5783  00317E  C039  F0AE         	movff	?___fltol,touchScreenController@valueX
  5784  003182  C03A  F0AF         	movff	?___fltol+1,touchScreenController@valueX+1
  5785  003186                     
  5786                           ;stateMachine/touchScreenSM.c: 80:             valueX=240 -valueX;
  5787  003186  0100               	movlb	0	; () banked
  5788  003188  51AE               	movf	touchScreenController@valueX& (0+255),w,b
  5789  00318A  08F0               	sublw	240
  5790  00318C  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  5791  00318E  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  5792  003190  A0D8               	btfss	status,0,c
  5793  003192  2AE8               	incf	wreg,f,c
  5794  003194  0800               	sublw	0
  5795  003196  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  5796  003198                     
  5797                           ; BSR set to: 0
  5798                           ;stateMachine/touchScreenSM.c: 82:             configMeasure(1);
  5799  003198  0E01               	movlw	1
  5800  00319A  ECBC  F02D         	call	_configMeasure
  5801  00319E                     l505:
  5802  00319E  B2C2               	btfsc	194,1,c	;volatile
  5803  0031A0  EFD4  F018         	goto	u7511
  5804  0031A4  EFD6  F018         	goto	u7510
  5805  0031A8                     u7511:
  5806  0031A8  EFCF  F018         	goto	l505
  5807  0031AC                     u7510:
  5808  0031AC                     
  5809                           ;stateMachine/touchScreenSM.c: 84:             uint16_t valueY;;stateMachine/touchScreen
      +                          SM.c: 85:             valueY=(ADRESH<<8)+ADRESL;
  5810  0031AC  50C4               	movf	196,w,c	;volatile
  5811  0031AE  0100               	movlb	0	; () banked
  5812  0031B0  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  5813  0031B2  6B92               	clrf	??_touchScreenController& (0+255),b
  5814  0031B4  50C3               	movf	195,w,c	;volatile
  5815  0031B6  2592               	addwf	??_touchScreenController& (0+255),w,b
  5816  0031B8  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  5817  0031BA  0E00               	movlw	0
  5818  0031BC  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  5819  0031BE  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  5820                           
  5821                           ;stateMachine/touchScreenSM.c: 86:             if(valueY<=105)
  5822  0031C0  51AD               	movf	(touchScreenController@valueY+1)& (0+255),w,b
  5823  0031C2  E107               	bnz	u7521
  5824  0031C4  0E6A               	movlw	106
  5825  0031C6  5DAC               	subwf	touchScreenController@valueY& (0+255),w,b
  5826  0031C8  B0D8               	btfsc	status,0,c
  5827  0031CA  EFE9  F018         	goto	u7521
  5828  0031CE  EFEB  F018         	goto	u7520
  5829  0031D2                     u7521:
  5830  0031D2  EFEF  F018         	goto	l9958
  5831  0031D6                     u7520:
  5832  0031D6                     
  5833                           ; BSR set to: 0
  5834                           ;stateMachine/touchScreenSM.c: 87:             {;stateMachine/touchScreenSM.c: 88:      
      +                                     valueY=105;
  5835  0031D6  0E00               	movlw	0
  5836  0031D8  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  5837  0031DA  0E69               	movlw	105
  5838  0031DC  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  5839  0031DE                     l9958:
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;stateMachine/touchScreenSM.c: 90:             valueY=(valueY-105)/2;
  5843  0031DE  0E97               	movlw	151
  5844  0031E0  6F92               	movwf	??_touchScreenController& (0+255),b
  5845  0031E2  0EFF               	movlw	255
  5846  0031E4  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  5847  0031E6  C0AC  F094         	movff	touchScreenController@valueY,??_touchScreenController+2
  5848  0031EA  C0AD  F095         	movff	touchScreenController@valueY+1,??_touchScreenController+3
  5849  0031EE  5192               	movf	??_touchScreenController& (0+255),w,b
  5850  0031F0  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  5851  0031F2  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  5852  0031F4  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  5853  0031F6  90D8               	bcf	status,0,c
  5854  0031F8  3195               	rrcf	(??_touchScreenController+3)& (0+255),w,b
  5855  0031FA  6F96               	movwf	(??_touchScreenController+4)& (0+255),b
  5856  0031FC  3194               	rrcf	(??_touchScreenController+2)& (0+255),w,b
  5857  0031FE  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  5858  003200  C096  F0AD         	movff	??_touchScreenController+4,touchScreenController@valueY+1
  5859  003204                     
  5860                           ; BSR set to: 0
  5861                           ;stateMachine/touchScreenSM.c: 91:             XF_scheduleTimer(9,evTimerPos,0);
  5862  003204  0E00               	movlw	0
  5863  003206  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  5864  003208  0E09               	movlw	9
  5865  00320A  6E13               	movwf	XF_scheduleTimer@tm^0,c
  5866  00320C  0E04               	movlw	4
  5867  00320E  6E15               	movwf	XF_scheduleTimer@ev^0,c
  5868  003210  0E00               	movlw	0
  5869  003212  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  5870  003214  EC5B  F02B         	call	_XF_scheduleTimer	;wreg free
  5871  003218                     
  5872                           ;stateMachine/touchScreenSM.c: 94:             ADCON0=0b00101001;
  5873  003218  0E29               	movlw	41
  5874  00321A  6EC2               	movwf	194,c	;volatile
  5875  00321C                     
  5876                           ;stateMachine/touchScreenSM.c: 95:             configTouch();
  5877  00321C  EC46  F02F         	call	_configTouch	;wreg free
  5878  003220                     
  5879                           ;stateMachine/touchScreenSM.c: 96:             INT1IF=0;
  5880  003220  90F0               	bcf	4080,0,c	;volatile
  5881  003222                     
  5882                           ;stateMachine/touchScreenSM.c: 97:             INT1IE=1;
  5883  003222  86F0               	bsf	4080,3,c	;volatile
  5884  003224                     
  5885                           ;stateMachine/touchScreenSM.c: 100:             if(PORTBbits.RB1 == 0)
  5886  003224  B281               	btfsc	129,1,c	;volatile
  5887  003226  EF17  F019         	goto	u7531
  5888  00322A  EF19  F019         	goto	u7530
  5889  00322E                     u7531:
  5890  00322E  EF99  F019         	goto	l511
  5891  003232                     u7530:
  5892  003232                     
  5893                           ;stateMachine/touchScreenSM.c: 101:             {;stateMachine/touchScreenSM.c: 102:    
      +                                       sprintf(s,"X: %d",valueX);
  5894  003232  0E98               	movlw	low touchScreenController@s
  5895  003234  0100               	movlb	0	; () banked
  5896  003236  6F82               	movwf	sprintf@s& (0+255),b
  5897  003238  0E00               	movlw	high touchScreenController@s
  5898  00323A  6F83               	movwf	(sprintf@s+1)& (0+255),b
  5899  00323C  0EEA               	movlw	low STR_10
  5900  00323E  6F84               	movwf	sprintf@fmt& (0+255),b
  5901  003240  0E7F               	movlw	high STR_10
  5902  003242  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  5903  003244  C0AE  F086         	movff	touchScreenController@valueX,?_sprintf+4
  5904  003248  C0AF  F087         	movff	touchScreenController@valueX+1,?_sprintf+5
  5905  00324C  EC93  F02D         	call	_sprintf	;wreg free
  5906  003250                     
  5907                           ;stateMachine/touchScreenSM.c: 103:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,200,0b0000000000000000,0b1111111111111111);
  5908  003250  0E98               	movlw	low touchScreenController@s
  5909  003252  6E20               	movwf	LCD_DrawText@msg^0,c
  5910  003254  0E00               	movlw	high touchScreenController@s
  5911  003256  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  5912  003258  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  5913  00325A  6E22               	movwf	LCD_DrawText@font^0,c
  5914  00325C  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  5915  00325E  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  5916  003260  0E01               	movlw	1
  5917  003262  6E24               	movwf	LCD_DrawText@align^0,c
  5918  003264  0E00               	movlw	0
  5919  003266  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  5920  003268  0EC8               	movlw	200
  5921  00326A  6E25               	movwf	LCD_DrawText@posX^0,c
  5922  00326C  0E00               	movlw	0
  5923  00326E  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  5924  003270  0EC8               	movlw	200
  5925  003272  6E27               	movwf	LCD_DrawText@posY^0,c
  5926  003274  0E00               	movlw	0
  5927  003276  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  5928  003278  0E00               	movlw	0
  5929  00327A  6E29               	movwf	LCD_DrawText@color^0,c
  5930  00327C  0EFF               	movlw	255
  5931  00327E  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  5932  003280  682B               	setf	LCD_DrawText@bg_color^0,c
  5933  003282  EC5B  F00E         	call	_LCD_DrawText	;wreg free
  5934  003286                     
  5935                           ;stateMachine/touchScreenSM.c: 104:                 GameParameters_setX(g,valueX);
  5936  003286  C090  F012         	movff	touchScreenController@g,GameParameters_setX@s
  5937  00328A  C091  F013         	movff	touchScreenController@g+1,GameParameters_setX@s+1
  5938  00328E  C0AE  F014         	movff	touchScreenController@valueX,GameParameters_setX@value
  5939  003292  C0AF  F015         	movff	touchScreenController@valueX+1,GameParameters_setX@value+1
  5940  003296  EC5F  F02F         	call	_GameParameters_setX	;wreg free
  5941  00329A                     
  5942                           ;stateMachine/touchScreenSM.c: 105:                 sprintf(s,"Y: %d",valueY);
  5943  00329A  0E98               	movlw	low touchScreenController@s
  5944  00329C  0100               	movlb	0	; () banked
  5945  00329E  6F82               	movwf	sprintf@s& (0+255),b
  5946  0032A0  0E00               	movlw	high touchScreenController@s
  5947  0032A2  6F83               	movwf	(sprintf@s+1)& (0+255),b
  5948  0032A4  0EF0               	movlw	low STR_11
  5949  0032A6  6F84               	movwf	sprintf@fmt& (0+255),b
  5950  0032A8  0E7F               	movlw	high STR_11
  5951  0032AA  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  5952  0032AC  C0AC  F086         	movff	touchScreenController@valueY,?_sprintf+4
  5953  0032B0  C0AD  F087         	movff	touchScreenController@valueY+1,?_sprintf+5
  5954  0032B4  EC93  F02D         	call	_sprintf	;wreg free
  5955  0032B8                     
  5956                           ;stateMachine/touchScreenSM.c: 106:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,250,0b0000000000000000,0b1111111111111111);
  5957  0032B8  0E98               	movlw	low touchScreenController@s
  5958  0032BA  6E20               	movwf	LCD_DrawText@msg^0,c
  5959  0032BC  0E00               	movlw	high touchScreenController@s
  5960  0032BE  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  5961  0032C0  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  5962  0032C2  6E22               	movwf	LCD_DrawText@font^0,c
  5963  0032C4  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  5964  0032C6  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  5965  0032C8  0E01               	movlw	1
  5966  0032CA  6E24               	movwf	LCD_DrawText@align^0,c
  5967  0032CC  0E00               	movlw	0
  5968  0032CE  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  5969  0032D0  0EC8               	movlw	200
  5970  0032D2  6E25               	movwf	LCD_DrawText@posX^0,c
  5971  0032D4  0E00               	movlw	0
  5972  0032D6  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  5973  0032D8  0EFA               	movlw	250
  5974  0032DA  6E27               	movwf	LCD_DrawText@posY^0,c
  5975  0032DC  0E00               	movlw	0
  5976  0032DE  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  5977  0032E0  0E00               	movlw	0
  5978  0032E2  6E29               	movwf	LCD_DrawText@color^0,c
  5979  0032E4  0EFF               	movlw	255
  5980  0032E6  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  5981  0032E8  682B               	setf	LCD_DrawText@bg_color^0,c
  5982  0032EA  EC5B  F00E         	call	_LCD_DrawText	;wreg free
  5983                           
  5984                           ;stateMachine/touchScreenSM.c: 107:                 GameParameters_setY(g,valueY);
  5985  0032EE  C090  F012         	movff	touchScreenController@g,GameParameters_setY@s
  5986  0032F2  C091  F013         	movff	touchScreenController@g+1,GameParameters_setY@s+1
  5987  0032F6  C0AC  F014         	movff	touchScreenController@valueY,GameParameters_setY@value
  5988  0032FA  C0AD  F015         	movff	touchScreenController@valueY+1,GameParameters_setY@value+1
  5989  0032FE  EC54  F02F         	call	_GameParameters_setY	;wreg free
  5990  003302  EF99  F019         	goto	l511
  5991  003306                     l9984:
  5992  003306  0100               	movlb	0	; () banked
  5993  003308  51DE               	movf	_touchScreenState& (0+255),w,b
  5994  00330A  6F92               	movwf	??_touchScreenController& (0+255),b
  5995  00330C  6B93               	clrf	(??_touchScreenController+1)& (0+255),b
  5996                           
  5997                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5998                           ; Switch size 1, requested type "simple"
  5999                           ; Number of cases is 1, Range of values is 0 to 0
  6000                           ; switch strategies available:
  6001                           ; Name         Instructions Cycles
  6002                           ; simple_byte            4     3 (average)
  6003                           ;	Chosen strategy is simple_byte
  6004  00330E  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  6005  003310  0A00               	xorlw	0	; case 0
  6006  003312  B4D8               	btfsc	status,2,c
  6007  003314  EF8E  F019         	goto	l10492
  6008  003318  EF99  F019         	goto	l511
  6009  00331C                     l10492:
  6010                           
  6011                           ; BSR set to: 0
  6012                           ; Switch size 1, requested type "simple"
  6013                           ; Number of cases is 2, Range of values is 0 to 1
  6014                           ; switch strategies available:
  6015                           ; Name         Instructions Cycles
  6016                           ; simple_byte            7     4 (average)
  6017                           ;	Chosen strategy is simple_byte
  6018  00331C  5192               	movf	??_touchScreenController& (0+255),w,b
  6019  00331E  0A00               	xorlw	0	; case 0
  6020  003320  B4D8               	btfsc	status,2,c
  6021  003322  EF66  F018         	goto	l9940
  6022  003326  0A01               	xorlw	1	; case 1
  6023  003328  B4D8               	btfsc	status,2,c
  6024  00332A  EF6A  F018         	goto	l500
  6025  00332E  EF99  F019         	goto	l511
  6026  003332                     l511:
  6027  003332  0012               	return		;funcret
  6028  003334                     __end_of_touchScreenController:
  6029                           	callstack 0
  6030                           
  6031 ;; *************** function _sprintf *****************
  6032 ;; Defined at:
  6033 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;  s               2   34[BANK0 ] PTR unsigned char 
  6036 ;;		 -> touchScreenController@s(20), 
  6037 ;;  fmt             2   36[BANK0 ] PTR const unsigned char 
  6038 ;;		 -> STR_11(6), STR_10(6), 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  f               6   42[BANK0 ] struct _IO_FILE
  6041 ;;  ap              2   40[BANK0 ] PTR void [1]
  6042 ;;		 -> ?_sprintf(2), 
  6043 ;;  ret             2    0        int 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  2   34[BANK0 ] int 
  6046 ;; Registers used:
  6047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6053 ;;      Params:         0       6       0       0       0       0       0
  6054 ;;      Locals:         0       8       0       0       0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0
  6056 ;;      Totals:         0      14       0       0       0       0       0
  6057 ;;Total ram usage:       14 bytes
  6058 ;; Hardware stack levels used: 1
  6059 ;; Hardware stack levels required when called: 11
  6060 ;; This function calls:
  6061 ;;		_vfprintf
  6062 ;; This function is called by:
  6063 ;;		_touchScreenController
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text17
  6068  005B26                     __ptext17:
  6069                           	callstack 0
  6070  005B26                     _sprintf:
  6071                           	callstack 16
  6072  005B26  0E86               	movlw	low (?_sprintf+4)
  6073  005B28  0100               	movlb	0	; () banked
  6074  005B2A  6F88               	movwf	sprintf@ap& (0+255),b
  6075  005B2C  0E00               	movlw	high (?_sprintf+4)
  6076  005B2E  6F89               	movwf	(sprintf@ap+1)& (0+255),b
  6077  005B30  C082  F08A         	movff	sprintf@s,sprintf@f
  6078  005B34  C083  F08B         	movff	sprintf@s+1,sprintf@f+1
  6079  005B38                     
  6080                           ; BSR set to: 0
  6081  005B38  0E00               	movlw	0
  6082  005B3A  6F8D               	movwf	(sprintf@f+3)& (0+255),b
  6083  005B3C  0E00               	movlw	0
  6084  005B3E  6F8C               	movwf	(sprintf@f+2)& (0+255),b
  6085  005B40                     
  6086                           ; BSR set to: 0
  6087  005B40  0E00               	movlw	0
  6088  005B42  6F8F               	movwf	(sprintf@f+5)& (0+255),b
  6089  005B44  0E00               	movlw	0
  6090  005B46  6F8E               	movwf	(sprintf@f+4)& (0+255),b
  6091  005B48                     
  6092                           ; BSR set to: 0
  6093  005B48  0E8A               	movlw	low sprintf@f
  6094  005B4A  6F7A               	movwf	vfprintf@fp& (0+255),b
  6095  005B4C  0E00               	movlw	high sprintf@f
  6096  005B4E  6F7B               	movwf	(vfprintf@fp+1)& (0+255),b
  6097  005B50  C084  F07C         	movff	sprintf@fmt,vfprintf@fmt
  6098  005B54  C085  F07D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6099  005B58  0E88               	movlw	low sprintf@ap
  6100  005B5A  6F7E               	movwf	vfprintf@ap& (0+255),b
  6101  005B5C  0E00               	movlw	high sprintf@ap
  6102  005B5E  6F7F               	movwf	(vfprintf@ap+1)& (0+255),b
  6103  005B60  EC07  F02D         	call	_vfprintf	;wreg free
  6104  005B64  0100               	movlb	0	; () banked
  6105  005B66  518C               	movf	(sprintf@f+2)& (0+255),w,b
  6106  005B68  2582               	addwf	sprintf@s& (0+255),w,b
  6107  005B6A  6ED9               	movwf	fsr2l,c
  6108  005B6C  518D               	movf	(sprintf@f+3)& (0+255),w,b
  6109  005B6E  2183               	addwfc	(sprintf@s+1)& (0+255),w,b
  6110  005B70  6EDA               	movwf	fsr2h,c
  6111  005B72  0E00               	movlw	0
  6112  005B74  6EDF               	movwf	indf2,c
  6113  005B76                     
  6114                           ; BSR set to: 0
  6115  005B76  0012               	return		;funcret
  6116  005B78                     __end_of_sprintf:
  6117                           	callstack 0
  6118                           
  6119 ;; *************** function _vfprintf *****************
  6120 ;; Defined at:
  6121 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  6124 ;;		 -> sprintf@f(6), 
  6125 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
  6126 ;;		 -> STR_11(6), STR_10(6), 
  6127 ;;  ap              2   30[BANK0 ] PTR PTR void 
  6128 ;;		 -> sprintf@ap(2), 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  cfmt            2   32[BANK0 ] PTR unsigned char 
  6131 ;;		 -> STR_11(6), STR_10(6), 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  2   26[BANK0 ] int 
  6134 ;; Registers used:
  6135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6141 ;;      Params:         0       6       0       0       0       0       0
  6142 ;;      Locals:         0       2       0       0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0
  6144 ;;      Totals:         0       8       0       0       0       0       0
  6145 ;;Total ram usage:        8 bytes
  6146 ;; Hardware stack levels used: 1
  6147 ;; Hardware stack levels required when called: 10
  6148 ;; This function calls:
  6149 ;;		_vfpfcnvrt
  6150 ;; This function is called by:
  6151 ;;		_sprintf
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           	psect	text18
  6156  005A0E                     __ptext18:
  6157                           	callstack 0
  6158  005A0E                     _vfprintf:
  6159                           	callstack 16
  6160  005A0E                     
  6161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6162  005A0E  C07C  F080         	movff	vfprintf@fmt,vfprintf@cfmt
  6163  005A12  C07D  F081         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6164  005A16                     
  6165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6166  005A16  0E00               	movlw	0
  6167  005A18  0100               	movlb	0	; () banked
  6168  005A1A  6FDC               	movwf	(_nout+1)& (0+255),b
  6169  005A1C  0E00               	movlw	0
  6170  005A1E  6FDB               	movwf	_nout& (0+255),b
  6171                           
  6172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6173  005A20  EF25  F02D         	goto	l9510
  6174  005A24                     l9508:
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6178  005A24  C07A  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  6179  005A28  C07B  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6180  005A2C  0E80               	movlw	low vfprintf@cfmt
  6181  005A2E  6E41               	movwf	vfpfcnvrt@fmt^0,c
  6182  005A30  0E00               	movlw	high vfprintf@cfmt
  6183  005A32  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6184  005A34  C07E  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  6185  005A38  C07F  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6186  005A3C  ECCD  F01B         	call	_vfpfcnvrt	;wreg free
  6187  005A40  503F               	movf	?_vfpfcnvrt^0,w,c
  6188  005A42  0100               	movlb	0	; () banked
  6189  005A44  27DB               	addwf	_nout& (0+255),f,b
  6190  005A46  5040               	movf	(?_vfpfcnvrt+1)^0,w,c
  6191  005A48  23DC               	addwfc	(_nout+1)& (0+255),f,b
  6192  005A4A                     l9510:
  6193                           
  6194                           ; BSR set to: 0
  6195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6196  005A4A  C080  FFF6         	movff	vfprintf@cfmt,tblptrl
  6197  005A4E  C081  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6198  005A52                     	if	0	;tblptru may be non-zero
  6199  005A52                     	endif
  6200  005A52                     	if	0	;tblptru may be non-zero
  6201  005A52                     	endif
  6202  005A52  0008               	tblrd		*
  6203  005A54  50F5               	movf	tablat,w,c
  6204  005A56  0900               	iorlw	0
  6205  005A58  A4D8               	btfss	status,2,c
  6206  005A5A  EF31  F02D         	goto	u6801
  6207  005A5E  EF33  F02D         	goto	u6800
  6208  005A62                     u6801:
  6209  005A62  EF12  F02D         	goto	l9508
  6210  005A66                     u6800:
  6211  005A66                     
  6212                           ; BSR set to: 0
  6213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6214  005A66  C0DB  F07A         	movff	_nout,?_vfprintf
  6215  005A6A  C0DC  F07B         	movff	_nout+1,?_vfprintf+1
  6216  005A6E                     
  6217                           ; BSR set to: 0
  6218  005A6E  0012               	return		;funcret
  6219  005A70                     __end_of_vfprintf:
  6220                           	callstack 0
  6221                           
  6222 ;; *************** function _vfpfcnvrt *****************
  6223 ;; Defined at:
  6224 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  6227 ;;		 -> sprintf@f(6), 
  6228 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  6229 ;;		 -> vfprintf@cfmt(2), 
  6230 ;;  ap              2   66[COMRAM] PTR PTR void 
  6231 ;;		 -> sprintf@ap(2), 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;  ll              8   18[BANK0 ] long long 
  6234 ;;  llu             8    0        unsigned long long 
  6235 ;;  f               4    0        unsigned long long 
  6236 ;;  vp              3    0        PTR void 
  6237 ;;  ct              3    0        unsigned char [3]
  6238 ;;  cp              3    0        PTR unsigned char 
  6239 ;;  i               2    0        int 
  6240 ;;  done            2    0        int 
  6241 ;;  c               1    0        unsigned char 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  2   62[COMRAM] int 
  6244 ;; Registers used:
  6245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6251 ;;      Params:         6       0       0       0       0       0       0
  6252 ;;      Locals:         0       8       0       0       0       0       0
  6253 ;;      Temps:          2       0       0       0       0       0       0
  6254 ;;      Totals:         8       8       0       0       0       0       0
  6255 ;;Total ram usage:       16 bytes
  6256 ;; Hardware stack levels used: 1
  6257 ;; Hardware stack levels required when called: 9
  6258 ;; This function calls:
  6259 ;;		_dtoa
  6260 ;;		_fputc
  6261 ;; This function is called by:
  6262 ;;		_vfprintf
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           	psect	text19
  6267  00379A                     __ptext19:
  6268                           	callstack 0
  6269  00379A                     _vfpfcnvrt:
  6270                           	callstack 16
  6271  00379A                     
  6272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6273  00379A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6274  00379E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6275  0037A2  CFDE FFF6          	movff	postinc2,tblptrl
  6276  0037A6  CFDD FFF7          	movff	postdec2,tblptrh
  6277  0037AA                     	if	0	;tblptru may be non-zero
  6278  0037AA                     	endif
  6279  0037AA                     	if	0	;tblptru may be non-zero
  6280  0037AA                     	endif
  6281  0037AA  0008               	tblrd		*
  6282  0037AC  50F5               	movf	tablat,w,c
  6283  0037AE  0A25               	xorlw	37
  6284  0037B0  A4D8               	btfss	status,2,c
  6285  0037B2  EFDD  F01B         	goto	u6431
  6286  0037B6  EFDF  F01B         	goto	u6430
  6287  0037BA                     u6431:
  6288  0037BA  EF8B  F01C         	goto	l9310
  6289  0037BE                     u6430:
  6290  0037BE                     
  6291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6292  0037BE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6293  0037C2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6294  0037C6  2ADE               	incf	postinc2,f,c
  6295  0037C8  0E00               	movlw	0
  6296  0037CA  22DD               	addwfc	postdec2,f,c
  6297  0037CC                     
  6298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6299  0037CC  0E00               	movlw	0
  6300  0037CE  6E48               	movwf	(_width+1)^0,c
  6301  0037D0  0E00               	movlw	0
  6302  0037D2  6E47               	movwf	_width^0,c
  6303  0037D4  C047  F04B         	movff	_width,_flags
  6304  0037D8  C048  F04C         	movff	_width+1,_flags+1
  6305  0037DC                     
  6306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6307  0037DC  6849               	setf	_prec^0,c
  6308  0037DE  684A               	setf	(_prec+1)^0,c
  6309  0037E0                     
  6310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6311  0037E0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6312  0037E4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6313  0037E8  CFDE FFF6          	movff	postinc2,tblptrl
  6314  0037EC  CFDD FFF7          	movff	postdec2,tblptrh
  6315  0037F0                     	if	0	;tblptru may be non-zero
  6316  0037F0                     	endif
  6317  0037F0                     	if	0	;tblptru may be non-zero
  6318  0037F0                     	endif
  6319  0037F0  0008               	tblrd		*
  6320  0037F2  50F5               	movf	tablat,w,c
  6321  0037F4  0A64               	xorlw	100
  6322  0037F6  B4D8               	btfsc	status,2,c
  6323  0037F8  EF00  F01C         	goto	u6441
  6324  0037FC  EF02  F01C         	goto	u6440
  6325  003800                     u6441:
  6326  003800  EF14  F01C         	goto	l9288
  6327  003804                     u6440:
  6328  003804  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6329  003808  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6330  00380C  CFDE FFF6          	movff	postinc2,tblptrl
  6331  003810  CFDD FFF7          	movff	postdec2,tblptrh
  6332  003814                     	if	0	;tblptru may be non-zero
  6333  003814                     	endif
  6334  003814                     	if	0	;tblptru may be non-zero
  6335  003814                     	endif
  6336  003814  0008               	tblrd		*
  6337  003816  50F5               	movf	tablat,w,c
  6338  003818  0A69               	xorlw	105
  6339  00381A  A4D8               	btfss	status,2,c
  6340  00381C  EF12  F01C         	goto	u6451
  6341  003820  EF14  F01C         	goto	u6450
  6342  003824                     u6451:
  6343  003824  EF55  F01C         	goto	l9294
  6344  003828                     u6450:
  6345  003828                     l9288:
  6346                           
  6347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6348  003828  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6349  00382C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6350  003830  2ADE               	incf	postinc2,f,c
  6351  003832  0E00               	movlw	0
  6352  003834  22DD               	addwfc	postdec2,f,c
  6353                           
  6354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6355  003836  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6356  00383A  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6357  00383E  CFDF F045          	movff	indf2,??_vfpfcnvrt
  6358  003842  0E02               	movlw	2
  6359  003844  26DE               	addwf	postinc2,f,c
  6360  003846  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  6361  00384A  0E00               	movlw	0
  6362  00384C  22DD               	addwfc	postdec2,f,c
  6363  00384E  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6364  003852  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6365  003856  CFDE F072          	movff	postinc2,vfpfcnvrt@ll
  6366  00385A  CFDD F073          	movff	postdec2,vfpfcnvrt@ll+1
  6367  00385E  0100               	movlb	0	; () banked
  6368  003860  0E00               	movlw	0
  6369  003862  BF73               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6370  003864  0EFF               	movlw	-1
  6371  003866  6F74               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6372  003868  6F75               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6373  00386A  6F76               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6374  00386C  6F77               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6375  00386E  6F78               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6376  003870  6F79               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6377  003872                     
  6378                           ; BSR set to: 0
  6379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6380  003872  C03F  F02D         	movff	vfpfcnvrt@fp,dtoa@fp
  6381  003876  C040  F02E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6382  00387A  C072  F02F         	movff	vfpfcnvrt@ll,dtoa@d
  6383  00387E  C073  F030         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6384  003882  C074  F031         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6385  003886  C075  F032         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6386  00388A  C076  F033         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6387  00388E  C077  F034         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6388  003892  C078  F035         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6389  003896  C079  F036         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6390  00389A  EC9F  F015         	call	_dtoa	;wreg free
  6391  00389E  C02D  F03F         	movff	?_dtoa,?_vfpfcnvrt
  6392  0038A2  C02E  F040         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6393  0038A6  EFA6  F01C         	goto	l1529
  6394  0038AA                     l9294:
  6395                           
  6396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6397  0038AA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6398  0038AE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6399  0038B2  CFDE FFF6          	movff	postinc2,tblptrl
  6400  0038B6  CFDD FFF7          	movff	postdec2,tblptrh
  6401  0038BA                     	if	0	;tblptru may be non-zero
  6402  0038BA                     	endif
  6403  0038BA                     	if	0	;tblptru may be non-zero
  6404  0038BA                     	endif
  6405  0038BA  0008               	tblrd		*
  6406  0038BC  50F5               	movf	tablat,w,c
  6407  0038BE  0A25               	xorlw	37
  6408  0038C0  A4D8               	btfss	status,2,c
  6409  0038C2  EF65  F01C         	goto	u6461
  6410  0038C6  EF67  F01C         	goto	u6460
  6411  0038CA                     u6461:
  6412  0038CA  EF7E  F01C         	goto	l9304
  6413  0038CE                     u6460:
  6414  0038CE                     
  6415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6416  0038CE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6417  0038D2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6418  0038D6  2ADE               	incf	postinc2,f,c
  6419  0038D8  0E00               	movlw	0
  6420  0038DA  22DD               	addwfc	postdec2,f,c
  6421  0038DC                     
  6422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6423  0038DC  0E00               	movlw	0
  6424  0038DE  6E13               	movwf	(fputc@c+1)^0,c
  6425  0038E0  0E25               	movlw	37
  6426  0038E2  6E12               	movwf	fputc@c^0,c
  6427  0038E4  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
  6428  0038E8  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6429  0038EC  EC76  F025         	call	_fputc	;wreg free
  6430  0038F0                     l9300:
  6431                           
  6432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6433  0038F0  0E00               	movlw	0
  6434  0038F2  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
  6435  0038F4  0E01               	movlw	1
  6436  0038F6  6E3F               	movwf	?_vfpfcnvrt^0,c
  6437  0038F8  EFA6  F01C         	goto	l1529
  6438  0038FC                     l9304:
  6439                           
  6440                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6441  0038FC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6442  003900  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6443  003904  2ADE               	incf	postinc2,f,c
  6444  003906  0E00               	movlw	0
  6445  003908  22DD               	addwfc	postdec2,f,c
  6446  00390A                     
  6447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6448  00390A  0E00               	movlw	0
  6449  00390C  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
  6450  00390E  0E00               	movlw	0
  6451  003910  6E3F               	movwf	?_vfpfcnvrt^0,c
  6452  003912  EFA6  F01C         	goto	l1529
  6453  003916                     l9310:
  6454                           
  6455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6456  003916  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6457  00391A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6458  00391E  CFDE FFF6          	movff	postinc2,tblptrl
  6459  003922  CFDD FFF7          	movff	postdec2,tblptrh
  6460  003926                     	if	0	;tblptru may be non-zero
  6461  003926                     	endif
  6462  003926                     	if	0	;tblptru may be non-zero
  6463  003926                     	endif
  6464  003926  0008               	tblrd		*
  6465  003928  50F5               	movf	tablat,w,c
  6466  00392A  6E12               	movwf	fputc@c^0,c
  6467  00392C  6A13               	clrf	(fputc@c+1)^0,c
  6468  00392E  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
  6469  003932  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6470  003936  EC76  F025         	call	_fputc	;wreg free
  6471  00393A                     
  6472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6473  00393A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6474  00393E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6475  003942  2ADE               	incf	postinc2,f,c
  6476  003944  0E00               	movlw	0
  6477  003946  22DD               	addwfc	postdec2,f,c
  6478  003948  EF78  F01C         	goto	l9300
  6479  00394C                     l1529:
  6480  00394C  0012               	return		;funcret
  6481  00394E                     __end_of_vfpfcnvrt:
  6482                           	callstack 0
  6483                           
  6484 ;; *************** function _dtoa *****************
  6485 ;; Defined at:
  6486 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  fp              2   44[COMRAM] PTR struct _IO_FILE
  6489 ;;		 -> sprintf@f(6), 
  6490 ;;  d               8   46[COMRAM] long long 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;  n               8    8[BANK0 ] long long 
  6493 ;;  i               2   16[BANK0 ] int 
  6494 ;;  s               2    6[BANK0 ] int 
  6495 ;;  w               2    4[BANK0 ] int 
  6496 ;;  p               2    2[BANK0 ] int 
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  2   44[COMRAM] int 
  6499 ;; Registers used:
  6500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6506 ;;      Params:        10       0       0       0       0       0       0
  6507 ;;      Locals:         0      18       0       0       0       0       0
  6508 ;;      Temps:          8       0       0       0       0       0       0
  6509 ;;      Totals:        18      18       0       0       0       0       0
  6510 ;;Total ram usage:       36 bytes
  6511 ;; Hardware stack levels used: 1
  6512 ;; Hardware stack levels required when called: 8
  6513 ;; This function calls:
  6514 ;;		___aodiv
  6515 ;;		___aomod
  6516 ;;		_abs
  6517 ;;		_pad
  6518 ;; This function is called by:
  6519 ;;		_vfpfcnvrt
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text20
  6524  002B3E                     __ptext20:
  6525                           	callstack 0
  6526  002B3E                     _dtoa:
  6527                           	callstack 16
  6528  002B3E                     
  6529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6530  002B3E  C02F  F068         	movff	dtoa@d,dtoa@n
  6531  002B42  C030  F069         	movff	dtoa@d+1,dtoa@n+1
  6532  002B46  C031  F06A         	movff	dtoa@d+2,dtoa@n+2
  6533  002B4A  C032  F06B         	movff	dtoa@d+3,dtoa@n+3
  6534  002B4E  C033  F06C         	movff	dtoa@d+4,dtoa@n+4
  6535  002B52  C034  F06D         	movff	dtoa@d+5,dtoa@n+5
  6536  002B56  C035  F06E         	movff	dtoa@d+6,dtoa@n+6
  6537  002B5A  C036  F06F         	movff	dtoa@d+7,dtoa@n+7
  6538  002B5E                     
  6539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6540  002B5E  0100               	movlb	0	; () banked
  6541  002B60  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
  6542  002B62  EFB5  F015         	goto	u6131
  6543  002B66  EFB8  F015         	goto	u6130
  6544  002B6A                     u6131:
  6545  002B6A  0E01               	movlw	1
  6546  002B6C  EFB9  F015         	goto	u6140
  6547  002B70                     u6130:
  6548  002B70  0E00               	movlw	0
  6549  002B72                     u6140:
  6550  002B72  6F66               	movwf	dtoa@s& (0+255),b
  6551  002B74  6B67               	clrf	(dtoa@s+1)& (0+255),b
  6552                           
  6553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6554  002B76  5166               	movf	dtoa@s& (0+255),w,b
  6555  002B78  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6556  002B7A  B4D8               	btfsc	status,2,c
  6557  002B7C  EFC2  F015         	goto	u6151
  6558  002B80  EFC4  F015         	goto	u6150
  6559  002B84                     u6151:
  6560  002B84  EFD4  F015         	goto	l9028
  6561  002B88                     u6150:
  6562  002B88                     
  6563                           ; BSR set to: 0
  6564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6565  002B88  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
  6566  002B8A  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
  6567  002B8C  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
  6568  002B8E  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
  6569  002B90  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
  6570  002B92  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
  6571  002B94  1F69               	comf	(dtoa@n+1)& (0+255),f,b
  6572  002B96  6D68               	negf	dtoa@n& (0+255),b
  6573  002B98  0E00               	movlw	0
  6574  002B9A  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
  6575  002B9C  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
  6576  002B9E  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
  6577  002BA0  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
  6578  002BA2  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
  6579  002BA4  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
  6580  002BA6  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
  6581  002BA8                     l9028:
  6582                           
  6583                           ; BSR set to: 0
  6584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6585  002BA8  BE4A               	btfsc	(_prec+1)^0,7,c
  6586  002BAA  EFD9  F015         	goto	u6161
  6587  002BAE  EFDB  F015         	goto	u6160
  6588  002BB2                     u6161:
  6589  002BB2  EFDC  F015         	goto	l9032
  6590  002BB6                     u6160:
  6591  002BB6                     
  6592                           ; BSR set to: 0
  6593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6594  002BB6  924B               	bcf	_flags^0,1,c
  6595  002BB8                     l9032:
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6599  002BB8  BE4A               	btfsc	(_prec+1)^0,7,c
  6600  002BBA  EFE9  F015         	goto	u6170
  6601  002BBE  504A               	movf	(_prec+1)^0,w,c
  6602  002BC0  E106               	bnz	u6171
  6603  002BC2  0449               	decf	_prec^0,w,c
  6604  002BC4  B0D8               	btfsc	status,0,c
  6605  002BC6  EFE7  F015         	goto	u6171
  6606  002BCA  EFE9  F015         	goto	u6170
  6607  002BCE                     u6171:
  6608  002BCE  EFEF  F015         	goto	l1502
  6609  002BD2                     u6170:
  6610  002BD2                     
  6611                           ; BSR set to: 0
  6612  002BD2  0E00               	movlw	0
  6613  002BD4  6F63               	movwf	(dtoa@p+1)& (0+255),b
  6614  002BD6  0E01               	movlw	1
  6615  002BD8  6F62               	movwf	dtoa@p& (0+255),b
  6616  002BDA  EFF3  F015         	goto	l1504
  6617  002BDE                     l1502:
  6618                           
  6619                           ; BSR set to: 0
  6620  002BDE  C049  F062         	movff	_prec,dtoa@p
  6621  002BE2  C04A  F063         	movff	_prec+1,dtoa@p+1
  6622  002BE6                     l1504:
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6626  002BE6  C047  F064         	movff	_width,dtoa@w
  6627  002BEA  C048  F065         	movff	_width+1,dtoa@w+1
  6628  002BEE                     
  6629                           ; BSR set to: 0
  6630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6631  002BEE  5166               	movf	dtoa@s& (0+255),w,b
  6632  002BF0  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6633  002BF2  A4D8               	btfss	status,2,c
  6634  002BF4  EFFE  F015         	goto	u6181
  6635  002BF8  EF00  F016         	goto	u6180
  6636  002BFC                     u6181:
  6637  002BFC  EF07  F016         	goto	l9040
  6638  002C00                     u6180:
  6639  002C00                     
  6640                           ; BSR set to: 0
  6641  002C00  A44B               	btfss	_flags^0,2,c
  6642  002C02  EF05  F016         	goto	u6191
  6643  002C06  EF07  F016         	goto	u6190
  6644  002C0A                     u6191:
  6645  002C0A  EF0A  F016         	goto	l9042
  6646  002C0E                     u6190:
  6647  002C0E                     l9040:
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  6651  002C0E  0764               	decf	dtoa@w& (0+255),f,b
  6652  002C10  A0D8               	btfss	status,0,c
  6653  002C12  0765               	decf	(dtoa@w+1)& (0+255),f,b
  6654  002C14                     l9042:
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6658  002C14  0E00               	movlw	0
  6659  002C16  6F71               	movwf	(dtoa@i+1)& (0+255),b
  6660  002C18  0E1F               	movlw	31
  6661  002C1A  6F70               	movwf	dtoa@i& (0+255),b
  6662  002C1C                     
  6663                           ; BSR set to: 0
  6664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6665  002C1C  0E00               	movlw	0
  6666  002C1E  6FFF               	movwf	(_dbuf+31)& (0+255),b
  6667                           
  6668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6669  002C20  EF8F  F016         	goto	l9056
  6670  002C24                     l9046:
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  6674  002C24  0770               	decf	dtoa@i& (0+255),f,b
  6675  002C26  A0D8               	btfss	status,0,c
  6676  002C28  0771               	decf	(dtoa@i+1)& (0+255),f,b
  6677  002C2A                     
  6678                           ; BSR set to: 0
  6679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6680  002C2A  0EE0               	movlw	low _dbuf
  6681  002C2C  2570               	addwf	dtoa@i& (0+255),w,b
  6682  002C2E  6ED9               	movwf	fsr2l,c
  6683  002C30  0E00               	movlw	high _dbuf
  6684  002C32  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  6685  002C34  6EDA               	movwf	fsr2h,c
  6686  002C36  C068  F012         	movff	dtoa@n,___aomod@dividend
  6687  002C3A  C069  F013         	movff	dtoa@n+1,___aomod@dividend+1
  6688  002C3E  C06A  F014         	movff	dtoa@n+2,___aomod@dividend+2
  6689  002C42  C06B  F015         	movff	dtoa@n+3,___aomod@dividend+3
  6690  002C46  C06C  F016         	movff	dtoa@n+4,___aomod@dividend+4
  6691  002C4A  C06D  F017         	movff	dtoa@n+5,___aomod@dividend+5
  6692  002C4E  C06E  F018         	movff	dtoa@n+6,___aomod@dividend+6
  6693  002C52  C06F  F019         	movff	dtoa@n+7,___aomod@dividend+7
  6694  002C56  0E0A               	movlw	10
  6695  002C58  6E1A               	movwf	___aomod@divisor^0,c
  6696  002C5A  0E00               	movlw	0
  6697  002C5C  6E1B               	movwf	(___aomod@divisor+1)^0,c
  6698  002C5E  0E00               	movlw	0
  6699  002C60  6E1C               	movwf	(___aomod@divisor+2)^0,c
  6700  002C62  0E00               	movlw	0
  6701  002C64  6E1D               	movwf	(___aomod@divisor+3)^0,c
  6702  002C66  0E00               	movlw	0
  6703  002C68  6E1E               	movwf	(___aomod@divisor+4)^0,c
  6704  002C6A  0E00               	movlw	0
  6705  002C6C  6E1F               	movwf	(___aomod@divisor+5)^0,c
  6706  002C6E  0E00               	movlw	0
  6707  002C70  6E20               	movwf	(___aomod@divisor+6)^0,c
  6708  002C72  0E00               	movlw	0
  6709  002C74  6E21               	movwf	(___aomod@divisor+7)^0,c
  6710  002C76  EC0B  F01F         	call	___aomod	;wreg free
  6711  002C7A  C012  F037         	movff	?___aomod,??_dtoa
  6712  002C7E  C013  F038         	movff	?___aomod+1,??_dtoa+1
  6713  002C82  C014  F039         	movff	?___aomod+2,??_dtoa+2
  6714  002C86  C015  F03A         	movff	?___aomod+3,??_dtoa+3
  6715  002C8A  C016  F03B         	movff	?___aomod+4,??_dtoa+4
  6716  002C8E  C017  F03C         	movff	?___aomod+5,??_dtoa+5
  6717  002C92  C018  F03D         	movff	?___aomod+6,??_dtoa+6
  6718  002C96  C019  F03E         	movff	?___aomod+7,??_dtoa+7
  6719  002C9A  C037  F024         	movff	??_dtoa,abs@a
  6720  002C9E  C039  F025         	movff	??_dtoa+2,abs@a+1
  6721  002CA2  EC76  F02E         	call	_abs	;wreg free
  6722  002CA6  5024               	movf	?_abs^0,w,c
  6723  002CA8  0F30               	addlw	48
  6724  002CAA  6EDF               	movwf	indf2,c
  6725  002CAC                     
  6726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  6727  002CAC  0100               	movlb	0	; () banked
  6728  002CAE  0762               	decf	dtoa@p& (0+255),f,b
  6729  002CB0  A0D8               	btfss	status,0,c
  6730  002CB2  0763               	decf	(dtoa@p+1)& (0+255),f,b
  6731  002CB4                     
  6732                           ; BSR set to: 0
  6733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  6734  002CB4  0764               	decf	dtoa@w& (0+255),f,b
  6735  002CB6  A0D8               	btfss	status,0,c
  6736  002CB8  0765               	decf	(dtoa@w+1)& (0+255),f,b
  6737  002CBA                     
  6738                           ; BSR set to: 0
  6739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6740  002CBA  C068  F012         	movff	dtoa@n,___aodiv@dividend
  6741  002CBE  C069  F013         	movff	dtoa@n+1,___aodiv@dividend+1
  6742  002CC2  C06A  F014         	movff	dtoa@n+2,___aodiv@dividend+2
  6743  002CC6  C06B  F015         	movff	dtoa@n+3,___aodiv@dividend+3
  6744  002CCA  C06C  F016         	movff	dtoa@n+4,___aodiv@dividend+4
  6745  002CCE  C06D  F017         	movff	dtoa@n+5,___aodiv@dividend+5
  6746  002CD2  C06E  F018         	movff	dtoa@n+6,___aodiv@dividend+6
  6747  002CD6  C06F  F019         	movff	dtoa@n+7,___aodiv@dividend+7
  6748  002CDA  0E0A               	movlw	10
  6749  002CDC  6E1A               	movwf	___aodiv@divisor^0,c
  6750  002CDE  0E00               	movlw	0
  6751  002CE0  6E1B               	movwf	(___aodiv@divisor+1)^0,c
  6752  002CE2  0E00               	movlw	0
  6753  002CE4  6E1C               	movwf	(___aodiv@divisor+2)^0,c
  6754  002CE6  0E00               	movlw	0
  6755  002CE8  6E1D               	movwf	(___aodiv@divisor+3)^0,c
  6756  002CEA  0E00               	movlw	0
  6757  002CEC  6E1E               	movwf	(___aodiv@divisor+4)^0,c
  6758  002CEE  0E00               	movlw	0
  6759  002CF0  6E1F               	movwf	(___aodiv@divisor+5)^0,c
  6760  002CF2  0E00               	movlw	0
  6761  002CF4  6E20               	movwf	(___aodiv@divisor+6)^0,c
  6762  002CF6  0E00               	movlw	0
  6763  002CF8  6E21               	movwf	(___aodiv@divisor+7)^0,c
  6764  002CFA  EC47  F01E         	call	___aodiv	;wreg free
  6765  002CFE  C012  F068         	movff	?___aodiv,dtoa@n
  6766  002D02  C013  F069         	movff	?___aodiv+1,dtoa@n+1
  6767  002D06  C014  F06A         	movff	?___aodiv+2,dtoa@n+2
  6768  002D0A  C015  F06B         	movff	?___aodiv+3,dtoa@n+3
  6769  002D0E  C016  F06C         	movff	?___aodiv+4,dtoa@n+4
  6770  002D12  C017  F06D         	movff	?___aodiv+5,dtoa@n+5
  6771  002D16  C018  F06E         	movff	?___aodiv+6,dtoa@n+6
  6772  002D1A  C019  F06F         	movff	?___aodiv+7,dtoa@n+7
  6773  002D1E                     l9056:
  6774                           
  6775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6776  002D1E  0100               	movlb	0	; () banked
  6777  002D20  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
  6778  002D22  EF9B  F016         	goto	u6201
  6779  002D26  5171               	movf	(dtoa@i+1)& (0+255),w,b
  6780  002D28  E108               	bnz	u6200
  6781  002D2A  0570               	decf	dtoa@i& (0+255),w,b
  6782  002D2C  A0D8               	btfss	status,0,c
  6783  002D2E  EF9B  F016         	goto	u6201
  6784  002D32  EF9D  F016         	goto	u6200
  6785  002D36                     u6201:
  6786  002D36  EFCD  F016         	goto	l9066
  6787  002D3A                     u6200:
  6788  002D3A                     
  6789                           ; BSR set to: 0
  6790  002D3A  5168               	movf	dtoa@n& (0+255),w,b
  6791  002D3C  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
  6792  002D3E  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
  6793  002D40  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
  6794  002D42  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
  6795  002D44  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
  6796  002D46  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
  6797  002D48  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
  6798  002D4A  A4D8               	btfss	status,2,c
  6799  002D4C  EFAA  F016         	goto	u6211
  6800  002D50  EFAC  F016         	goto	u6210
  6801  002D54                     u6211:
  6802  002D54  EF12  F016         	goto	l9046
  6803  002D58                     u6210:
  6804  002D58                     
  6805                           ; BSR set to: 0
  6806  002D58  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  6807  002D5A  EFB9  F016         	goto	u6220
  6808  002D5E  5163               	movf	(dtoa@p+1)& (0+255),w,b
  6809  002D60  E106               	bnz	u6221
  6810  002D62  0562               	decf	dtoa@p& (0+255),w,b
  6811  002D64  B0D8               	btfsc	status,0,c
  6812  002D66  EFB7  F016         	goto	u6221
  6813  002D6A  EFB9  F016         	goto	u6220
  6814  002D6E                     u6221:
  6815  002D6E  EF12  F016         	goto	l9046
  6816  002D72                     u6220:
  6817  002D72                     
  6818                           ; BSR set to: 0
  6819  002D72  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
  6820  002D74  EFC4  F016         	goto	u6231
  6821  002D78  5165               	movf	(dtoa@w+1)& (0+255),w,b
  6822  002D7A  E108               	bnz	u6230
  6823  002D7C  0564               	decf	dtoa@w& (0+255),w,b
  6824  002D7E  A0D8               	btfss	status,0,c
  6825  002D80  EFC4  F016         	goto	u6231
  6826  002D84  EFC6  F016         	goto	u6230
  6827  002D88                     u6231:
  6828  002D88  EFCD  F016         	goto	l9066
  6829  002D8C                     u6230:
  6830  002D8C                     
  6831                           ; BSR set to: 0
  6832  002D8C  B24B               	btfsc	_flags^0,1,c
  6833  002D8E  EFCB  F016         	goto	u6241
  6834  002D92  EFCD  F016         	goto	u6240
  6835  002D96                     u6241:
  6836  002D96  EF12  F016         	goto	l9046
  6837  002D9A                     u6240:
  6838  002D9A                     l9066:
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6842  002D9A  5166               	movf	dtoa@s& (0+255),w,b
  6843  002D9C  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6844  002D9E  A4D8               	btfss	status,2,c
  6845  002DA0  EFD4  F016         	goto	u6251
  6846  002DA4  EFD6  F016         	goto	u6250
  6847  002DA8                     u6251:
  6848  002DA8  EFDD  F016         	goto	l9070
  6849  002DAC                     u6250:
  6850  002DAC                     
  6851                           ; BSR set to: 0
  6852  002DAC  A44B               	btfss	_flags^0,2,c
  6853  002DAE  EFDB  F016         	goto	u6261
  6854  002DB2  EFDD  F016         	goto	u6260
  6855  002DB6                     u6261:
  6856  002DB6  EFFB  F016         	goto	l9080
  6857  002DBA                     u6260:
  6858  002DBA                     l9070:
  6859                           
  6860                           ; BSR set to: 0
  6861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  6862  002DBA  0770               	decf	dtoa@i& (0+255),f,b
  6863  002DBC  A0D8               	btfss	status,0,c
  6864  002DBE  0771               	decf	(dtoa@i+1)& (0+255),f,b
  6865  002DC0                     
  6866                           ; BSR set to: 0
  6867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6868  002DC0  5166               	movf	dtoa@s& (0+255),w,b
  6869  002DC2  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6870  002DC4  A4D8               	btfss	status,2,c
  6871  002DC6  EFE7  F016         	goto	u6271
  6872  002DCA  EFE9  F016         	goto	u6270
  6873  002DCE                     u6271:
  6874  002DCE  EFEF  F016         	goto	l9076
  6875  002DD2                     u6270:
  6876  002DD2                     
  6877                           ; BSR set to: 0
  6878  002DD2  0E00               	movlw	0
  6879  002DD4  6F61               	movwf	(_dtoa$4330+1)& (0+255),b
  6880  002DD6  0E2B               	movlw	43
  6881  002DD8  6F60               	movwf	_dtoa$4330& (0+255),b
  6882  002DDA  EFF3  F016         	goto	l9078
  6883  002DDE                     l9076:
  6884                           
  6885                           ; BSR set to: 0
  6886  002DDE  0E00               	movlw	0
  6887  002DE0  6F61               	movwf	(_dtoa$4330+1)& (0+255),b
  6888  002DE2  0E2D               	movlw	45
  6889  002DE4  6F60               	movwf	_dtoa$4330& (0+255),b
  6890  002DE6                     l9078:
  6891                           
  6892                           ; BSR set to: 0
  6893  002DE6  0EE0               	movlw	low _dbuf
  6894  002DE8  2570               	addwf	dtoa@i& (0+255),w,b
  6895  002DEA  6ED9               	movwf	fsr2l,c
  6896  002DEC  0E00               	movlw	high _dbuf
  6897  002DEE  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  6898  002DF0  6EDA               	movwf	fsr2h,c
  6899  002DF2  C060  FFDF         	movff	_dtoa$4330,indf2
  6900  002DF6                     l9080:
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6904  002DF6  C02D  F022         	movff	dtoa@fp,pad@fp
  6905  002DFA  C02E  F023         	movff	dtoa@fp+1,pad@fp+1
  6906  002DFE  0EE0               	movlw	low _dbuf
  6907  002E00  2570               	addwf	dtoa@i& (0+255),w,b
  6908  002E02  6E24               	movwf	pad@buf^0,c
  6909  002E04  0E00               	movlw	high _dbuf
  6910  002E06  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  6911  002E08  6E25               	movwf	(pad@buf+1)^0,c
  6912  002E0A  C064  F026         	movff	dtoa@w,pad@p
  6913  002E0E  C065  F027         	movff	dtoa@w+1,pad@p+1
  6914  002E12  ECA2  F026         	call	_pad	;wreg free
  6915  002E16  C022  F02D         	movff	?_pad,?_dtoa
  6916  002E1A  C023  F02E         	movff	?_pad+1,?_dtoa+1
  6917  002E1E  0012               	return		;funcret
  6918  002E20                     __end_of_dtoa:
  6919                           	callstack 0
  6920                           
  6921 ;; *************** function _pad *****************
  6922 ;; Defined at:
  6923 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  6926 ;;		 -> sprintf@f(6), 
  6927 ;;  buf             2   35[COMRAM] PTR unsigned char 
  6928 ;;		 -> dbuf(32), 
  6929 ;;  p               2   37[COMRAM] int 
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;  w               2   42[COMRAM] int 
  6932 ;;  i               2   40[COMRAM] int 
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  2   33[COMRAM] int 
  6935 ;; Registers used:
  6936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6942 ;;      Params:         6       0       0       0       0       0       0
  6943 ;;      Locals:         4       0       0       0       0       0       0
  6944 ;;      Temps:          1       0       0       0       0       0       0
  6945 ;;      Totals:        11       0       0       0       0       0       0
  6946 ;;Total ram usage:       11 bytes
  6947 ;; Hardware stack levels used: 1
  6948 ;; Hardware stack levels required when called: 7
  6949 ;; This function calls:
  6950 ;;		_fputc
  6951 ;;		_fputs
  6952 ;;		_strlen
  6953 ;; This function is called by:
  6954 ;;		_dtoa
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           	psect	text21
  6959  004D44                     __ptext21:
  6960                           	callstack 0
  6961  004D44                     _pad:
  6962                           	callstack 16
  6963  004D44                     
  6964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6965  004D44  A04B               	btfss	_flags^0,0,c
  6966  004D46  EFA7  F026         	goto	u5791
  6967  004D4A  EFA9  F026         	goto	u5790
  6968  004D4E                     u5791:
  6969  004D4E  EFB3  F026         	goto	l8458
  6970  004D52                     u5790:
  6971  004D52                     
  6972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6973  004D52  C024  F01B         	movff	pad@buf,fputs@s
  6974  004D56  C025  F01C         	movff	pad@buf+1,fputs@s+1
  6975  004D5A  C022  F01D         	movff	pad@fp,fputs@fp
  6976  004D5E  C023  F01E         	movff	pad@fp+1,fputs@fp+1
  6977  004D62  EC32  F02E         	call	_fputs	;wreg free
  6978  004D66                     l8458:
  6979                           
  6980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6981  004D66  BE27               	btfsc	(pad@p+1)^0,7,c
  6982  004D68  EFB8  F026         	goto	u5801
  6983  004D6C  EFBA  F026         	goto	u5800
  6984  004D70                     u5801:
  6985  004D70  EFC0  F026         	goto	l8462
  6986  004D74                     u5800:
  6987  004D74  C026  F02B         	movff	pad@p,pad@w
  6988  004D78  C027  F02C         	movff	pad@p+1,pad@w+1
  6989  004D7C  EFC4  F026         	goto	l1491
  6990  004D80                     l8462:
  6991  004D80  0E00               	movlw	0
  6992  004D82  6E2C               	movwf	(pad@w+1)^0,c
  6993  004D84  0E00               	movlw	0
  6994  004D86  6E2B               	movwf	pad@w^0,c
  6995  004D88                     l1491:
  6996                           
  6997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6998  004D88  0E00               	movlw	0
  6999  004D8A  6E2A               	movwf	(pad@i+1)^0,c
  7000  004D8C  0E00               	movlw	0
  7001  004D8E  6E29               	movwf	pad@i^0,c
  7002                           
  7003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7004  004D90  EFD6  F026         	goto	l8468
  7005  004D94                     l8464:
  7006                           
  7007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7008  004D94  0E00               	movlw	0
  7009  004D96  6E13               	movwf	(fputc@c+1)^0,c
  7010  004D98  0E20               	movlw	32
  7011  004D9A  6E12               	movwf	fputc@c^0,c
  7012  004D9C  C022  F014         	movff	pad@fp,fputc@fp
  7013  004DA0  C023  F015         	movff	pad@fp+1,fputc@fp+1
  7014  004DA4  EC76  F025         	call	_fputc	;wreg free
  7015  004DA8                     
  7016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7017  004DA8  4A29               	infsnz	pad@i^0,f,c
  7018  004DAA  2A2A               	incf	(pad@i+1)^0,f,c
  7019  004DAC                     l8468:
  7020                           
  7021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7022  004DAC  502B               	movf	pad@w^0,w,c
  7023  004DAE  5C29               	subwf	pad@i^0,w,c
  7024  004DB0  502A               	movf	(pad@i+1)^0,w,c
  7025  004DB2  0A80               	xorlw	128
  7026  004DB4  6E28               	movwf	??_pad^0,c
  7027  004DB6  502C               	movf	(pad@w+1)^0,w,c
  7028  004DB8  0A80               	xorlw	128
  7029  004DBA  5828               	subwfb	??_pad^0,w,c
  7030  004DBC  A0D8               	btfss	status,0,c
  7031  004DBE  EFE3  F026         	goto	u5811
  7032  004DC2  EFE5  F026         	goto	u5810
  7033  004DC6                     u5811:
  7034  004DC6  EFCA  F026         	goto	l8464
  7035  004DCA                     u5810:
  7036  004DCA                     
  7037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7038  004DCA  B04B               	btfsc	_flags^0,0,c
  7039  004DCC  EFEA  F026         	goto	u5821
  7040  004DD0  EFEC  F026         	goto	u5820
  7041  004DD4                     u5821:
  7042  004DD4  EFF6  F026         	goto	l8472
  7043  004DD8                     u5820:
  7044  004DD8                     
  7045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7046  004DD8  C024  F01B         	movff	pad@buf,fputs@s
  7047  004DDC  C025  F01C         	movff	pad@buf+1,fputs@s+1
  7048  004DE0  C022  F01D         	movff	pad@fp,fputs@fp
  7049  004DE4  C023  F01E         	movff	pad@fp+1,fputs@fp+1
  7050  004DE8  EC32  F02E         	call	_fputs	;wreg free
  7051  004DEC                     l8472:
  7052                           
  7053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7054  004DEC  C024  F012         	movff	pad@buf,strlen@s
  7055  004DF0  C025  F013         	movff	pad@buf+1,strlen@s+1
  7056  004DF4  EC0B  F02E         	call	_strlen	;wreg free
  7057  004DF8  502B               	movf	pad@w^0,w,c
  7058  004DFA  2412               	addwf	?_strlen^0,w,c
  7059  004DFC  6E22               	movwf	?_pad^0,c
  7060  004DFE  502C               	movf	(pad@w+1)^0,w,c
  7061  004E00  2013               	addwfc	(?_strlen+1)^0,w,c
  7062  004E02  6E23               	movwf	(?_pad+1)^0,c
  7063  004E04  0012               	return		;funcret
  7064  004E06                     __end_of_pad:
  7065                           	callstack 0
  7066                           
  7067 ;; *************** function _fputs *****************
  7068 ;; Defined at:
  7069 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  s               2   26[COMRAM] PTR const unsigned char 
  7072 ;;		 -> dbuf(32), 
  7073 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  7074 ;;		 -> sprintf@f(6), 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  i               2   31[COMRAM] int 
  7077 ;;  c               1   30[COMRAM] unsigned char 
  7078 ;; Return value:  Size  Location     Type
  7079 ;;                  2   26[COMRAM] int 
  7080 ;; Registers used:
  7081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7082 ;; Tracked objects:
  7083 ;;		On entry : 0/0
  7084 ;;		On exit  : 0/0
  7085 ;;		Unchanged: 0/0
  7086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7087 ;;      Params:         4       0       0       0       0       0       0
  7088 ;;      Locals:         3       0       0       0       0       0       0
  7089 ;;      Temps:          0       0       0       0       0       0       0
  7090 ;;      Totals:         7       0       0       0       0       0       0
  7091 ;;Total ram usage:        7 bytes
  7092 ;; Hardware stack levels used: 1
  7093 ;; Hardware stack levels required when called: 6
  7094 ;; This function calls:
  7095 ;;		_fputc
  7096 ;; This function is called by:
  7097 ;;		_pad
  7098 ;; This function uses a non-reentrant model
  7099 ;;
  7100                           
  7101                           	psect	text22
  7102  005C64                     __ptext22:
  7103                           	callstack 0
  7104  005C64                     _fputs:
  7105                           	callstack 16
  7106  005C64  0E00               	movlw	0
  7107  005C66  6E21               	movwf	(fputs@i+1)^0,c
  7108  005C68  0E00               	movlw	0
  7109  005C6A  6E20               	movwf	fputs@i^0,c
  7110  005C6C  EF43  F02E         	goto	l7856
  7111  005C70                     l7852:
  7112  005C70  C01F  F012         	movff	fputs@c,fputc@c
  7113  005C74  6A13               	clrf	(fputc@c+1)^0,c
  7114  005C76  C01D  F014         	movff	fputs@fp,fputc@fp
  7115  005C7A  C01E  F015         	movff	fputs@fp+1,fputc@fp+1
  7116  005C7E  EC76  F025         	call	_fputc	;wreg free
  7117  005C82  4A20               	infsnz	fputs@i^0,f,c
  7118  005C84  2A21               	incf	(fputs@i+1)^0,f,c
  7119  005C86                     l7856:
  7120  005C86  5020               	movf	fputs@i^0,w,c
  7121  005C88  241B               	addwf	fputs@s^0,w,c
  7122  005C8A  6ED9               	movwf	fsr2l,c
  7123  005C8C  5021               	movf	(fputs@i+1)^0,w,c
  7124  005C8E  201C               	addwfc	(fputs@s+1)^0,w,c
  7125  005C90  6EDA               	movwf	fsr2h,c
  7126  005C92  50DF               	movf	indf2,w,c
  7127  005C94  6E1F               	movwf	fputs@c^0,c
  7128  005C96  501F               	movf	fputs@c^0,w,c
  7129  005C98  A4D8               	btfss	status,2,c
  7130  005C9A  EF51  F02E         	goto	u5401
  7131  005C9E  EF53  F02E         	goto	u5400
  7132  005CA2                     u5401:
  7133  005CA2  EF38  F02E         	goto	l7852
  7134  005CA6                     u5400:
  7135  005CA6  0012               	return		;funcret
  7136  005CA8                     __end_of_fputs:
  7137                           	callstack 0
  7138                           
  7139 ;; *************** function _fputc *****************
  7140 ;; Defined at:
  7141 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  c               2   17[COMRAM] int 
  7144 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  7145 ;;		 -> sprintf@f(6), 
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;		None
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  2   17[COMRAM] int 
  7150 ;; Registers used:
  7151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7157 ;;      Params:         4       0       0       0       0       0       0
  7158 ;;      Locals:         0       0       0       0       0       0       0
  7159 ;;      Temps:          5       0       0       0       0       0       0
  7160 ;;      Totals:         9       0       0       0       0       0       0
  7161 ;;Total ram usage:        9 bytes
  7162 ;; Hardware stack levels used: 1
  7163 ;; Hardware stack levels required when called: 5
  7164 ;; This function calls:
  7165 ;;		_putch
  7166 ;; This function is called by:
  7167 ;;		_pad
  7168 ;;		_vfpfcnvrt
  7169 ;;		_fputs
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           	psect	text23
  7174  004AEC                     __ptext23:
  7175                           	callstack 0
  7176  004AEC                     _fputc:
  7177                           	callstack 19
  7178  004AEC  5014               	movf	fputc@fp^0,w,c
  7179  004AEE  1015               	iorwf	(fputc@fp+1)^0,w,c
  7180  004AF0  B4D8               	btfsc	status,2,c
  7181  004AF2  EF7D  F025         	goto	u5341
  7182  004AF6  EF7F  F025         	goto	u5340
  7183  004AFA                     u5341:
  7184  004AFA  EF88  F025         	goto	l7830
  7185  004AFE                     u5340:
  7186  004AFE  5014               	movf	fputc@fp^0,w,c
  7187  004B00  1015               	iorwf	(fputc@fp+1)^0,w,c
  7188  004B02  A4D8               	btfss	status,2,c
  7189  004B04  EF86  F025         	goto	u5351
  7190  004B08  EF88  F025         	goto	u5350
  7191  004B0C                     u5351:
  7192  004B0C  EF8D  F025         	goto	l7832
  7193  004B10                     u5350:
  7194  004B10                     l7830:
  7195  004B10  5012               	movf	fputc@c^0,w,c
  7196  004B12  ECB7  F02F         	call	_putch
  7197  004B16  EFDA  F025         	goto	l1555
  7198  004B1A                     l7832:
  7199  004B1A  EE20 F004          	lfsr	2,4
  7200  004B1E  5014               	movf	fputc@fp^0,w,c
  7201  004B20  26D9               	addwf	fsr2l,f,c
  7202  004B22  5015               	movf	(fputc@fp+1)^0,w,c
  7203  004B24  22DA               	addwfc	fsr2h,f,c
  7204  004B26  50DE               	movf	postinc2,w,c
  7205  004B28  10DE               	iorwf	postinc2,w,c
  7206  004B2A  B4D8               	btfsc	status,2,c
  7207  004B2C  EF9A  F025         	goto	u5361
  7208  004B30  EF9C  F025         	goto	u5360
  7209  004B34                     u5361:
  7210  004B34  EFB7  F025         	goto	l7836
  7211  004B38                     u5360:
  7212  004B38  EE20 F004          	lfsr	2,4
  7213  004B3C  5014               	movf	fputc@fp^0,w,c
  7214  004B3E  26D9               	addwf	fsr2l,f,c
  7215  004B40  5015               	movf	(fputc@fp+1)^0,w,c
  7216  004B42  22DA               	addwfc	fsr2h,f,c
  7217  004B44  EE10 F002          	lfsr	1,2
  7218  004B48  5014               	movf	fputc@fp^0,w,c
  7219  004B4A  26E1               	addwf	fsr1l,f,c
  7220  004B4C  5015               	movf	(fputc@fp+1)^0,w,c
  7221  004B4E  22E2               	addwfc	fsr1h,f,c
  7222  004B50  50DE               	movf	postinc2,w,c
  7223  004B52  5CE6               	subwf	postinc1,w,c
  7224  004B54  50E6               	movf	postinc1,w,c
  7225  004B56  0A80               	xorlw	128
  7226  004B58  6E1A               	movwf	(??_fputc+4)^0,c
  7227  004B5A  50DE               	movf	postinc2,w,c
  7228  004B5C  0A80               	xorlw	128
  7229  004B5E  581A               	subwfb	(??_fputc+4)^0,w,c
  7230  004B60  B0D8               	btfsc	status,0,c
  7231  004B62  EFB5  F025         	goto	u5371
  7232  004B66  EFB7  F025         	goto	u5370
  7233  004B6A                     u5371:
  7234  004B6A  EFDA  F025         	goto	l1555
  7235  004B6E                     u5370:
  7236  004B6E                     l7836:
  7237  004B6E  EE20 F002          	lfsr	2,2
  7238  004B72  5014               	movf	fputc@fp^0,w,c
  7239  004B74  26D9               	addwf	fsr2l,f,c
  7240  004B76  5015               	movf	(fputc@fp+1)^0,w,c
  7241  004B78  22DA               	addwfc	fsr2h,f,c
  7242  004B7A  CFDE F016          	movff	postinc2,??_fputc
  7243  004B7E  CFDD F017          	movff	postdec2,??_fputc+1
  7244  004B82  C014  FFD9         	movff	fputc@fp,fsr2l
  7245  004B86  C015  FFDA         	movff	fputc@fp+1,fsr2h
  7246  004B8A  CFDE F018          	movff	postinc2,??_fputc+2
  7247  004B8E  CFDD F019          	movff	postdec2,??_fputc+3
  7248  004B92  5016               	movf	??_fputc^0,w,c
  7249  004B94  2418               	addwf	(??_fputc+2)^0,w,c
  7250  004B96  6ED9               	movwf	fsr2l,c
  7251  004B98  5017               	movf	(??_fputc+1)^0,w,c
  7252  004B9A  2019               	addwfc	(??_fputc+3)^0,w,c
  7253  004B9C  6EDA               	movwf	fsr2h,c
  7254  004B9E  C012  FFDF         	movff	fputc@c,indf2
  7255  004BA2  EE20 F002          	lfsr	2,2
  7256  004BA6  5014               	movf	fputc@fp^0,w,c
  7257  004BA8  26D9               	addwf	fsr2l,f,c
  7258  004BAA  5015               	movf	(fputc@fp+1)^0,w,c
  7259  004BAC  22DA               	addwfc	fsr2h,f,c
  7260  004BAE  2ADE               	incf	postinc2,f,c
  7261  004BB0  0E00               	movlw	0
  7262  004BB2  22DD               	addwfc	postdec2,f,c
  7263  004BB4                     l1555:
  7264  004BB4  0012               	return		;funcret
  7265  004BB6                     __end_of_fputc:
  7266                           	callstack 0
  7267                           
  7268 ;; *************** function _putch *****************
  7269 ;; Defined at:
  7270 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;  c               1    wreg     unsigned char 
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;  c               1    0[COMRAM] unsigned char 
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      void 
  7277 ;; Registers used:
  7278 ;;		wreg
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7284 ;;      Params:         0       0       0       0       0       0       0
  7285 ;;      Locals:         0       0       0       0       0       0       0
  7286 ;;      Temps:          0       0       0       0       0       0       0
  7287 ;;      Totals:         0       0       0       0       0       0       0
  7288 ;;Total ram usage:        0 bytes
  7289 ;; Hardware stack levels used: 1
  7290 ;; Hardware stack levels required when called: 4
  7291 ;; This function calls:
  7292 ;;		Nothing
  7293 ;; This function is called by:
  7294 ;;		_fputc
  7295 ;; This function uses a non-reentrant model
  7296 ;;
  7297                           
  7298                           	psect	text24
  7299  005F6E                     __ptext24:
  7300                           	callstack 0
  7301  005F6E                     _putch:
  7302                           	callstack 19
  7303  005F6E  0012               	return		;funcret
  7304  005F70                     __end_of_putch:
  7305                           	callstack 0
  7306                           
  7307 ;; *************** function _abs *****************
  7308 ;; Defined at:
  7309 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  a               2   35[COMRAM] int 
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;		None
  7314 ;; Return value:  Size  Location     Type
  7315 ;;                  2   35[COMRAM] int 
  7316 ;; Registers used:
  7317 ;;		wreg, status,2, status,0
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/0
  7320 ;;		On exit  : 0/0
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7323 ;;      Params:         2       0       0       0       0       0       0
  7324 ;;      Locals:         0       0       0       0       0       0       0
  7325 ;;      Temps:          2       0       0       0       0       0       0
  7326 ;;      Totals:         4       0       0       0       0       0       0
  7327 ;;Total ram usage:        4 bytes
  7328 ;; Hardware stack levels used: 1
  7329 ;; Hardware stack levels required when called: 4
  7330 ;; This function calls:
  7331 ;;		Nothing
  7332 ;; This function is called by:
  7333 ;;		_dtoa
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           	psect	text25
  7338  005CEC                     __ptext25:
  7339                           	callstack 0
  7340  005CEC                     _abs:
  7341                           	callstack 19
  7342  005CEC  BE25               	btfsc	(abs@a+1)^0,7,c
  7343  005CEE  EF83  F02E         	goto	u5830
  7344  005CF2  5025               	movf	(abs@a+1)^0,w,c
  7345  005CF4  E106               	bnz	u5831
  7346  005CF6  0424               	decf	abs@a^0,w,c
  7347  005CF8  B0D8               	btfsc	status,0,c
  7348  005CFA  EF81  F02E         	goto	u5831
  7349  005CFE  EF83  F02E         	goto	u5830
  7350  005D02                     u5831:
  7351  005D02  EF91  F02E         	goto	l1540
  7352  005D06                     u5830:
  7353  005D06  C024  F026         	movff	abs@a,??_abs
  7354  005D0A  C025  F027         	movff	abs@a+1,??_abs+1
  7355  005D0E  1E26               	comf	??_abs^0,f,c
  7356  005D10  1E27               	comf	(??_abs+1)^0,f,c
  7357  005D12  4A26               	infsnz	??_abs^0,f,c
  7358  005D14  2A27               	incf	(??_abs+1)^0,f,c
  7359  005D16  C026  F024         	movff	??_abs,?_abs
  7360  005D1A  C027  F025         	movff	??_abs+1,?_abs+1
  7361  005D1E  EF95  F02E         	goto	l1543
  7362  005D22                     l1540:
  7363  005D22  C024  F024         	movff	abs@a,?_abs
  7364  005D26  C025  F025         	movff	abs@a+1,?_abs+1
  7365  005D2A                     l1543:
  7366  005D2A  0012               	return		;funcret
  7367  005D2C                     __end_of_abs:
  7368                           	callstack 0
  7369                           
  7370 ;; *************** function ___aomod *****************
  7371 ;; Defined at:
  7372 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;  dividend        8   17[COMRAM] long long 
  7375 ;;  divisor         8   25[COMRAM] long long 
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;  sign            1   34[COMRAM] unsigned char 
  7378 ;;  counter         1   33[COMRAM] unsigned char 
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  8   17[COMRAM] long long 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2, status,0
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7388 ;;      Params:        16       0       0       0       0       0       0
  7389 ;;      Locals:         2       0       0       0       0       0       0
  7390 ;;      Temps:          0       0       0       0       0       0       0
  7391 ;;      Totals:        18       0       0       0       0       0       0
  7392 ;;Total ram usage:       18 bytes
  7393 ;; Hardware stack levels used: 1
  7394 ;; Hardware stack levels required when called: 4
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		_dtoa
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text26
  7403  003E16                     __ptext26:
  7404                           	callstack 0
  7405  003E16                     ___aomod:
  7406                           	callstack 19
  7407  003E16  0E00               	movlw	0
  7408  003E18  6E23               	movwf	___aomod@sign^0,c
  7409  003E1A  BE19               	btfsc	(___aomod@dividend+7)^0,7,c
  7410  003E1C  EF14  F01F         	goto	u5610
  7411  003E20  EF12  F01F         	goto	u5611
  7412  003E24                     u5611:
  7413  003E24  EF26  F01F         	goto	l8344
  7414  003E28                     u5610:
  7415  003E28  1E19               	comf	(___aomod@dividend+7)^0,f,c
  7416  003E2A  1E18               	comf	(___aomod@dividend+6)^0,f,c
  7417  003E2C  1E17               	comf	(___aomod@dividend+5)^0,f,c
  7418  003E2E  1E16               	comf	(___aomod@dividend+4)^0,f,c
  7419  003E30  1E15               	comf	(___aomod@dividend+3)^0,f,c
  7420  003E32  1E14               	comf	(___aomod@dividend+2)^0,f,c
  7421  003E34  1E13               	comf	(___aomod@dividend+1)^0,f,c
  7422  003E36  6C12               	negf	___aomod@dividend^0,c
  7423  003E38  0E00               	movlw	0
  7424  003E3A  2213               	addwfc	(___aomod@dividend+1)^0,f,c
  7425  003E3C  2214               	addwfc	(___aomod@dividend+2)^0,f,c
  7426  003E3E  2215               	addwfc	(___aomod@dividend+3)^0,f,c
  7427  003E40  2216               	addwfc	(___aomod@dividend+4)^0,f,c
  7428  003E42  2217               	addwfc	(___aomod@dividend+5)^0,f,c
  7429  003E44  2218               	addwfc	(___aomod@dividend+6)^0,f,c
  7430  003E46  2219               	addwfc	(___aomod@dividend+7)^0,f,c
  7431  003E48  0E01               	movlw	1
  7432  003E4A  6E23               	movwf	___aomod@sign^0,c
  7433  003E4C                     l8344:
  7434  003E4C  BE21               	btfsc	(___aomod@divisor+7)^0,7,c
  7435  003E4E  EF2D  F01F         	goto	u5620
  7436  003E52  EF2B  F01F         	goto	u5621
  7437  003E56                     u5621:
  7438  003E56  EF3D  F01F         	goto	l8348
  7439  003E5A                     u5620:
  7440  003E5A  1E21               	comf	(___aomod@divisor+7)^0,f,c
  7441  003E5C  1E20               	comf	(___aomod@divisor+6)^0,f,c
  7442  003E5E  1E1F               	comf	(___aomod@divisor+5)^0,f,c
  7443  003E60  1E1E               	comf	(___aomod@divisor+4)^0,f,c
  7444  003E62  1E1D               	comf	(___aomod@divisor+3)^0,f,c
  7445  003E64  1E1C               	comf	(___aomod@divisor+2)^0,f,c
  7446  003E66  1E1B               	comf	(___aomod@divisor+1)^0,f,c
  7447  003E68  6C1A               	negf	___aomod@divisor^0,c
  7448  003E6A  0E00               	movlw	0
  7449  003E6C  221B               	addwfc	(___aomod@divisor+1)^0,f,c
  7450  003E6E  221C               	addwfc	(___aomod@divisor+2)^0,f,c
  7451  003E70  221D               	addwfc	(___aomod@divisor+3)^0,f,c
  7452  003E72  221E               	addwfc	(___aomod@divisor+4)^0,f,c
  7453  003E74  221F               	addwfc	(___aomod@divisor+5)^0,f,c
  7454  003E76  2220               	addwfc	(___aomod@divisor+6)^0,f,c
  7455  003E78  2221               	addwfc	(___aomod@divisor+7)^0,f,c
  7456  003E7A                     l8348:
  7457  003E7A  501A               	movf	___aomod@divisor^0,w,c
  7458  003E7C  101B               	iorwf	(___aomod@divisor+1)^0,w,c
  7459  003E7E  101C               	iorwf	(___aomod@divisor+2)^0,w,c
  7460  003E80  101D               	iorwf	(___aomod@divisor+3)^0,w,c
  7461  003E82  101E               	iorwf	(___aomod@divisor+4)^0,w,c
  7462  003E84  101F               	iorwf	(___aomod@divisor+5)^0,w,c
  7463  003E86  1020               	iorwf	(___aomod@divisor+6)^0,w,c
  7464  003E88  1021               	iorwf	(___aomod@divisor+7)^0,w,c
  7465  003E8A  B4D8               	btfsc	status,2,c
  7466  003E8C  EF4A  F01F         	goto	u5631
  7467  003E90  EF4C  F01F         	goto	u5630
  7468  003E94                     u5631:
  7469  003E94  EF94  F01F         	goto	l8364
  7470  003E98                     u5630:
  7471  003E98  0E01               	movlw	1
  7472  003E9A  6E22               	movwf	___aomod@counter^0,c
  7473  003E9C  EF5A  F01F         	goto	l8354
  7474  003EA0                     l8352:
  7475  003EA0  90D8               	bcf	status,0,c
  7476  003EA2  361A               	rlcf	___aomod@divisor^0,f,c
  7477  003EA4  361B               	rlcf	(___aomod@divisor+1)^0,f,c
  7478  003EA6  361C               	rlcf	(___aomod@divisor+2)^0,f,c
  7479  003EA8  361D               	rlcf	(___aomod@divisor+3)^0,f,c
  7480  003EAA  361E               	rlcf	(___aomod@divisor+4)^0,f,c
  7481  003EAC  361F               	rlcf	(___aomod@divisor+5)^0,f,c
  7482  003EAE  3620               	rlcf	(___aomod@divisor+6)^0,f,c
  7483  003EB0  3621               	rlcf	(___aomod@divisor+7)^0,f,c
  7484  003EB2  2A22               	incf	___aomod@counter^0,f,c
  7485  003EB4                     l8354:
  7486  003EB4  AE21               	btfss	(___aomod@divisor+7)^0,7,c
  7487  003EB6  EF5F  F01F         	goto	u5641
  7488  003EBA  EF61  F01F         	goto	u5640
  7489  003EBE                     u5641:
  7490  003EBE  EF50  F01F         	goto	l8352
  7491  003EC2                     u5640:
  7492  003EC2                     l8356:
  7493  003EC2  501A               	movf	___aomod@divisor^0,w,c
  7494  003EC4  5C12               	subwf	___aomod@dividend^0,w,c
  7495  003EC6  501B               	movf	(___aomod@divisor+1)^0,w,c
  7496  003EC8  5813               	subwfb	(___aomod@dividend+1)^0,w,c
  7497  003ECA  501C               	movf	(___aomod@divisor+2)^0,w,c
  7498  003ECC  5814               	subwfb	(___aomod@dividend+2)^0,w,c
  7499  003ECE  501D               	movf	(___aomod@divisor+3)^0,w,c
  7500  003ED0  5815               	subwfb	(___aomod@dividend+3)^0,w,c
  7501  003ED2  501E               	movf	(___aomod@divisor+4)^0,w,c
  7502  003ED4  5816               	subwfb	(___aomod@dividend+4)^0,w,c
  7503  003ED6  501F               	movf	(___aomod@divisor+5)^0,w,c
  7504  003ED8  5817               	subwfb	(___aomod@dividend+5)^0,w,c
  7505  003EDA  5020               	movf	(___aomod@divisor+6)^0,w,c
  7506  003EDC  5818               	subwfb	(___aomod@dividend+6)^0,w,c
  7507  003EDE  5021               	movf	(___aomod@divisor+7)^0,w,c
  7508  003EE0  5819               	subwfb	(___aomod@dividend+7)^0,w,c
  7509  003EE2  A0D8               	btfss	status,0,c
  7510  003EE4  EF76  F01F         	goto	u5651
  7511  003EE8  EF78  F01F         	goto	u5650
  7512  003EEC                     u5651:
  7513  003EEC  EF88  F01F         	goto	l8360
  7514  003EF0                     u5650:
  7515  003EF0  501A               	movf	___aomod@divisor^0,w,c
  7516  003EF2  5E12               	subwf	___aomod@dividend^0,f,c
  7517  003EF4  501B               	movf	(___aomod@divisor+1)^0,w,c
  7518  003EF6  5A13               	subwfb	(___aomod@dividend+1)^0,f,c
  7519  003EF8  501C               	movf	(___aomod@divisor+2)^0,w,c
  7520  003EFA  5A14               	subwfb	(___aomod@dividend+2)^0,f,c
  7521  003EFC  501D               	movf	(___aomod@divisor+3)^0,w,c
  7522  003EFE  5A15               	subwfb	(___aomod@dividend+3)^0,f,c
  7523  003F00  501E               	movf	(___aomod@divisor+4)^0,w,c
  7524  003F02  5A16               	subwfb	(___aomod@dividend+4)^0,f,c
  7525  003F04  501F               	movf	(___aomod@divisor+5)^0,w,c
  7526  003F06  5A17               	subwfb	(___aomod@dividend+5)^0,f,c
  7527  003F08  5020               	movf	(___aomod@divisor+6)^0,w,c
  7528  003F0A  5A18               	subwfb	(___aomod@dividend+6)^0,f,c
  7529  003F0C  5021               	movf	(___aomod@divisor+7)^0,w,c
  7530  003F0E  5A19               	subwfb	(___aomod@dividend+7)^0,f,c
  7531  003F10                     l8360:
  7532  003F10  90D8               	bcf	status,0,c
  7533  003F12  3221               	rrcf	(___aomod@divisor+7)^0,f,c
  7534  003F14  3220               	rrcf	(___aomod@divisor+6)^0,f,c
  7535  003F16  321F               	rrcf	(___aomod@divisor+5)^0,f,c
  7536  003F18  321E               	rrcf	(___aomod@divisor+4)^0,f,c
  7537  003F1A  321D               	rrcf	(___aomod@divisor+3)^0,f,c
  7538  003F1C  321C               	rrcf	(___aomod@divisor+2)^0,f,c
  7539  003F1E  321B               	rrcf	(___aomod@divisor+1)^0,f,c
  7540  003F20  321A               	rrcf	___aomod@divisor^0,f,c
  7541  003F22  2E22               	decfsz	___aomod@counter^0,f,c
  7542  003F24  EF61  F01F         	goto	l8356
  7543  003F28                     l8364:
  7544  003F28  5023               	movf	___aomod@sign^0,w,c
  7545  003F2A  B4D8               	btfsc	status,2,c
  7546  003F2C  EF9A  F01F         	goto	u5661
  7547  003F30  EF9C  F01F         	goto	u5660
  7548  003F34                     u5661:
  7549  003F34  EFAC  F01F         	goto	l8368
  7550  003F38                     u5660:
  7551  003F38  1E19               	comf	(___aomod@dividend+7)^0,f,c
  7552  003F3A  1E18               	comf	(___aomod@dividend+6)^0,f,c
  7553  003F3C  1E17               	comf	(___aomod@dividend+5)^0,f,c
  7554  003F3E  1E16               	comf	(___aomod@dividend+4)^0,f,c
  7555  003F40  1E15               	comf	(___aomod@dividend+3)^0,f,c
  7556  003F42  1E14               	comf	(___aomod@dividend+2)^0,f,c
  7557  003F44  1E13               	comf	(___aomod@dividend+1)^0,f,c
  7558  003F46  6C12               	negf	___aomod@dividend^0,c
  7559  003F48  0E00               	movlw	0
  7560  003F4A  2213               	addwfc	(___aomod@dividend+1)^0,f,c
  7561  003F4C  2214               	addwfc	(___aomod@dividend+2)^0,f,c
  7562  003F4E  2215               	addwfc	(___aomod@dividend+3)^0,f,c
  7563  003F50  2216               	addwfc	(___aomod@dividend+4)^0,f,c
  7564  003F52  2217               	addwfc	(___aomod@dividend+5)^0,f,c
  7565  003F54  2218               	addwfc	(___aomod@dividend+6)^0,f,c
  7566  003F56  2219               	addwfc	(___aomod@dividend+7)^0,f,c
  7567  003F58                     l8368:
  7568  003F58  C012  F012         	movff	___aomod@dividend,?___aomod
  7569  003F5C  C013  F013         	movff	___aomod@dividend+1,?___aomod+1
  7570  003F60  C014  F014         	movff	___aomod@dividend+2,?___aomod+2
  7571  003F64  C015  F015         	movff	___aomod@dividend+3,?___aomod+3
  7572  003F68  C016  F016         	movff	___aomod@dividend+4,?___aomod+4
  7573  003F6C  C017  F017         	movff	___aomod@dividend+5,?___aomod+5
  7574  003F70  C018  F018         	movff	___aomod@dividend+6,?___aomod+6
  7575  003F74  C019  F019         	movff	___aomod@dividend+7,?___aomod+7
  7576  003F78  0012               	return		;funcret
  7577  003F7A                     __end_of___aomod:
  7578                           	callstack 0
  7579                           
  7580 ;; *************** function ___aodiv *****************
  7581 ;; Defined at:
  7582 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;  dividend        8   17[COMRAM] long long 
  7585 ;;  divisor         8   25[COMRAM] long long 
  7586 ;; Auto vars:     Size  Location     Type
  7587 ;;  quotient        8   35[COMRAM] long long 
  7588 ;;  sign            1   34[COMRAM] unsigned char 
  7589 ;;  counter         1   33[COMRAM] unsigned char 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  8   17[COMRAM] long long 
  7592 ;; Registers used:
  7593 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7599 ;;      Params:        16       0       0       0       0       0       0
  7600 ;;      Locals:        10       0       0       0       0       0       0
  7601 ;;      Temps:          0       0       0       0       0       0       0
  7602 ;;      Totals:        26       0       0       0       0       0       0
  7603 ;;Total ram usage:       26 bytes
  7604 ;; Hardware stack levels used: 1
  7605 ;; Hardware stack levels required when called: 4
  7606 ;; This function calls:
  7607 ;;		Nothing
  7608 ;; This function is called by:
  7609 ;;		_dtoa
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           	psect	text27
  7614  003C8E                     __ptext27:
  7615                           	callstack 0
  7616  003C8E                     ___aodiv:
  7617                           	callstack 19
  7618  003C8E  0E00               	movlw	0
  7619  003C90  6E23               	movwf	___aodiv@sign^0,c
  7620  003C92  BE21               	btfsc	(___aodiv@divisor+7)^0,7,c
  7621  003C94  EF50  F01E         	goto	u5540
  7622  003C98  EF4E  F01E         	goto	u5541
  7623  003C9C                     u5541:
  7624  003C9C  EF62  F01E         	goto	l8300
  7625  003CA0                     u5540:
  7626  003CA0  1E21               	comf	(___aodiv@divisor+7)^0,f,c
  7627  003CA2  1E20               	comf	(___aodiv@divisor+6)^0,f,c
  7628  003CA4  1E1F               	comf	(___aodiv@divisor+5)^0,f,c
  7629  003CA6  1E1E               	comf	(___aodiv@divisor+4)^0,f,c
  7630  003CA8  1E1D               	comf	(___aodiv@divisor+3)^0,f,c
  7631  003CAA  1E1C               	comf	(___aodiv@divisor+2)^0,f,c
  7632  003CAC  1E1B               	comf	(___aodiv@divisor+1)^0,f,c
  7633  003CAE  6C1A               	negf	___aodiv@divisor^0,c
  7634  003CB0  0E00               	movlw	0
  7635  003CB2  221B               	addwfc	(___aodiv@divisor+1)^0,f,c
  7636  003CB4  221C               	addwfc	(___aodiv@divisor+2)^0,f,c
  7637  003CB6  221D               	addwfc	(___aodiv@divisor+3)^0,f,c
  7638  003CB8  221E               	addwfc	(___aodiv@divisor+4)^0,f,c
  7639  003CBA  221F               	addwfc	(___aodiv@divisor+5)^0,f,c
  7640  003CBC  2220               	addwfc	(___aodiv@divisor+6)^0,f,c
  7641  003CBE  2221               	addwfc	(___aodiv@divisor+7)^0,f,c
  7642  003CC0  0E01               	movlw	1
  7643  003CC2  6E23               	movwf	___aodiv@sign^0,c
  7644  003CC4                     l8300:
  7645  003CC4  BE19               	btfsc	(___aodiv@dividend+7)^0,7,c
  7646  003CC6  EF69  F01E         	goto	u5550
  7647  003CCA  EF67  F01E         	goto	u5551
  7648  003CCE                     u5551:
  7649  003CCE  EF7B  F01E         	goto	l8306
  7650  003CD2                     u5550:
  7651  003CD2  1E19               	comf	(___aodiv@dividend+7)^0,f,c
  7652  003CD4  1E18               	comf	(___aodiv@dividend+6)^0,f,c
  7653  003CD6  1E17               	comf	(___aodiv@dividend+5)^0,f,c
  7654  003CD8  1E16               	comf	(___aodiv@dividend+4)^0,f,c
  7655  003CDA  1E15               	comf	(___aodiv@dividend+3)^0,f,c
  7656  003CDC  1E14               	comf	(___aodiv@dividend+2)^0,f,c
  7657  003CDE  1E13               	comf	(___aodiv@dividend+1)^0,f,c
  7658  003CE0  6C12               	negf	___aodiv@dividend^0,c
  7659  003CE2  0E00               	movlw	0
  7660  003CE4  2213               	addwfc	(___aodiv@dividend+1)^0,f,c
  7661  003CE6  2214               	addwfc	(___aodiv@dividend+2)^0,f,c
  7662  003CE8  2215               	addwfc	(___aodiv@dividend+3)^0,f,c
  7663  003CEA  2216               	addwfc	(___aodiv@dividend+4)^0,f,c
  7664  003CEC  2217               	addwfc	(___aodiv@dividend+5)^0,f,c
  7665  003CEE  2218               	addwfc	(___aodiv@dividend+6)^0,f,c
  7666  003CF0  2219               	addwfc	(___aodiv@dividend+7)^0,f,c
  7667  003CF2  0E01               	movlw	1
  7668  003CF4  1A23               	xorwf	___aodiv@sign^0,f,c
  7669  003CF6                     l8306:
  7670  003CF6  EE20  F024         	lfsr	2,___aodiv@quotient
  7671  003CFA  0E07               	movlw	7
  7672  003CFC                     u5561:
  7673  003CFC  6ADE               	clrf	postinc2,c
  7674  003CFE  06E8               	decf	wreg,f,c
  7675  003D00  E2FD               	bc	u5561
  7676  003D02  501A               	movf	___aodiv@divisor^0,w,c
  7677  003D04  101B               	iorwf	(___aodiv@divisor+1)^0,w,c
  7678  003D06  101C               	iorwf	(___aodiv@divisor+2)^0,w,c
  7679  003D08  101D               	iorwf	(___aodiv@divisor+3)^0,w,c
  7680  003D0A  101E               	iorwf	(___aodiv@divisor+4)^0,w,c
  7681  003D0C  101F               	iorwf	(___aodiv@divisor+5)^0,w,c
  7682  003D0E  1020               	iorwf	(___aodiv@divisor+6)^0,w,c
  7683  003D10  1021               	iorwf	(___aodiv@divisor+7)^0,w,c
  7684  003D12  B4D8               	btfsc	status,2,c
  7685  003D14  EF8E  F01E         	goto	u5571
  7686  003D18  EF90  F01E         	goto	u5570
  7687  003D1C                     u5571:
  7688  003D1C  EFE2  F01E         	goto	l8328
  7689  003D20                     u5570:
  7690  003D20  0E01               	movlw	1
  7691  003D22  6E22               	movwf	___aodiv@counter^0,c
  7692  003D24  EF9E  F01E         	goto	l8314
  7693  003D28                     l8312:
  7694  003D28  90D8               	bcf	status,0,c
  7695  003D2A  361A               	rlcf	___aodiv@divisor^0,f,c
  7696  003D2C  361B               	rlcf	(___aodiv@divisor+1)^0,f,c
  7697  003D2E  361C               	rlcf	(___aodiv@divisor+2)^0,f,c
  7698  003D30  361D               	rlcf	(___aodiv@divisor+3)^0,f,c
  7699  003D32  361E               	rlcf	(___aodiv@divisor+4)^0,f,c
  7700  003D34  361F               	rlcf	(___aodiv@divisor+5)^0,f,c
  7701  003D36  3620               	rlcf	(___aodiv@divisor+6)^0,f,c
  7702  003D38  3621               	rlcf	(___aodiv@divisor+7)^0,f,c
  7703  003D3A  2A22               	incf	___aodiv@counter^0,f,c
  7704  003D3C                     l8314:
  7705  003D3C  AE21               	btfss	(___aodiv@divisor+7)^0,7,c
  7706  003D3E  EFA3  F01E         	goto	u5581
  7707  003D42  EFA5  F01E         	goto	u5580
  7708  003D46                     u5581:
  7709  003D46  EF94  F01E         	goto	l8312
  7710  003D4A                     u5580:
  7711  003D4A                     l8316:
  7712  003D4A  90D8               	bcf	status,0,c
  7713  003D4C  3624               	rlcf	___aodiv@quotient^0,f,c
  7714  003D4E  3625               	rlcf	(___aodiv@quotient+1)^0,f,c
  7715  003D50  3626               	rlcf	(___aodiv@quotient+2)^0,f,c
  7716  003D52  3627               	rlcf	(___aodiv@quotient+3)^0,f,c
  7717  003D54  3628               	rlcf	(___aodiv@quotient+4)^0,f,c
  7718  003D56  3629               	rlcf	(___aodiv@quotient+5)^0,f,c
  7719  003D58  362A               	rlcf	(___aodiv@quotient+6)^0,f,c
  7720  003D5A  362B               	rlcf	(___aodiv@quotient+7)^0,f,c
  7721  003D5C  501A               	movf	___aodiv@divisor^0,w,c
  7722  003D5E  5C12               	subwf	___aodiv@dividend^0,w,c
  7723  003D60  501B               	movf	(___aodiv@divisor+1)^0,w,c
  7724  003D62  5813               	subwfb	(___aodiv@dividend+1)^0,w,c
  7725  003D64  501C               	movf	(___aodiv@divisor+2)^0,w,c
  7726  003D66  5814               	subwfb	(___aodiv@dividend+2)^0,w,c
  7727  003D68  501D               	movf	(___aodiv@divisor+3)^0,w,c
  7728  003D6A  5815               	subwfb	(___aodiv@dividend+3)^0,w,c
  7729  003D6C  501E               	movf	(___aodiv@divisor+4)^0,w,c
  7730  003D6E  5816               	subwfb	(___aodiv@dividend+4)^0,w,c
  7731  003D70  501F               	movf	(___aodiv@divisor+5)^0,w,c
  7732  003D72  5817               	subwfb	(___aodiv@dividend+5)^0,w,c
  7733  003D74  5020               	movf	(___aodiv@divisor+6)^0,w,c
  7734  003D76  5818               	subwfb	(___aodiv@dividend+6)^0,w,c
  7735  003D78  5021               	movf	(___aodiv@divisor+7)^0,w,c
  7736  003D7A  5819               	subwfb	(___aodiv@dividend+7)^0,w,c
  7737  003D7C  A0D8               	btfss	status,0,c
  7738  003D7E  EFC3  F01E         	goto	u5591
  7739  003D82  EFC5  F01E         	goto	u5590
  7740  003D86                     u5591:
  7741  003D86  EFD6  F01E         	goto	l8324
  7742  003D8A                     u5590:
  7743  003D8A  501A               	movf	___aodiv@divisor^0,w,c
  7744  003D8C  5E12               	subwf	___aodiv@dividend^0,f,c
  7745  003D8E  501B               	movf	(___aodiv@divisor+1)^0,w,c
  7746  003D90  5A13               	subwfb	(___aodiv@dividend+1)^0,f,c
  7747  003D92  501C               	movf	(___aodiv@divisor+2)^0,w,c
  7748  003D94  5A14               	subwfb	(___aodiv@dividend+2)^0,f,c
  7749  003D96  501D               	movf	(___aodiv@divisor+3)^0,w,c
  7750  003D98  5A15               	subwfb	(___aodiv@dividend+3)^0,f,c
  7751  003D9A  501E               	movf	(___aodiv@divisor+4)^0,w,c
  7752  003D9C  5A16               	subwfb	(___aodiv@dividend+4)^0,f,c
  7753  003D9E  501F               	movf	(___aodiv@divisor+5)^0,w,c
  7754  003DA0  5A17               	subwfb	(___aodiv@dividend+5)^0,f,c
  7755  003DA2  5020               	movf	(___aodiv@divisor+6)^0,w,c
  7756  003DA4  5A18               	subwfb	(___aodiv@dividend+6)^0,f,c
  7757  003DA6  5021               	movf	(___aodiv@divisor+7)^0,w,c
  7758  003DA8  5A19               	subwfb	(___aodiv@dividend+7)^0,f,c
  7759  003DAA  8024               	bsf	___aodiv@quotient^0,0,c
  7760  003DAC                     l8324:
  7761  003DAC  90D8               	bcf	status,0,c
  7762  003DAE  3221               	rrcf	(___aodiv@divisor+7)^0,f,c
  7763  003DB0  3220               	rrcf	(___aodiv@divisor+6)^0,f,c
  7764  003DB2  321F               	rrcf	(___aodiv@divisor+5)^0,f,c
  7765  003DB4  321E               	rrcf	(___aodiv@divisor+4)^0,f,c
  7766  003DB6  321D               	rrcf	(___aodiv@divisor+3)^0,f,c
  7767  003DB8  321C               	rrcf	(___aodiv@divisor+2)^0,f,c
  7768  003DBA  321B               	rrcf	(___aodiv@divisor+1)^0,f,c
  7769  003DBC  321A               	rrcf	___aodiv@divisor^0,f,c
  7770  003DBE  2E22               	decfsz	___aodiv@counter^0,f,c
  7771  003DC0  EFA5  F01E         	goto	l8316
  7772  003DC4                     l8328:
  7773  003DC4  5023               	movf	___aodiv@sign^0,w,c
  7774  003DC6  B4D8               	btfsc	status,2,c
  7775  003DC8  EFE8  F01E         	goto	u5601
  7776  003DCC  EFEA  F01E         	goto	u5600
  7777  003DD0                     u5601:
  7778  003DD0  EFFA  F01E         	goto	l8332
  7779  003DD4                     u5600:
  7780  003DD4  1E2B               	comf	(___aodiv@quotient+7)^0,f,c
  7781  003DD6  1E2A               	comf	(___aodiv@quotient+6)^0,f,c
  7782  003DD8  1E29               	comf	(___aodiv@quotient+5)^0,f,c
  7783  003DDA  1E28               	comf	(___aodiv@quotient+4)^0,f,c
  7784  003DDC  1E27               	comf	(___aodiv@quotient+3)^0,f,c
  7785  003DDE  1E26               	comf	(___aodiv@quotient+2)^0,f,c
  7786  003DE0  1E25               	comf	(___aodiv@quotient+1)^0,f,c
  7787  003DE2  6C24               	negf	___aodiv@quotient^0,c
  7788  003DE4  0E00               	movlw	0
  7789  003DE6  2225               	addwfc	(___aodiv@quotient+1)^0,f,c
  7790  003DE8  2226               	addwfc	(___aodiv@quotient+2)^0,f,c
  7791  003DEA  2227               	addwfc	(___aodiv@quotient+3)^0,f,c
  7792  003DEC  2228               	addwfc	(___aodiv@quotient+4)^0,f,c
  7793  003DEE  2229               	addwfc	(___aodiv@quotient+5)^0,f,c
  7794  003DF0  222A               	addwfc	(___aodiv@quotient+6)^0,f,c
  7795  003DF2  222B               	addwfc	(___aodiv@quotient+7)^0,f,c
  7796  003DF4                     l8332:
  7797  003DF4  C024  F012         	movff	___aodiv@quotient,?___aodiv
  7798  003DF8  C025  F013         	movff	___aodiv@quotient+1,?___aodiv+1
  7799  003DFC  C026  F014         	movff	___aodiv@quotient+2,?___aodiv+2
  7800  003E00  C027  F015         	movff	___aodiv@quotient+3,?___aodiv+3
  7801  003E04  C028  F016         	movff	___aodiv@quotient+4,?___aodiv+4
  7802  003E08  C029  F017         	movff	___aodiv@quotient+5,?___aodiv+5
  7803  003E0C  C02A  F018         	movff	___aodiv@quotient+6,?___aodiv+6
  7804  003E10  C02B  F019         	movff	___aodiv@quotient+7,?___aodiv+7
  7805  003E14  0012               	return		;funcret
  7806  003E16                     __end_of___aodiv:
  7807                           	callstack 0
  7808                           
  7809 ;; *************** function _configTouch *****************
  7810 ;; Defined at:
  7811 ;;		line 118 in file "stateMachine/touchScreenSM.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;		None
  7814 ;; Auto vars:     Size  Location     Type
  7815 ;;		None
  7816 ;; Return value:  Size  Location     Type
  7817 ;;                  1    wreg      void 
  7818 ;; Registers used:
  7819 ;;		wreg, status,2
  7820 ;; Tracked objects:
  7821 ;;		On entry : 0/0
  7822 ;;		On exit  : 0/0
  7823 ;;		Unchanged: 0/0
  7824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7825 ;;      Params:         0       0       0       0       0       0       0
  7826 ;;      Locals:         0       0       0       0       0       0       0
  7827 ;;      Temps:          0       0       0       0       0       0       0
  7828 ;;      Totals:         0       0       0       0       0       0       0
  7829 ;;Total ram usage:        0 bytes
  7830 ;; Hardware stack levels used: 1
  7831 ;; Hardware stack levels required when called: 4
  7832 ;; This function calls:
  7833 ;;		Nothing
  7834 ;; This function is called by:
  7835 ;;		_touchScreenInit
  7836 ;;		_touchScreenController
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840                           	psect	text28
  7841  005E8C                     __ptext28:
  7842                           	callstack 0
  7843  005E8C                     _configTouch:
  7844                           	callstack 23
  7845  005E8C                     
  7846                           ;stateMachine/touchScreenSM.c: 120:     ANSB1=0;
  7847  005E8C  010F               	movlb	15	; () banked
  7848  005E8E  9339               	bcf	57,1,b	;volatile
  7849                           
  7850                           ;stateMachine/touchScreenSM.c: 121:     ANSB2=0;
  7851  005E90  9539               	bcf	57,2,b	;volatile
  7852                           
  7853                           ;stateMachine/touchScreenSM.c: 122:     TRISB2=0;
  7854  005E92  9493               	bcf	3987,2,c	;volatile
  7855                           
  7856                           ;stateMachine/touchScreenSM.c: 123:     LATB2=0;
  7857  005E94  948A               	bcf	3978,2,c	;volatile
  7858                           
  7859                           ;stateMachine/touchScreenSM.c: 124:     TRISB1=1;
  7860  005E96  8293               	bsf	3987,1,c	;volatile
  7861                           
  7862                           ;stateMachine/touchScreenSM.c: 125:     RBPU=0;
  7863  005E98  9EF1               	bcf	4081,7,c	;volatile
  7864  005E9A                     
  7865                           ; BSR set to: 15
  7866                           ;stateMachine/touchScreenSM.c: 126:     WPUB=0b00000010;
  7867  005E9A  0E02               	movlw	2
  7868  005E9C  6E61               	movwf	97,c	;volatile
  7869  005E9E                     
  7870                           ; BSR set to: 15
  7871                           ;stateMachine/touchScreenSM.c: 127:     INTEDG1=0;
  7872  005E9E  9AF1               	bcf	4081,5,c	;volatile
  7873  005EA0                     
  7874                           ; BSR set to: 15
  7875                           ;stateMachine/touchScreenSM.c: 128:     TRISB3=1;
  7876  005EA0  8693               	bsf	3987,3,c	;volatile
  7877  005EA2                     
  7878                           ; BSR set to: 15
  7879                           ;stateMachine/touchScreenSM.c: 129:     TRISB4=1;
  7880  005EA2  8893               	bsf	3987,4,c	;volatile
  7881  005EA4                     
  7882                           ; BSR set to: 15
  7883                           ;stateMachine/touchScreenSM.c: 130:     INT1IE=1;
  7884  005EA4  86F0               	bsf	4080,3,c	;volatile
  7885  005EA6                     
  7886                           ; BSR set to: 15
  7887  005EA6  0012               	return		;funcret
  7888  005EA8                     __end_of_configTouch:
  7889                           	callstack 0
  7890                           
  7891 ;; *************** function _configMeasure *****************
  7892 ;; Defined at:
  7893 ;;		line 132 in file "stateMachine/touchScreenSM.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;  channel         1    wreg     _Bool 
  7896 ;; Auto vars:     Size  Location     Type
  7897 ;;  channel         1   17[COMRAM] _Bool 
  7898 ;; Return value:  Size  Location     Type
  7899 ;;                  1    wreg      void 
  7900 ;; Registers used:
  7901 ;;		wreg, status,2, status,0
  7902 ;; Tracked objects:
  7903 ;;		On entry : 0/0
  7904 ;;		On exit  : 0/0
  7905 ;;		Unchanged: 0/0
  7906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7907 ;;      Params:         0       0       0       0       0       0       0
  7908 ;;      Locals:         1       0       0       0       0       0       0
  7909 ;;      Temps:          0       0       0       0       0       0       0
  7910 ;;      Totals:         1       0       0       0       0       0       0
  7911 ;;Total ram usage:        1 bytes
  7912 ;; Hardware stack levels used: 1
  7913 ;; Hardware stack levels required when called: 4
  7914 ;; This function calls:
  7915 ;;		Nothing
  7916 ;; This function is called by:
  7917 ;;		_touchScreenController
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text29
  7922  005B78                     __ptext29:
  7923                           	callstack 0
  7924  005B78                     _configMeasure:
  7925                           	callstack 23
  7926                           
  7927                           ; BSR set to: 15
  7928                           ;incstack = 0
  7929                           ;configMeasure@channel stored from wreg
  7930  005B78  6E12               	movwf	configMeasure@channel^0,c
  7931  005B7A                     
  7932                           ;stateMachine/touchScreenSM.c: 132: void configMeasure(_Bool channel);stateMachine/touch
      +                          ScreenSM.c: 133: {;stateMachine/touchScreenSM.c: 134:     if(channel==0)
  7933  005B7A  5012               	movf	configMeasure@channel^0,w,c
  7934  005B7C  A4D8               	btfss	status,2,c
  7935  005B7E  EFC3  F02D         	goto	u6841
  7936  005B82  EFC5  F02D         	goto	u6840
  7937  005B86                     u6841:
  7938  005B86  EFD0  F02D         	goto	l9554
  7939  005B8A                     u6840:
  7940  005B8A                     
  7941                           ;stateMachine/touchScreenSM.c: 135:     {;stateMachine/touchScreenSM.c: 136:         ANS
      +                          B1=0;
  7942  005B8A  010F               	movlb	15	; () banked
  7943  005B8C  9339               	bcf	57,1,b	;volatile
  7944                           
  7945                           ;stateMachine/touchScreenSM.c: 137:         TRISB1=0;
  7946  005B8E  9293               	bcf	3987,1,c	;volatile
  7947                           
  7948                           ;stateMachine/touchScreenSM.c: 138:         LATB1=0;
  7949  005B90  928A               	bcf	3978,1,c	;volatile
  7950                           
  7951                           ;stateMachine/touchScreenSM.c: 139:         TRISB3=0;
  7952  005B92  9693               	bcf	3987,3,c	;volatile
  7953                           
  7954                           ;stateMachine/touchScreenSM.c: 140:         LATB3=1;
  7955  005B94  868A               	bsf	3978,3,c	;volatile
  7956                           
  7957                           ;stateMachine/touchScreenSM.c: 141:         TRISB4=1;
  7958  005B96  8893               	bsf	3987,4,c	;volatile
  7959                           
  7960                           ;stateMachine/touchScreenSM.c: 142:         TRISB2=1;
  7961  005B98  8493               	bsf	3987,2,c	;volatile
  7962                           
  7963                           ;stateMachine/touchScreenSM.c: 143:         ANSB2=1;
  7964  005B9A  8539               	bsf	57,2,b	;volatile
  7965  005B9C                     
  7966                           ; BSR set to: 15
  7967                           ;stateMachine/touchScreenSM.c: 144:         ADCON0=0b00100011;
  7968  005B9C  0E23               	movlw	35
  7969  005B9E  6EC2               	movwf	194,c	;volatile
  7970  005BA0                     l9554:
  7971                           
  7972                           ;stateMachine/touchScreenSM.c: 146:     if(channel==1)
  7973  005BA0  0412               	decf	configMeasure@channel^0,w,c
  7974  005BA2  A4D8               	btfss	status,2,c
  7975  005BA4  EFD6  F02D         	goto	u6851
  7976  005BA8  EFD8  F02D         	goto	u6850
  7977  005BAC                     u6851:
  7978  005BAC  EFE3  F02D         	goto	l519
  7979  005BB0                     u6850:
  7980  005BB0                     
  7981                           ;stateMachine/touchScreenSM.c: 147:     {;stateMachine/touchScreenSM.c: 148:         ANS
      +                          B2=0;
  7982  005BB0  010F               	movlb	15	; () banked
  7983  005BB2  9539               	bcf	57,2,b	;volatile
  7984                           
  7985                           ;stateMachine/touchScreenSM.c: 149:         TRISB2=0;
  7986  005BB4  9493               	bcf	3987,2,c	;volatile
  7987                           
  7988                           ;stateMachine/touchScreenSM.c: 150:         LATB2=0;
  7989  005BB6  948A               	bcf	3978,2,c	;volatile
  7990                           
  7991                           ;stateMachine/touchScreenSM.c: 151:         TRISB4=0;
  7992  005BB8  9893               	bcf	3987,4,c	;volatile
  7993                           
  7994                           ;stateMachine/touchScreenSM.c: 152:         LATB4=1;
  7995  005BBA  888A               	bsf	3978,4,c	;volatile
  7996                           
  7997                           ;stateMachine/touchScreenSM.c: 153:         TRISB3=1;
  7998  005BBC  8693               	bsf	3987,3,c	;volatile
  7999                           
  8000                           ;stateMachine/touchScreenSM.c: 154:         TRISB1=1;
  8001  005BBE  8293               	bsf	3987,1,c	;volatile
  8002                           
  8003                           ;stateMachine/touchScreenSM.c: 155:         ANSB1=1;
  8004  005BC0  8339               	bsf	57,1,b	;volatile
  8005  005BC2                     
  8006                           ; BSR set to: 15
  8007                           ;stateMachine/touchScreenSM.c: 156:         ADCON0=0b00101011;
  8008  005BC2  0E2B               	movlw	43
  8009  005BC4  6EC2               	movwf	194,c	;volatile
  8010  005BC6                     l519:
  8011  005BC6  0012               	return		;funcret
  8012  005BC8                     __end_of_configMeasure:
  8013                           	callstack 0
  8014                           
  8015 ;; *************** function ___xxtofl *****************
  8016 ;; Defined at:
  8017 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;  sign            1    wreg     unsigned char 
  8020 ;;  val             4   17[COMRAM] long 
  8021 ;; Auto vars:     Size  Location     Type
  8022 ;;  sign            1   25[COMRAM] unsigned char 
  8023 ;;  arg             4   27[COMRAM] unsigned long 
  8024 ;;  exp             1   26[COMRAM] unsigned char 
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  4   17[COMRAM] unsigned char 
  8027 ;; Registers used:
  8028 ;;		wreg, status,2, status,0
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8034 ;;      Params:         4       0       0       0       0       0       0
  8035 ;;      Locals:         6       0       0       0       0       0       0
  8036 ;;      Temps:          4       0       0       0       0       0       0
  8037 ;;      Totals:        14       0       0       0       0       0       0
  8038 ;;Total ram usage:       14 bytes
  8039 ;; Hardware stack levels used: 1
  8040 ;; Hardware stack levels required when called: 4
  8041 ;; This function calls:
  8042 ;;		Nothing
  8043 ;; This function is called by:
  8044 ;;		_touchScreenController
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048                           	psect	text30
  8049  00394E                     __ptext30:
  8050                           	callstack 0
  8051  00394E                     ___xxtofl:
  8052                           	callstack 23
  8053                           
  8054                           ;incstack = 0
  8055                           ;___xxtofl@sign stored from wreg
  8056  00394E  6E1A               	movwf	___xxtofl@sign^0,c
  8057  003950  501A               	movf	___xxtofl@sign^0,w,c
  8058  003952  B4D8               	btfsc	status,2,c
  8059  003954  EFAE  F01C         	goto	u7391
  8060  003958  EFB0  F01C         	goto	u7390
  8061  00395C                     u7391:
  8062  00395C  EFD2  F01C         	goto	l1441
  8063  003960                     u7390:
  8064  003960  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  8065  003962  EFB7  F01C         	goto	u7400
  8066  003966  EFB5  F01C         	goto	u7401
  8067  00396A                     u7401:
  8068  00396A  EFD2  F01C         	goto	l1441
  8069  00396E                     u7400:
  8070  00396E  C012  F016         	movff	___xxtofl@val,??___xxtofl
  8071  003972  C013  F017         	movff	___xxtofl@val+1,??___xxtofl+1
  8072  003976  C014  F018         	movff	___xxtofl@val+2,??___xxtofl+2
  8073  00397A  C015  F019         	movff	___xxtofl@val+3,??___xxtofl+3
  8074  00397E  1E16               	comf	??___xxtofl^0,f,c
  8075  003980  1E17               	comf	(??___xxtofl+1)^0,f,c
  8076  003982  1E18               	comf	(??___xxtofl+2)^0,f,c
  8077  003984  1E19               	comf	(??___xxtofl+3)^0,f,c
  8078  003986  2A16               	incf	??___xxtofl^0,f,c
  8079  003988  0E00               	movlw	0
  8080  00398A  2217               	addwfc	(??___xxtofl+1)^0,f,c
  8081  00398C  2218               	addwfc	(??___xxtofl+2)^0,f,c
  8082  00398E  2219               	addwfc	(??___xxtofl+3)^0,f,c
  8083  003990  C016  F01C         	movff	??___xxtofl,___xxtofl@arg
  8084  003994  C017  F01D         	movff	??___xxtofl+1,___xxtofl@arg+1
  8085  003998  C018  F01E         	movff	??___xxtofl+2,___xxtofl@arg+2
  8086  00399C  C019  F01F         	movff	??___xxtofl+3,___xxtofl@arg+3
  8087  0039A0  EFDA  F01C         	goto	l9876
  8088  0039A4                     l1441:
  8089  0039A4  C012  F01C         	movff	___xxtofl@val,___xxtofl@arg
  8090  0039A8  C013  F01D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8091  0039AC  C014  F01E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8092  0039B0  C015  F01F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8093  0039B4                     l9876:
  8094  0039B4  5012               	movf	___xxtofl@val^0,w,c
  8095  0039B6  1013               	iorwf	(___xxtofl@val+1)^0,w,c
  8096  0039B8  1014               	iorwf	(___xxtofl@val+2)^0,w,c
  8097  0039BA  1015               	iorwf	(___xxtofl@val+3)^0,w,c
  8098  0039BC  A4D8               	btfss	status,2,c
  8099  0039BE  EFE3  F01C         	goto	u7411
  8100  0039C2  EFE5  F01C         	goto	u7410
  8101  0039C6                     u7411:
  8102  0039C6  EFEF  F01C         	goto	l9882
  8103  0039CA                     u7410:
  8104  0039CA  0E00               	movlw	0
  8105  0039CC  6E12               	movwf	?___xxtofl^0,c
  8106  0039CE  0E00               	movlw	0
  8107  0039D0  6E13               	movwf	(?___xxtofl+1)^0,c
  8108  0039D2  0E00               	movlw	0
  8109  0039D4  6E14               	movwf	(?___xxtofl+2)^0,c
  8110  0039D6  0E00               	movlw	0
  8111  0039D8  6E15               	movwf	(?___xxtofl+3)^0,c
  8112  0039DA  EF80  F01D         	goto	l1444
  8113  0039DE                     l9882:
  8114  0039DE  0E96               	movlw	150
  8115  0039E0  6E1B               	movwf	___xxtofl@exp^0,c
  8116  0039E2  EFF9  F01C         	goto	l9886
  8117  0039E6                     l9884:
  8118  0039E6  2A1B               	incf	___xxtofl@exp^0,f,c
  8119  0039E8  90D8               	bcf	status,0,c
  8120  0039EA  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  8121  0039EC  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  8122  0039EE  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  8123  0039F0  321C               	rrcf	___xxtofl@arg^0,f,c
  8124  0039F2                     l9886:
  8125  0039F2  0E00               	movlw	0
  8126  0039F4  141C               	andwf	___xxtofl@arg^0,w,c
  8127  0039F6  6E16               	movwf	??___xxtofl^0,c
  8128  0039F8  0E00               	movlw	0
  8129  0039FA  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  8130  0039FC  6E17               	movwf	(??___xxtofl+1)^0,c
  8131  0039FE  0E00               	movlw	0
  8132  003A00  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  8133  003A02  6E18               	movwf	(??___xxtofl+2)^0,c
  8134  003A04  0EFE               	movlw	254
  8135  003A06  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  8136  003A08  6E19               	movwf	(??___xxtofl+3)^0,c
  8137  003A0A  5016               	movf	??___xxtofl^0,w,c
  8138  003A0C  1017               	iorwf	(??___xxtofl+1)^0,w,c
  8139  003A0E  1018               	iorwf	(??___xxtofl+2)^0,w,c
  8140  003A10  1019               	iorwf	(??___xxtofl+3)^0,w,c
  8141  003A12  A4D8               	btfss	status,2,c
  8142  003A14  EF0E  F01D         	goto	u7421
  8143  003A18  EF10  F01D         	goto	u7420
  8144  003A1C                     u7421:
  8145  003A1C  EFF3  F01C         	goto	l9884
  8146  003A20                     u7420:
  8147  003A20  EF1E  F01D         	goto	l1448
  8148  003A24                     l9888:
  8149  003A24  2A1B               	incf	___xxtofl@exp^0,f,c
  8150  003A26  0E01               	movlw	1
  8151  003A28  261C               	addwf	___xxtofl@arg^0,f,c
  8152  003A2A  0E00               	movlw	0
  8153  003A2C  221D               	addwfc	(___xxtofl@arg+1)^0,f,c
  8154  003A2E  221E               	addwfc	(___xxtofl@arg+2)^0,f,c
  8155  003A30  221F               	addwfc	(___xxtofl@arg+3)^0,f,c
  8156  003A32  90D8               	bcf	status,0,c
  8157  003A34  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  8158  003A36  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  8159  003A38  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  8160  003A3A  321C               	rrcf	___xxtofl@arg^0,f,c
  8161  003A3C                     l1448:
  8162  003A3C  0E00               	movlw	0
  8163  003A3E  141C               	andwf	___xxtofl@arg^0,w,c
  8164  003A40  6E16               	movwf	??___xxtofl^0,c
  8165  003A42  0E00               	movlw	0
  8166  003A44  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  8167  003A46  6E17               	movwf	(??___xxtofl+1)^0,c
  8168  003A48  0E00               	movlw	0
  8169  003A4A  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  8170  003A4C  6E18               	movwf	(??___xxtofl+2)^0,c
  8171  003A4E  0EFF               	movlw	255
  8172  003A50  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  8173  003A52  6E19               	movwf	(??___xxtofl+3)^0,c
  8174  003A54  5016               	movf	??___xxtofl^0,w,c
  8175  003A56  1017               	iorwf	(??___xxtofl+1)^0,w,c
  8176  003A58  1018               	iorwf	(??___xxtofl+2)^0,w,c
  8177  003A5A  1019               	iorwf	(??___xxtofl+3)^0,w,c
  8178  003A5C  A4D8               	btfss	status,2,c
  8179  003A5E  EF33  F01D         	goto	u7431
  8180  003A62  EF35  F01D         	goto	u7430
  8181  003A66                     u7431:
  8182  003A66  EF12  F01D         	goto	l9888
  8183  003A6A                     u7430:
  8184  003A6A  EF3D  F01D         	goto	l9896
  8185  003A6E                     l9894:
  8186  003A6E  061B               	decf	___xxtofl@exp^0,f,c
  8187  003A70  90D8               	bcf	status,0,c
  8188  003A72  361C               	rlcf	___xxtofl@arg^0,f,c
  8189  003A74  361D               	rlcf	(___xxtofl@arg+1)^0,f,c
  8190  003A76  361E               	rlcf	(___xxtofl@arg+2)^0,f,c
  8191  003A78  361F               	rlcf	(___xxtofl@arg+3)^0,f,c
  8192  003A7A                     l9896:
  8193  003A7A  BE1E               	btfsc	(___xxtofl@arg+2)^0,7,c
  8194  003A7C  EF42  F01D         	goto	u7441
  8195  003A80  EF44  F01D         	goto	u7440
  8196  003A84                     u7441:
  8197  003A84  EF4C  F01D         	goto	l1455
  8198  003A88                     u7440:
  8199  003A88  0E02               	movlw	2
  8200  003A8A  601B               	cpfslt	___xxtofl@exp^0,c
  8201  003A8C  EF4A  F01D         	goto	u7451
  8202  003A90  EF4C  F01D         	goto	u7450
  8203  003A94                     u7451:
  8204  003A94  EF37  F01D         	goto	l9894
  8205  003A98                     u7450:
  8206  003A98                     l1455:
  8207  003A98  B01B               	btfsc	___xxtofl@exp^0,0,c
  8208  003A9A  EF51  F01D         	goto	u7461
  8209  003A9E  EF53  F01D         	goto	u7460
  8210  003AA2                     u7461:
  8211  003AA2  EF54  F01D         	goto	l9902
  8212  003AA6                     u7460:
  8213  003AA6  9E1E               	bcf	(___xxtofl@arg+2)^0,7,c
  8214  003AA8                     l9902:
  8215  003AA8  90D8               	bcf	status,0,c
  8216  003AAA  321B               	rrcf	___xxtofl@exp^0,f,c
  8217  003AAC  C01B  F016         	movff	___xxtofl@exp,??___xxtofl
  8218  003AB0  6A17               	clrf	(??___xxtofl+1)^0,c
  8219  003AB2  6A18               	clrf	(??___xxtofl+2)^0,c
  8220  003AB4  6A19               	clrf	(??___xxtofl+3)^0,c
  8221  003AB6  C016  F019         	movff	??___xxtofl,??___xxtofl+3
  8222  003ABA  6A18               	clrf	(??___xxtofl+2)^0,c
  8223  003ABC  6A17               	clrf	(??___xxtofl+1)^0,c
  8224  003ABE  6A16               	clrf	??___xxtofl^0,c
  8225  003AC0  5016               	movf	??___xxtofl^0,w,c
  8226  003AC2  121C               	iorwf	___xxtofl@arg^0,f,c
  8227  003AC4  5017               	movf	(??___xxtofl+1)^0,w,c
  8228  003AC6  121D               	iorwf	(___xxtofl@arg+1)^0,f,c
  8229  003AC8  5018               	movf	(??___xxtofl+2)^0,w,c
  8230  003ACA  121E               	iorwf	(___xxtofl@arg+2)^0,f,c
  8231  003ACC  5019               	movf	(??___xxtofl+3)^0,w,c
  8232  003ACE  121F               	iorwf	(___xxtofl@arg+3)^0,f,c
  8233  003AD0  501A               	movf	___xxtofl@sign^0,w,c
  8234  003AD2  B4D8               	btfsc	status,2,c
  8235  003AD4  EF6E  F01D         	goto	u7471
  8236  003AD8  EF70  F01D         	goto	u7470
  8237  003ADC                     u7471:
  8238  003ADC  EF78  F01D         	goto	l9912
  8239  003AE0                     u7470:
  8240  003AE0  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  8241  003AE2  EF77  F01D         	goto	u7480
  8242  003AE6  EF75  F01D         	goto	u7481
  8243  003AEA                     u7481:
  8244  003AEA  EF78  F01D         	goto	l9912
  8245  003AEE                     u7480:
  8246  003AEE  8E1F               	bsf	(___xxtofl@arg+3)^0,7,c
  8247  003AF0                     l9912:
  8248  003AF0  C01C  F012         	movff	___xxtofl@arg,?___xxtofl
  8249  003AF4  C01D  F013         	movff	___xxtofl@arg+1,?___xxtofl+1
  8250  003AF8  C01E  F014         	movff	___xxtofl@arg+2,?___xxtofl+2
  8251  003AFC  C01F  F015         	movff	___xxtofl@arg+3,?___xxtofl+3
  8252  003B00                     l1444:
  8253  003B00  0012               	return		;funcret
  8254  003B02                     __end_of___xxtofl:
  8255                           	callstack 0
  8256                           
  8257 ;; *************** function ___fltol *****************
  8258 ;; Defined at:
  8259 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;  f1              4   56[COMRAM] unsigned char 
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;  exp1            1   65[COMRAM] unsigned char 
  8264 ;;  sign1           1   64[COMRAM] unsigned char 
  8265 ;; Return value:  Size  Location     Type
  8266 ;;                  4   56[COMRAM] long 
  8267 ;; Registers used:
  8268 ;;		wreg, status,2, status,0
  8269 ;; Tracked objects:
  8270 ;;		On entry : 0/0
  8271 ;;		On exit  : 0/0
  8272 ;;		Unchanged: 0/0
  8273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8274 ;;      Params:         4       0       0       0       0       0       0
  8275 ;;      Locals:         2       0       0       0       0       0       0
  8276 ;;      Temps:          4       0       0       0       0       0       0
  8277 ;;      Totals:        10       0       0       0       0       0       0
  8278 ;;Total ram usage:       10 bytes
  8279 ;; Hardware stack levels used: 1
  8280 ;; Hardware stack levels required when called: 4
  8281 ;; This function calls:
  8282 ;;		Nothing
  8283 ;; This function is called by:
  8284 ;;		_touchScreenController
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text31
  8289  004548                     __ptext31:
  8290                           	callstack 0
  8291  004548                     ___fltol:
  8292                           	callstack 23
  8293  004548  343B               	rlcf	(___fltol@f1+2)^0,w,c
  8294  00454A  343C               	rlcf	(___fltol@f1+3)^0,w,c
  8295  00454C  6E42               	movwf	___fltol@exp1^0,c
  8296  00454E  5042               	movf	___fltol@exp1^0,w,c
  8297  004550  A4D8               	btfss	status,2,c
  8298  004552  EFAD  F022         	goto	u7321
  8299  004556  EFAF  F022         	goto	u7320
  8300  00455A                     u7321:
  8301  00455A  EFB9  F022         	goto	l9832
  8302  00455E                     u7320:
  8303  00455E                     l9828:
  8304  00455E  0E00               	movlw	0
  8305  004560  6E39               	movwf	?___fltol^0,c
  8306  004562  0E00               	movlw	0
  8307  004564  6E3A               	movwf	(?___fltol+1)^0,c
  8308  004566  0E00               	movlw	0
  8309  004568  6E3B               	movwf	(?___fltol+2)^0,c
  8310  00456A  0E00               	movlw	0
  8311  00456C  6E3C               	movwf	(?___fltol+3)^0,c
  8312  00456E  EF26  F023         	goto	l1083
  8313  004572                     l9832:
  8314  004572  C039  F03D         	movff	___fltol@f1,??___fltol
  8315  004576  C03A  F03E         	movff	___fltol@f1+1,??___fltol+1
  8316  00457A  C03B  F03F         	movff	___fltol@f1+2,??___fltol+2
  8317  00457E  C03C  F040         	movff	___fltol@f1+3,??___fltol+3
  8318  004582  0E20               	movlw	32
  8319  004584  EFC9  F022         	goto	u7330
  8320  004588                     u7335:
  8321  004588  90D8               	bcf	status,0,c
  8322  00458A  3240               	rrcf	(??___fltol+3)^0,f,c
  8323  00458C  323F               	rrcf	(??___fltol+2)^0,f,c
  8324  00458E  323E               	rrcf	(??___fltol+1)^0,f,c
  8325  004590  323D               	rrcf	??___fltol^0,f,c
  8326  004592                     u7330:
  8327  004592  2EE8               	decfsz	wreg,f,c
  8328  004594  EFC4  F022         	goto	u7335
  8329  004598  503D               	movf	??___fltol^0,w,c
  8330  00459A  6E41               	movwf	___fltol@sign1^0,c
  8331  00459C  8E3B               	bsf	(___fltol@f1+2)^0,7,c
  8332  00459E  0EFF               	movlw	255
  8333  0045A0  1639               	andwf	___fltol@f1^0,f,c
  8334  0045A2  0EFF               	movlw	255
  8335  0045A4  163A               	andwf	(___fltol@f1+1)^0,f,c
  8336  0045A6  0EFF               	movlw	255
  8337  0045A8  163B               	andwf	(___fltol@f1+2)^0,f,c
  8338  0045AA  0E00               	movlw	0
  8339  0045AC  163C               	andwf	(___fltol@f1+3)^0,f,c
  8340  0045AE  0E96               	movlw	150
  8341  0045B0  5E42               	subwf	___fltol@exp1^0,f,c
  8342  0045B2  BE42               	btfsc	___fltol@exp1^0,7,c
  8343  0045B4  EFE0  F022         	goto	u7340
  8344  0045B8  EFDE  F022         	goto	u7341
  8345  0045BC                     u7341:
  8346  0045BC  EFF6  F022         	goto	l9852
  8347  0045C0                     u7340:
  8348  0045C0  5042               	movf	___fltol@exp1^0,w,c
  8349  0045C2  0A80               	xorlw	128
  8350  0045C4  0F97               	addlw	151
  8351  0045C6  B0D8               	btfsc	status,0,c
  8352  0045C8  EFE8  F022         	goto	u7351
  8353  0045CC  EFEA  F022         	goto	u7350
  8354  0045D0                     u7351:
  8355  0045D0  EFEC  F022         	goto	l9848
  8356  0045D4                     u7350:
  8357  0045D4  EFAF  F022         	goto	l9828
  8358  0045D8                     l9848:
  8359  0045D8  90D8               	bcf	status,0,c
  8360  0045DA  323C               	rrcf	(___fltol@f1+3)^0,f,c
  8361  0045DC  323B               	rrcf	(___fltol@f1+2)^0,f,c
  8362  0045DE  323A               	rrcf	(___fltol@f1+1)^0,f,c
  8363  0045E0  3239               	rrcf	___fltol@f1^0,f,c
  8364  0045E2  3E42               	incfsz	___fltol@exp1^0,f,c
  8365  0045E4  EFEC  F022         	goto	l9848
  8366  0045E8  EF0E  F023         	goto	l9862
  8367  0045EC                     l9852:
  8368  0045EC  0E1F               	movlw	31
  8369  0045EE  6442               	cpfsgt	___fltol@exp1^0,c
  8370  0045F0  EFFC  F022         	goto	u7361
  8371  0045F4  EFFE  F022         	goto	u7360
  8372  0045F8                     u7361:
  8373  0045F8  EF06  F023         	goto	l9860
  8374  0045FC                     u7360:
  8375  0045FC  EFAF  F022         	goto	l9828
  8376  004600                     l9858:
  8377  004600  90D8               	bcf	status,0,c
  8378  004602  3639               	rlcf	___fltol@f1^0,f,c
  8379  004604  363A               	rlcf	(___fltol@f1+1)^0,f,c
  8380  004606  363B               	rlcf	(___fltol@f1+2)^0,f,c
  8381  004608  363C               	rlcf	(___fltol@f1+3)^0,f,c
  8382  00460A  0642               	decf	___fltol@exp1^0,f,c
  8383  00460C                     l9860:
  8384  00460C  5042               	movf	___fltol@exp1^0,w,c
  8385  00460E  A4D8               	btfss	status,2,c
  8386  004610  EF0C  F023         	goto	u7371
  8387  004614  EF0E  F023         	goto	u7370
  8388  004618                     u7371:
  8389  004618  EF00  F023         	goto	l9858
  8390  00461C                     u7370:
  8391  00461C                     l9862:
  8392  00461C  5041               	movf	___fltol@sign1^0,w,c
  8393  00461E  B4D8               	btfsc	status,2,c
  8394  004620  EF14  F023         	goto	u7381
  8395  004624  EF16  F023         	goto	u7380
  8396  004628                     u7381:
  8397  004628  EF1E  F023         	goto	l9866
  8398  00462C                     u7380:
  8399  00462C  1E3C               	comf	(___fltol@f1+3)^0,f,c
  8400  00462E  1E3B               	comf	(___fltol@f1+2)^0,f,c
  8401  004630  1E3A               	comf	(___fltol@f1+1)^0,f,c
  8402  004632  6C39               	negf	___fltol@f1^0,c
  8403  004634  0E00               	movlw	0
  8404  004636  223A               	addwfc	(___fltol@f1+1)^0,f,c
  8405  004638  223B               	addwfc	(___fltol@f1+2)^0,f,c
  8406  00463A  223C               	addwfc	(___fltol@f1+3)^0,f,c
  8407  00463C                     l9866:
  8408  00463C  C039  F039         	movff	___fltol@f1,?___fltol
  8409  004640  C03A  F03A         	movff	___fltol@f1+1,?___fltol+1
  8410  004644  C03B  F03B         	movff	___fltol@f1+2,?___fltol+2
  8411  004648  C03C  F03C         	movff	___fltol@f1+3,?___fltol+3
  8412  00464C                     l1083:
  8413  00464C  0012               	return		;funcret
  8414  00464E                     __end_of___fltol:
  8415                           	callstack 0
  8416                           
  8417 ;; *************** function ___fldiv *****************
  8418 ;; Defined at:
  8419 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8420 ;; Parameters:    Size  Location     Type
  8421 ;;  b               4   31[COMRAM] long 
  8422 ;;  a               4   35[COMRAM] long 
  8423 ;; Auto vars:     Size  Location     Type
  8424 ;;  grs             4   50[COMRAM] unsigned long 
  8425 ;;  rem             4   43[COMRAM] unsigned long 
  8426 ;;  new_exp         2   48[COMRAM] short 
  8427 ;;  aexp            1   55[COMRAM] unsigned char 
  8428 ;;  bexp            1   54[COMRAM] unsigned char 
  8429 ;;  sign            1   47[COMRAM] unsigned char 
  8430 ;; Return value:  Size  Location     Type
  8431 ;;                  4   31[COMRAM] unsigned char 
  8432 ;; Registers used:
  8433 ;;		wreg, status,2, status,0
  8434 ;; Tracked objects:
  8435 ;;		On entry : 0/0
  8436 ;;		On exit  : 0/0
  8437 ;;		Unchanged: 0/0
  8438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8439 ;;      Params:         8       0       0       0       0       0       0
  8440 ;;      Locals:        13       0       0       0       0       0       0
  8441 ;;      Temps:          4       0       0       0       0       0       0
  8442 ;;      Totals:        25       0       0       0       0       0       0
  8443 ;;Total ram usage:       25 bytes
  8444 ;; Hardware stack levels used: 1
  8445 ;; Hardware stack levels required when called: 4
  8446 ;; This function calls:
  8447 ;;		Nothing
  8448 ;; This function is called by:
  8449 ;;		_touchScreenController
  8450 ;; This function uses a non-reentrant model
  8451 ;;
  8452                           
  8453                           	psect	text32
  8454  002100                     __ptext32:
  8455                           	callstack 0
  8456  002100                     ___fldiv:
  8457                           	callstack 23
  8458  002100  5023               	movf	(___fldiv@b+3)^0,w,c
  8459  002102  0B80               	andlw	128
  8460  002104  6E30               	movwf	___fldiv@sign^0,c
  8461  002106  5023               	movf	(___fldiv@b+3)^0,w,c
  8462  002108  2423               	addwf	(___fldiv@b+3)^0,w,c
  8463  00210A  6E37               	movwf	___fldiv@bexp^0,c
  8464  00210C  AE22               	btfss	(___fldiv@b+2)^0,7,c
  8465  00210E  EF8B  F010         	goto	u7091
  8466  002112  EF8D  F010         	goto	u7090
  8467  002116                     u7091:
  8468  002116  EF8E  F010         	goto	l9694
  8469  00211A                     u7090:
  8470  00211A  8037               	bsf	___fldiv@bexp^0,0,c
  8471  00211C                     l9694:
  8472  00211C  5037               	movf	___fldiv@bexp^0,w,c
  8473  00211E  B4D8               	btfsc	status,2,c
  8474  002120  EF94  F010         	goto	u7101
  8475  002124  EF96  F010         	goto	u7100
  8476  002128                     u7101:
  8477  002128  EFAB  F010         	goto	l9704
  8478  00212C                     u7100:
  8479  00212C  2837               	incf	___fldiv@bexp^0,w,c
  8480  00212E  A4D8               	btfss	status,2,c
  8481  002130  EF9C  F010         	goto	u7111
  8482  002134  EF9E  F010         	goto	u7110
  8483  002138                     u7111:
  8484  002138  EFA6  F010         	goto	l9700
  8485  00213C                     u7110:
  8486  00213C  0E00               	movlw	0
  8487  00213E  6E20               	movwf	___fldiv@b^0,c
  8488  002140  0E00               	movlw	0
  8489  002142  6E21               	movwf	(___fldiv@b+1)^0,c
  8490  002144  0E00               	movlw	0
  8491  002146  6E22               	movwf	(___fldiv@b+2)^0,c
  8492  002148  0E00               	movlw	0
  8493  00214A  6E23               	movwf	(___fldiv@b+3)^0,c
  8494  00214C                     l9700:
  8495  00214C  8E22               	bsf	(___fldiv@b+2)^0,7,c
  8496  00214E  0E00               	movlw	0
  8497  002150  6E23               	movwf	(___fldiv@b+3)^0,c
  8498  002152  EFB3  F010         	goto	l9706
  8499  002156                     l9704:
  8500  002156  0E00               	movlw	0
  8501  002158  6E20               	movwf	___fldiv@b^0,c
  8502  00215A  0E00               	movlw	0
  8503  00215C  6E21               	movwf	(___fldiv@b+1)^0,c
  8504  00215E  0E00               	movlw	0
  8505  002160  6E22               	movwf	(___fldiv@b+2)^0,c
  8506  002162  0E00               	movlw	0
  8507  002164  6E23               	movwf	(___fldiv@b+3)^0,c
  8508  002166                     l9706:
  8509  002166  5027               	movf	(___fldiv@a+3)^0,w,c
  8510  002168  0B80               	andlw	128
  8511  00216A  1A30               	xorwf	___fldiv@sign^0,f,c
  8512  00216C  5027               	movf	(___fldiv@a+3)^0,w,c
  8513  00216E  2427               	addwf	(___fldiv@a+3)^0,w,c
  8514  002170  6E38               	movwf	___fldiv@aexp^0,c
  8515  002172  AE26               	btfss	(___fldiv@a+2)^0,7,c
  8516  002174  EFBE  F010         	goto	u7121
  8517  002178  EFC0  F010         	goto	u7120
  8518  00217C                     u7121:
  8519  00217C  EFC1  F010         	goto	l9714
  8520  002180                     u7120:
  8521  002180  8038               	bsf	___fldiv@aexp^0,0,c
  8522  002182                     l9714:
  8523  002182  5038               	movf	___fldiv@aexp^0,w,c
  8524  002184  B4D8               	btfsc	status,2,c
  8525  002186  EFC7  F010         	goto	u7131
  8526  00218A  EFC9  F010         	goto	u7130
  8527  00218E                     u7131:
  8528  00218E  EFDE  F010         	goto	l9724
  8529  002192                     u7130:
  8530  002192  2838               	incf	___fldiv@aexp^0,w,c
  8531  002194  A4D8               	btfss	status,2,c
  8532  002196  EFCF  F010         	goto	u7141
  8533  00219A  EFD1  F010         	goto	u7140
  8534  00219E                     u7141:
  8535  00219E  EFD9  F010         	goto	l9720
  8536  0021A2                     u7140:
  8537  0021A2  0E00               	movlw	0
  8538  0021A4  6E24               	movwf	___fldiv@a^0,c
  8539  0021A6  0E00               	movlw	0
  8540  0021A8  6E25               	movwf	(___fldiv@a+1)^0,c
  8541  0021AA  0E00               	movlw	0
  8542  0021AC  6E26               	movwf	(___fldiv@a+2)^0,c
  8543  0021AE  0E00               	movlw	0
  8544  0021B0  6E27               	movwf	(___fldiv@a+3)^0,c
  8545  0021B2                     l9720:
  8546  0021B2  8E26               	bsf	(___fldiv@a+2)^0,7,c
  8547  0021B4  0E00               	movlw	0
  8548  0021B6  6E27               	movwf	(___fldiv@a+3)^0,c
  8549  0021B8  EFE6  F010         	goto	l9726
  8550  0021BC                     l9724:
  8551  0021BC  0E00               	movlw	0
  8552  0021BE  6E24               	movwf	___fldiv@a^0,c
  8553  0021C0  0E00               	movlw	0
  8554  0021C2  6E25               	movwf	(___fldiv@a+1)^0,c
  8555  0021C4  0E00               	movlw	0
  8556  0021C6  6E26               	movwf	(___fldiv@a+2)^0,c
  8557  0021C8  0E00               	movlw	0
  8558  0021CA  6E27               	movwf	(___fldiv@a+3)^0,c
  8559  0021CC                     l9726:
  8560  0021CC  5024               	movf	___fldiv@a^0,w,c
  8561  0021CE  1025               	iorwf	(___fldiv@a+1)^0,w,c
  8562  0021D0  1026               	iorwf	(___fldiv@a+2)^0,w,c
  8563  0021D2  1027               	iorwf	(___fldiv@a+3)^0,w,c
  8564  0021D4  A4D8               	btfss	status,2,c
  8565  0021D6  EFEF  F010         	goto	u7151
  8566  0021DA  EFF1  F010         	goto	u7150
  8567  0021DE                     u7151:
  8568  0021DE  EF09  F011         	goto	l9738
  8569  0021E2                     u7150:
  8570  0021E2  0E00               	movlw	0
  8571  0021E4  6E20               	movwf	___fldiv@b^0,c
  8572  0021E6  0E00               	movlw	0
  8573  0021E8  6E21               	movwf	(___fldiv@b+1)^0,c
  8574  0021EA  0E00               	movlw	0
  8575  0021EC  6E22               	movwf	(___fldiv@b+2)^0,c
  8576  0021EE  0E00               	movlw	0
  8577  0021F0  6E23               	movwf	(___fldiv@b+3)^0,c
  8578  0021F2  0E80               	movlw	128
  8579  0021F4  1222               	iorwf	(___fldiv@b+2)^0,f,c
  8580  0021F6  0E7F               	movlw	127
  8581  0021F8  1223               	iorwf	(___fldiv@b+3)^0,f,c
  8582  0021FA                     l9732:
  8583  0021FA  5030               	movf	___fldiv@sign^0,w,c
  8584  0021FC  1223               	iorwf	(___fldiv@b+3)^0,f,c
  8585  0021FE  C020  F020         	movff	___fldiv@b,?___fldiv
  8586  002202  C021  F021         	movff	___fldiv@b+1,?___fldiv+1
  8587  002206  C022  F022         	movff	___fldiv@b+2,?___fldiv+2
  8588  00220A  C023  F023         	movff	___fldiv@b+3,?___fldiv+3
  8589  00220E  EF4C  F012         	goto	l1368
  8590  002212                     l9738:
  8591  002212  5037               	movf	___fldiv@bexp^0,w,c
  8592  002214  A4D8               	btfss	status,2,c
  8593  002216  EF0F  F011         	goto	u7161
  8594  00221A  EF11  F011         	goto	u7160
  8595  00221E                     u7161:
  8596  00221E  EF1B  F011         	goto	l9746
  8597  002222                     u7160:
  8598  002222  0E00               	movlw	0
  8599  002224  6E20               	movwf	?___fldiv^0,c
  8600  002226  0E00               	movlw	0
  8601  002228  6E21               	movwf	(?___fldiv+1)^0,c
  8602  00222A  0E00               	movlw	0
  8603  00222C  6E22               	movwf	(?___fldiv+2)^0,c
  8604  00222E  0E00               	movlw	0
  8605  002230  6E23               	movwf	(?___fldiv+3)^0,c
  8606  002232  EF4C  F012         	goto	l1368
  8607  002236                     l9746:
  8608  002236  5038               	movf	___fldiv@aexp^0,w,c
  8609  002238  C037  F028         	movff	___fldiv@bexp,??___fldiv
  8610  00223C  6A29               	clrf	(??___fldiv+1)^0,c
  8611  00223E  5E28               	subwf	??___fldiv^0,f,c
  8612  002240  0E00               	movlw	0
  8613  002242  5A29               	subwfb	(??___fldiv+1)^0,f,c
  8614  002244  0E7F               	movlw	127
  8615  002246  2428               	addwf	??___fldiv^0,w,c
  8616  002248  6E31               	movwf	___fldiv@new_exp^0,c
  8617  00224A  0E00               	movlw	0
  8618  00224C  2029               	addwfc	(??___fldiv+1)^0,w,c
  8619  00224E  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  8620  002250  C020  F02C         	movff	___fldiv@b,___fldiv@rem
  8621  002254  C021  F02D         	movff	___fldiv@b+1,___fldiv@rem+1
  8622  002258  C022  F02E         	movff	___fldiv@b+2,___fldiv@rem+2
  8623  00225C  C023  F02F         	movff	___fldiv@b+3,___fldiv@rem+3
  8624  002260  0E00               	movlw	0
  8625  002262  6E20               	movwf	___fldiv@b^0,c
  8626  002264  0E00               	movlw	0
  8627  002266  6E21               	movwf	(___fldiv@b+1)^0,c
  8628  002268  0E00               	movlw	0
  8629  00226A  6E22               	movwf	(___fldiv@b+2)^0,c
  8630  00226C  0E00               	movlw	0
  8631  00226E  6E23               	movwf	(___fldiv@b+3)^0,c
  8632  002270  0E00               	movlw	0
  8633  002272  6E33               	movwf	___fldiv@grs^0,c
  8634  002274  0E00               	movlw	0
  8635  002276  6E34               	movwf	(___fldiv@grs+1)^0,c
  8636  002278  0E00               	movlw	0
  8637  00227A  6E35               	movwf	(___fldiv@grs+2)^0,c
  8638  00227C  0E00               	movlw	0
  8639  00227E  6E36               	movwf	(___fldiv@grs+3)^0,c
  8640  002280  0E00               	movlw	0
  8641  002282  6E38               	movwf	___fldiv@aexp^0,c
  8642  002284  EF7C  F011         	goto	l1370
  8643  002288                     l9756:
  8644  002288  5038               	movf	___fldiv@aexp^0,w,c
  8645  00228A  B4D8               	btfsc	status,2,c
  8646  00228C  EF4A  F011         	goto	u7171
  8647  002290  EF4C  F011         	goto	u7170
  8648  002294                     u7171:
  8649  002294  EF63  F011         	goto	l9764
  8650  002298                     u7170:
  8651  002298  90D8               	bcf	status,0,c
  8652  00229A  362C               	rlcf	___fldiv@rem^0,f,c
  8653  00229C  362D               	rlcf	(___fldiv@rem+1)^0,f,c
  8654  00229E  362E               	rlcf	(___fldiv@rem+2)^0,f,c
  8655  0022A0  362F               	rlcf	(___fldiv@rem+3)^0,f,c
  8656  0022A2  90D8               	bcf	status,0,c
  8657  0022A4  3620               	rlcf	___fldiv@b^0,f,c
  8658  0022A6  3621               	rlcf	(___fldiv@b+1)^0,f,c
  8659  0022A8  3622               	rlcf	(___fldiv@b+2)^0,f,c
  8660  0022AA  3623               	rlcf	(___fldiv@b+3)^0,f,c
  8661  0022AC  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  8662  0022AE  EF5B  F011         	goto	u7181
  8663  0022B2  EF5D  F011         	goto	u7180
  8664  0022B6                     u7181:
  8665  0022B6  EF5E  F011         	goto	l1373
  8666  0022BA                     u7180:
  8667  0022BA  8020               	bsf	___fldiv@b^0,0,c
  8668  0022BC                     l1373:
  8669  0022BC  90D8               	bcf	status,0,c
  8670  0022BE  3633               	rlcf	___fldiv@grs^0,f,c
  8671  0022C0  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  8672  0022C2  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  8673  0022C4  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  8674  0022C6                     l9764:
  8675  0022C6  5024               	movf	___fldiv@a^0,w,c
  8676  0022C8  5C2C               	subwf	___fldiv@rem^0,w,c
  8677  0022CA  5025               	movf	(___fldiv@a+1)^0,w,c
  8678  0022CC  582D               	subwfb	(___fldiv@rem+1)^0,w,c
  8679  0022CE  5026               	movf	(___fldiv@a+2)^0,w,c
  8680  0022D0  582E               	subwfb	(___fldiv@rem+2)^0,w,c
  8681  0022D2  5027               	movf	(___fldiv@a+3)^0,w,c
  8682  0022D4  582F               	subwfb	(___fldiv@rem+3)^0,w,c
  8683  0022D6  A0D8               	btfss	status,0,c
  8684  0022D8  EF70  F011         	goto	u7191
  8685  0022DC  EF72  F011         	goto	u7190
  8686  0022E0                     u7191:
  8687  0022E0  EF7B  F011         	goto	l9770
  8688  0022E4                     u7190:
  8689  0022E4  8C36               	bsf	(___fldiv@grs+3)^0,6,c
  8690  0022E6  5024               	movf	___fldiv@a^0,w,c
  8691  0022E8  5E2C               	subwf	___fldiv@rem^0,f,c
  8692  0022EA  5025               	movf	(___fldiv@a+1)^0,w,c
  8693  0022EC  5A2D               	subwfb	(___fldiv@rem+1)^0,f,c
  8694  0022EE  5026               	movf	(___fldiv@a+2)^0,w,c
  8695  0022F0  5A2E               	subwfb	(___fldiv@rem+2)^0,f,c
  8696  0022F2  5027               	movf	(___fldiv@a+3)^0,w,c
  8697  0022F4  5A2F               	subwfb	(___fldiv@rem+3)^0,f,c
  8698  0022F6                     l9770:
  8699  0022F6  2A38               	incf	___fldiv@aexp^0,f,c
  8700  0022F8                     l1370:
  8701  0022F8  0E19               	movlw	25
  8702  0022FA  6438               	cpfsgt	___fldiv@aexp^0,c
  8703  0022FC  EF82  F011         	goto	u7201
  8704  002300  EF84  F011         	goto	u7200
  8705  002304                     u7201:
  8706  002304  EF44  F011         	goto	l9756
  8707  002308                     u7200:
  8708  002308  502C               	movf	___fldiv@rem^0,w,c
  8709  00230A  102D               	iorwf	(___fldiv@rem+1)^0,w,c
  8710  00230C  102E               	iorwf	(___fldiv@rem+2)^0,w,c
  8711  00230E  102F               	iorwf	(___fldiv@rem+3)^0,w,c
  8712  002310  B4D8               	btfsc	status,2,c
  8713  002312  EF8D  F011         	goto	u7211
  8714  002316  EF8F  F011         	goto	u7210
  8715  00231A                     u7211:
  8716  00231A  EFA7  F011         	goto	l9782
  8717  00231E                     u7210:
  8718  00231E  8033               	bsf	___fldiv@grs^0,0,c
  8719  002320  EFA7  F011         	goto	l9782
  8720  002324                     l9776:
  8721  002324  90D8               	bcf	status,0,c
  8722  002326  3620               	rlcf	___fldiv@b^0,f,c
  8723  002328  3621               	rlcf	(___fldiv@b+1)^0,f,c
  8724  00232A  3622               	rlcf	(___fldiv@b+2)^0,f,c
  8725  00232C  3623               	rlcf	(___fldiv@b+3)^0,f,c
  8726  00232E  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  8727  002330  EF9C  F011         	goto	u7221
  8728  002334  EF9E  F011         	goto	u7220
  8729  002338                     u7221:
  8730  002338  EF9F  F011         	goto	l1379
  8731  00233C                     u7220:
  8732  00233C  8020               	bsf	___fldiv@b^0,0,c
  8733  00233E                     l1379:
  8734  00233E  90D8               	bcf	status,0,c
  8735  002340  3633               	rlcf	___fldiv@grs^0,f,c
  8736  002342  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  8737  002344  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  8738  002346  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  8739  002348  0631               	decf	___fldiv@new_exp^0,f,c
  8740  00234A  A0D8               	btfss	status,0,c
  8741  00234C  0632               	decf	(___fldiv@new_exp+1)^0,f,c
  8742  00234E                     l9782:
  8743  00234E  AE22               	btfss	(___fldiv@b+2)^0,7,c
  8744  002350  EFAC  F011         	goto	u7231
  8745  002354  EFAE  F011         	goto	u7230
  8746  002358                     u7231:
  8747  002358  EF92  F011         	goto	l9776
  8748  00235C                     u7230:
  8749  00235C  0E00               	movlw	0
  8750  00235E  6E38               	movwf	___fldiv@aexp^0,c
  8751  002360  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  8752  002362  EFB5  F011         	goto	u7241
  8753  002366  EFB7  F011         	goto	u7240
  8754  00236A                     u7241:
  8755  00236A  EFDB  F011         	goto	l1381
  8756  00236E                     u7240:
  8757  00236E  0EFF               	movlw	255
  8758  002370  1433               	andwf	___fldiv@grs^0,w,c
  8759  002372  6E28               	movwf	??___fldiv^0,c
  8760  002374  0EFF               	movlw	255
  8761  002376  1434               	andwf	(___fldiv@grs+1)^0,w,c
  8762  002378  6E29               	movwf	(??___fldiv+1)^0,c
  8763  00237A  0EFF               	movlw	255
  8764  00237C  1435               	andwf	(___fldiv@grs+2)^0,w,c
  8765  00237E  6E2A               	movwf	(??___fldiv+2)^0,c
  8766  002380  0E7F               	movlw	127
  8767  002382  1436               	andwf	(___fldiv@grs+3)^0,w,c
  8768  002384  6E2B               	movwf	(??___fldiv+3)^0,c
  8769  002386  5028               	movf	??___fldiv^0,w,c
  8770  002388  1029               	iorwf	(??___fldiv+1)^0,w,c
  8771  00238A  102A               	iorwf	(??___fldiv+2)^0,w,c
  8772  00238C  102B               	iorwf	(??___fldiv+3)^0,w,c
  8773  00238E  B4D8               	btfsc	status,2,c
  8774  002390  EFCC  F011         	goto	u7251
  8775  002394  EFCE  F011         	goto	u7250
  8776  002398                     u7251:
  8777  002398  EFD2  F011         	goto	l1382
  8778  00239C                     u7250:
  8779  00239C                     l9790:
  8780  00239C  0E01               	movlw	1
  8781  00239E  6E38               	movwf	___fldiv@aexp^0,c
  8782  0023A0  EFDB  F011         	goto	l1381
  8783  0023A4                     l1382:
  8784  0023A4  A020               	btfss	___fldiv@b^0,0,c
  8785  0023A6  EFD7  F011         	goto	u7261
  8786  0023AA  EFD9  F011         	goto	u7260
  8787  0023AE                     u7261:
  8788  0023AE  EFDB  F011         	goto	l1381
  8789  0023B2                     u7260:
  8790  0023B2  EFCE  F011         	goto	l9790
  8791  0023B6                     l1381:
  8792  0023B6  5038               	movf	___fldiv@aexp^0,w,c
  8793  0023B8  B4D8               	btfsc	status,2,c
  8794  0023BA  EFE1  F011         	goto	u7271
  8795  0023BE  EFE3  F011         	goto	u7270
  8796  0023C2                     u7271:
  8797  0023C2  EF07  F012         	goto	l9802
  8798  0023C6                     u7270:
  8799  0023C6  0E01               	movlw	1
  8800  0023C8  2620               	addwf	___fldiv@b^0,f,c
  8801  0023CA  0E00               	movlw	0
  8802  0023CC  2221               	addwfc	(___fldiv@b+1)^0,f,c
  8803  0023CE  2222               	addwfc	(___fldiv@b+2)^0,f,c
  8804  0023D0  2223               	addwfc	(___fldiv@b+3)^0,f,c
  8805  0023D2  A023               	btfss	(___fldiv@b+3)^0,0,c
  8806  0023D4  EFEE  F011         	goto	u7281
  8807  0023D8  EFF0  F011         	goto	u7280
  8808  0023DC                     u7281:
  8809  0023DC  EF07  F012         	goto	l9802
  8810  0023E0                     u7280:
  8811  0023E0  C020  F028         	movff	___fldiv@b,??___fldiv
  8812  0023E4  C021  F029         	movff	___fldiv@b+1,??___fldiv+1
  8813  0023E8  C022  F02A         	movff	___fldiv@b+2,??___fldiv+2
  8814  0023EC  C023  F02B         	movff	___fldiv@b+3,??___fldiv+3
  8815  0023F0  342B               	rlcf	(??___fldiv+3)^0,w,c
  8816  0023F2  322B               	rrcf	(??___fldiv+3)^0,f,c
  8817  0023F4  322A               	rrcf	(??___fldiv+2)^0,f,c
  8818  0023F6  3229               	rrcf	(??___fldiv+1)^0,f,c
  8819  0023F8  3228               	rrcf	??___fldiv^0,f,c
  8820  0023FA  C028  F020         	movff	??___fldiv,___fldiv@b
  8821  0023FE  C029  F021         	movff	??___fldiv+1,___fldiv@b+1
  8822  002402  C02A  F022         	movff	??___fldiv+2,___fldiv@b+2
  8823  002406  C02B  F023         	movff	??___fldiv+3,___fldiv@b+3
  8824  00240A  4A31               	infsnz	___fldiv@new_exp^0,f,c
  8825  00240C  2A32               	incf	(___fldiv@new_exp+1)^0,f,c
  8826  00240E                     l9802:
  8827  00240E  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8828  002410  EF12  F012         	goto	u7291
  8829  002414  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  8830  002416  E108               	bnz	u7290
  8831  002418  2831               	incf	___fldiv@new_exp^0,w,c
  8832  00241A  A0D8               	btfss	status,0,c
  8833  00241C  EF12  F012         	goto	u7291
  8834  002420  EF14  F012         	goto	u7290
  8835  002424                     u7291:
  8836  002424  EF1F  F012         	goto	l9806
  8837  002428                     u7290:
  8838  002428  0E00               	movlw	0
  8839  00242A  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  8840  00242C  6831               	setf	___fldiv@new_exp^0,c
  8841  00242E  0E00               	movlw	0
  8842  002430  6E20               	movwf	___fldiv@b^0,c
  8843  002432  0E00               	movlw	0
  8844  002434  6E21               	movwf	(___fldiv@b+1)^0,c
  8845  002436  0E00               	movlw	0
  8846  002438  6E22               	movwf	(___fldiv@b+2)^0,c
  8847  00243A  0E00               	movlw	0
  8848  00243C  6E23               	movwf	(___fldiv@b+3)^0,c
  8849  00243E                     l9806:
  8850  00243E  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8851  002440  EF2C  F012         	goto	u7300
  8852  002444  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  8853  002446  E106               	bnz	u7301
  8854  002448  0431               	decf	___fldiv@new_exp^0,w,c
  8855  00244A  B0D8               	btfsc	status,0,c
  8856  00244C  EF2A  F012         	goto	u7301
  8857  002450  EF2C  F012         	goto	u7300
  8858  002454                     u7301:
  8859  002454  EF3A  F012         	goto	l9810
  8860  002458                     u7300:
  8861  002458  0E00               	movlw	0
  8862  00245A  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  8863  00245C  0E00               	movlw	0
  8864  00245E  6E31               	movwf	___fldiv@new_exp^0,c
  8865  002460  0E00               	movlw	0
  8866  002462  6E20               	movwf	___fldiv@b^0,c
  8867  002464  0E00               	movlw	0
  8868  002466  6E21               	movwf	(___fldiv@b+1)^0,c
  8869  002468  0E00               	movlw	0
  8870  00246A  6E22               	movwf	(___fldiv@b+2)^0,c
  8871  00246C  0E00               	movlw	0
  8872  00246E  6E23               	movwf	(___fldiv@b+3)^0,c
  8873  002470  0E00               	movlw	0
  8874  002472  6E30               	movwf	___fldiv@sign^0,c
  8875  002474                     l9810:
  8876  002474  C031  F037         	movff	___fldiv@new_exp,___fldiv@bexp
  8877  002478  A037               	btfss	___fldiv@bexp^0,0,c
  8878  00247A  EF41  F012         	goto	u7311
  8879  00247E  EF43  F012         	goto	u7310
  8880  002482                     u7311:
  8881  002482  EF46  F012         	goto	l9816
  8882  002486                     u7310:
  8883  002486  8E22               	bsf	(___fldiv@b+2)^0,7,c
  8884  002488  EF47  F012         	goto	l9818
  8885  00248C                     l9816:
  8886  00248C  9E22               	bcf	(___fldiv@b+2)^0,7,c
  8887  00248E                     l9818:
  8888  00248E  90D8               	bcf	status,0,c
  8889  002490  3037               	rrcf	___fldiv@bexp^0,w,c
  8890  002492  6E23               	movwf	(___fldiv@b+3)^0,c
  8891  002494  EFFD  F010         	goto	l9732
  8892  002498                     l1368:
  8893  002498  0012               	return		;funcret
  8894  00249A                     __end_of___fldiv:
  8895                           	callstack 0
  8896                           
  8897 ;; *************** function _XF_scheduleTimer *****************
  8898 ;; Defined at:
  8899 ;;		line 96 in file "xf/xf.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;  tm              2   18[COMRAM] unsigned short 
  8902 ;;  ev              1   20[COMRAM] unsigned char 
  8903 ;;  inISR           1   21[COMRAM] _Bool 
  8904 ;; Auto vars:     Size  Location     Type
  8905 ;;  i               1   22[COMRAM] unsigned char 
  8906 ;; Return value:  Size  Location     Type
  8907 ;;                  1    wreg      unsigned char 
  8908 ;; Registers used:
  8909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8910 ;; Tracked objects:
  8911 ;;		On entry : 0/0
  8912 ;;		On exit  : 0/0
  8913 ;;		Unchanged: 0/0
  8914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8915 ;;      Params:         4       0       0       0       0       0       0
  8916 ;;      Locals:         1       0       0       0       0       0       0
  8917 ;;      Temps:          0       0       0       0       0       0       0
  8918 ;;      Totals:         5       0       0       0       0       0       0
  8919 ;;Total ram usage:        5 bytes
  8920 ;; Hardware stack levels used: 1
  8921 ;; Hardware stack levels required when called: 5
  8922 ;; This function calls:
  8923 ;;		_ENTERCRITICAL
  8924 ;;		_LEAVECRITICAL
  8925 ;; This function is called by:
  8926 ;;		_touchScreenController
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           	psect	text33
  8931  0056B6                     __ptext33:
  8932                           	callstack 0
  8933  0056B6                     _XF_scheduleTimer:
  8934                           	callstack 22
  8935  0056B6                     
  8936                           ;xf/xf.c: 96: TimerID XF_scheduleTimer(Time tm, Event ev, _Bool inISR);xf/xf.c: 97: {;xf
      +                          /xf.c: 98:     uint8_t i;;xf/xf.c: 100:     ENTERCRITICAL(inISR);
  8937  0056B6  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  8938  0056B8  EC75  F02F         	call	_ENTERCRITICAL
  8939  0056BC                     
  8940                           ;xf/xf.c: 101:     for (i=0; i<8; i++)
  8941  0056BC  0E00               	movlw	0
  8942  0056BE  6E17               	movwf	XF_scheduleTimer@i^0,c
  8943  0056C0                     l9568:
  8944                           
  8945                           ;xf/xf.c: 102:     {;xf/xf.c: 103:         if (theXF.timerList[i].ev == NULLEVENT)
  8946  0056C0  5017               	movf	XF_scheduleTimer@i^0,w,c
  8947  0056C2  0D03               	mullw	3
  8948  0056C4  0EB7               	movlw	low (_theXF+2)
  8949  0056C6  24F3               	addwf	243,w,c
  8950  0056C8  6ED9               	movwf	fsr2l,c
  8951  0056CA  0E00               	movlw	high (_theXF+2)
  8952  0056CC  20F4               	addwfc	prodh,w,c
  8953  0056CE  6EDA               	movwf	fsr2h,c
  8954  0056D0  50DF               	movf	indf2,w,c
  8955  0056D2  A4D8               	btfss	status,2,c
  8956  0056D4  EF6E  F02B         	goto	u6861
  8957  0056D8  EF70  F02B         	goto	u6860
  8958  0056DC                     u6861:
  8959  0056DC  EF88  F02B         	goto	l9572
  8960  0056E0                     u6860:
  8961  0056E0                     
  8962                           ;xf/xf.c: 104:         {;xf/xf.c: 105:             theXF.timerList[i].tm = tm;
  8963  0056E0  5017               	movf	XF_scheduleTimer@i^0,w,c
  8964  0056E2  0D03               	mullw	3
  8965  0056E4  0EB5               	movlw	low _theXF
  8966  0056E6  24F3               	addwf	243,w,c
  8967  0056E8  6ED9               	movwf	fsr2l,c
  8968  0056EA  0E00               	movlw	high _theXF
  8969  0056EC  20F4               	addwfc	prodh,w,c
  8970  0056EE  6EDA               	movwf	fsr2h,c
  8971  0056F0  C013  FFDE         	movff	XF_scheduleTimer@tm,postinc2
  8972  0056F4  C014  FFDD         	movff	XF_scheduleTimer@tm+1,postdec2
  8973                           
  8974                           ;xf/xf.c: 106:             theXF.timerList[i].ev = ev;
  8975  0056F8  5017               	movf	XF_scheduleTimer@i^0,w,c
  8976  0056FA  0D03               	mullw	3
  8977  0056FC  0EB7               	movlw	low (_theXF+2)
  8978  0056FE  24F3               	addwf	243,w,c
  8979  005700  6ED9               	movwf	fsr2l,c
  8980  005702  0E00               	movlw	high (_theXF+2)
  8981  005704  20F4               	addwfc	prodh,w,c
  8982  005706  6EDA               	movwf	fsr2h,c
  8983  005708  C015  FFDF         	movff	XF_scheduleTimer@ev,indf2
  8984                           
  8985                           ;xf/xf.c: 107:             break;
  8986  00570C  EF91  F02B         	goto	l9576
  8987  005710                     l9572:
  8988                           
  8989                           ;xf/xf.c: 109:     }
  8990  005710  2A17               	incf	XF_scheduleTimer@i^0,f,c
  8991  005712  0E07               	movlw	7
  8992  005714  6417               	cpfsgt	XF_scheduleTimer@i^0,c
  8993  005716  EF8F  F02B         	goto	u6871
  8994  00571A  EF91  F02B         	goto	u6870
  8995  00571E                     u6871:
  8996  00571E  EF60  F02B         	goto	l9568
  8997  005722                     u6870:
  8998  005722                     l9576:
  8999                           
  9000                           ;xf/xf.c: 114:     LEAVECRITICAL(inISR);
  9001  005722  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  9002  005724  EC6A  F02F         	call	_LEAVECRITICAL
  9003  005728  0012               	return		;funcret
  9004  00572A                     __end_of_XF_scheduleTimer:
  9005                           	callstack 0
  9006                           
  9007 ;; *************** function _GameParameters_setY *****************
  9008 ;; Defined at:
  9009 ;;		line 50 in file "class/gameParameters.c"
  9010 ;; Parameters:    Size  Location     Type
  9011 ;;  s               2   17[COMRAM] PTR struct GameParameter
  9012 ;;		 -> g1(201), 
  9013 ;;  value           2   19[COMRAM] unsigned short 
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;		None
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  1    wreg      void 
  9018 ;; Registers used:
  9019 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9025 ;;      Params:         4       0       0       0       0       0       0
  9026 ;;      Locals:         0       0       0       0       0       0       0
  9027 ;;      Temps:          0       0       0       0       0       0       0
  9028 ;;      Totals:         4       0       0       0       0       0       0
  9029 ;;Total ram usage:        4 bytes
  9030 ;; Hardware stack levels used: 1
  9031 ;; Hardware stack levels required when called: 4
  9032 ;; This function calls:
  9033 ;;		Nothing
  9034 ;; This function is called by:
  9035 ;;		_touchScreenController
  9036 ;; This function uses a non-reentrant model
  9037 ;;
  9038                           
  9039                           	psect	text34
  9040  005EA8                     __ptext34:
  9041                           	callstack 0
  9042  005EA8                     _GameParameters_setY:
  9043                           	callstack 23
  9044  005EA8                     
  9045                           ;class/gameParameters.c: 50: void GameParameters_setY(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 51: {;class/gameParameters.c: 52:     s->y=value;
  9046  005EA8  EE20 F006          	lfsr	2,6
  9047  005EAC  5012               	movf	GameParameters_setY@s^0,w,c
  9048  005EAE  26D9               	addwf	fsr2l,f,c
  9049  005EB0  5013               	movf	(GameParameters_setY@s+1)^0,w,c
  9050  005EB2  22DA               	addwfc	fsr2h,f,c
  9051  005EB4  C014  FFDE         	movff	GameParameters_setY@value,postinc2
  9052  005EB8  C015  FFDD         	movff	GameParameters_setY@value+1,postdec2
  9053  005EBC  0012               	return		;funcret
  9054  005EBE                     __end_of_GameParameters_setY:
  9055                           	callstack 0
  9056                           
  9057 ;; *************** function _GameParameters_setX *****************
  9058 ;; Defined at:
  9059 ;;		line 46 in file "class/gameParameters.c"
  9060 ;; Parameters:    Size  Location     Type
  9061 ;;  s               2   17[COMRAM] PTR struct GameParameter
  9062 ;;		 -> g1(201), 
  9063 ;;  value           2   19[COMRAM] unsigned short 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;		None
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  1    wreg      void 
  9068 ;; Registers used:
  9069 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9075 ;;      Params:         4       0       0       0       0       0       0
  9076 ;;      Locals:         0       0       0       0       0       0       0
  9077 ;;      Temps:          0       0       0       0       0       0       0
  9078 ;;      Totals:         4       0       0       0       0       0       0
  9079 ;;Total ram usage:        4 bytes
  9080 ;; Hardware stack levels used: 1
  9081 ;; Hardware stack levels required when called: 4
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_touchScreenController
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text35
  9090  005EBE                     __ptext35:
  9091                           	callstack 0
  9092  005EBE                     _GameParameters_setX:
  9093                           	callstack 23
  9094  005EBE                     
  9095                           ;class/gameParameters.c: 46: void GameParameters_setX(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 47: {;class/gameParameters.c: 48:     s->x=value;
  9096  005EBE  EE20 F004          	lfsr	2,4
  9097  005EC2  5012               	movf	GameParameters_setX@s^0,w,c
  9098  005EC4  26D9               	addwf	fsr2l,f,c
  9099  005EC6  5013               	movf	(GameParameters_setX@s+1)^0,w,c
  9100  005EC8  22DA               	addwfc	fsr2h,f,c
  9101  005ECA  C014  FFDE         	movff	GameParameters_setX@value,postinc2
  9102  005ECE  C015  FFDD         	movff	GameParameters_setX@value+1,postdec2
  9103  005ED2  0012               	return		;funcret
  9104  005ED4                     __end_of_GameParameters_setX:
  9105                           	callstack 0
  9106                           
  9107 ;; *************** function _sleepSM *****************
  9108 ;; Defined at:
  9109 ;;		line 19 in file "stateMachine/sleepSM.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;  ev              1    wreg     unsigned char 
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;  ev              1   21[COMRAM] unsigned char 
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      void 
  9116 ;; Registers used:
  9117 ;;		wreg, status,2, status,0, cstack
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9123 ;;      Params:         0       0       0       0       0       0       0
  9124 ;;      Locals:         1       0       0       0       0       0       0
  9125 ;;      Temps:          2       0       0       0       0       0       0
  9126 ;;      Totals:         3       0       0       0       0       0       0
  9127 ;;Total ram usage:        3 bytes
  9128 ;; Hardware stack levels used: 1
  9129 ;; Hardware stack levels required when called: 5
  9130 ;; This function calls:
  9131 ;;		_sleepController
  9132 ;; This function is called by:
  9133 ;;		_Factory_exec
  9134 ;; This function uses a non-reentrant model
  9135 ;;
  9136                           
  9137                           	psect	text36
  9138  005258                     __ptext36:
  9139                           	callstack 0
  9140  005258                     _sleepSM:
  9141                           	callstack 24
  9142                           
  9143                           ;incstack = 0
  9144                           ;sleepSM@ev stored from wreg
  9145  005258  6E16               	movwf	sleepSM@ev^0,c
  9146  00525A                     
  9147                           ;stateMachine/sleepSM.c: 19: void sleepSM(Event ev);stateMachine/sleepSM.c: 20: {;stateM
      +                          achine/sleepSM.c: 21:    switch(sleepState)
  9148  00525A  EF62  F029         	goto	l10088
  9149  00525E                     l10062:
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;stateMachine/sleepSM.c: 24:             if(ev==evTimer30)
  9153  00525E  0E03               	movlw	3
  9154  005260  1816               	xorwf	sleepSM@ev^0,w,c
  9155  005262  A4D8               	btfss	status,2,c
  9156  005264  EF36  F029         	goto	u7591
  9157  005268  EF38  F029         	goto	u7590
  9158  00526C                     u7591:
  9159  00526C  EF7C  F029         	goto	l413
  9160  005270                     u7590:
  9161  005270                     
  9162                           ; BSR set to: 0
  9163                           ;stateMachine/sleepSM.c: 25:             {;stateMachine/sleepSM.c: 26:                sl
      +                          eepState=BACKLIGHTOFF;
  9164  005270  0E01               	movlw	1
  9165  005272  6FDF               	movwf	_sleepState& (0+255),b
  9166  005274                     l10066:
  9167                           
  9168                           ; BSR set to: 0
  9169                           ;stateMachine/sleepSM.c: 27:                sleepController();
  9170  005274  ECB4  F02E         	call	_sleepController	;wreg free
  9171  005278  EF7C  F029         	goto	l413
  9172  00527C                     l10068:
  9173                           
  9174                           ; BSR set to: 0
  9175                           ;stateMachine/sleepSM.c: 31:             if(ev==evTimer30)
  9176  00527C  0E03               	movlw	3
  9177  00527E  1816               	xorwf	sleepSM@ev^0,w,c
  9178  005280  A4D8               	btfss	status,2,c
  9179  005282  EF45  F029         	goto	u7601
  9180  005286  EF47  F029         	goto	u7600
  9181  00528A                     u7601:
  9182  00528A  EF4B  F029         	goto	l10074
  9183  00528E                     u7600:
  9184  00528E                     
  9185                           ; BSR set to: 0
  9186                           ;stateMachine/sleepSM.c: 32:             {;stateMachine/sleepSM.c: 33:                sl
      +                          eepState=SLEEP;
  9187  00528E  0E02               	movlw	2
  9188  005290  6FDF               	movwf	_sleepState& (0+255),b
  9189  005292                     
  9190                           ; BSR set to: 0
  9191                           ;stateMachine/sleepSM.c: 34:                sleepController();
  9192  005292  ECB4  F02E         	call	_sleepController	;wreg free
  9193  005296                     l10074:
  9194                           
  9195                           ;stateMachine/sleepSM.c: 36:             if(ev==evPress)
  9196  005296  0416               	decf	sleepSM@ev^0,w,c
  9197  005298  A4D8               	btfss	status,2,c
  9198  00529A  EF51  F029         	goto	u7611
  9199  00529E  EF53  F029         	goto	u7610
  9200  0052A2                     u7611:
  9201  0052A2  EF7C  F029         	goto	l413
  9202  0052A6                     u7610:
  9203  0052A6                     l10076:
  9204                           
  9205                           ;stateMachine/sleepSM.c: 37:             {;stateMachine/sleepSM.c: 38:                sl
      +                          eepState=WAKEUP;
  9206  0052A6  0E00               	movlw	0
  9207  0052A8  0100               	movlb	0	; () banked
  9208  0052AA  6FDF               	movwf	_sleepState& (0+255),b
  9209  0052AC  EF3A  F029         	goto	l10066
  9210  0052B0                     l10080:
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;stateMachine/sleepSM.c: 43:             if(ev==evPress)
  9214  0052B0  0416               	decf	sleepSM@ev^0,w,c
  9215  0052B2  A4D8               	btfss	status,2,c
  9216  0052B4  EF5E  F029         	goto	u7621
  9217  0052B8  EF60  F029         	goto	u7620
  9218  0052BC                     u7621:
  9219  0052BC  EF7C  F029         	goto	l413
  9220  0052C0                     u7620:
  9221  0052C0  EF53  F029         	goto	l10076
  9222  0052C4                     l10088:
  9223  0052C4  0100               	movlb	0	; () banked
  9224  0052C6  51DF               	movf	_sleepState& (0+255),w,b
  9225  0052C8  6E14               	movwf	??_sleepSM^0,c
  9226  0052CA  6A15               	clrf	(??_sleepSM+1)^0,c
  9227                           
  9228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9229                           ; Switch size 1, requested type "simple"
  9230                           ; Number of cases is 1, Range of values is 0 to 0
  9231                           ; switch strategies available:
  9232                           ; Name         Instructions Cycles
  9233                           ; simple_byte            4     3 (average)
  9234                           ;	Chosen strategy is simple_byte
  9235  0052CC  5015               	movf	(??_sleepSM+1)^0,w,c
  9236  0052CE  0A00               	xorlw	0	; case 0
  9237  0052D0  B4D8               	btfsc	status,2,c
  9238  0052D2  EF6D  F029         	goto	l10494
  9239  0052D6  EF7C  F029         	goto	l413
  9240  0052DA                     l10494:
  9241                           
  9242                           ; BSR set to: 0
  9243                           ; Switch size 1, requested type "simple"
  9244                           ; Number of cases is 3, Range of values is 0 to 2
  9245                           ; switch strategies available:
  9246                           ; Name         Instructions Cycles
  9247                           ; simple_byte           10     6 (average)
  9248                           ;	Chosen strategy is simple_byte
  9249  0052DA  5014               	movf	??_sleepSM^0,w,c
  9250  0052DC  0A00               	xorlw	0	; case 0
  9251  0052DE  B4D8               	btfsc	status,2,c
  9252  0052E0  EF2F  F029         	goto	l10062
  9253  0052E4  0A01               	xorlw	1	; case 1
  9254  0052E6  B4D8               	btfsc	status,2,c
  9255  0052E8  EF3E  F029         	goto	l10068
  9256  0052EC  0A03               	xorlw	3	; case 2
  9257  0052EE  B4D8               	btfsc	status,2,c
  9258  0052F0  EF58  F029         	goto	l10080
  9259  0052F4  EF7C  F029         	goto	l413
  9260  0052F8                     l413:
  9261  0052F8  0012               	return		;funcret
  9262  0052FA                     __end_of_sleepSM:
  9263                           	callstack 0
  9264                           
  9265 ;; *************** function _sleepController *****************
  9266 ;; Defined at:
  9267 ;;		line 53 in file "stateMachine/sleepSM.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;		None
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;		None
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  1    wreg      void 
  9274 ;; Registers used:
  9275 ;;		wreg, status,2, status,0
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9281 ;;      Params:         0       0       0       0       0       0       0
  9282 ;;      Locals:         0       0       0       0       0       0       0
  9283 ;;      Temps:          2       0       0       0       0       0       0
  9284 ;;      Totals:         2       0       0       0       0       0       0
  9285 ;;Total ram usage:        2 bytes
  9286 ;; Hardware stack levels used: 1
  9287 ;; Hardware stack levels required when called: 4
  9288 ;; This function calls:
  9289 ;;		Nothing
  9290 ;; This function is called by:
  9291 ;;		_sleepInit
  9292 ;;		_sleepSM
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296                           	psect	text37
  9297  005D68                     __ptext37:
  9298                           	callstack 0
  9299  005D68                     _sleepController:
  9300                           	callstack 24
  9301  005D68  0100               	movlb	0	; () banked
  9302  005D6A  51DF               	movf	_sleepState& (0+255),w,b
  9303  005D6C  6E12               	movwf	??_sleepController^0,c
  9304  005D6E  6A13               	clrf	(??_sleepController+1)^0,c
  9305                           
  9306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9307                           ; Switch size 1, requested type "simple"
  9308                           ; Number of cases is 1, Range of values is 0 to 0
  9309                           ; switch strategies available:
  9310                           ; Name         Instructions Cycles
  9311                           ; simple_byte            4     3 (average)
  9312                           ;	Chosen strategy is simple_byte
  9313  005D70  5013               	movf	(??_sleepController+1)^0,w,c
  9314  005D72  0A00               	xorlw	0	; case 0
  9315  005D74  B4D8               	btfsc	status,2,c
  9316  005D76  EFBF  F02E         	goto	l10496
  9317  005D7A  EFCE  F02E         	goto	l422
  9318  005D7E                     l10496:
  9319                           
  9320                           ; BSR set to: 0
  9321                           ; Switch size 1, requested type "simple"
  9322                           ; Number of cases is 3, Range of values is 0 to 2
  9323                           ; switch strategies available:
  9324                           ; Name         Instructions Cycles
  9325                           ; simple_byte           10     6 (average)
  9326                           ;	Chosen strategy is simple_byte
  9327  005D7E  5012               	movf	??_sleepController^0,w,c
  9328  005D80  0A00               	xorlw	0	; case 0
  9329  005D82  B4D8               	btfsc	status,2,c
  9330  005D84  EFCE  F02E         	goto	l422
  9331  005D88  0A01               	xorlw	1	; case 1
  9332  005D8A  B4D8               	btfsc	status,2,c
  9333  005D8C  EFCE  F02E         	goto	l422
  9334  005D90  0A03               	xorlw	3	; case 2
  9335  005D92  B4D8               	btfsc	status,2,c
  9336  005D94  EFCE  F02E         	goto	l422
  9337  005D98  EFCE  F02E         	goto	l422
  9338  005D9C                     l422:
  9339                           
  9340                           ; BSR set to: 0
  9341  005D9C  0012               	return		;funcret
  9342  005D9E                     __end_of_sleepController:
  9343                           	callstack 0
  9344                           
  9345 ;; *************** function _gameControllerSM *****************
  9346 ;; Defined at:
  9347 ;;		line 20 in file "stateMachine/gameController.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;  ev              1    wreg     unsigned char 
  9350 ;;  g               2   58[COMRAM] PTR struct GameParameter
  9351 ;;		 -> g1(201), 
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;  ev              1   64[COMRAM] unsigned char 
  9354 ;;  s              20    0        unsigned char [20]
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  1    wreg      void 
  9357 ;; Registers used:
  9358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9364 ;;      Params:         2       0       0       0       0       0       0
  9365 ;;      Locals:         1       0       0       0       0       0       0
  9366 ;;      Temps:          4       0       0       0       0       0       0
  9367 ;;      Totals:         7       0       0       0       0       0       0
  9368 ;;Total ram usage:        7 bytes
  9369 ;; Hardware stack levels used: 1
  9370 ;; Hardware stack levels required when called: 8
  9371 ;; This function calls:
  9372 ;;		_LCD_DrawRect
  9373 ;;		_Paddle_draw
  9374 ;;		_gameControllerController
  9375 ;;		_mooveBall
  9376 ;;		_moovePaddle
  9377 ;; This function is called by:
  9378 ;;		_Factory_exec
  9379 ;; This function uses a non-reentrant model
  9380 ;;
  9381                           
  9382                           	psect	text38
  9383  003B02                     __ptext38:
  9384                           	callstack 0
  9385  003B02                     _gameControllerSM:
  9386                           	callstack 21
  9387                           
  9388                           ; BSR set to: 0
  9389                           ;incstack = 0
  9390                           ;gameControllerSM@ev stored from wreg
  9391  003B02  6E41               	movwf	gameControllerSM@ev^0,c
  9392  003B04                     
  9393                           ;stateMachine/gameController.c: 20: void gameControllerSM(Event ev,GameParameters* g);st
      +                          ateMachine/gameController.c: 21: {;stateMachine/gameController.c: 22:    char s[20];;sta
      +                          teMachine/gameController.c: 23:    switch(gameControllerState)
  9394  003B04  EF29  F01E         	goto	l10196
  9395  003B08                     l10160:
  9396                           
  9397                           ;stateMachine/gameController.c: 26:             gameControllerController(g);
  9398  003B08  C03B  F037         	movff	gameControllerSM@g,gameControllerController@g
  9399  003B0C  C03C  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  9400  003B10  ECB5  F01A         	call	_gameControllerController	;wreg free
  9401  003B14                     
  9402                           ;stateMachine/gameController.c: 27:             if(ev==evParameters)
  9403  003B14  0E07               	movlw	7
  9404  003B16  1841               	xorwf	gameControllerSM@ev^0,w,c
  9405  003B18  A4D8               	btfss	status,2,c
  9406  003B1A  EF91  F01D         	goto	u7711
  9407  003B1E  EF93  F01D         	goto	u7710
  9408  003B22                     u7711:
  9409  003B22  EF95  F01D         	goto	l10166
  9410  003B26                     u7710:
  9411  003B26                     
  9412                           ;stateMachine/gameController.c: 28:             {;stateMachine/gameController.c: 29:    
      +                                       gameControllerState=PARAMETERS;
  9413  003B26  0E01               	movlw	1
  9414  003B28  6E4D               	movwf	_gameControllerState^0,c
  9415  003B2A                     l10166:
  9416                           
  9417                           ;stateMachine/gameController.c: 31:             if(ev==evOnePlayer)
  9418  003B2A  0E05               	movlw	5
  9419  003B2C  1841               	xorwf	gameControllerSM@ev^0,w,c
  9420  003B2E  A4D8               	btfss	status,2,c
  9421  003B30  EF9C  F01D         	goto	u7721
  9422  003B34  EF9E  F01D         	goto	u7720
  9423  003B38                     u7721:
  9424  003B38  EF46  F01E         	goto	l608
  9425  003B3C                     u7720:
  9426  003B3C                     
  9427                           ;stateMachine/gameController.c: 32:             {;stateMachine/gameController.c: 33:    
      +                                       gameControllerState=LOCAL;
  9428  003B3C  0E02               	movlw	2
  9429  003B3E  6E4D               	movwf	_gameControllerState^0,c
  9430  003B40  EF46  F01E         	goto	l608
  9431  003B44                     l10174:
  9432                           
  9433                           ;stateMachine/gameController.c: 41:             gameControllerController(g);
  9434  003B44  C03B  F037         	movff	gameControllerSM@g,gameControllerController@g
  9435  003B48  C03C  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  9436  003B4C  ECB5  F01A         	call	_gameControllerController	;wreg free
  9437  003B50                     
  9438                           ;stateMachine/gameController.c: 42:             if(ev==evLeaveParam)
  9439  003B50  0E08               	movlw	8
  9440  003B52  1841               	xorwf	gameControllerSM@ev^0,w,c
  9441  003B54  A4D8               	btfss	status,2,c
  9442  003B56  EFAF  F01D         	goto	u7731
  9443  003B5A  EFB1  F01D         	goto	u7730
  9444  003B5E                     u7731:
  9445  003B5E  EF46  F01E         	goto	l608
  9446  003B62                     u7730:
  9447  003B62                     
  9448                           ;stateMachine/gameController.c: 43:             {;stateMachine/gameController.c: 44:    
      +                                       gameControllerState=NOGAME;
  9449  003B62  0E00               	movlw	0
  9450  003B64  6E4D               	movwf	_gameControllerState^0,c
  9451  003B66  EF46  F01E         	goto	l608
  9452  003B6A                     l10180:
  9453                           
  9454                           ;stateMachine/gameController.c: 48:             if (ev==evPress)
  9455  003B6A  0441               	decf	gameControllerSM@ev^0,w,c
  9456  003B6C  A4D8               	btfss	status,2,c
  9457  003B6E  EFBB  F01D         	goto	u7741
  9458  003B72  EFBD  F01D         	goto	u7740
  9459  003B76                     u7741:
  9460  003B76  EFC5  F01D         	goto	l10184
  9461  003B7A                     u7740:
  9462  003B7A                     
  9463                           ;stateMachine/gameController.c: 49:             {;stateMachine/gameController.c: 50:    
      +                                       moovePaddle(g);
  9464  003B7A  C03B  F02F         	movff	gameControllerSM@g,moovePaddle@g
  9465  003B7E  C03C  F030         	movff	gameControllerSM@g+1,moovePaddle@g+1
  9466  003B82  ECA4  F023         	call	_moovePaddle	;wreg free
  9467                           
  9468                           ;stateMachine/gameController.c: 52:             }
  9469  003B86  EF46  F01E         	goto	l608
  9470  003B8A                     l10184:
  9471  003B8A  0E0A               	movlw	10
  9472  003B8C  1841               	xorwf	gameControllerSM@ev^0,w,c
  9473  003B8E  A4D8               	btfss	status,2,c
  9474  003B90  EFCC  F01D         	goto	u7751
  9475  003B94  EFCE  F01D         	goto	u7750
  9476  003B98                     u7751:
  9477  003B98  EF46  F01E         	goto	l608
  9478  003B9C                     u7750:
  9479  003B9C                     
  9480                           ;stateMachine/gameController.c: 54:             {;stateMachine/gameController.c: 55:    
      +                                       mooveBall(g);
  9481  003B9C  C03B  F039         	movff	gameControllerSM@g,mooveBall@g
  9482  003BA0  C03C  F03A         	movff	gameControllerSM@g+1,mooveBall@g+1
  9483  003BA4  EC37  F02F         	call	_mooveBall	;wreg free
  9484  003BA8                     
  9485                           ;stateMachine/gameController.c: 56:                 LCD_DrawRect(g->p2.x,g->p2.y,g->p2.x
      +                          +50,g->p2.y+20,1,0b1111111111111111);
  9486  003BA8  EE20 F0BF          	lfsr	2,191
  9487  003BAC  503B               	movf	gameControllerSM@g^0,w,c
  9488  003BAE  26D9               	addwf	fsr2l,f,c
  9489  003BB0  503C               	movf	(gameControllerSM@g+1)^0,w,c
  9490  003BB2  22DA               	addwfc	fsr2h,f,c
  9491  003BB4  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
  9492  003BB8  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
  9493  003BBC  EE20 F0C1          	lfsr	2,193
  9494  003BC0  503B               	movf	gameControllerSM@g^0,w,c
  9495  003BC2  26D9               	addwf	fsr2l,f,c
  9496  003BC4  503C               	movf	(gameControllerSM@g+1)^0,w,c
  9497  003BC6  22DA               	addwfc	fsr2h,f,c
  9498  003BC8  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
  9499  003BCC  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
  9500  003BD0  EE20 F0BF          	lfsr	2,191
  9501  003BD4  503B               	movf	gameControllerSM@g^0,w,c
  9502  003BD6  26D9               	addwf	fsr2l,f,c
  9503  003BD8  503C               	movf	(gameControllerSM@g+1)^0,w,c
  9504  003BDA  22DA               	addwfc	fsr2h,f,c
  9505  003BDC  CFDE F03D          	movff	postinc2,??_gameControllerSM
  9506  003BE0  CFDD F03E          	movff	postdec2,??_gameControllerSM+1
  9507  003BE4  0E32               	movlw	50
  9508  003BE6  243D               	addwf	??_gameControllerSM^0,w,c
  9509  003BE8  6E16               	movwf	LCD_DrawRect@posX2^0,c
  9510  003BEA  0E00               	movlw	0
  9511  003BEC  203E               	addwfc	(??_gameControllerSM+1)^0,w,c
  9512  003BEE  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
  9513  003BF0  EE20 F0C1          	lfsr	2,193
  9514  003BF4  503B               	movf	gameControllerSM@g^0,w,c
  9515  003BF6  26D9               	addwf	fsr2l,f,c
  9516  003BF8  503C               	movf	(gameControllerSM@g+1)^0,w,c
  9517  003BFA  22DA               	addwfc	fsr2h,f,c
  9518  003BFC  CFDE F03F          	movff	postinc2,??_gameControllerSM+2
  9519  003C00  CFDD F040          	movff	postdec2,??_gameControllerSM+3
  9520  003C04  0E14               	movlw	20
  9521  003C06  243F               	addwf	(??_gameControllerSM+2)^0,w,c
  9522  003C08  6E18               	movwf	LCD_DrawRect@posY2^0,c
  9523  003C0A  0E00               	movlw	0
  9524  003C0C  2040               	addwfc	(??_gameControllerSM+3)^0,w,c
  9525  003C0E  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
  9526  003C10  0E01               	movlw	1
  9527  003C12  6E1A               	movwf	LCD_DrawRect@fill^0,c
  9528  003C14  0EFF               	movlw	255
  9529  003C16  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
  9530  003C18  681B               	setf	LCD_DrawRect@color^0,c
  9531  003C1A  EC02  F014         	call	_LCD_DrawRect	;wreg free
  9532  003C1E                     
  9533                           ;stateMachine/gameController.c: 57:                 g->p2.x=g->b.x;
  9534  003C1E  EE20 F0B1          	lfsr	2,177
  9535  003C22  503B               	movf	gameControllerSM@g^0,w,c
  9536  003C24  26D9               	addwf	fsr2l,f,c
  9537  003C26  503C               	movf	(gameControllerSM@g+1)^0,w,c
  9538  003C28  22DA               	addwfc	fsr2h,f,c
  9539  003C2A  EE10 F0BF          	lfsr	1,191
  9540  003C2E  503B               	movf	gameControllerSM@g^0,w,c
  9541  003C30  26E1               	addwf	fsr1l,f,c
  9542  003C32  503C               	movf	(gameControllerSM@g+1)^0,w,c
  9543  003C34  22E2               	addwfc	fsr1h,f,c
  9544  003C36  CFDE FFE6          	movff	postinc2,postinc1
  9545  003C3A  CFDD FFE5          	movff	postdec2,postdec1
  9546  003C3E                     
  9547                           ;stateMachine/gameController.c: 58:                 Paddle_draw(&g->p2);
  9548  003C3E  0EBF               	movlw	191
  9549  003C40  243B               	addwf	gameControllerSM@g^0,w,c
  9550  003C42  6E25               	movwf	Paddle_draw@p^0,c
  9551  003C44  0E00               	movlw	0
  9552  003C46  203C               	addwfc	(gameControllerSM@g+1)^0,w,c
  9553  003C48  6E26               	movwf	(Paddle_draw@p+1)^0,c
  9554  003C4A  ECE0  F02A         	call	_Paddle_draw	;wreg free
  9555  003C4E  EF46  F01E         	goto	l608
  9556  003C52                     l10196:
  9557  003C52  504D               	movf	_gameControllerState^0,w,c
  9558  003C54  6E3D               	movwf	??_gameControllerSM^0,c
  9559  003C56  6A3E               	clrf	(??_gameControllerSM+1)^0,c
  9560                           
  9561                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9562                           ; Switch size 1, requested type "simple"
  9563                           ; Number of cases is 1, Range of values is 0 to 0
  9564                           ; switch strategies available:
  9565                           ; Name         Instructions Cycles
  9566                           ; simple_byte            4     3 (average)
  9567                           ;	Chosen strategy is simple_byte
  9568  003C58  503E               	movf	(??_gameControllerSM+1)^0,w,c
  9569  003C5A  0A00               	xorlw	0	; case 0
  9570  003C5C  B4D8               	btfsc	status,2,c
  9571  003C5E  EF33  F01E         	goto	l10498
  9572  003C62  EF46  F01E         	goto	l608
  9573  003C66                     l10498:
  9574                           
  9575                           ; Switch size 1, requested type "simple"
  9576                           ; Number of cases is 4, Range of values is 0 to 3
  9577                           ; switch strategies available:
  9578                           ; Name         Instructions Cycles
  9579                           ; simple_byte           13     7 (average)
  9580                           ;	Chosen strategy is simple_byte
  9581  003C66  503D               	movf	??_gameControllerSM^0,w,c
  9582  003C68  0A00               	xorlw	0	; case 0
  9583  003C6A  B4D8               	btfsc	status,2,c
  9584  003C6C  EF84  F01D         	goto	l10160
  9585  003C70  0A01               	xorlw	1	; case 1
  9586  003C72  B4D8               	btfsc	status,2,c
  9587  003C74  EFA2  F01D         	goto	l10174
  9588  003C78  0A03               	xorlw	3	; case 2
  9589  003C7A  B4D8               	btfsc	status,2,c
  9590  003C7C  EFB5  F01D         	goto	l10180
  9591  003C80  0A01               	xorlw	1	; case 3
  9592  003C82  B4D8               	btfsc	status,2,c
  9593  003C84  EF46  F01E         	goto	l608
  9594  003C88  EF46  F01E         	goto	l608
  9595  003C8C                     l608:
  9596  003C8C  0012               	return		;funcret
  9597  003C8E                     __end_of_gameControllerSM:
  9598                           	callstack 0
  9599                           
  9600 ;; *************** function _moovePaddle *****************
  9601 ;; Defined at:
  9602 ;;		line 110 in file "stateMachine/gameController.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  g               2   46[COMRAM] PTR struct GameParameter
  9605 ;;		 -> g1(201), 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;		None
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  1    wreg      void 
  9610 ;; Registers used:
  9611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9617 ;;      Params:         2       0       0       0       0       0       0
  9618 ;;      Locals:         0       0       0       0       0       0       0
  9619 ;;      Temps:          0       0       0       0       0       0       0
  9620 ;;      Totals:         2       0       0       0       0       0       0
  9621 ;;Total ram usage:        2 bytes
  9622 ;; Hardware stack levels used: 1
  9623 ;; Hardware stack levels required when called: 6
  9624 ;; This function calls:
  9625 ;;		_GameParameters_resetPos
  9626 ;;		_LCD_InButton
  9627 ;;		_Paddle_addX
  9628 ;;		_Paddle_draw
  9629 ;; This function is called by:
  9630 ;;		_gameControllerSM
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           	psect	text39
  9635  004748                     __ptext39:
  9636                           	callstack 0
  9637  004748                     _moovePaddle:
  9638                           	callstack 22
  9639  004748                     
  9640                           ;stateMachine/gameController.c: 110: void moovePaddle(GameParameters* g);stateMachine/ga
      +                          meController.c: 111: {;stateMachine/gameController.c: 112:     if(LCD_InButton(&(g->btnL
      +                          eft),g->x,g->y))
  9641  004748  0E68               	movlw	104
  9642  00474A  242F               	addwf	moovePaddle@g^0,w,c
  9643  00474C  6E12               	movwf	LCD_InButton@button^0,c
  9644  00474E  0E00               	movlw	0
  9645  004750  2030               	addwfc	(moovePaddle@g+1)^0,w,c
  9646  004752  6E13               	movwf	(LCD_InButton@button+1)^0,c
  9647  004754  EE20 F004          	lfsr	2,4
  9648  004758  502F               	movf	moovePaddle@g^0,w,c
  9649  00475A  26D9               	addwf	fsr2l,f,c
  9650  00475C  5030               	movf	(moovePaddle@g+1)^0,w,c
  9651  00475E  22DA               	addwfc	fsr2h,f,c
  9652  004760  CFDE F014          	movff	postinc2,LCD_InButton@posX
  9653  004764  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  9654  004768  EE20 F006          	lfsr	2,6
  9655  00476C  502F               	movf	moovePaddle@g^0,w,c
  9656  00476E  26D9               	addwf	fsr2l,f,c
  9657  004770  5030               	movf	(moovePaddle@g+1)^0,w,c
  9658  004772  22DA               	addwfc	fsr2h,f,c
  9659  004774  CFDE F016          	movff	postinc2,LCD_InButton@posY
  9660  004778  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  9661  00477C  EC07  F025         	call	_LCD_InButton	;wreg free
  9662  004780  0900               	iorlw	0
  9663  004782  B4D8               	btfsc	status,2,c
  9664  004784  EFC6  F023         	goto	u7541
  9665  004788  EFC8  F023         	goto	u7540
  9666  00478C                     u7541:
  9667  00478C  EFDE  F023         	goto	l626
  9668  004790                     u7540:
  9669  004790                     
  9670                           ;stateMachine/gameController.c: 113:     {;stateMachine/gameController.c: 114:         G
      +                          ameParameters_resetPos(g);
  9671  004790  C02F  F012         	movff	moovePaddle@g,GameParameters_resetPos@s
  9672  004794  C030  F013         	movff	moovePaddle@g+1,GameParameters_resetPos@s+1
  9673  004798  ECE8  F02E         	call	_GameParameters_resetPos	;wreg free
  9674                           
  9675                           ;stateMachine/gameController.c: 115:         Paddle_addX(&g->p1,8,0);
  9676  00479C  0EB9               	movlw	185
  9677  00479E  242F               	addwf	moovePaddle@g^0,w,c
  9678  0047A0  6E25               	movwf	Paddle_addX@p^0,c
  9679  0047A2  0E00               	movlw	0
  9680  0047A4  2030               	addwfc	(moovePaddle@g+1)^0,w,c
  9681  0047A6  6E26               	movwf	(Paddle_addX@p+1)^0,c
  9682  0047A8  0E00               	movlw	0
  9683  0047AA  6E28               	movwf	(Paddle_addX@value+1)^0,c
  9684  0047AC  0E08               	movlw	8
  9685  0047AE  6E27               	movwf	Paddle_addX@value^0,c
  9686  0047B0  0E00               	movlw	0
  9687  0047B2  6E2A               	movwf	(Paddle_addX@add+1)^0,c
  9688  0047B4  0E00               	movlw	0
  9689  0047B6  6E29               	movwf	Paddle_addX@add^0,c
  9690  0047B8  ECBD  F01F         	call	_Paddle_addX	;wreg free
  9691  0047BC                     l626:
  9692                           
  9693                           ;stateMachine/gameController.c: 117:     if(LCD_InButton(&(g->btnRight),g->x,g->y))
  9694  0047BC  0E80               	movlw	128
  9695  0047BE  242F               	addwf	moovePaddle@g^0,w,c
  9696  0047C0  6E12               	movwf	LCD_InButton@button^0,c
  9697  0047C2  0E00               	movlw	0
  9698  0047C4  2030               	addwfc	(moovePaddle@g+1)^0,w,c
  9699  0047C6  6E13               	movwf	(LCD_InButton@button+1)^0,c
  9700  0047C8  EE20 F004          	lfsr	2,4
  9701  0047CC  502F               	movf	moovePaddle@g^0,w,c
  9702  0047CE  26D9               	addwf	fsr2l,f,c
  9703  0047D0  5030               	movf	(moovePaddle@g+1)^0,w,c
  9704  0047D2  22DA               	addwfc	fsr2h,f,c
  9705  0047D4  CFDE F014          	movff	postinc2,LCD_InButton@posX
  9706  0047D8  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  9707  0047DC  EE20 F006          	lfsr	2,6
  9708  0047E0  502F               	movf	moovePaddle@g^0,w,c
  9709  0047E2  26D9               	addwf	fsr2l,f,c
  9710  0047E4  5030               	movf	(moovePaddle@g+1)^0,w,c
  9711  0047E6  22DA               	addwfc	fsr2h,f,c
  9712  0047E8  CFDE F016          	movff	postinc2,LCD_InButton@posY
  9713  0047EC  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  9714  0047F0  EC07  F025         	call	_LCD_InButton	;wreg free
  9715  0047F4  0900               	iorlw	0
  9716  0047F6  B4D8               	btfsc	status,2,c
  9717  0047F8  EF00  F024         	goto	u7551
  9718  0047FC  EF02  F024         	goto	u7550
  9719  004800                     u7551:
  9720  004800  EF18  F024         	goto	l627
  9721  004804                     u7550:
  9722  004804                     
  9723                           ;stateMachine/gameController.c: 118:     {;stateMachine/gameController.c: 119:         G
      +                          ameParameters_resetPos(g);
  9724  004804  C02F  F012         	movff	moovePaddle@g,GameParameters_resetPos@s
  9725  004808  C030  F013         	movff	moovePaddle@g+1,GameParameters_resetPos@s+1
  9726  00480C  ECE8  F02E         	call	_GameParameters_resetPos	;wreg free
  9727                           
  9728                           ;stateMachine/gameController.c: 120:         Paddle_addX(&g->p1,8,1);
  9729  004810  0EB9               	movlw	185
  9730  004812  242F               	addwf	moovePaddle@g^0,w,c
  9731  004814  6E25               	movwf	Paddle_addX@p^0,c
  9732  004816  0E00               	movlw	0
  9733  004818  2030               	addwfc	(moovePaddle@g+1)^0,w,c
  9734  00481A  6E26               	movwf	(Paddle_addX@p+1)^0,c
  9735  00481C  0E00               	movlw	0
  9736  00481E  6E28               	movwf	(Paddle_addX@value+1)^0,c
  9737  004820  0E08               	movlw	8
  9738  004822  6E27               	movwf	Paddle_addX@value^0,c
  9739  004824  0E00               	movlw	0
  9740  004826  6E2A               	movwf	(Paddle_addX@add+1)^0,c
  9741  004828  0E01               	movlw	1
  9742  00482A  6E29               	movwf	Paddle_addX@add^0,c
  9743  00482C  ECBD  F01F         	call	_Paddle_addX	;wreg free
  9744  004830                     l627:
  9745                           
  9746                           ;stateMachine/gameController.c: 122:     Paddle_draw(&g->p1);
  9747  004830  0EB9               	movlw	185
  9748  004832  242F               	addwf	moovePaddle@g^0,w,c
  9749  004834  6E25               	movwf	Paddle_draw@p^0,c
  9750  004836  0E00               	movlw	0
  9751  004838  2030               	addwfc	(moovePaddle@g+1)^0,w,c
  9752  00483A  6E26               	movwf	(Paddle_draw@p+1)^0,c
  9753  00483C  ECE0  F02A         	call	_Paddle_draw	;wreg free
  9754  004840  0012               	return		;funcret
  9755  004842                     __end_of_moovePaddle:
  9756                           	callstack 0
  9757                           
  9758 ;; *************** function _Paddle_addX *****************
  9759 ;; Defined at:
  9760 ;;		line 19 in file "class/paddle.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;  p               2   36[COMRAM] PTR struct Paddle
  9763 ;;		 -> g1(201), 
  9764 ;;  value           2   38[COMRAM] unsigned short 
  9765 ;;  add             2   40[COMRAM] unsigned short 
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;		None
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      void 
  9770 ;; Registers used:
  9771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9777 ;;      Params:         6       0       0       0       0       0       0
  9778 ;;      Locals:         0       0       0       0       0       0       0
  9779 ;;      Temps:          4       0       0       0       0       0       0
  9780 ;;      Totals:        10       0       0       0       0       0       0
  9781 ;;Total ram usage:       10 bytes
  9782 ;; Hardware stack levels used: 1
  9783 ;; Hardware stack levels required when called: 5
  9784 ;; This function calls:
  9785 ;;		_LCD_DrawRect
  9786 ;; This function is called by:
  9787 ;;		_moovePaddle
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           	psect	text40
  9792  003F7A                     __ptext40:
  9793                           	callstack 0
  9794  003F7A                     _Paddle_addX:
  9795                           	callstack 22
  9796  003F7A                     
  9797                           ;class/paddle.c: 19: void Paddle_addX(struct Paddle* p,uint16_t value,uint16_t add);clas
      +                          s/paddle.c: 20: {;class/paddle.c: 21:     LCD_DrawRect(p->x,p->y,p->x+50,p->y+20,1,0b111
      +                          1111111111111);
  9798  003F7A  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9799  003F7E  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9800  003F82  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
  9801  003F86  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
  9802  003F8A  EE20 F002          	lfsr	2,2
  9803  003F8E  5025               	movf	Paddle_addX@p^0,w,c
  9804  003F90  26D9               	addwf	fsr2l,f,c
  9805  003F92  5026               	movf	(Paddle_addX@p+1)^0,w,c
  9806  003F94  22DA               	addwfc	fsr2h,f,c
  9807  003F96  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
  9808  003F9A  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
  9809  003F9E  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9810  003FA2  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9811  003FA6  CFDE F02B          	movff	postinc2,??_Paddle_addX
  9812  003FAA  CFDD F02C          	movff	postdec2,??_Paddle_addX+1
  9813  003FAE  0E32               	movlw	50
  9814  003FB0  242B               	addwf	??_Paddle_addX^0,w,c
  9815  003FB2  6E16               	movwf	LCD_DrawRect@posX2^0,c
  9816  003FB4  0E00               	movlw	0
  9817  003FB6  202C               	addwfc	(??_Paddle_addX+1)^0,w,c
  9818  003FB8  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
  9819  003FBA  EE20 F002          	lfsr	2,2
  9820  003FBE  5025               	movf	Paddle_addX@p^0,w,c
  9821  003FC0  26D9               	addwf	fsr2l,f,c
  9822  003FC2  5026               	movf	(Paddle_addX@p+1)^0,w,c
  9823  003FC4  22DA               	addwfc	fsr2h,f,c
  9824  003FC6  CFDE F02D          	movff	postinc2,??_Paddle_addX+2
  9825  003FCA  CFDD F02E          	movff	postdec2,??_Paddle_addX+3
  9826  003FCE  0E14               	movlw	20
  9827  003FD0  242D               	addwf	(??_Paddle_addX+2)^0,w,c
  9828  003FD2  6E18               	movwf	LCD_DrawRect@posY2^0,c
  9829  003FD4  0E00               	movlw	0
  9830  003FD6  202E               	addwfc	(??_Paddle_addX+3)^0,w,c
  9831  003FD8  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
  9832  003FDA  0E01               	movlw	1
  9833  003FDC  6E1A               	movwf	LCD_DrawRect@fill^0,c
  9834  003FDE  0EFF               	movlw	255
  9835  003FE0  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
  9836  003FE2  681B               	setf	LCD_DrawRect@color^0,c
  9837  003FE4  EC02  F014         	call	_LCD_DrawRect	;wreg free
  9838  003FE8                     
  9839                           ;class/paddle.c: 22:     if(add==1)
  9840  003FE8  0429               	decf	Paddle_addX@add^0,w,c
  9841  003FEA  102A               	iorwf	(Paddle_addX@add+1)^0,w,c
  9842  003FEC  A4D8               	btfss	status,2,c
  9843  003FEE  EFFB  F01F         	goto	u6811
  9844  003FF2  EFFD  F01F         	goto	u6810
  9845  003FF6                     u6811:
  9846  003FF6  EF32  F020         	goto	l9526
  9847  003FFA                     u6810:
  9848  003FFA                     
  9849                           ;class/paddle.c: 23:     {;class/paddle.c: 24:         p->x=(p->x)+value;
  9850  003FFA  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9851  003FFE  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9852  004002  CFDE F02B          	movff	postinc2,??_Paddle_addX
  9853  004006  CFDD F02C          	movff	postdec2,??_Paddle_addX+1
  9854  00400A  5027               	movf	Paddle_addX@value^0,w,c
  9855  00400C  262B               	addwf	??_Paddle_addX^0,f,c
  9856  00400E  5028               	movf	(Paddle_addX@value+1)^0,w,c
  9857  004010  222C               	addwfc	(??_Paddle_addX+1)^0,f,c
  9858  004012  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9859  004016  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9860  00401A  C02B  FFDE         	movff	??_Paddle_addX,postinc2
  9861  00401E  C02C  FFDD         	movff	??_Paddle_addX+1,postdec2
  9862                           
  9863                           ;class/paddle.c: 25:         if((p->x+50)>239)
  9864  004022  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9865  004026  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9866  00402A  CFDE F02B          	movff	postinc2,??_Paddle_addX
  9867  00402E  CFDD F02C          	movff	postdec2,??_Paddle_addX+1
  9868  004032  0E32               	movlw	50
  9869  004034  262B               	addwf	??_Paddle_addX^0,f,c
  9870  004036  0E00               	movlw	0
  9871  004038  222C               	addwfc	(??_Paddle_addX+1)^0,f,c
  9872  00403A  502C               	movf	(??_Paddle_addX+1)^0,w,c
  9873  00403C  E109               	bnz	u6820
  9874  00403E  0EF0               	movlw	240
  9875  004040  5C2B               	subwf	??_Paddle_addX^0,w,c
  9876  004042  A0D8               	btfss	status,0,c
  9877  004044  EF26  F020         	goto	u6821
  9878  004048  EF28  F020         	goto	u6820
  9879  00404C                     u6821:
  9880  00404C  EF60  F020         	goto	l28
  9881  004050                     u6820:
  9882  004050                     
  9883                           ;class/paddle.c: 26:         {;class/paddle.c: 27:             p->x=239-(50);
  9884  004050  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9885  004054  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9886  004058  0EBD               	movlw	189
  9887  00405A  6EDE               	movwf	postinc2,c
  9888  00405C  0E00               	movlw	0
  9889  00405E  6EDD               	movwf	postdec2,c
  9890  004060  EF60  F020         	goto	l28
  9891  004064                     l9526:
  9892                           
  9893                           ;class/paddle.c: 31:     {;class/paddle.c: 32:         if((p->x)<9)
  9894  004064  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9895  004068  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9896  00406C  0E01               	movlw	1
  9897  00406E  50DB               	movf	plusw2,w,c
  9898  004070  E107               	bnz	u6831
  9899  004072  0E09               	movlw	9
  9900  004074  5CDE               	subwf	postinc2,w,c
  9901  004076  B0D8               	btfsc	status,0,c
  9902  004078  EF40  F020         	goto	u6831
  9903  00407C  EF42  F020         	goto	u6830
  9904  004080                     u6831:
  9905  004080  EF4C  F020         	goto	l9530
  9906  004084                     u6830:
  9907  004084                     
  9908                           ;class/paddle.c: 33:         {;class/paddle.c: 34:             p->x=0;
  9909  004084  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9910  004088  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9911  00408C  0E00               	movlw	0
  9912  00408E  6EDE               	movwf	postinc2,c
  9913  004090  0E00               	movlw	0
  9914  004092  6EDD               	movwf	postdec2,c
  9915                           
  9916                           ;class/paddle.c: 35:         }
  9917  004094  EF60  F020         	goto	l28
  9918  004098                     l9530:
  9919                           
  9920                           ;class/paddle.c: 37:         {;class/paddle.c: 38:             p->x=(p->x)-value;
  9921  004098  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9922  00409C  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9923  0040A0  CFDE F02B          	movff	postinc2,??_Paddle_addX
  9924  0040A4  CFDD F02C          	movff	postdec2,??_Paddle_addX+1
  9925  0040A8  5027               	movf	Paddle_addX@value^0,w,c
  9926  0040AA  5E2B               	subwf	??_Paddle_addX^0,f,c
  9927  0040AC  5028               	movf	(Paddle_addX@value+1)^0,w,c
  9928  0040AE  5A2C               	subwfb	(??_Paddle_addX+1)^0,f,c
  9929  0040B0  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9930  0040B4  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9931  0040B8  C02B  FFDE         	movff	??_Paddle_addX,postinc2
  9932  0040BC  C02C  FFDD         	movff	??_Paddle_addX+1,postdec2
  9933  0040C0                     l28:
  9934  0040C0  0012               	return		;funcret
  9935  0040C2                     __end_of_Paddle_addX:
  9936                           	callstack 0
  9937                           
  9938 ;; *************** function _mooveBall *****************
  9939 ;; Defined at:
  9940 ;;		line 124 in file "stateMachine/gameController.c"
  9941 ;; Parameters:    Size  Location     Type
  9942 ;;  g               2   56[COMRAM] PTR struct GameParameter
  9943 ;;		 -> g1(201), 
  9944 ;; Auto vars:     Size  Location     Type
  9945 ;;		None
  9946 ;; Return value:  Size  Location     Type
  9947 ;;                  1    wreg      void 
  9948 ;; Registers used:
  9949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9950 ;; Tracked objects:
  9951 ;;		On entry : 0/0
  9952 ;;		On exit  : 0/0
  9953 ;;		Unchanged: 0/0
  9954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9955 ;;      Params:         2       0       0       0       0       0       0
  9956 ;;      Locals:         0       0       0       0       0       0       0
  9957 ;;      Temps:          0       0       0       0       0       0       0
  9958 ;;      Totals:         2       0       0       0       0       0       0
  9959 ;;Total ram usage:        2 bytes
  9960 ;; Hardware stack levels used: 1
  9961 ;; Hardware stack levels required when called: 7
  9962 ;; This function calls:
  9963 ;;		_Ball_Update
  9964 ;;		_checkCollision
  9965 ;; This function is called by:
  9966 ;;		_gameControllerSM
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           
  9970                           	psect	text41
  9971  005E6E                     __ptext41:
  9972                           	callstack 0
  9973  005E6E                     _mooveBall:
  9974                           	callstack 21
  9975  005E6E                     
  9976                           ;stateMachine/gameController.c: 124: void mooveBall(GameParameters* g);stateMachine/game
      +                          Controller.c: 125: {;stateMachine/gameController.c: 126:     checkCollision(g);
  9977  005E6E  C039  F012         	movff	mooveBall@g,checkCollision@g
  9978  005E72  C03A  F013         	movff	mooveBall@g+1,checkCollision@g+1
  9979  005E76  EC64  F000         	call	_checkCollision	;wreg free
  9980  005E7A                     
  9981                           ;stateMachine/gameController.c: 127:     Ball_Update(&g->b);
  9982  005E7A  0EB1               	movlw	177
  9983  005E7C  2439               	addwf	mooveBall@g^0,w,c
  9984  005E7E  6E2F               	movwf	Ball_Update@b^0,c
  9985  005E80  0E00               	movlw	0
  9986  005E82  203A               	addwfc	(mooveBall@g+1)^0,w,c
  9987  005E84  6E30               	movwf	(Ball_Update@b+1)^0,c
  9988  005E86  EC93  F021         	call	_Ball_Update	;wreg free
  9989  005E8A  0012               	return		;funcret
  9990  005E8C                     __end_of_mooveBall:
  9991                           	callstack 0
  9992                           
  9993 ;; *************** function _checkCollision *****************
  9994 ;; Defined at:
  9995 ;;		line 129 in file "stateMachine/gameController.c"
  9996 ;; Parameters:    Size  Location     Type
  9997 ;;  g               2   17[COMRAM] PTR struct GameParameter
  9998 ;;		 -> g1(201), 
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;		None
 10001 ;; Return value:  Size  Location     Type
 10002 ;;                  1    wreg      void 
 10003 ;; Registers used:
 10004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10010 ;;      Params:         2       0       0       0       0       0       0
 10011 ;;      Locals:         0       0       0       0       0       0       0
 10012 ;;      Temps:          6       0       0       0       0       0       0
 10013 ;;      Totals:         8       0       0       0       0       0       0
 10014 ;;Total ram usage:        8 bytes
 10015 ;; Hardware stack levels used: 1
 10016 ;; Hardware stack levels required when called: 4
 10017 ;; This function calls:
 10018 ;;		Nothing
 10019 ;; This function is called by:
 10020 ;;		_mooveBall
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023                           
 10024                           	psect	text42
 10025  0000C8                     __ptext42:
 10026                           	callstack 0
 10027  0000C8                     _checkCollision:
 10028                           	callstack 23
 10029  0000C8                     
 10030                           ;stateMachine/gameController.c: 129: void checkCollision(GameParameters* g);stateMachine
      +                          /gameController.c: 130: {;stateMachine/gameController.c: 132:     if(g->b.y+8>=g->p1.y-1
      +                          )
 10031  0000C8  0EFF               	movlw	255
 10032  0000CA  6E14               	movwf	??_checkCollision^0,c
 10033  0000CC  0EFF               	movlw	255
 10034  0000CE  6E15               	movwf	(??_checkCollision+1)^0,c
 10035  0000D0  EE20 F0BB          	lfsr	2,187
 10036  0000D4  5012               	movf	checkCollision@g^0,w,c
 10037  0000D6  26D9               	addwf	fsr2l,f,c
 10038  0000D8  5013               	movf	(checkCollision@g+1)^0,w,c
 10039  0000DA  22DA               	addwfc	fsr2h,f,c
 10040  0000DC  CFDE F016          	movff	postinc2,??_checkCollision+2
 10041  0000E0  CFDD F017          	movff	postdec2,??_checkCollision+3
 10042  0000E4  5014               	movf	??_checkCollision^0,w,c
 10043  0000E6  2616               	addwf	(??_checkCollision+2)^0,f,c
 10044  0000E8  5015               	movf	(??_checkCollision+1)^0,w,c
 10045  0000EA  2217               	addwfc	(??_checkCollision+3)^0,f,c
 10046  0000EC  EE20 F0B3          	lfsr	2,179
 10047  0000F0  5012               	movf	checkCollision@g^0,w,c
 10048  0000F2  26D9               	addwf	fsr2l,f,c
 10049  0000F4  5013               	movf	(checkCollision@g+1)^0,w,c
 10050  0000F6  22DA               	addwfc	fsr2h,f,c
 10051  0000F8  CFDE F018          	movff	postinc2,??_checkCollision+4
 10052  0000FC  CFDD F019          	movff	postdec2,??_checkCollision+5
 10053  000100  0E08               	movlw	8
 10054  000102  2618               	addwf	(??_checkCollision+4)^0,f,c
 10055  000104  0E00               	movlw	0
 10056  000106  2219               	addwfc	(??_checkCollision+5)^0,f,c
 10057  000108  5016               	movf	(??_checkCollision+2)^0,w,c
 10058  00010A  5C18               	subwf	(??_checkCollision+4)^0,w,c
 10059  00010C  5017               	movf	(??_checkCollision+3)^0,w,c
 10060  00010E  5819               	subwfb	(??_checkCollision+5)^0,w,c
 10061  000110  A0D8               	btfss	status,0,c
 10062  000112  EF8D  F000         	goto	u6931
 10063  000116  EF8F  F000         	goto	u6930
 10064  00011A                     u6931:
 10065  00011A  EF16  F002         	goto	l634
 10066  00011E                     u6930:
 10067  00011E                     
 10068                           ;stateMachine/gameController.c: 133:     {;stateMachine/gameController.c: 134:         i
      +                          f(g->b.x+8>g->p1.x)
 10069  00011E  EE20 F0B1          	lfsr	2,177
 10070  000122  5012               	movf	checkCollision@g^0,w,c
 10071  000124  26D9               	addwf	fsr2l,f,c
 10072  000126  5013               	movf	(checkCollision@g+1)^0,w,c
 10073  000128  22DA               	addwfc	fsr2h,f,c
 10074  00012A  CFDE F014          	movff	postinc2,??_checkCollision
 10075  00012E  CFDD F015          	movff	postdec2,??_checkCollision+1
 10076  000132  0E08               	movlw	8
 10077  000134  2614               	addwf	??_checkCollision^0,f,c
 10078  000136  0E00               	movlw	0
 10079  000138  2215               	addwfc	(??_checkCollision+1)^0,f,c
 10080  00013A  EE20 F0B9          	lfsr	2,185
 10081  00013E  5012               	movf	checkCollision@g^0,w,c
 10082  000140  26D9               	addwf	fsr2l,f,c
 10083  000142  5013               	movf	(checkCollision@g+1)^0,w,c
 10084  000144  22DA               	addwfc	fsr2h,f,c
 10085  000146  5014               	movf	??_checkCollision^0,w,c
 10086  000148  5CDE               	subwf	postinc2,w,c
 10087  00014A  5015               	movf	(??_checkCollision+1)^0,w,c
 10088  00014C  58DE               	subwfb	postinc2,w,c
 10089  00014E  B0D8               	btfsc	status,0,c
 10090  000150  EFAC  F000         	goto	u6941
 10091  000154  EFAE  F000         	goto	u6940
 10092  000158                     u6941:
 10093  000158  EF16  F002         	goto	l634
 10094  00015C                     u6940:
 10095  00015C                     
 10096                           ;stateMachine/gameController.c: 135:         {;stateMachine/gameController.c: 136:      
      +                                 if(g->b.x-8<g->p1.x+50)
 10097  00015C  EE20 F0B9          	lfsr	2,185
 10098  000160  5012               	movf	checkCollision@g^0,w,c
 10099  000162  26D9               	addwf	fsr2l,f,c
 10100  000164  5013               	movf	(checkCollision@g+1)^0,w,c
 10101  000166  22DA               	addwfc	fsr2h,f,c
 10102  000168  CFDE F014          	movff	postinc2,??_checkCollision
 10103  00016C  CFDD F015          	movff	postdec2,??_checkCollision+1
 10104  000170  0E32               	movlw	50
 10105  000172  2614               	addwf	??_checkCollision^0,f,c
 10106  000174  0E00               	movlw	0
 10107  000176  2215               	addwfc	(??_checkCollision+1)^0,f,c
 10108  000178  0EF8               	movlw	248
 10109  00017A  6E16               	movwf	(??_checkCollision+2)^0,c
 10110  00017C  0EFF               	movlw	255
 10111  00017E  6E17               	movwf	(??_checkCollision+3)^0,c
 10112  000180  EE20 F0B1          	lfsr	2,177
 10113  000184  5012               	movf	checkCollision@g^0,w,c
 10114  000186  26D9               	addwf	fsr2l,f,c
 10115  000188  5013               	movf	(checkCollision@g+1)^0,w,c
 10116  00018A  22DA               	addwfc	fsr2h,f,c
 10117  00018C  CFDE F018          	movff	postinc2,??_checkCollision+4
 10118  000190  CFDD F019          	movff	postdec2,??_checkCollision+5
 10119  000194  5016               	movf	(??_checkCollision+2)^0,w,c
 10120  000196  2618               	addwf	(??_checkCollision+4)^0,f,c
 10121  000198  5017               	movf	(??_checkCollision+3)^0,w,c
 10122  00019A  2219               	addwfc	(??_checkCollision+5)^0,f,c
 10123  00019C  5014               	movf	??_checkCollision^0,w,c
 10124  00019E  5C18               	subwf	(??_checkCollision+4)^0,w,c
 10125  0001A0  5015               	movf	(??_checkCollision+1)^0,w,c
 10126  0001A2  5819               	subwfb	(??_checkCollision+5)^0,w,c
 10127  0001A4  B0D8               	btfsc	status,0,c
 10128  0001A6  EFD7  F000         	goto	u6951
 10129  0001AA  EFD9  F000         	goto	u6950
 10130  0001AE                     u6951:
 10131  0001AE  EF16  F002         	goto	l634
 10132  0001B2                     u6950:
 10133  0001B2                     
 10134                           ;stateMachine/gameController.c: 137:             {;stateMachine/gameController.c: 138:  
      +                                         if(g->b.x-g->p1.x<10)
 10135  0001B2  EE20 F0B9          	lfsr	2,185
 10136  0001B6  5012               	movf	checkCollision@g^0,w,c
 10137  0001B8  26D9               	addwf	fsr2l,f,c
 10138  0001BA  5013               	movf	(checkCollision@g+1)^0,w,c
 10139  0001BC  22DA               	addwfc	fsr2h,f,c
 10140  0001BE  CFDE F014          	movff	postinc2,??_checkCollision
 10141  0001C2  CFDD F015          	movff	postdec2,??_checkCollision+1
 10142  0001C6  EE20 F0B1          	lfsr	2,177
 10143  0001CA  5012               	movf	checkCollision@g^0,w,c
 10144  0001CC  26D9               	addwf	fsr2l,f,c
 10145  0001CE  5013               	movf	(checkCollision@g+1)^0,w,c
 10146  0001D0  22DA               	addwfc	fsr2h,f,c
 10147  0001D2  CFDE F016          	movff	postinc2,??_checkCollision+2
 10148  0001D6  CFDD F017          	movff	postdec2,??_checkCollision+3
 10149  0001DA  5014               	movf	??_checkCollision^0,w,c
 10150  0001DC  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10151  0001DE  5015               	movf	(??_checkCollision+1)^0,w,c
 10152  0001E0  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10153  0001E2  5017               	movf	(??_checkCollision+3)^0,w,c
 10154  0001E4  E107               	bnz	u6961
 10155  0001E6  0E0A               	movlw	10
 10156  0001E8  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10157  0001EA  B0D8               	btfsc	status,0,c
 10158  0001EC  EFFA  F000         	goto	u6961
 10159  0001F0  EFFC  F000         	goto	u6960
 10160  0001F4                     u6961:
 10161  0001F4  EF20  F001         	goto	l9646
 10162  0001F8                     u6960:
 10163  0001F8                     
 10164                           ;stateMachine/gameController.c: 139:                 {;stateMachine/gameController.c: 14
      +                          1:                     g->b.dy=-g->b.dy;
 10165  0001F8  EE20 F0B7          	lfsr	2,183
 10166  0001FC  5012               	movf	checkCollision@g^0,w,c
 10167  0001FE  26D9               	addwf	fsr2l,f,c
 10168  000200  5013               	movf	(checkCollision@g+1)^0,w,c
 10169  000202  22DA               	addwfc	fsr2h,f,c
 10170  000204  CFDE F014          	movff	postinc2,??_checkCollision
 10171  000208  CFDD F015          	movff	postdec2,??_checkCollision+1
 10172  00020C  1E14               	comf	??_checkCollision^0,f,c
 10173  00020E  1E15               	comf	(??_checkCollision+1)^0,f,c
 10174  000210  4A14               	infsnz	??_checkCollision^0,f,c
 10175  000212  2A15               	incf	(??_checkCollision+1)^0,f,c
 10176  000214  EE20 F0B7          	lfsr	2,183
 10177  000218  5012               	movf	checkCollision@g^0,w,c
 10178  00021A  26D9               	addwf	fsr2l,f,c
 10179  00021C  5013               	movf	(checkCollision@g+1)^0,w,c
 10180  00021E  22DA               	addwfc	fsr2h,f,c
 10181  000220  C014  FFDE         	movff	??_checkCollision,postinc2
 10182  000224  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10183                           
 10184                           ;stateMachine/gameController.c: 142:                     g->b.dx=-2;
 10185  000228  EE20 F0B5          	lfsr	2,181
 10186  00022C  5012               	movf	checkCollision@g^0,w,c
 10187  00022E  26D9               	addwf	fsr2l,f,c
 10188  000230  5013               	movf	(checkCollision@g+1)^0,w,c
 10189  000232  22DA               	addwfc	fsr2h,f,c
 10190  000234  0EFE               	movlw	254
 10191  000236  6EDE               	movwf	postinc2,c
 10192  000238  0EFF               	movlw	255
 10193  00023A  6EDD               	movwf	postdec2,c
 10194                           
 10195                           ;stateMachine/gameController.c: 143:                 }
 10196  00023C  EF0D  F002         	goto	l638
 10197  000240                     l9646:
 10198  000240  EE20 F0B9          	lfsr	2,185
 10199  000244  5012               	movf	checkCollision@g^0,w,c
 10200  000246  26D9               	addwf	fsr2l,f,c
 10201  000248  5013               	movf	(checkCollision@g+1)^0,w,c
 10202  00024A  22DA               	addwfc	fsr2h,f,c
 10203  00024C  CFDE F014          	movff	postinc2,??_checkCollision
 10204  000250  CFDD F015          	movff	postdec2,??_checkCollision+1
 10205  000254  EE20 F0B1          	lfsr	2,177
 10206  000258  5012               	movf	checkCollision@g^0,w,c
 10207  00025A  26D9               	addwf	fsr2l,f,c
 10208  00025C  5013               	movf	(checkCollision@g+1)^0,w,c
 10209  00025E  22DA               	addwfc	fsr2h,f,c
 10210  000260  CFDE F016          	movff	postinc2,??_checkCollision+2
 10211  000264  CFDD F017          	movff	postdec2,??_checkCollision+3
 10212  000268  5014               	movf	??_checkCollision^0,w,c
 10213  00026A  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10214  00026C  5015               	movf	(??_checkCollision+1)^0,w,c
 10215  00026E  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10216  000270  5017               	movf	(??_checkCollision+3)^0,w,c
 10217  000272  E107               	bnz	u6971
 10218  000274  0E14               	movlw	20
 10219  000276  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10220  000278  B0D8               	btfsc	status,0,c
 10221  00027A  EF41  F001         	goto	u6971
 10222  00027E  EF43  F001         	goto	u6970
 10223  000282                     u6971:
 10224  000282  EF67  F001         	goto	l9650
 10225  000286                     u6970:
 10226  000286                     
 10227                           ;stateMachine/gameController.c: 145:                 {;stateMachine/gameController.c: 14
      +                          7:                     g->b.dy=-g->b.dy;
 10228  000286  EE20 F0B7          	lfsr	2,183
 10229  00028A  5012               	movf	checkCollision@g^0,w,c
 10230  00028C  26D9               	addwf	fsr2l,f,c
 10231  00028E  5013               	movf	(checkCollision@g+1)^0,w,c
 10232  000290  22DA               	addwfc	fsr2h,f,c
 10233  000292  CFDE F014          	movff	postinc2,??_checkCollision
 10234  000296  CFDD F015          	movff	postdec2,??_checkCollision+1
 10235  00029A  1E14               	comf	??_checkCollision^0,f,c
 10236  00029C  1E15               	comf	(??_checkCollision+1)^0,f,c
 10237  00029E  4A14               	infsnz	??_checkCollision^0,f,c
 10238  0002A0  2A15               	incf	(??_checkCollision+1)^0,f,c
 10239  0002A2  EE20 F0B7          	lfsr	2,183
 10240  0002A6  5012               	movf	checkCollision@g^0,w,c
 10241  0002A8  26D9               	addwf	fsr2l,f,c
 10242  0002AA  5013               	movf	(checkCollision@g+1)^0,w,c
 10243  0002AC  22DA               	addwfc	fsr2h,f,c
 10244  0002AE  C014  FFDE         	movff	??_checkCollision,postinc2
 10245  0002B2  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10246                           
 10247                           ;stateMachine/gameController.c: 148:                     g->b.dx=-1;
 10248  0002B6  EE20 F0B5          	lfsr	2,181
 10249  0002BA  5012               	movf	checkCollision@g^0,w,c
 10250  0002BC  26D9               	addwf	fsr2l,f,c
 10251  0002BE  5013               	movf	(checkCollision@g+1)^0,w,c
 10252  0002C0  22DA               	addwfc	fsr2h,f,c
 10253  0002C2  0EFF               	movlw	255
 10254  0002C4  6EDE               	movwf	postinc2,c
 10255  0002C6  0EFF               	movlw	255
 10256  0002C8  6EDD               	movwf	postdec2,c
 10257                           
 10258                           ;stateMachine/gameController.c: 149:                 }
 10259  0002CA  EF0D  F002         	goto	l638
 10260  0002CE                     l9650:
 10261  0002CE  EE20 F0B9          	lfsr	2,185
 10262  0002D2  5012               	movf	checkCollision@g^0,w,c
 10263  0002D4  26D9               	addwf	fsr2l,f,c
 10264  0002D6  5013               	movf	(checkCollision@g+1)^0,w,c
 10265  0002D8  22DA               	addwfc	fsr2h,f,c
 10266  0002DA  CFDE F014          	movff	postinc2,??_checkCollision
 10267  0002DE  CFDD F015          	movff	postdec2,??_checkCollision+1
 10268  0002E2  EE20 F0B1          	lfsr	2,177
 10269  0002E6  5012               	movf	checkCollision@g^0,w,c
 10270  0002E8  26D9               	addwf	fsr2l,f,c
 10271  0002EA  5013               	movf	(checkCollision@g+1)^0,w,c
 10272  0002EC  22DA               	addwfc	fsr2h,f,c
 10273  0002EE  CFDE F016          	movff	postinc2,??_checkCollision+2
 10274  0002F2  CFDD F017          	movff	postdec2,??_checkCollision+3
 10275  0002F6  5014               	movf	??_checkCollision^0,w,c
 10276  0002F8  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10277  0002FA  5015               	movf	(??_checkCollision+1)^0,w,c
 10278  0002FC  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10279  0002FE  5017               	movf	(??_checkCollision+3)^0,w,c
 10280  000300  E107               	bnz	u6981
 10281  000302  0E1E               	movlw	30
 10282  000304  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10283  000306  B0D8               	btfsc	status,0,c
 10284  000308  EF88  F001         	goto	u6981
 10285  00030C  EF8A  F001         	goto	u6980
 10286  000310                     u6981:
 10287  000310  EFA4  F001         	goto	l9654
 10288  000314                     u6980:
 10289  000314                     
 10290                           ;stateMachine/gameController.c: 153:                     g->b.dy=-g->b.dy;
 10291  000314  EE20 F0B7          	lfsr	2,183
 10292  000318  5012               	movf	checkCollision@g^0,w,c
 10293  00031A  26D9               	addwf	fsr2l,f,c
 10294  00031C  5013               	movf	(checkCollision@g+1)^0,w,c
 10295  00031E  22DA               	addwfc	fsr2h,f,c
 10296  000320  CFDE F014          	movff	postinc2,??_checkCollision
 10297  000324  CFDD F015          	movff	postdec2,??_checkCollision+1
 10298  000328  1E14               	comf	??_checkCollision^0,f,c
 10299  00032A  1E15               	comf	(??_checkCollision+1)^0,f,c
 10300  00032C  4A14               	infsnz	??_checkCollision^0,f,c
 10301  00032E  2A15               	incf	(??_checkCollision+1)^0,f,c
 10302  000330  EE20 F0B7          	lfsr	2,183
 10303  000334  5012               	movf	checkCollision@g^0,w,c
 10304  000336  26D9               	addwf	fsr2l,f,c
 10305  000338  5013               	movf	(checkCollision@g+1)^0,w,c
 10306  00033A  22DA               	addwfc	fsr2h,f,c
 10307  00033C  C014  FFDE         	movff	??_checkCollision,postinc2
 10308  000340  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10309                           
 10310                           ;stateMachine/gameController.c: 154:                 }
 10311  000344  EF0D  F002         	goto	l638
 10312  000348                     l9654:
 10313  000348  EE20 F0B9          	lfsr	2,185
 10314  00034C  5012               	movf	checkCollision@g^0,w,c
 10315  00034E  26D9               	addwf	fsr2l,f,c
 10316  000350  5013               	movf	(checkCollision@g+1)^0,w,c
 10317  000352  22DA               	addwfc	fsr2h,f,c
 10318  000354  CFDE F014          	movff	postinc2,??_checkCollision
 10319  000358  CFDD F015          	movff	postdec2,??_checkCollision+1
 10320  00035C  EE20 F0B1          	lfsr	2,177
 10321  000360  5012               	movf	checkCollision@g^0,w,c
 10322  000362  26D9               	addwf	fsr2l,f,c
 10323  000364  5013               	movf	(checkCollision@g+1)^0,w,c
 10324  000366  22DA               	addwfc	fsr2h,f,c
 10325  000368  CFDE F016          	movff	postinc2,??_checkCollision+2
 10326  00036C  CFDD F017          	movff	postdec2,??_checkCollision+3
 10327  000370  5014               	movf	??_checkCollision^0,w,c
 10328  000372  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10329  000374  5015               	movf	(??_checkCollision+1)^0,w,c
 10330  000376  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10331  000378  5017               	movf	(??_checkCollision+3)^0,w,c
 10332  00037A  E107               	bnz	u6991
 10333  00037C  0E28               	movlw	40
 10334  00037E  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10335  000380  B0D8               	btfsc	status,0,c
 10336  000382  EFC5  F001         	goto	u6991
 10337  000386  EFC7  F001         	goto	u6990
 10338  00038A                     u6991:
 10339  00038A  EFEB  F001         	goto	l9658
 10340  00038E                     u6990:
 10341  00038E                     
 10342                           ;stateMachine/gameController.c: 156:                 {;stateMachine/gameController.c: 15
      +                          8:                     g->b.dy=-g->b.dy;
 10343  00038E  EE20 F0B7          	lfsr	2,183
 10344  000392  5012               	movf	checkCollision@g^0,w,c
 10345  000394  26D9               	addwf	fsr2l,f,c
 10346  000396  5013               	movf	(checkCollision@g+1)^0,w,c
 10347  000398  22DA               	addwfc	fsr2h,f,c
 10348  00039A  CFDE F014          	movff	postinc2,??_checkCollision
 10349  00039E  CFDD F015          	movff	postdec2,??_checkCollision+1
 10350  0003A2  1E14               	comf	??_checkCollision^0,f,c
 10351  0003A4  1E15               	comf	(??_checkCollision+1)^0,f,c
 10352  0003A6  4A14               	infsnz	??_checkCollision^0,f,c
 10353  0003A8  2A15               	incf	(??_checkCollision+1)^0,f,c
 10354  0003AA  EE20 F0B7          	lfsr	2,183
 10355  0003AE  5012               	movf	checkCollision@g^0,w,c
 10356  0003B0  26D9               	addwf	fsr2l,f,c
 10357  0003B2  5013               	movf	(checkCollision@g+1)^0,w,c
 10358  0003B4  22DA               	addwfc	fsr2h,f,c
 10359  0003B6  C014  FFDE         	movff	??_checkCollision,postinc2
 10360  0003BA  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10361                           
 10362                           ;stateMachine/gameController.c: 159:                     g->b.dx=1;
 10363  0003BE  EE20 F0B5          	lfsr	2,181
 10364  0003C2  5012               	movf	checkCollision@g^0,w,c
 10365  0003C4  26D9               	addwf	fsr2l,f,c
 10366  0003C6  5013               	movf	(checkCollision@g+1)^0,w,c
 10367  0003C8  22DA               	addwfc	fsr2h,f,c
 10368  0003CA  0E01               	movlw	1
 10369  0003CC  6EDE               	movwf	postinc2,c
 10370  0003CE  0E00               	movlw	0
 10371  0003D0  6EDD               	movwf	postdec2,c
 10372                           
 10373                           ;stateMachine/gameController.c: 160:                 }
 10374  0003D2  EF0D  F002         	goto	l638
 10375  0003D6                     l9658:
 10376                           
 10377                           ;stateMachine/gameController.c: 162:                 {;stateMachine/gameController.c: 16
      +                          4:                     g->b.dy=-g->b.dy;
 10378  0003D6  EE20 F0B7          	lfsr	2,183
 10379  0003DA  5012               	movf	checkCollision@g^0,w,c
 10380  0003DC  26D9               	addwf	fsr2l,f,c
 10381  0003DE  5013               	movf	(checkCollision@g+1)^0,w,c
 10382  0003E0  22DA               	addwfc	fsr2h,f,c
 10383  0003E2  CFDE F014          	movff	postinc2,??_checkCollision
 10384  0003E6  CFDD F015          	movff	postdec2,??_checkCollision+1
 10385  0003EA  1E14               	comf	??_checkCollision^0,f,c
 10386  0003EC  1E15               	comf	(??_checkCollision+1)^0,f,c
 10387  0003EE  4A14               	infsnz	??_checkCollision^0,f,c
 10388  0003F0  2A15               	incf	(??_checkCollision+1)^0,f,c
 10389  0003F2  EE20 F0B7          	lfsr	2,183
 10390  0003F6  5012               	movf	checkCollision@g^0,w,c
 10391  0003F8  26D9               	addwf	fsr2l,f,c
 10392  0003FA  5013               	movf	(checkCollision@g+1)^0,w,c
 10393  0003FC  22DA               	addwfc	fsr2h,f,c
 10394  0003FE  C014  FFDE         	movff	??_checkCollision,postinc2
 10395  000402  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10396                           
 10397                           ;stateMachine/gameController.c: 165:                     g->b.dx=2;
 10398  000406  EE20 F0B5          	lfsr	2,181
 10399  00040A  5012               	movf	checkCollision@g^0,w,c
 10400  00040C  26D9               	addwf	fsr2l,f,c
 10401  00040E  5013               	movf	(checkCollision@g+1)^0,w,c
 10402  000410  22DA               	addwfc	fsr2h,f,c
 10403  000412  0E02               	movlw	2
 10404  000414  6EDE               	movwf	postinc2,c
 10405  000416  0E00               	movlw	0
 10406  000418  6EDD               	movwf	postdec2,c
 10407  00041A                     l638:
 10408                           
 10409                           ;stateMachine/gameController.c: 169:                 g->s1.homeScore++;
 10410  00041A  EE20 F0C5          	lfsr	2,197
 10411  00041E  5012               	movf	checkCollision@g^0,w,c
 10412  000420  26D9               	addwf	fsr2l,f,c
 10413  000422  5013               	movf	(checkCollision@g+1)^0,w,c
 10414  000424  22DA               	addwfc	fsr2h,f,c
 10415  000426  2ADE               	incf	postinc2,f,c
 10416  000428  0E00               	movlw	0
 10417  00042A  22DD               	addwfc	postdec2,f,c
 10418  00042C                     l634:
 10419                           
 10420                           ;stateMachine/gameController.c: 174:     if(g->b.y-8<=g->p2.y+20 +1)
 10421  00042C  0EF8               	movlw	248
 10422  00042E  6E14               	movwf	??_checkCollision^0,c
 10423  000430  0EFF               	movlw	255
 10424  000432  6E15               	movwf	(??_checkCollision+1)^0,c
 10425  000434  EE20 F0B3          	lfsr	2,179
 10426  000438  5012               	movf	checkCollision@g^0,w,c
 10427  00043A  26D9               	addwf	fsr2l,f,c
 10428  00043C  5013               	movf	(checkCollision@g+1)^0,w,c
 10429  00043E  22DA               	addwfc	fsr2h,f,c
 10430  000440  CFDE F016          	movff	postinc2,??_checkCollision+2
 10431  000444  CFDD F017          	movff	postdec2,??_checkCollision+3
 10432  000448  5014               	movf	??_checkCollision^0,w,c
 10433  00044A  2616               	addwf	(??_checkCollision+2)^0,f,c
 10434  00044C  5015               	movf	(??_checkCollision+1)^0,w,c
 10435  00044E  2217               	addwfc	(??_checkCollision+3)^0,f,c
 10436  000450  EE20 F0C1          	lfsr	2,193
 10437  000454  5012               	movf	checkCollision@g^0,w,c
 10438  000456  26D9               	addwf	fsr2l,f,c
 10439  000458  5013               	movf	(checkCollision@g+1)^0,w,c
 10440  00045A  22DA               	addwfc	fsr2h,f,c
 10441  00045C  CFDE F018          	movff	postinc2,??_checkCollision+4
 10442  000460  CFDD F019          	movff	postdec2,??_checkCollision+5
 10443  000464  0E15               	movlw	21
 10444  000466  2618               	addwf	(??_checkCollision+4)^0,f,c
 10445  000468  0E00               	movlw	0
 10446  00046A  2219               	addwfc	(??_checkCollision+5)^0,f,c
 10447  00046C  5016               	movf	(??_checkCollision+2)^0,w,c
 10448  00046E  5C18               	subwf	(??_checkCollision+4)^0,w,c
 10449  000470  5017               	movf	(??_checkCollision+3)^0,w,c
 10450  000472  5819               	subwfb	(??_checkCollision+5)^0,w,c
 10451  000474  A0D8               	btfss	status,0,c
 10452  000476  EF3F  F002         	goto	u7001
 10453  00047A  EF41  F002         	goto	u7000
 10454  00047E                     u7001:
 10455  00047E  EFC8  F003         	goto	l645
 10456  000482                     u7000:
 10457  000482                     
 10458                           ;stateMachine/gameController.c: 175:     {;stateMachine/gameController.c: 176:         i
      +                          f(g->b.x+8>g->p2.x)
 10459  000482  EE20 F0B1          	lfsr	2,177
 10460  000486  5012               	movf	checkCollision@g^0,w,c
 10461  000488  26D9               	addwf	fsr2l,f,c
 10462  00048A  5013               	movf	(checkCollision@g+1)^0,w,c
 10463  00048C  22DA               	addwfc	fsr2h,f,c
 10464  00048E  CFDE F014          	movff	postinc2,??_checkCollision
 10465  000492  CFDD F015          	movff	postdec2,??_checkCollision+1
 10466  000496  0E08               	movlw	8
 10467  000498  2614               	addwf	??_checkCollision^0,f,c
 10468  00049A  0E00               	movlw	0
 10469  00049C  2215               	addwfc	(??_checkCollision+1)^0,f,c
 10470  00049E  EE20 F0BF          	lfsr	2,191
 10471  0004A2  5012               	movf	checkCollision@g^0,w,c
 10472  0004A4  26D9               	addwf	fsr2l,f,c
 10473  0004A6  5013               	movf	(checkCollision@g+1)^0,w,c
 10474  0004A8  22DA               	addwfc	fsr2h,f,c
 10475  0004AA  5014               	movf	??_checkCollision^0,w,c
 10476  0004AC  5CDE               	subwf	postinc2,w,c
 10477  0004AE  5015               	movf	(??_checkCollision+1)^0,w,c
 10478  0004B0  58DE               	subwfb	postinc2,w,c
 10479  0004B2  B0D8               	btfsc	status,0,c
 10480  0004B4  EF5E  F002         	goto	u7011
 10481  0004B8  EF60  F002         	goto	u7010
 10482  0004BC                     u7011:
 10483  0004BC  EFC8  F003         	goto	l645
 10484  0004C0                     u7010:
 10485  0004C0                     
 10486                           ;stateMachine/gameController.c: 177:         {;stateMachine/gameController.c: 178:      
      +                                 if(g->b.x-8<g->p2.x+50)
 10487  0004C0  EE20 F0BF          	lfsr	2,191
 10488  0004C4  5012               	movf	checkCollision@g^0,w,c
 10489  0004C6  26D9               	addwf	fsr2l,f,c
 10490  0004C8  5013               	movf	(checkCollision@g+1)^0,w,c
 10491  0004CA  22DA               	addwfc	fsr2h,f,c
 10492  0004CC  CFDE F014          	movff	postinc2,??_checkCollision
 10493  0004D0  CFDD F015          	movff	postdec2,??_checkCollision+1
 10494  0004D4  0E32               	movlw	50
 10495  0004D6  2614               	addwf	??_checkCollision^0,f,c
 10496  0004D8  0E00               	movlw	0
 10497  0004DA  2215               	addwfc	(??_checkCollision+1)^0,f,c
 10498  0004DC  0EF8               	movlw	248
 10499  0004DE  6E16               	movwf	(??_checkCollision+2)^0,c
 10500  0004E0  0EFF               	movlw	255
 10501  0004E2  6E17               	movwf	(??_checkCollision+3)^0,c
 10502  0004E4  EE20 F0B1          	lfsr	2,177
 10503  0004E8  5012               	movf	checkCollision@g^0,w,c
 10504  0004EA  26D9               	addwf	fsr2l,f,c
 10505  0004EC  5013               	movf	(checkCollision@g+1)^0,w,c
 10506  0004EE  22DA               	addwfc	fsr2h,f,c
 10507  0004F0  CFDE F018          	movff	postinc2,??_checkCollision+4
 10508  0004F4  CFDD F019          	movff	postdec2,??_checkCollision+5
 10509  0004F8  5016               	movf	(??_checkCollision+2)^0,w,c
 10510  0004FA  2618               	addwf	(??_checkCollision+4)^0,f,c
 10511  0004FC  5017               	movf	(??_checkCollision+3)^0,w,c
 10512  0004FE  2219               	addwfc	(??_checkCollision+5)^0,f,c
 10513  000500  5014               	movf	??_checkCollision^0,w,c
 10514  000502  5C18               	subwf	(??_checkCollision+4)^0,w,c
 10515  000504  5015               	movf	(??_checkCollision+1)^0,w,c
 10516  000506  5819               	subwfb	(??_checkCollision+5)^0,w,c
 10517  000508  B0D8               	btfsc	status,0,c
 10518  00050A  EF89  F002         	goto	u7021
 10519  00050E  EF8B  F002         	goto	u7020
 10520  000512                     u7021:
 10521  000512  EFC8  F003         	goto	l645
 10522  000516                     u7020:
 10523  000516                     
 10524                           ;stateMachine/gameController.c: 179:             {;stateMachine/gameController.c: 180:  
      +                                         if(g->b.x-g->p2.x<10)
 10525  000516  EE20 F0BF          	lfsr	2,191
 10526  00051A  5012               	movf	checkCollision@g^0,w,c
 10527  00051C  26D9               	addwf	fsr2l,f,c
 10528  00051E  5013               	movf	(checkCollision@g+1)^0,w,c
 10529  000520  22DA               	addwfc	fsr2h,f,c
 10530  000522  CFDE F014          	movff	postinc2,??_checkCollision
 10531  000526  CFDD F015          	movff	postdec2,??_checkCollision+1
 10532  00052A  EE20 F0B1          	lfsr	2,177
 10533  00052E  5012               	movf	checkCollision@g^0,w,c
 10534  000530  26D9               	addwf	fsr2l,f,c
 10535  000532  5013               	movf	(checkCollision@g+1)^0,w,c
 10536  000534  22DA               	addwfc	fsr2h,f,c
 10537  000536  CFDE F016          	movff	postinc2,??_checkCollision+2
 10538  00053A  CFDD F017          	movff	postdec2,??_checkCollision+3
 10539  00053E  5014               	movf	??_checkCollision^0,w,c
 10540  000540  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10541  000542  5015               	movf	(??_checkCollision+1)^0,w,c
 10542  000544  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10543  000546  5017               	movf	(??_checkCollision+3)^0,w,c
 10544  000548  E107               	bnz	u7031
 10545  00054A  0E0A               	movlw	10
 10546  00054C  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10547  00054E  B0D8               	btfsc	status,0,c
 10548  000550  EFAC  F002         	goto	u7031
 10549  000554  EFAE  F002         	goto	u7030
 10550  000558                     u7031:
 10551  000558  EFD2  F002         	goto	l9668
 10552  00055C                     u7030:
 10553  00055C                     
 10554                           ;stateMachine/gameController.c: 181:                 {;stateMachine/gameController.c: 18
      +                          3:                     g->b.dy=-g->b.dy;
 10555  00055C  EE20 F0B7          	lfsr	2,183
 10556  000560  5012               	movf	checkCollision@g^0,w,c
 10557  000562  26D9               	addwf	fsr2l,f,c
 10558  000564  5013               	movf	(checkCollision@g+1)^0,w,c
 10559  000566  22DA               	addwfc	fsr2h,f,c
 10560  000568  CFDE F014          	movff	postinc2,??_checkCollision
 10561  00056C  CFDD F015          	movff	postdec2,??_checkCollision+1
 10562  000570  1E14               	comf	??_checkCollision^0,f,c
 10563  000572  1E15               	comf	(??_checkCollision+1)^0,f,c
 10564  000574  4A14               	infsnz	??_checkCollision^0,f,c
 10565  000576  2A15               	incf	(??_checkCollision+1)^0,f,c
 10566  000578  EE20 F0B7          	lfsr	2,183
 10567  00057C  5012               	movf	checkCollision@g^0,w,c
 10568  00057E  26D9               	addwf	fsr2l,f,c
 10569  000580  5013               	movf	(checkCollision@g+1)^0,w,c
 10570  000582  22DA               	addwfc	fsr2h,f,c
 10571  000584  C014  FFDE         	movff	??_checkCollision,postinc2
 10572  000588  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10573                           
 10574                           ;stateMachine/gameController.c: 184:                     g->b.dx=-2;
 10575  00058C  EE20 F0B5          	lfsr	2,181
 10576  000590  5012               	movf	checkCollision@g^0,w,c
 10577  000592  26D9               	addwf	fsr2l,f,c
 10578  000594  5013               	movf	(checkCollision@g+1)^0,w,c
 10579  000596  22DA               	addwfc	fsr2h,f,c
 10580  000598  0EFE               	movlw	254
 10581  00059A  6EDE               	movwf	postinc2,c
 10582  00059C  0EFF               	movlw	255
 10583  00059E  6EDD               	movwf	postdec2,c
 10584                           
 10585                           ;stateMachine/gameController.c: 185:                 }
 10586  0005A0  EFBF  F003         	goto	l649
 10587  0005A4                     l9668:
 10588  0005A4  EE20 F0BF          	lfsr	2,191
 10589  0005A8  5012               	movf	checkCollision@g^0,w,c
 10590  0005AA  26D9               	addwf	fsr2l,f,c
 10591  0005AC  5013               	movf	(checkCollision@g+1)^0,w,c
 10592  0005AE  22DA               	addwfc	fsr2h,f,c
 10593  0005B0  CFDE F014          	movff	postinc2,??_checkCollision
 10594  0005B4  CFDD F015          	movff	postdec2,??_checkCollision+1
 10595  0005B8  EE20 F0B1          	lfsr	2,177
 10596  0005BC  5012               	movf	checkCollision@g^0,w,c
 10597  0005BE  26D9               	addwf	fsr2l,f,c
 10598  0005C0  5013               	movf	(checkCollision@g+1)^0,w,c
 10599  0005C2  22DA               	addwfc	fsr2h,f,c
 10600  0005C4  CFDE F016          	movff	postinc2,??_checkCollision+2
 10601  0005C8  CFDD F017          	movff	postdec2,??_checkCollision+3
 10602  0005CC  5014               	movf	??_checkCollision^0,w,c
 10603  0005CE  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10604  0005D0  5015               	movf	(??_checkCollision+1)^0,w,c
 10605  0005D2  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10606  0005D4  5017               	movf	(??_checkCollision+3)^0,w,c
 10607  0005D6  E107               	bnz	u7041
 10608  0005D8  0E14               	movlw	20
 10609  0005DA  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10610  0005DC  B0D8               	btfsc	status,0,c
 10611  0005DE  EFF3  F002         	goto	u7041
 10612  0005E2  EFF5  F002         	goto	u7040
 10613  0005E6                     u7041:
 10614  0005E6  EF19  F003         	goto	l9672
 10615  0005EA                     u7040:
 10616  0005EA                     
 10617                           ;stateMachine/gameController.c: 187:                 {;stateMachine/gameController.c: 18
      +                          9:                     g->b.dy=-g->b.dy;
 10618  0005EA  EE20 F0B7          	lfsr	2,183
 10619  0005EE  5012               	movf	checkCollision@g^0,w,c
 10620  0005F0  26D9               	addwf	fsr2l,f,c
 10621  0005F2  5013               	movf	(checkCollision@g+1)^0,w,c
 10622  0005F4  22DA               	addwfc	fsr2h,f,c
 10623  0005F6  CFDE F014          	movff	postinc2,??_checkCollision
 10624  0005FA  CFDD F015          	movff	postdec2,??_checkCollision+1
 10625  0005FE  1E14               	comf	??_checkCollision^0,f,c
 10626  000600  1E15               	comf	(??_checkCollision+1)^0,f,c
 10627  000602  4A14               	infsnz	??_checkCollision^0,f,c
 10628  000604  2A15               	incf	(??_checkCollision+1)^0,f,c
 10629  000606  EE20 F0B7          	lfsr	2,183
 10630  00060A  5012               	movf	checkCollision@g^0,w,c
 10631  00060C  26D9               	addwf	fsr2l,f,c
 10632  00060E  5013               	movf	(checkCollision@g+1)^0,w,c
 10633  000610  22DA               	addwfc	fsr2h,f,c
 10634  000612  C014  FFDE         	movff	??_checkCollision,postinc2
 10635  000616  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10636                           
 10637                           ;stateMachine/gameController.c: 190:                     g->b.dx=-1;
 10638  00061A  EE20 F0B5          	lfsr	2,181
 10639  00061E  5012               	movf	checkCollision@g^0,w,c
 10640  000620  26D9               	addwf	fsr2l,f,c
 10641  000622  5013               	movf	(checkCollision@g+1)^0,w,c
 10642  000624  22DA               	addwfc	fsr2h,f,c
 10643  000626  0EFF               	movlw	255
 10644  000628  6EDE               	movwf	postinc2,c
 10645  00062A  0EFF               	movlw	255
 10646  00062C  6EDD               	movwf	postdec2,c
 10647                           
 10648                           ;stateMachine/gameController.c: 191:                 }
 10649  00062E  EFBF  F003         	goto	l649
 10650  000632                     l9672:
 10651  000632  EE20 F0BF          	lfsr	2,191
 10652  000636  5012               	movf	checkCollision@g^0,w,c
 10653  000638  26D9               	addwf	fsr2l,f,c
 10654  00063A  5013               	movf	(checkCollision@g+1)^0,w,c
 10655  00063C  22DA               	addwfc	fsr2h,f,c
 10656  00063E  CFDE F014          	movff	postinc2,??_checkCollision
 10657  000642  CFDD F015          	movff	postdec2,??_checkCollision+1
 10658  000646  EE20 F0B1          	lfsr	2,177
 10659  00064A  5012               	movf	checkCollision@g^0,w,c
 10660  00064C  26D9               	addwf	fsr2l,f,c
 10661  00064E  5013               	movf	(checkCollision@g+1)^0,w,c
 10662  000650  22DA               	addwfc	fsr2h,f,c
 10663  000652  CFDE F016          	movff	postinc2,??_checkCollision+2
 10664  000656  CFDD F017          	movff	postdec2,??_checkCollision+3
 10665  00065A  5014               	movf	??_checkCollision^0,w,c
 10666  00065C  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10667  00065E  5015               	movf	(??_checkCollision+1)^0,w,c
 10668  000660  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10669  000662  5017               	movf	(??_checkCollision+3)^0,w,c
 10670  000664  E107               	bnz	u7051
 10671  000666  0E1E               	movlw	30
 10672  000668  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10673  00066A  B0D8               	btfsc	status,0,c
 10674  00066C  EF3A  F003         	goto	u7051
 10675  000670  EF3C  F003         	goto	u7050
 10676  000674                     u7051:
 10677  000674  EF56  F003         	goto	l9676
 10678  000678                     u7050:
 10679  000678                     
 10680                           ;stateMachine/gameController.c: 195:                     g->b.dy=-g->b.dy;
 10681  000678  EE20 F0B7          	lfsr	2,183
 10682  00067C  5012               	movf	checkCollision@g^0,w,c
 10683  00067E  26D9               	addwf	fsr2l,f,c
 10684  000680  5013               	movf	(checkCollision@g+1)^0,w,c
 10685  000682  22DA               	addwfc	fsr2h,f,c
 10686  000684  CFDE F014          	movff	postinc2,??_checkCollision
 10687  000688  CFDD F015          	movff	postdec2,??_checkCollision+1
 10688  00068C  1E14               	comf	??_checkCollision^0,f,c
 10689  00068E  1E15               	comf	(??_checkCollision+1)^0,f,c
 10690  000690  4A14               	infsnz	??_checkCollision^0,f,c
 10691  000692  2A15               	incf	(??_checkCollision+1)^0,f,c
 10692  000694  EE20 F0B7          	lfsr	2,183
 10693  000698  5012               	movf	checkCollision@g^0,w,c
 10694  00069A  26D9               	addwf	fsr2l,f,c
 10695  00069C  5013               	movf	(checkCollision@g+1)^0,w,c
 10696  00069E  22DA               	addwfc	fsr2h,f,c
 10697  0006A0  C014  FFDE         	movff	??_checkCollision,postinc2
 10698  0006A4  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10699                           
 10700                           ;stateMachine/gameController.c: 196:                 }
 10701  0006A8  EFBF  F003         	goto	l649
 10702  0006AC                     l9676:
 10703  0006AC  EE20 F0BF          	lfsr	2,191
 10704  0006B0  5012               	movf	checkCollision@g^0,w,c
 10705  0006B2  26D9               	addwf	fsr2l,f,c
 10706  0006B4  5013               	movf	(checkCollision@g+1)^0,w,c
 10707  0006B6  22DA               	addwfc	fsr2h,f,c
 10708  0006B8  CFDE F014          	movff	postinc2,??_checkCollision
 10709  0006BC  CFDD F015          	movff	postdec2,??_checkCollision+1
 10710  0006C0  EE20 F0B1          	lfsr	2,177
 10711  0006C4  5012               	movf	checkCollision@g^0,w,c
 10712  0006C6  26D9               	addwf	fsr2l,f,c
 10713  0006C8  5013               	movf	(checkCollision@g+1)^0,w,c
 10714  0006CA  22DA               	addwfc	fsr2h,f,c
 10715  0006CC  CFDE F016          	movff	postinc2,??_checkCollision+2
 10716  0006D0  CFDD F017          	movff	postdec2,??_checkCollision+3
 10717  0006D4  5014               	movf	??_checkCollision^0,w,c
 10718  0006D6  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10719  0006D8  5015               	movf	(??_checkCollision+1)^0,w,c
 10720  0006DA  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10721  0006DC  5017               	movf	(??_checkCollision+3)^0,w,c
 10722  0006DE  E107               	bnz	u7061
 10723  0006E0  0E28               	movlw	40
 10724  0006E2  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10725  0006E4  B0D8               	btfsc	status,0,c
 10726  0006E6  EF77  F003         	goto	u7061
 10727  0006EA  EF79  F003         	goto	u7060
 10728  0006EE                     u7061:
 10729  0006EE  EF9D  F003         	goto	l9680
 10730  0006F2                     u7060:
 10731  0006F2                     
 10732                           ;stateMachine/gameController.c: 198:                 {;stateMachine/gameController.c: 20
      +                          0:                     g->b.dy=-g->b.dy;
 10733  0006F2  EE20 F0B7          	lfsr	2,183
 10734  0006F6  5012               	movf	checkCollision@g^0,w,c
 10735  0006F8  26D9               	addwf	fsr2l,f,c
 10736  0006FA  5013               	movf	(checkCollision@g+1)^0,w,c
 10737  0006FC  22DA               	addwfc	fsr2h,f,c
 10738  0006FE  CFDE F014          	movff	postinc2,??_checkCollision
 10739  000702  CFDD F015          	movff	postdec2,??_checkCollision+1
 10740  000706  1E14               	comf	??_checkCollision^0,f,c
 10741  000708  1E15               	comf	(??_checkCollision+1)^0,f,c
 10742  00070A  4A14               	infsnz	??_checkCollision^0,f,c
 10743  00070C  2A15               	incf	(??_checkCollision+1)^0,f,c
 10744  00070E  EE20 F0B7          	lfsr	2,183
 10745  000712  5012               	movf	checkCollision@g^0,w,c
 10746  000714  26D9               	addwf	fsr2l,f,c
 10747  000716  5013               	movf	(checkCollision@g+1)^0,w,c
 10748  000718  22DA               	addwfc	fsr2h,f,c
 10749  00071A  C014  FFDE         	movff	??_checkCollision,postinc2
 10750  00071E  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10751                           
 10752                           ;stateMachine/gameController.c: 201:                     g->b.dx=1;
 10753  000722  EE20 F0B5          	lfsr	2,181
 10754  000726  5012               	movf	checkCollision@g^0,w,c
 10755  000728  26D9               	addwf	fsr2l,f,c
 10756  00072A  5013               	movf	(checkCollision@g+1)^0,w,c
 10757  00072C  22DA               	addwfc	fsr2h,f,c
 10758  00072E  0E01               	movlw	1
 10759  000730  6EDE               	movwf	postinc2,c
 10760  000732  0E00               	movlw	0
 10761  000734  6EDD               	movwf	postdec2,c
 10762                           
 10763                           ;stateMachine/gameController.c: 202:                 }
 10764  000736  EFBF  F003         	goto	l649
 10765  00073A                     l9680:
 10766                           
 10767                           ;stateMachine/gameController.c: 204:                 {;stateMachine/gameController.c: 20
      +                          6:                     g->b.dy=-g->b.dy;
 10768  00073A  EE20 F0B7          	lfsr	2,183
 10769  00073E  5012               	movf	checkCollision@g^0,w,c
 10770  000740  26D9               	addwf	fsr2l,f,c
 10771  000742  5013               	movf	(checkCollision@g+1)^0,w,c
 10772  000744  22DA               	addwfc	fsr2h,f,c
 10773  000746  CFDE F014          	movff	postinc2,??_checkCollision
 10774  00074A  CFDD F015          	movff	postdec2,??_checkCollision+1
 10775  00074E  1E14               	comf	??_checkCollision^0,f,c
 10776  000750  1E15               	comf	(??_checkCollision+1)^0,f,c
 10777  000752  4A14               	infsnz	??_checkCollision^0,f,c
 10778  000754  2A15               	incf	(??_checkCollision+1)^0,f,c
 10779  000756  EE20 F0B7          	lfsr	2,183
 10780  00075A  5012               	movf	checkCollision@g^0,w,c
 10781  00075C  26D9               	addwf	fsr2l,f,c
 10782  00075E  5013               	movf	(checkCollision@g+1)^0,w,c
 10783  000760  22DA               	addwfc	fsr2h,f,c
 10784  000762  C014  FFDE         	movff	??_checkCollision,postinc2
 10785  000766  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10786                           
 10787                           ;stateMachine/gameController.c: 207:                     g->b.dx=2;
 10788  00076A  EE20 F0B5          	lfsr	2,181
 10789  00076E  5012               	movf	checkCollision@g^0,w,c
 10790  000770  26D9               	addwf	fsr2l,f,c
 10791  000772  5013               	movf	(checkCollision@g+1)^0,w,c
 10792  000774  22DA               	addwfc	fsr2h,f,c
 10793  000776  0E02               	movlw	2
 10794  000778  6EDE               	movwf	postinc2,c
 10795  00077A  0E00               	movlw	0
 10796  00077C  6EDD               	movwf	postdec2,c
 10797  00077E                     l649:
 10798                           
 10799                           ;stateMachine/gameController.c: 210:                 g->s1.awayScore++;
 10800  00077E  EE20 F0C7          	lfsr	2,199
 10801  000782  5012               	movf	checkCollision@g^0,w,c
 10802  000784  26D9               	addwf	fsr2l,f,c
 10803  000786  5013               	movf	(checkCollision@g+1)^0,w,c
 10804  000788  22DA               	addwfc	fsr2h,f,c
 10805  00078A  2ADE               	incf	postinc2,f,c
 10806  00078C  0E00               	movlw	0
 10807  00078E  22DD               	addwfc	postdec2,f,c
 10808  000790                     l645:
 10809                           
 10810                           ;stateMachine/gameController.c: 215:     if(g->b.x+8>=239)
 10811  000790  EE20 F0B1          	lfsr	2,177
 10812  000794  5012               	movf	checkCollision@g^0,w,c
 10813  000796  26D9               	addwf	fsr2l,f,c
 10814  000798  5013               	movf	(checkCollision@g+1)^0,w,c
 10815  00079A  22DA               	addwfc	fsr2h,f,c
 10816  00079C  CFDE F014          	movff	postinc2,??_checkCollision
 10817  0007A0  CFDD F015          	movff	postdec2,??_checkCollision+1
 10818  0007A4  0E08               	movlw	8
 10819  0007A6  2614               	addwf	??_checkCollision^0,f,c
 10820  0007A8  0E00               	movlw	0
 10821  0007AA  2215               	addwfc	(??_checkCollision+1)^0,f,c
 10822  0007AC  5015               	movf	(??_checkCollision+1)^0,w,c
 10823  0007AE  E109               	bnz	u7070
 10824  0007B0  0EEF               	movlw	239
 10825  0007B2  5C14               	subwf	??_checkCollision^0,w,c
 10826  0007B4  A0D8               	btfss	status,0,c
 10827  0007B6  EFDF  F003         	goto	u7071
 10828  0007BA  EFE1  F003         	goto	u7070
 10829  0007BE                     u7071:
 10830  0007BE  EFF9  F003         	goto	l656
 10831  0007C2                     u7070:
 10832  0007C2                     
 10833                           ;stateMachine/gameController.c: 216:     {;stateMachine/gameController.c: 217:         g
      +                          ->b.dx=-g->b.dx;
 10834  0007C2  EE20 F0B5          	lfsr	2,181
 10835  0007C6  5012               	movf	checkCollision@g^0,w,c
 10836  0007C8  26D9               	addwf	fsr2l,f,c
 10837  0007CA  5013               	movf	(checkCollision@g+1)^0,w,c
 10838  0007CC  22DA               	addwfc	fsr2h,f,c
 10839  0007CE  CFDE F014          	movff	postinc2,??_checkCollision
 10840  0007D2  CFDD F015          	movff	postdec2,??_checkCollision+1
 10841  0007D6  1E14               	comf	??_checkCollision^0,f,c
 10842  0007D8  1E15               	comf	(??_checkCollision+1)^0,f,c
 10843  0007DA  4A14               	infsnz	??_checkCollision^0,f,c
 10844  0007DC  2A15               	incf	(??_checkCollision+1)^0,f,c
 10845  0007DE  EE20 F0B5          	lfsr	2,181
 10846  0007E2  5012               	movf	checkCollision@g^0,w,c
 10847  0007E4  26D9               	addwf	fsr2l,f,c
 10848  0007E6  5013               	movf	(checkCollision@g+1)^0,w,c
 10849  0007E8  22DA               	addwfc	fsr2h,f,c
 10850  0007EA  C014  FFDE         	movff	??_checkCollision,postinc2
 10851  0007EE  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10852  0007F2                     l656:
 10853                           
 10854                           ;stateMachine/gameController.c: 219:     if(g->b.x-8<=0)
 10855  0007F2  0EF8               	movlw	248
 10856  0007F4  6E14               	movwf	??_checkCollision^0,c
 10857  0007F6  0EFF               	movlw	255
 10858  0007F8  6E15               	movwf	(??_checkCollision+1)^0,c
 10859  0007FA  EE20 F0B1          	lfsr	2,177
 10860  0007FE  5012               	movf	checkCollision@g^0,w,c
 10861  000800  26D9               	addwf	fsr2l,f,c
 10862  000802  5013               	movf	(checkCollision@g+1)^0,w,c
 10863  000804  22DA               	addwfc	fsr2h,f,c
 10864  000806  CFDE F016          	movff	postinc2,??_checkCollision+2
 10865  00080A  CFDD F017          	movff	postdec2,??_checkCollision+3
 10866  00080E  5014               	movf	??_checkCollision^0,w,c
 10867  000810  2616               	addwf	(??_checkCollision+2)^0,f,c
 10868  000812  5015               	movf	(??_checkCollision+1)^0,w,c
 10869  000814  2217               	addwfc	(??_checkCollision+3)^0,f,c
 10870  000816  5016               	movf	(??_checkCollision+2)^0,w,c
 10871  000818  1017               	iorwf	(??_checkCollision+3)^0,w,c
 10872  00081A  A4D8               	btfss	status,2,c
 10873  00081C  EF12  F004         	goto	u7081
 10874  000820  EF14  F004         	goto	u7080
 10875  000824                     u7081:
 10876  000824  EF2E  F004         	goto	l9686
 10877  000828                     u7080:
 10878  000828                     
 10879                           ;stateMachine/gameController.c: 220:     {;stateMachine/gameController.c: 221:         g
      +                          ->b.dx=-g->b.dx;
 10880  000828  EE20 F0B5          	lfsr	2,181
 10881  00082C  5012               	movf	checkCollision@g^0,w,c
 10882  00082E  26D9               	addwf	fsr2l,f,c
 10883  000830  5013               	movf	(checkCollision@g+1)^0,w,c
 10884  000832  22DA               	addwfc	fsr2h,f,c
 10885  000834  CFDE F014          	movff	postinc2,??_checkCollision
 10886  000838  CFDD F015          	movff	postdec2,??_checkCollision+1
 10887  00083C  1E14               	comf	??_checkCollision^0,f,c
 10888  00083E  1E15               	comf	(??_checkCollision+1)^0,f,c
 10889  000840  4A14               	infsnz	??_checkCollision^0,f,c
 10890  000842  2A15               	incf	(??_checkCollision+1)^0,f,c
 10891  000844  EE20 F0B5          	lfsr	2,181
 10892  000848  5012               	movf	checkCollision@g^0,w,c
 10893  00084A  26D9               	addwf	fsr2l,f,c
 10894  00084C  5013               	movf	(checkCollision@g+1)^0,w,c
 10895  00084E  22DA               	addwfc	fsr2h,f,c
 10896  000850  C014  FFDE         	movff	??_checkCollision,postinc2
 10897  000854  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10898  000858  EF2E  F004         	goto	l660
 10899  00085C                     l9686:
 10900  00085C                     l660:
 10901  00085C  0012               	return		;funcret
 10902  00085E                     __end_of_checkCollision:
 10903                           	callstack 0
 10904                           
 10905 ;; *************** function _Ball_Update *****************
 10906 ;; Defined at:
 10907 ;;		line 10 in file "class/ball.c"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;  b               2   46[COMRAM] PTR struct Ball
 10910 ;;		 -> g1(201), 
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;		None
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      void 
 10915 ;; Registers used:
 10916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10922 ;;      Params:         2       0       0       0       0       0       0
 10923 ;;      Locals:         0       0       0       0       0       0       0
 10924 ;;      Temps:          8       0       0       0       0       0       0
 10925 ;;      Totals:        10       0       0       0       0       0       0
 10926 ;;Total ram usage:       10 bytes
 10927 ;; Hardware stack levels used: 1
 10928 ;; Hardware stack levels required when called: 6
 10929 ;; This function calls:
 10930 ;;		_Ball_draw
 10931 ;;		_LCD_DrawRect
 10932 ;; This function is called by:
 10933 ;;		_mooveBall
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           
 10937                           	psect	text43
 10938  004326                     __ptext43:
 10939                           	callstack 0
 10940  004326                     _Ball_Update:
 10941                           	callstack 21
 10942  004326                     
 10943                           ;class/ball.c: 10: void Ball_Update(struct Ball* b);class/ball.c: 11: {;class/ball.c: 12
      +                          :     LCD_DrawRect(b->x-8,b->y-8,b->x+8,b->y+8,1,0b1111111111111111);
 10944  004326  C02F  FFD9         	movff	Ball_Update@b,fsr2l
 10945  00432A  C030  FFDA         	movff	Ball_Update@b+1,fsr2h
 10946  00432E  CFDE F031          	movff	postinc2,??_Ball_Update
 10947  004332  CFDD F032          	movff	postdec2,??_Ball_Update+1
 10948  004336  0EF8               	movlw	248
 10949  004338  2431               	addwf	??_Ball_Update^0,w,c
 10950  00433A  6E12               	movwf	LCD_DrawRect@posX1^0,c
 10951  00433C  0EFF               	movlw	255
 10952  00433E  2032               	addwfc	(??_Ball_Update+1)^0,w,c
 10953  004340  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 10954  004342  EE20 F002          	lfsr	2,2
 10955  004346  502F               	movf	Ball_Update@b^0,w,c
 10956  004348  26D9               	addwf	fsr2l,f,c
 10957  00434A  5030               	movf	(Ball_Update@b+1)^0,w,c
 10958  00434C  22DA               	addwfc	fsr2h,f,c
 10959  00434E  CFDE F033          	movff	postinc2,??_Ball_Update+2
 10960  004352  CFDD F034          	movff	postdec2,??_Ball_Update+3
 10961  004356  0EF8               	movlw	248
 10962  004358  2433               	addwf	(??_Ball_Update+2)^0,w,c
 10963  00435A  6E14               	movwf	LCD_DrawRect@posY1^0,c
 10964  00435C  0EFF               	movlw	255
 10965  00435E  2034               	addwfc	(??_Ball_Update+3)^0,w,c
 10966  004360  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 10967  004362  C02F  FFD9         	movff	Ball_Update@b,fsr2l
 10968  004366  C030  FFDA         	movff	Ball_Update@b+1,fsr2h
 10969  00436A  CFDE F035          	movff	postinc2,??_Ball_Update+4
 10970  00436E  CFDD F036          	movff	postdec2,??_Ball_Update+5
 10971  004372  0E08               	movlw	8
 10972  004374  2435               	addwf	(??_Ball_Update+4)^0,w,c
 10973  004376  6E16               	movwf	LCD_DrawRect@posX2^0,c
 10974  004378  0E00               	movlw	0
 10975  00437A  2036               	addwfc	(??_Ball_Update+5)^0,w,c
 10976  00437C  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 10977  00437E  EE20 F002          	lfsr	2,2
 10978  004382  502F               	movf	Ball_Update@b^0,w,c
 10979  004384  26D9               	addwf	fsr2l,f,c
 10980  004386  5030               	movf	(Ball_Update@b+1)^0,w,c
 10981  004388  22DA               	addwfc	fsr2h,f,c
 10982  00438A  CFDE F037          	movff	postinc2,??_Ball_Update+6
 10983  00438E  CFDD F038          	movff	postdec2,??_Ball_Update+7
 10984  004392  0E08               	movlw	8
 10985  004394  2437               	addwf	(??_Ball_Update+6)^0,w,c
 10986  004396  6E18               	movwf	LCD_DrawRect@posY2^0,c
 10987  004398  0E00               	movlw	0
 10988  00439A  2038               	addwfc	(??_Ball_Update+7)^0,w,c
 10989  00439C  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 10990  00439E  0E01               	movlw	1
 10991  0043A0  6E1A               	movwf	LCD_DrawRect@fill^0,c
 10992  0043A2  0EFF               	movlw	255
 10993  0043A4  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 10994  0043A6  681B               	setf	LCD_DrawRect@color^0,c
 10995  0043A8  EC02  F014         	call	_LCD_DrawRect	;wreg free
 10996  0043AC                     
 10997                           ;class/ball.c: 13:     b->x=b->x+b->dx;
 10998  0043AC  EE20 F004          	lfsr	2,4
 10999  0043B0  502F               	movf	Ball_Update@b^0,w,c
 11000  0043B2  26D9               	addwf	fsr2l,f,c
 11001  0043B4  5030               	movf	(Ball_Update@b+1)^0,w,c
 11002  0043B6  22DA               	addwfc	fsr2h,f,c
 11003  0043B8  CFDE F031          	movff	postinc2,??_Ball_Update
 11004  0043BC  CFDD F032          	movff	postdec2,??_Ball_Update+1
 11005  0043C0  C02F  FFD9         	movff	Ball_Update@b,fsr2l
 11006  0043C4  C030  FFDA         	movff	Ball_Update@b+1,fsr2h
 11007  0043C8  CFDE F033          	movff	postinc2,??_Ball_Update+2
 11008  0043CC  CFDD F034          	movff	postdec2,??_Ball_Update+3
 11009  0043D0  5031               	movf	??_Ball_Update^0,w,c
 11010  0043D2  2633               	addwf	(??_Ball_Update+2)^0,f,c
 11011  0043D4  5032               	movf	(??_Ball_Update+1)^0,w,c
 11012  0043D6  2234               	addwfc	(??_Ball_Update+3)^0,f,c
 11013  0043D8  C02F  FFD9         	movff	Ball_Update@b,fsr2l
 11014  0043DC  C030  FFDA         	movff	Ball_Update@b+1,fsr2h
 11015  0043E0  C033  FFDE         	movff	??_Ball_Update+2,postinc2
 11016  0043E4  C034  FFDD         	movff	??_Ball_Update+3,postdec2
 11017  0043E8                     
 11018                           ;class/ball.c: 14:     b->y=b->y+b->dy;
 11019  0043E8  EE20 F006          	lfsr	2,6
 11020  0043EC  502F               	movf	Ball_Update@b^0,w,c
 11021  0043EE  26D9               	addwf	fsr2l,f,c
 11022  0043F0  5030               	movf	(Ball_Update@b+1)^0,w,c
 11023  0043F2  22DA               	addwfc	fsr2h,f,c
 11024  0043F4  CFDE F031          	movff	postinc2,??_Ball_Update
 11025  0043F8  CFDD F032          	movff	postdec2,??_Ball_Update+1
 11026  0043FC  EE20 F002          	lfsr	2,2
 11027  004400  502F               	movf	Ball_Update@b^0,w,c
 11028  004402  26D9               	addwf	fsr2l,f,c
 11029  004404  5030               	movf	(Ball_Update@b+1)^0,w,c
 11030  004406  22DA               	addwfc	fsr2h,f,c
 11031  004408  CFDE F033          	movff	postinc2,??_Ball_Update+2
 11032  00440C  CFDD F034          	movff	postdec2,??_Ball_Update+3
 11033  004410  5031               	movf	??_Ball_Update^0,w,c
 11034  004412  2633               	addwf	(??_Ball_Update+2)^0,f,c
 11035  004414  5032               	movf	(??_Ball_Update+1)^0,w,c
 11036  004416  2234               	addwfc	(??_Ball_Update+3)^0,f,c
 11037  004418  EE20 F002          	lfsr	2,2
 11038  00441C  502F               	movf	Ball_Update@b^0,w,c
 11039  00441E  26D9               	addwf	fsr2l,f,c
 11040  004420  5030               	movf	(Ball_Update@b+1)^0,w,c
 11041  004422  22DA               	addwfc	fsr2h,f,c
 11042  004424  C033  FFDE         	movff	??_Ball_Update+2,postinc2
 11043  004428  C034  FFDD         	movff	??_Ball_Update+3,postdec2
 11044                           
 11045                           ;class/ball.c: 15:     Ball_draw(b);
 11046  00442C  C02F  F025         	movff	Ball_Update@b,Ball_draw@b
 11047  004430  C030  F026         	movff	Ball_Update@b+1,Ball_draw@b+1
 11048  004434  EC16  F02A         	call	_Ball_draw	;wreg free
 11049  004438  0012               	return		;funcret
 11050  00443A                     __end_of_Ball_Update:
 11051                           	callstack 0
 11052                           
 11053 ;; *************** function _gameControllerController *****************
 11054 ;; Defined at:
 11055 ;;		line 68 in file "stateMachine/gameController.c"
 11056 ;; Parameters:    Size  Location     Type
 11057 ;;  g               2   54[COMRAM] PTR struct GameParameter
 11058 ;;		 -> g1(201), 
 11059 ;; Auto vars:     Size  Location     Type
 11060 ;;		None
 11061 ;; Return value:  Size  Location     Type
 11062 ;;                  1    wreg      void 
 11063 ;; Registers used:
 11064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11065 ;; Tracked objects:
 11066 ;;		On entry : 0/0
 11067 ;;		On exit  : 0/0
 11068 ;;		Unchanged: 0/0
 11069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11070 ;;      Params:         2       0       0       0       0       0       0
 11071 ;;      Locals:         0       0       0       0       0       0       0
 11072 ;;      Temps:          2       0       0       0       0       0       0
 11073 ;;      Totals:         4       0       0       0       0       0       0
 11074 ;;Total ram usage:        4 bytes
 11075 ;; Hardware stack levels used: 1
 11076 ;; Hardware stack levels required when called: 6
 11077 ;; This function calls:
 11078 ;;		_GameParameters_resetPos
 11079 ;;		_LCD_InButton
 11080 ;;		_LCD_InSlider
 11081 ;;		_LCD_SliderUpdate
 11082 ;;		_XF_pushEvent
 11083 ;;		_backlightController
 11084 ;; This function is called by:
 11085 ;;		_gameControllerInit
 11086 ;;		_gameControllerSM
 11087 ;; This function uses a non-reentrant model
 11088 ;;
 11089                           
 11090                           	psect	text44
 11091  00356A                     __ptext44:
 11092                           	callstack 0
 11093  00356A                     _gameControllerController:
 11094                           	callstack 21
 11095  00356A                     
 11096                           ;stateMachine/gameController.c: 68: void gameControllerController(GameParameters* g);sta
      +                          teMachine/gameController.c: 69: {;stateMachine/gameController.c: 70:     switch(gameCont
      +                          rollerState)
 11097  00356A  EFAF  F01B         	goto	l9630
 11098  00356E                     l9610:
 11099                           
 11100                           ;stateMachine/gameController.c: 73:             if(LCD_InButton(&(g->btnParam),g->x,g->y
      +                          ))
 11101  00356E  0E08               	movlw	8
 11102  003570  2437               	addwf	gameControllerController@g^0,w,c
 11103  003572  6E12               	movwf	LCD_InButton@button^0,c
 11104  003574  0E00               	movlw	0
 11105  003576  2038               	addwfc	(gameControllerController@g+1)^0,w,c
 11106  003578  6E13               	movwf	(LCD_InButton@button+1)^0,c
 11107  00357A  EE20 F004          	lfsr	2,4
 11108  00357E  5037               	movf	gameControllerController@g^0,w,c
 11109  003580  26D9               	addwf	fsr2l,f,c
 11110  003582  5038               	movf	(gameControllerController@g+1)^0,w,c
 11111  003584  22DA               	addwfc	fsr2h,f,c
 11112  003586  CFDE F014          	movff	postinc2,LCD_InButton@posX
 11113  00358A  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
 11114  00358E  EE20 F006          	lfsr	2,6
 11115  003592  5037               	movf	gameControllerController@g^0,w,c
 11116  003594  26D9               	addwf	fsr2l,f,c
 11117  003596  5038               	movf	(gameControllerController@g+1)^0,w,c
 11118  003598  22DA               	addwfc	fsr2h,f,c
 11119  00359A  CFDE F016          	movff	postinc2,LCD_InButton@posY
 11120  00359E  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
 11121  0035A2  EC07  F025         	call	_LCD_InButton	;wreg free
 11122  0035A6  0900               	iorlw	0
 11123  0035A8  B4D8               	btfsc	status,2,c
 11124  0035AA  EFD9  F01A         	goto	u6881
 11125  0035AE  EFDB  F01A         	goto	u6880
 11126  0035B2                     u6881:
 11127  0035B2  EFE6  F01A         	goto	l613
 11128  0035B6                     u6880:
 11129  0035B6                     
 11130                           ;stateMachine/gameController.c: 74:             {;stateMachine/gameController.c: 75:    
      +                                       XF_pushEvent(evParameters,0);
 11131  0035B6  0E00               	movlw	0
 11132  0035B8  6E18               	movwf	XF_pushEvent@inISR^0,c
 11133  0035BA  0E07               	movlw	7
 11134  0035BC  EC71  F02C         	call	_XF_pushEvent
 11135                           
 11136                           ;stateMachine/gameController.c: 76:                 GameParameters_resetPos(g);;
 11137  0035C0  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
 11138  0035C4  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
 11139  0035C8  ECE8  F02E         	call	_GameParameters_resetPos	;wreg free
 11140  0035CC                     l613:
 11141                           
 11142                           ;stateMachine/gameController.c: 78:             if(LCD_InButton(&(g->btnOnePlayer),g->x,
      +                          g->y))
 11143  0035CC  0E20               	movlw	32
 11144  0035CE  2437               	addwf	gameControllerController@g^0,w,c
 11145  0035D0  6E12               	movwf	LCD_InButton@button^0,c
 11146  0035D2  0E00               	movlw	0
 11147  0035D4  2038               	addwfc	(gameControllerController@g+1)^0,w,c
 11148  0035D6  6E13               	movwf	(LCD_InButton@button+1)^0,c
 11149  0035D8  EE20 F004          	lfsr	2,4
 11150  0035DC  5037               	movf	gameControllerController@g^0,w,c
 11151  0035DE  26D9               	addwf	fsr2l,f,c
 11152  0035E0  5038               	movf	(gameControllerController@g+1)^0,w,c
 11153  0035E2  22DA               	addwfc	fsr2h,f,c
 11154  0035E4  CFDE F014          	movff	postinc2,LCD_InButton@posX
 11155  0035E8  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
 11156  0035EC  EE20 F006          	lfsr	2,6
 11157  0035F0  5037               	movf	gameControllerController@g^0,w,c
 11158  0035F2  26D9               	addwf	fsr2l,f,c
 11159  0035F4  5038               	movf	(gameControllerController@g+1)^0,w,c
 11160  0035F6  22DA               	addwfc	fsr2h,f,c
 11161  0035F8  CFDE F016          	movff	postinc2,LCD_InButton@posY
 11162  0035FC  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
 11163  003600  EC07  F025         	call	_LCD_InButton	;wreg free
 11164  003604  0900               	iorlw	0
 11165  003606  B4D8               	btfsc	status,2,c
 11166  003608  EF08  F01B         	goto	u6891
 11167  00360C  EF0A  F01B         	goto	u6890
 11168  003610                     u6891:
 11169  003610  EF15  F01B         	goto	l614
 11170  003614                     u6890:
 11171  003614                     
 11172                           ;stateMachine/gameController.c: 79:             {;stateMachine/gameController.c: 80:    
      +                                       XF_pushEvent(evOnePlayer,0);
 11173  003614  0E00               	movlw	0
 11174  003616  6E18               	movwf	XF_pushEvent@inISR^0,c
 11175  003618  0E05               	movlw	5
 11176  00361A  EC71  F02C         	call	_XF_pushEvent
 11177                           
 11178                           ;stateMachine/gameController.c: 81:                 GameParameters_resetPos(g);;
 11179  00361E  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
 11180  003622  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
 11181  003626  ECE8  F02E         	call	_GameParameters_resetPos	;wreg free
 11182  00362A                     l614:
 11183                           
 11184                           ;stateMachine/gameController.c: 83:             if(LCD_InButton(&(g->btnTwoPlayer),g->x,
      +                          g->y))
 11185  00362A  0E38               	movlw	56
 11186  00362C  2437               	addwf	gameControllerController@g^0,w,c
 11187  00362E  6E12               	movwf	LCD_InButton@button^0,c
 11188  003630  0E00               	movlw	0
 11189  003632  2038               	addwfc	(gameControllerController@g+1)^0,w,c
 11190  003634  6E13               	movwf	(LCD_InButton@button+1)^0,c
 11191  003636  EE20 F004          	lfsr	2,4
 11192  00363A  5037               	movf	gameControllerController@g^0,w,c
 11193  00363C  26D9               	addwf	fsr2l,f,c
 11194  00363E  5038               	movf	(gameControllerController@g+1)^0,w,c
 11195  003640  22DA               	addwfc	fsr2h,f,c
 11196  003642  CFDE F014          	movff	postinc2,LCD_InButton@posX
 11197  003646  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
 11198  00364A  EE20 F006          	lfsr	2,6
 11199  00364E  5037               	movf	gameControllerController@g^0,w,c
 11200  003650  26D9               	addwf	fsr2l,f,c
 11201  003652  5038               	movf	(gameControllerController@g+1)^0,w,c
 11202  003654  22DA               	addwfc	fsr2h,f,c
 11203  003656  CFDE F016          	movff	postinc2,LCD_InButton@posY
 11204  00365A  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
 11205  00365E  EC07  F025         	call	_LCD_InButton	;wreg free
 11206  003662  0900               	iorlw	0
 11207  003664  B4D8               	btfsc	status,2,c
 11208  003666  EF37  F01B         	goto	u6901
 11209  00366A  EF39  F01B         	goto	u6900
 11210  00366E                     u6901:
 11211  00366E  EFCC  F01B         	goto	l623
 11212  003672                     u6900:
 11213  003672                     
 11214                           ;stateMachine/gameController.c: 84:             {;stateMachine/gameController.c: 85:    
      +                                       XF_pushEvent(evTwoPlayer,0);
 11215  003672  0E00               	movlw	0
 11216  003674  6E18               	movwf	XF_pushEvent@inISR^0,c
 11217  003676  0E06               	movlw	6
 11218  003678  EC71  F02C         	call	_XF_pushEvent
 11219                           
 11220                           ;stateMachine/gameController.c: 86:                 GameParameters_resetPos(g);
 11221  00367C  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
 11222  003680  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
 11223  003684  ECE8  F02E         	call	_GameParameters_resetPos	;wreg free
 11224  003688  EFCC  F01B         	goto	l623
 11225  00368C                     l9618:
 11226                           
 11227                           ;stateMachine/gameController.c: 90:             if(LCD_InSlider(&(g->sldParam),g->x,g->y
      +                          ))
 11228  00368C  0E98               	movlw	152
 11229  00368E  2437               	addwf	gameControllerController@g^0,w,c
 11230  003690  6E12               	movwf	LCD_InSlider@slider^0,c
 11231  003692  0E00               	movlw	0
 11232  003694  2038               	addwfc	(gameControllerController@g+1)^0,w,c
 11233  003696  6E13               	movwf	(LCD_InSlider@slider+1)^0,c
 11234  003698  EE20 F004          	lfsr	2,4
 11235  00369C  5037               	movf	gameControllerController@g^0,w,c
 11236  00369E  26D9               	addwf	fsr2l,f,c
 11237  0036A0  5038               	movf	(gameControllerController@g+1)^0,w,c
 11238  0036A2  22DA               	addwfc	fsr2h,f,c
 11239  0036A4  CFDE F014          	movff	postinc2,LCD_InSlider@posX
 11240  0036A8  CFDD F015          	movff	postdec2,LCD_InSlider@posX+1
 11241  0036AC  EE20 F006          	lfsr	2,6
 11242  0036B0  5037               	movf	gameControllerController@g^0,w,c
 11243  0036B2  26D9               	addwf	fsr2l,f,c
 11244  0036B4  5038               	movf	(gameControllerController@g+1)^0,w,c
 11245  0036B6  22DA               	addwfc	fsr2h,f,c
 11246  0036B8  CFDE F016          	movff	postinc2,LCD_InSlider@posY
 11247  0036BC  CFDD F017          	movff	postdec2,LCD_InSlider@posY+1
 11248  0036C0  EC98  F024         	call	_LCD_InSlider	;wreg free
 11249  0036C4  0900               	iorlw	0
 11250  0036C6  B4D8               	btfsc	status,2,c
 11251  0036C8  EF68  F01B         	goto	u6911
 11252  0036CC  EF6A  F01B         	goto	u6910
 11253  0036D0                     u6911:
 11254  0036D0  EF7E  F01B         	goto	l9624
 11255  0036D4                     u6910:
 11256  0036D4                     
 11257                           ;stateMachine/gameController.c: 91:             {;stateMachine/gameController.c: 92:    
      +                                       backlightController(g);
 11258  0036D4  C037  F018         	movff	gameControllerController@g,backlightController@g
 11259  0036D8  C038  F019         	movff	gameControllerController@g+1,backlightController@g+1
 11260  0036DC  EC0C  F00C         	call	_backlightController	;wreg free
 11261                           
 11262                           ;stateMachine/gameController.c: 93:                 LCD_SliderUpdate(&(g->sldParam));
 11263  0036E0  0E98               	movlw	152
 11264  0036E2  2437               	addwf	gameControllerController@g^0,w,c
 11265  0036E4  6E27               	movwf	LCD_SliderUpdate@slider^0,c
 11266  0036E6  0E00               	movlw	0
 11267  0036E8  2038               	addwfc	(gameControllerController@g+1)^0,w,c
 11268  0036EA  6E28               	movwf	(LCD_SliderUpdate@slider+1)^0,c
 11269  0036EC  ECA1  F009         	call	_LCD_SliderUpdate	;wreg free
 11270  0036F0                     
 11271                           ;stateMachine/gameController.c: 94:                 GameParameters_resetPos(g);
 11272  0036F0  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
 11273  0036F4  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
 11274  0036F8  ECE8  F02E         	call	_GameParameters_resetPos	;wreg free
 11275  0036FC                     l9624:
 11276                           
 11277                           ;stateMachine/gameController.c: 96:             if(LCD_InButton(&(g->btnLeaveParam),g->x
      +                          ,g->y))
 11278  0036FC  0E50               	movlw	80
 11279  0036FE  2437               	addwf	gameControllerController@g^0,w,c
 11280  003700  6E12               	movwf	LCD_InButton@button^0,c
 11281  003702  0E00               	movlw	0
 11282  003704  2038               	addwfc	(gameControllerController@g+1)^0,w,c
 11283  003706  6E13               	movwf	(LCD_InButton@button+1)^0,c
 11284  003708  EE20 F004          	lfsr	2,4
 11285  00370C  5037               	movf	gameControllerController@g^0,w,c
 11286  00370E  26D9               	addwf	fsr2l,f,c
 11287  003710  5038               	movf	(gameControllerController@g+1)^0,w,c
 11288  003712  22DA               	addwfc	fsr2h,f,c
 11289  003714  CFDE F014          	movff	postinc2,LCD_InButton@posX
 11290  003718  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
 11291  00371C  EE20 F006          	lfsr	2,6
 11292  003720  5037               	movf	gameControllerController@g^0,w,c
 11293  003722  26D9               	addwf	fsr2l,f,c
 11294  003724  5038               	movf	(gameControllerController@g+1)^0,w,c
 11295  003726  22DA               	addwfc	fsr2h,f,c
 11296  003728  CFDE F016          	movff	postinc2,LCD_InButton@posY
 11297  00372C  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
 11298  003730  EC07  F025         	call	_LCD_InButton	;wreg free
 11299  003734  0900               	iorlw	0
 11300  003736  B4D8               	btfsc	status,2,c
 11301  003738  EFA0  F01B         	goto	u6921
 11302  00373C  EFA2  F01B         	goto	u6920
 11303  003740                     u6921:
 11304  003740  EFCC  F01B         	goto	l623
 11305  003744                     u6920:
 11306  003744                     
 11307                           ;stateMachine/gameController.c: 97:             {;stateMachine/gameController.c: 98:    
      +                                       XF_pushEvent(evLeaveParam,0);
 11308  003744  0E00               	movlw	0
 11309  003746  6E18               	movwf	XF_pushEvent@inISR^0,c
 11310  003748  0E08               	movlw	8
 11311  00374A  EC71  F02C         	call	_XF_pushEvent
 11312                           
 11313                           ;stateMachine/gameController.c: 99:                 GameParameters_resetPos(g);
 11314  00374E  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
 11315  003752  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
 11316  003756  ECE8  F02E         	call	_GameParameters_resetPos	;wreg free
 11317  00375A  EFCC  F01B         	goto	l623
 11318  00375E                     l9630:
 11319  00375E  504D               	movf	_gameControllerState^0,w,c
 11320  003760  6E39               	movwf	??_gameControllerController^0,c
 11321  003762  6A3A               	clrf	(??_gameControllerController+1)^0,c
 11322                           
 11323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11324                           ; Switch size 1, requested type "simple"
 11325                           ; Number of cases is 1, Range of values is 0 to 0
 11326                           ; switch strategies available:
 11327                           ; Name         Instructions Cycles
 11328                           ; simple_byte            4     3 (average)
 11329                           ;	Chosen strategy is simple_byte
 11330  003764  503A               	movf	(??_gameControllerController+1)^0,w,c
 11331  003766  0A00               	xorlw	0	; case 0
 11332  003768  B4D8               	btfsc	status,2,c
 11333  00376A  EFB9  F01B         	goto	l10500
 11334  00376E  EFCC  F01B         	goto	l623
 11335  003772                     l10500:
 11336                           
 11337                           ; Switch size 1, requested type "simple"
 11338                           ; Number of cases is 4, Range of values is 0 to 3
 11339                           ; switch strategies available:
 11340                           ; Name         Instructions Cycles
 11341                           ; simple_byte           13     7 (average)
 11342                           ;	Chosen strategy is simple_byte
 11343  003772  5039               	movf	??_gameControllerController^0,w,c
 11344  003774  0A00               	xorlw	0	; case 0
 11345  003776  B4D8               	btfsc	status,2,c
 11346  003778  EFB7  F01A         	goto	l9610
 11347  00377C  0A01               	xorlw	1	; case 1
 11348  00377E  B4D8               	btfsc	status,2,c
 11349  003780  EF46  F01B         	goto	l9618
 11350  003784  0A03               	xorlw	3	; case 2
 11351  003786  B4D8               	btfsc	status,2,c
 11352  003788  EFCC  F01B         	goto	l623
 11353  00378C  0A01               	xorlw	1	; case 3
 11354  00378E  B4D8               	btfsc	status,2,c
 11355  003790  EFCC  F01B         	goto	l623
 11356  003794  EFCC  F01B         	goto	l623
 11357  003798                     l623:
 11358  003798  0012               	return		;funcret
 11359  00379A                     __end_of_gameControllerController:
 11360                           	callstack 0
 11361                           
 11362 ;; *************** function _backlightController *****************
 11363 ;; Defined at:
 11364 ;;		line 234 in file "stateMachine/gameController.c"
 11365 ;; Parameters:    Size  Location     Type
 11366 ;;  g               2   23[COMRAM] PTR struct GameParameter
 11367 ;;		 -> g1(201), 
 11368 ;; Auto vars:     Size  Location     Type
 11369 ;;		None
 11370 ;; Return value:  Size  Location     Type
 11371 ;;                  1    wreg      void 
 11372 ;; Registers used:
 11373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11374 ;; Tracked objects:
 11375 ;;		On entry : 0/0
 11376 ;;		On exit  : 0/0
 11377 ;;		Unchanged: 0/0
 11378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11379 ;;      Params:         2       0       0       0       0       0       0
 11380 ;;      Locals:         0       0       0       0       0       0       0
 11381 ;;      Temps:          2       0       0       0       0       0       0
 11382 ;;      Totals:         4       0       0       0       0       0       0
 11383 ;;Total ram usage:        4 bytes
 11384 ;; Hardware stack levels used: 1
 11385 ;; Hardware stack levels required when called: 5
 11386 ;; This function calls:
 11387 ;;		_GameParameters_setBackLight
 11388 ;; This function is called by:
 11389 ;;		_gameControllerController
 11390 ;; This function uses a non-reentrant model
 11391 ;;
 11392                           
 11393                           	psect	text45
 11394  001818                     __ptext45:
 11395                           	callstack 0
 11396  001818                     _backlightController:
 11397                           	callstack 21
 11398  001818                     
 11399                           ;stateMachine/gameController.c: 234: void backlightController(GameParameters* g);stateMa
      +                          chine/gameController.c: 235: {;stateMachine/gameController.c: 236:     if(((g->x)>=50)&&
      +                          ((g->x)<64))
 11400  001818  EE20 F004          	lfsr	2,4
 11401  00181C  5018               	movf	backlightController@g^0,w,c
 11402  00181E  26D9               	addwf	fsr2l,f,c
 11403  001820  5019               	movf	(backlightController@g+1)^0,w,c
 11404  001822  22DA               	addwfc	fsr2h,f,c
 11405  001824  0E01               	movlw	1
 11406  001826  50DB               	movf	plusw2,w,c
 11407  001828  E109               	bnz	u6560
 11408  00182A  0E32               	movlw	50
 11409  00182C  5CDE               	subwf	postinc2,w,c
 11410  00182E  A0D8               	btfss	status,0,c
 11411  001830  EF1C  F00C         	goto	u6561
 11412  001834  EF1E  F00C         	goto	u6560
 11413  001838                     u6561:
 11414  001838  EF3C  F00C         	goto	l9436
 11415  00183C                     u6560:
 11416  00183C  EE20 F004          	lfsr	2,4
 11417  001840  5018               	movf	backlightController@g^0,w,c
 11418  001842  26D9               	addwf	fsr2l,f,c
 11419  001844  5019               	movf	(backlightController@g+1)^0,w,c
 11420  001846  22DA               	addwfc	fsr2h,f,c
 11421  001848  0E01               	movlw	1
 11422  00184A  50DB               	movf	plusw2,w,c
 11423  00184C  E107               	bnz	u6571
 11424  00184E  0E40               	movlw	64
 11425  001850  5CDE               	subwf	postinc2,w,c
 11426  001852  B0D8               	btfsc	status,0,c
 11427  001854  EF2E  F00C         	goto	u6571
 11428  001858  EF30  F00C         	goto	u6570
 11429  00185C                     u6571:
 11430  00185C  EF3C  F00C         	goto	l9436
 11431  001860                     u6570:
 11432  001860                     
 11433                           ;stateMachine/gameController.c: 237:     {;stateMachine/gameController.c: 238:         G
      +                          ameParameters_setBackLight(g,0);
 11434  001860  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11435  001864  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11436  001868  0E00               	movlw	0
 11437  00186A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11438  00186C  0E00               	movlw	0
 11439  00186E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11440  001870  EC54  F02E         	call	_GameParameters_setBackLight	;wreg free
 11441                           
 11442                           ;stateMachine/gameController.c: 239:     }
 11443  001874  EF4C  F00E         	goto	l9502
 11444  001878                     l9436:
 11445  001878  EE20 F004          	lfsr	2,4
 11446  00187C  5018               	movf	backlightController@g^0,w,c
 11447  00187E  26D9               	addwf	fsr2l,f,c
 11448  001880  5019               	movf	(backlightController@g+1)^0,w,c
 11449  001882  22DA               	addwfc	fsr2h,f,c
 11450  001884  0E01               	movlw	1
 11451  001886  50DB               	movf	plusw2,w,c
 11452  001888  E109               	bnz	u6580
 11453  00188A  0E40               	movlw	64
 11454  00188C  5CDE               	subwf	postinc2,w,c
 11455  00188E  A0D8               	btfss	status,0,c
 11456  001890  EF4C  F00C         	goto	u6581
 11457  001894  EF4E  F00C         	goto	u6580
 11458  001898                     u6581:
 11459  001898  EF6C  F00C         	goto	l9442
 11460  00189C                     u6580:
 11461  00189C  EE20 F004          	lfsr	2,4
 11462  0018A0  5018               	movf	backlightController@g^0,w,c
 11463  0018A2  26D9               	addwf	fsr2l,f,c
 11464  0018A4  5019               	movf	(backlightController@g+1)^0,w,c
 11465  0018A6  22DA               	addwfc	fsr2h,f,c
 11466  0018A8  0E01               	movlw	1
 11467  0018AA  50DB               	movf	plusw2,w,c
 11468  0018AC  E107               	bnz	u6591
 11469  0018AE  0E4E               	movlw	78
 11470  0018B0  5CDE               	subwf	postinc2,w,c
 11471  0018B2  B0D8               	btfsc	status,0,c
 11472  0018B4  EF5E  F00C         	goto	u6591
 11473  0018B8  EF60  F00C         	goto	u6590
 11474  0018BC                     u6591:
 11475  0018BC  EF6C  F00C         	goto	l9442
 11476  0018C0                     u6590:
 11477  0018C0                     
 11478                           ;stateMachine/gameController.c: 241:     {;stateMachine/gameController.c: 242:         G
      +                          ameParameters_setBackLight(g,1);
 11479  0018C0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11480  0018C4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11481  0018C8  0E00               	movlw	0
 11482  0018CA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11483  0018CC  0E01               	movlw	1
 11484  0018CE  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11485  0018D0  EC54  F02E         	call	_GameParameters_setBackLight	;wreg free
 11486                           
 11487                           ;stateMachine/gameController.c: 243:     }
 11488  0018D4  EF4C  F00E         	goto	l9502
 11489  0018D8                     l9442:
 11490  0018D8  EE20 F004          	lfsr	2,4
 11491  0018DC  5018               	movf	backlightController@g^0,w,c
 11492  0018DE  26D9               	addwf	fsr2l,f,c
 11493  0018E0  5019               	movf	(backlightController@g+1)^0,w,c
 11494  0018E2  22DA               	addwfc	fsr2h,f,c
 11495  0018E4  0E01               	movlw	1
 11496  0018E6  50DB               	movf	plusw2,w,c
 11497  0018E8  E109               	bnz	u6600
 11498  0018EA  0E4E               	movlw	78
 11499  0018EC  5CDE               	subwf	postinc2,w,c
 11500  0018EE  A0D8               	btfss	status,0,c
 11501  0018F0  EF7C  F00C         	goto	u6601
 11502  0018F4  EF7E  F00C         	goto	u6600
 11503  0018F8                     u6601:
 11504  0018F8  EF9C  F00C         	goto	l9448
 11505  0018FC                     u6600:
 11506  0018FC  EE20 F004          	lfsr	2,4
 11507  001900  5018               	movf	backlightController@g^0,w,c
 11508  001902  26D9               	addwf	fsr2l,f,c
 11509  001904  5019               	movf	(backlightController@g+1)^0,w,c
 11510  001906  22DA               	addwfc	fsr2h,f,c
 11511  001908  0E01               	movlw	1
 11512  00190A  50DB               	movf	plusw2,w,c
 11513  00190C  E107               	bnz	u6611
 11514  00190E  0E5C               	movlw	92
 11515  001910  5CDE               	subwf	postinc2,w,c
 11516  001912  B0D8               	btfsc	status,0,c
 11517  001914  EF8E  F00C         	goto	u6611
 11518  001918  EF90  F00C         	goto	u6610
 11519  00191C                     u6611:
 11520  00191C  EF9C  F00C         	goto	l9448
 11521  001920                     u6610:
 11522  001920                     
 11523                           ;stateMachine/gameController.c: 245:     {;stateMachine/gameController.c: 246:         G
      +                          ameParameters_setBackLight(g,2);
 11524  001920  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11525  001924  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11526  001928  0E00               	movlw	0
 11527  00192A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11528  00192C  0E02               	movlw	2
 11529  00192E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11530  001930  EC54  F02E         	call	_GameParameters_setBackLight	;wreg free
 11531                           
 11532                           ;stateMachine/gameController.c: 247:     }
 11533  001934  EF4C  F00E         	goto	l9502
 11534  001938                     l9448:
 11535  001938  EE20 F004          	lfsr	2,4
 11536  00193C  5018               	movf	backlightController@g^0,w,c
 11537  00193E  26D9               	addwf	fsr2l,f,c
 11538  001940  5019               	movf	(backlightController@g+1)^0,w,c
 11539  001942  22DA               	addwfc	fsr2h,f,c
 11540  001944  0E01               	movlw	1
 11541  001946  50DB               	movf	plusw2,w,c
 11542  001948  E109               	bnz	u6620
 11543  00194A  0E5C               	movlw	92
 11544  00194C  5CDE               	subwf	postinc2,w,c
 11545  00194E  A0D8               	btfss	status,0,c
 11546  001950  EFAC  F00C         	goto	u6621
 11547  001954  EFAE  F00C         	goto	u6620
 11548  001958                     u6621:
 11549  001958  EFCC  F00C         	goto	l9454
 11550  00195C                     u6620:
 11551  00195C  EE20 F004          	lfsr	2,4
 11552  001960  5018               	movf	backlightController@g^0,w,c
 11553  001962  26D9               	addwf	fsr2l,f,c
 11554  001964  5019               	movf	(backlightController@g+1)^0,w,c
 11555  001966  22DA               	addwfc	fsr2h,f,c
 11556  001968  0E01               	movlw	1
 11557  00196A  50DB               	movf	plusw2,w,c
 11558  00196C  E107               	bnz	u6631
 11559  00196E  0E6A               	movlw	106
 11560  001970  5CDE               	subwf	postinc2,w,c
 11561  001972  B0D8               	btfsc	status,0,c
 11562  001974  EFBE  F00C         	goto	u6631
 11563  001978  EFC0  F00C         	goto	u6630
 11564  00197C                     u6631:
 11565  00197C  EFCC  F00C         	goto	l9454
 11566  001980                     u6630:
 11567  001980                     
 11568                           ;stateMachine/gameController.c: 249:     {;stateMachine/gameController.c: 250:         G
      +                          ameParameters_setBackLight(g,3);
 11569  001980  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11570  001984  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11571  001988  0E00               	movlw	0
 11572  00198A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11573  00198C  0E03               	movlw	3
 11574  00198E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11575  001990  EC54  F02E         	call	_GameParameters_setBackLight	;wreg free
 11576                           
 11577                           ;stateMachine/gameController.c: 251:     }
 11578  001994  EF4C  F00E         	goto	l9502
 11579  001998                     l9454:
 11580  001998  EE20 F004          	lfsr	2,4
 11581  00199C  5018               	movf	backlightController@g^0,w,c
 11582  00199E  26D9               	addwf	fsr2l,f,c
 11583  0019A0  5019               	movf	(backlightController@g+1)^0,w,c
 11584  0019A2  22DA               	addwfc	fsr2h,f,c
 11585  0019A4  0E01               	movlw	1
 11586  0019A6  50DB               	movf	plusw2,w,c
 11587  0019A8  E109               	bnz	u6640
 11588  0019AA  0E6A               	movlw	106
 11589  0019AC  5CDE               	subwf	postinc2,w,c
 11590  0019AE  A0D8               	btfss	status,0,c
 11591  0019B0  EFDC  F00C         	goto	u6641
 11592  0019B4  EFDE  F00C         	goto	u6640
 11593  0019B8                     u6641:
 11594  0019B8  EFFC  F00C         	goto	l9460
 11595  0019BC                     u6640:
 11596  0019BC  EE20 F004          	lfsr	2,4
 11597  0019C0  5018               	movf	backlightController@g^0,w,c
 11598  0019C2  26D9               	addwf	fsr2l,f,c
 11599  0019C4  5019               	movf	(backlightController@g+1)^0,w,c
 11600  0019C6  22DA               	addwfc	fsr2h,f,c
 11601  0019C8  0E01               	movlw	1
 11602  0019CA  50DB               	movf	plusw2,w,c
 11603  0019CC  E107               	bnz	u6651
 11604  0019CE  0E78               	movlw	120
 11605  0019D0  5CDE               	subwf	postinc2,w,c
 11606  0019D2  B0D8               	btfsc	status,0,c
 11607  0019D4  EFEE  F00C         	goto	u6651
 11608  0019D8  EFF0  F00C         	goto	u6650
 11609  0019DC                     u6651:
 11610  0019DC  EFFC  F00C         	goto	l9460
 11611  0019E0                     u6650:
 11612  0019E0                     
 11613                           ;stateMachine/gameController.c: 253:     {;stateMachine/gameController.c: 254:         G
      +                          ameParameters_setBackLight(g,4);
 11614  0019E0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11615  0019E4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11616  0019E8  0E00               	movlw	0
 11617  0019EA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11618  0019EC  0E04               	movlw	4
 11619  0019EE  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11620  0019F0  EC54  F02E         	call	_GameParameters_setBackLight	;wreg free
 11621                           
 11622                           ;stateMachine/gameController.c: 255:     }
 11623  0019F4  EF4C  F00E         	goto	l9502
 11624  0019F8                     l9460:
 11625  0019F8  EE20 F004          	lfsr	2,4
 11626  0019FC  5018               	movf	backlightController@g^0,w,c
 11627  0019FE  26D9               	addwf	fsr2l,f,c
 11628  001A00  5019               	movf	(backlightController@g+1)^0,w,c
 11629  001A02  22DA               	addwfc	fsr2h,f,c
 11630  001A04  0E01               	movlw	1
 11631  001A06  50DB               	movf	plusw2,w,c
 11632  001A08  E109               	bnz	u6660
 11633  001A0A  0E78               	movlw	120
 11634  001A0C  5CDE               	subwf	postinc2,w,c
 11635  001A0E  A0D8               	btfss	status,0,c
 11636  001A10  EF0C  F00D         	goto	u6661
 11637  001A14  EF0E  F00D         	goto	u6660
 11638  001A18                     u6661:
 11639  001A18  EF2C  F00D         	goto	l9466
 11640  001A1C                     u6660:
 11641  001A1C  EE20 F004          	lfsr	2,4
 11642  001A20  5018               	movf	backlightController@g^0,w,c
 11643  001A22  26D9               	addwf	fsr2l,f,c
 11644  001A24  5019               	movf	(backlightController@g+1)^0,w,c
 11645  001A26  22DA               	addwfc	fsr2h,f,c
 11646  001A28  0E01               	movlw	1
 11647  001A2A  50DB               	movf	plusw2,w,c
 11648  001A2C  E107               	bnz	u6671
 11649  001A2E  0E86               	movlw	134
 11650  001A30  5CDE               	subwf	postinc2,w,c
 11651  001A32  B0D8               	btfsc	status,0,c
 11652  001A34  EF1E  F00D         	goto	u6671
 11653  001A38  EF20  F00D         	goto	u6670
 11654  001A3C                     u6671:
 11655  001A3C  EF2C  F00D         	goto	l9466
 11656  001A40                     u6670:
 11657  001A40                     
 11658                           ;stateMachine/gameController.c: 257:     {;stateMachine/gameController.c: 258:         G
      +                          ameParameters_setBackLight(g,5);
 11659  001A40  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11660  001A44  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11661  001A48  0E00               	movlw	0
 11662  001A4A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11663  001A4C  0E05               	movlw	5
 11664  001A4E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11665  001A50  EC54  F02E         	call	_GameParameters_setBackLight	;wreg free
 11666                           
 11667                           ;stateMachine/gameController.c: 259:     }
 11668  001A54  EF4C  F00E         	goto	l9502
 11669  001A58                     l9466:
 11670  001A58  EE20 F004          	lfsr	2,4
 11671  001A5C  5018               	movf	backlightController@g^0,w,c
 11672  001A5E  26D9               	addwf	fsr2l,f,c
 11673  001A60  5019               	movf	(backlightController@g+1)^0,w,c
 11674  001A62  22DA               	addwfc	fsr2h,f,c
 11675  001A64  0E01               	movlw	1
 11676  001A66  50DB               	movf	plusw2,w,c
 11677  001A68  E109               	bnz	u6680
 11678  001A6A  0E86               	movlw	134
 11679  001A6C  5CDE               	subwf	postinc2,w,c
 11680  001A6E  A0D8               	btfss	status,0,c
 11681  001A70  EF3C  F00D         	goto	u6681
 11682  001A74  EF3E  F00D         	goto	u6680
 11683  001A78                     u6681:
 11684  001A78  EF5C  F00D         	goto	l9472
 11685  001A7C                     u6680:
 11686  001A7C  EE20 F004          	lfsr	2,4
 11687  001A80  5018               	movf	backlightController@g^0,w,c
 11688  001A82  26D9               	addwf	fsr2l,f,c
 11689  001A84  5019               	movf	(backlightController@g+1)^0,w,c
 11690  001A86  22DA               	addwfc	fsr2h,f,c
 11691  001A88  0E01               	movlw	1
 11692  001A8A  50DB               	movf	plusw2,w,c
 11693  001A8C  E107               	bnz	u6691
 11694  001A8E  0E96               	movlw	150
 11695  001A90  5CDE               	subwf	postinc2,w,c
 11696  001A92  B0D8               	btfsc	status,0,c
 11697  001A94  EF4E  F00D         	goto	u6691
 11698  001A98  EF50  F00D         	goto	u6690
 11699  001A9C                     u6691:
 11700  001A9C  EF5C  F00D         	goto	l9472
 11701  001AA0                     u6690:
 11702  001AA0                     
 11703                           ;stateMachine/gameController.c: 261:     {;stateMachine/gameController.c: 262:         G
      +                          ameParameters_setBackLight(g,6);
 11704  001AA0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11705  001AA4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11706  001AA8  0E00               	movlw	0
 11707  001AAA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11708  001AAC  0E06               	movlw	6
 11709  001AAE  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11710  001AB0  EC54  F02E         	call	_GameParameters_setBackLight	;wreg free
 11711                           
 11712                           ;stateMachine/gameController.c: 263:     }
 11713  001AB4  EF4C  F00E         	goto	l9502
 11714  001AB8                     l9472:
 11715  001AB8  EE20 F004          	lfsr	2,4
 11716  001ABC  5018               	movf	backlightController@g^0,w,c
 11717  001ABE  26D9               	addwf	fsr2l,f,c
 11718  001AC0  5019               	movf	(backlightController@g+1)^0,w,c
 11719  001AC2  22DA               	addwfc	fsr2h,f,c
 11720  001AC4  0E01               	movlw	1
 11721  001AC6  50DB               	movf	plusw2,w,c
 11722  001AC8  E109               	bnz	u6700
 11723  001ACA  0E96               	movlw	150
 11724  001ACC  5CDE               	subwf	postinc2,w,c
 11725  001ACE  A0D8               	btfss	status,0,c
 11726  001AD0  EF6C  F00D         	goto	u6701
 11727  001AD4  EF6E  F00D         	goto	u6700
 11728  001AD8                     u6701:
 11729  001AD8  EF8C  F00D         	goto	l9478
 11730  001ADC                     u6700:
 11731  001ADC  EE20 F004          	lfsr	2,4
 11732  001AE0  5018               	movf	backlightController@g^0,w,c
 11733  001AE2  26D9               	addwf	fsr2l,f,c
 11734  001AE4  5019               	movf	(backlightController@g+1)^0,w,c
 11735  001AE6  22DA               	addwfc	fsr2h,f,c
 11736  001AE8  0E01               	movlw	1
 11737  001AEA  50DB               	movf	plusw2,w,c
 11738  001AEC  E107               	bnz	u6711
 11739  001AEE  0EA4               	movlw	164
 11740  001AF0  5CDE               	subwf	postinc2,w,c
 11741  001AF2  B0D8               	btfsc	status,0,c
 11742  001AF4  EF7E  F00D         	goto	u6711
 11743  001AF8  EF80  F00D         	goto	u6710
 11744  001AFC                     u6711:
 11745  001AFC  EF8C  F00D         	goto	l9478
 11746  001B00                     u6710:
 11747  001B00                     
 11748                           ;stateMachine/gameController.c: 265:     {;stateMachine/gameController.c: 266:         G
      +                          ameParameters_setBackLight(g,7);
 11749  001B00  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11750  001B04  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11751  001B08  0E00               	movlw	0
 11752  001B0A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11753  001B0C  0E07               	movlw	7
 11754  001B0E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11755  001B10  EC54  F02E         	call	_GameParameters_setBackLight	;wreg free
 11756                           
 11757                           ;stateMachine/gameController.c: 267:     }
 11758  001B14  EF4C  F00E         	goto	l9502
 11759  001B18                     l9478:
 11760  001B18  EE20 F004          	lfsr	2,4
 11761  001B1C  5018               	movf	backlightController@g^0,w,c
 11762  001B1E  26D9               	addwf	fsr2l,f,c
 11763  001B20  5019               	movf	(backlightController@g+1)^0,w,c
 11764  001B22  22DA               	addwfc	fsr2h,f,c
 11765  001B24  0E01               	movlw	1
 11766  001B26  50DB               	movf	plusw2,w,c
 11767  001B28  E109               	bnz	u6720
 11768  001B2A  0EA4               	movlw	164
 11769  001B2C  5CDE               	subwf	postinc2,w,c
 11770  001B2E  A0D8               	btfss	status,0,c
 11771  001B30  EF9C  F00D         	goto	u6721
 11772  001B34  EF9E  F00D         	goto	u6720
 11773  001B38                     u6721:
 11774  001B38  EFBC  F00D         	goto	l9484
 11775  001B3C                     u6720:
 11776  001B3C  EE20 F004          	lfsr	2,4
 11777  001B40  5018               	movf	backlightController@g^0,w,c
 11778  001B42  26D9               	addwf	fsr2l,f,c
 11779  001B44  5019               	movf	(backlightController@g+1)^0,w,c
 11780  001B46  22DA               	addwfc	fsr2h,f,c
 11781  001B48  0E01               	movlw	1
 11782  001B4A  50DB               	movf	plusw2,w,c
 11783  001B4C  E107               	bnz	u6731
 11784  001B4E  0EB2               	movlw	178
 11785  001B50  5CDE               	subwf	postinc2,w,c
 11786  001B52  B0D8               	btfsc	status,0,c
 11787  001B54  EFAE  F00D         	goto	u6731
 11788  001B58  EFB0  F00D         	goto	u6730
 11789  001B5C                     u6731:
 11790  001B5C  EFBC  F00D         	goto	l9484
 11791  001B60                     u6730:
 11792  001B60                     
 11793                           ;stateMachine/gameController.c: 269:     {;stateMachine/gameController.c: 270:         G
      +                          ameParameters_setBackLight(g,8);
 11794  001B60  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11795  001B64  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11796  001B68  0E00               	movlw	0
 11797  001B6A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11798  001B6C  0E08               	movlw	8
 11799  001B6E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11800  001B70  EC54  F02E         	call	_GameParameters_setBackLight	;wreg free
 11801                           
 11802                           ;stateMachine/gameController.c: 271:     }
 11803  001B74  EF4C  F00E         	goto	l9502
 11804  001B78                     l9484:
 11805  001B78  EE20 F004          	lfsr	2,4
 11806  001B7C  5018               	movf	backlightController@g^0,w,c
 11807  001B7E  26D9               	addwf	fsr2l,f,c
 11808  001B80  5019               	movf	(backlightController@g+1)^0,w,c
 11809  001B82  22DA               	addwfc	fsr2h,f,c
 11810  001B84  0E01               	movlw	1
 11811  001B86  50DB               	movf	plusw2,w,c
 11812  001B88  E109               	bnz	u6740
 11813  001B8A  0EB2               	movlw	178
 11814  001B8C  5CDE               	subwf	postinc2,w,c
 11815  001B8E  A0D8               	btfss	status,0,c
 11816  001B90  EFCC  F00D         	goto	u6741
 11817  001B94  EFCE  F00D         	goto	u6740
 11818  001B98                     u6741:
 11819  001B98  EFEC  F00D         	goto	l9490
 11820  001B9C                     u6740:
 11821  001B9C  EE20 F004          	lfsr	2,4
 11822  001BA0  5018               	movf	backlightController@g^0,w,c
 11823  001BA2  26D9               	addwf	fsr2l,f,c
 11824  001BA4  5019               	movf	(backlightController@g+1)^0,w,c
 11825  001BA6  22DA               	addwfc	fsr2h,f,c
 11826  001BA8  0E01               	movlw	1
 11827  001BAA  50DB               	movf	plusw2,w,c
 11828  001BAC  E107               	bnz	u6751
 11829  001BAE  0EC0               	movlw	192
 11830  001BB0  5CDE               	subwf	postinc2,w,c
 11831  001BB2  B0D8               	btfsc	status,0,c
 11832  001BB4  EFDE  F00D         	goto	u6751
 11833  001BB8  EFE0  F00D         	goto	u6750
 11834  001BBC                     u6751:
 11835  001BBC  EFEC  F00D         	goto	l9490
 11836  001BC0                     u6750:
 11837  001BC0                     
 11838                           ;stateMachine/gameController.c: 273:     {;stateMachine/gameController.c: 274:         G
      +                          ameParameters_setBackLight(g,9);
 11839  001BC0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11840  001BC4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11841  001BC8  0E00               	movlw	0
 11842  001BCA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11843  001BCC  0E09               	movlw	9
 11844  001BCE  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11845  001BD0  EC54  F02E         	call	_GameParameters_setBackLight	;wreg free
 11846                           
 11847                           ;stateMachine/gameController.c: 275:     }
 11848  001BD4  EF4C  F00E         	goto	l9502
 11849  001BD8                     l9490:
 11850  001BD8  EE20 F004          	lfsr	2,4
 11851  001BDC  5018               	movf	backlightController@g^0,w,c
 11852  001BDE  26D9               	addwf	fsr2l,f,c
 11853  001BE0  5019               	movf	(backlightController@g+1)^0,w,c
 11854  001BE2  22DA               	addwfc	fsr2h,f,c
 11855  001BE4  0E01               	movlw	1
 11856  001BE6  50DB               	movf	plusw2,w,c
 11857  001BE8  E109               	bnz	u6760
 11858  001BEA  0EC0               	movlw	192
 11859  001BEC  5CDE               	subwf	postinc2,w,c
 11860  001BEE  A0D8               	btfss	status,0,c
 11861  001BF0  EFFC  F00D         	goto	u6761
 11862  001BF4  EFFE  F00D         	goto	u6760
 11863  001BF8                     u6761:
 11864  001BF8  EF1C  F00E         	goto	l9496
 11865  001BFC                     u6760:
 11866  001BFC  EE20 F004          	lfsr	2,4
 11867  001C00  5018               	movf	backlightController@g^0,w,c
 11868  001C02  26D9               	addwf	fsr2l,f,c
 11869  001C04  5019               	movf	(backlightController@g+1)^0,w,c
 11870  001C06  22DA               	addwfc	fsr2h,f,c
 11871  001C08  0E01               	movlw	1
 11872  001C0A  50DB               	movf	plusw2,w,c
 11873  001C0C  E107               	bnz	u6771
 11874  001C0E  0ECE               	movlw	206
 11875  001C10  5CDE               	subwf	postinc2,w,c
 11876  001C12  B0D8               	btfsc	status,0,c
 11877  001C14  EF0E  F00E         	goto	u6771
 11878  001C18  EF10  F00E         	goto	u6770
 11879  001C1C                     u6771:
 11880  001C1C  EF1C  F00E         	goto	l9496
 11881  001C20                     u6770:
 11882  001C20                     
 11883                           ;stateMachine/gameController.c: 277:     {;stateMachine/gameController.c: 278:         G
      +                          ameParameters_setBackLight(g,10);
 11884  001C20  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11885  001C24  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11886  001C28  0E00               	movlw	0
 11887  001C2A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11888  001C2C  0E0A               	movlw	10
 11889  001C2E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11890  001C30  EC54  F02E         	call	_GameParameters_setBackLight	;wreg free
 11891                           
 11892                           ;stateMachine/gameController.c: 279:     }
 11893  001C34  EF4C  F00E         	goto	l9502
 11894  001C38                     l9496:
 11895  001C38  EE20 F004          	lfsr	2,4
 11896  001C3C  5018               	movf	backlightController@g^0,w,c
 11897  001C3E  26D9               	addwf	fsr2l,f,c
 11898  001C40  5019               	movf	(backlightController@g+1)^0,w,c
 11899  001C42  22DA               	addwfc	fsr2h,f,c
 11900  001C44  0E01               	movlw	1
 11901  001C46  50DB               	movf	plusw2,w,c
 11902  001C48  E109               	bnz	u6780
 11903  001C4A  0ECE               	movlw	206
 11904  001C4C  5CDE               	subwf	postinc2,w,c
 11905  001C4E  A0D8               	btfss	status,0,c
 11906  001C50  EF2C  F00E         	goto	u6781
 11907  001C54  EF2E  F00E         	goto	u6780
 11908  001C58                     u6781:
 11909  001C58  EF4C  F00E         	goto	l680
 11910  001C5C                     u6780:
 11911  001C5C  EE20 F004          	lfsr	2,4
 11912  001C60  5018               	movf	backlightController@g^0,w,c
 11913  001C62  26D9               	addwf	fsr2l,f,c
 11914  001C64  5019               	movf	(backlightController@g+1)^0,w,c
 11915  001C66  22DA               	addwfc	fsr2h,f,c
 11916  001C68  0E01               	movlw	1
 11917  001C6A  50DB               	movf	plusw2,w,c
 11918  001C6C  E107               	bnz	u6791
 11919  001C6E  0ED7               	movlw	215
 11920  001C70  5CDE               	subwf	postinc2,w,c
 11921  001C72  B0D8               	btfsc	status,0,c
 11922  001C74  EF3E  F00E         	goto	u6791
 11923  001C78  EF40  F00E         	goto	u6790
 11924  001C7C                     u6791:
 11925  001C7C  EF4C  F00E         	goto	l680
 11926  001C80                     u6790:
 11927  001C80                     
 11928                           ;stateMachine/gameController.c: 281:     {;stateMachine/gameController.c: 282:         G
      +                          ameParameters_setBackLight(g,11);
 11929  001C80  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11930  001C84  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11931  001C88  0E00               	movlw	0
 11932  001C8A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11933  001C8C  0E0B               	movlw	11
 11934  001C8E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11935  001C90  EC54  F02E         	call	_GameParameters_setBackLight	;wreg free
 11936  001C94  EF4C  F00E         	goto	l9502
 11937  001C98                     l680:
 11938  001C98                     l9502:
 11939                           
 11940                           ;stateMachine/gameController.c: 284:     g->sldParam.value=g->backlight;
 11941  001C98  C018  FFD9         	movff	backlightController@g,fsr2l
 11942  001C9C  C019  FFDA         	movff	backlightController@g+1,fsr2h
 11943  001CA0  EE10 F0A9          	lfsr	1,169
 11944  001CA4  5018               	movf	backlightController@g^0,w,c
 11945  001CA6  26E1               	addwf	fsr1l,f,c
 11946  001CA8  5019               	movf	(backlightController@g+1)^0,w,c
 11947  001CAA  22E2               	addwfc	fsr1h,f,c
 11948  001CAC  CFDE FFE6          	movff	postinc2,postinc1
 11949  001CB0  CFDD FFE5          	movff	postdec2,postdec1
 11950  001CB4  0012               	return		;funcret
 11951  001CB6                     __end_of_backlightController:
 11952                           	callstack 0
 11953                           
 11954 ;; *************** function _GameParameters_setBackLight *****************
 11955 ;; Defined at:
 11956 ;;		line 21 in file "class/gameParameters.c"
 11957 ;; Parameters:    Size  Location     Type
 11958 ;;  s               2   17[COMRAM] PTR struct GameParameter
 11959 ;;		 -> g1(201), 
 11960 ;;  value           2   19[COMRAM] unsigned short 
 11961 ;; Auto vars:     Size  Location     Type
 11962 ;;		None
 11963 ;; Return value:  Size  Location     Type
 11964 ;;                  1    wreg      void 
 11965 ;; Registers used:
 11966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11967 ;; Tracked objects:
 11968 ;;		On entry : 0/0
 11969 ;;		On exit  : 0/0
 11970 ;;		Unchanged: 0/0
 11971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11972 ;;      Params:         4       0       0       0       0       0       0
 11973 ;;      Locals:         0       0       0       0       0       0       0
 11974 ;;      Temps:          2       0       0       0       0       0       0
 11975 ;;      Totals:         6       0       0       0       0       0       0
 11976 ;;Total ram usage:        6 bytes
 11977 ;; Hardware stack levels used: 1
 11978 ;; Hardware stack levels required when called: 4
 11979 ;; This function calls:
 11980 ;;		Nothing
 11981 ;; This function is called by:
 11982 ;;		_backlightController
 11983 ;; This function uses a non-reentrant model
 11984 ;;
 11985                           
 11986                           	psect	text46
 11987  005CA8                     __ptext46:
 11988                           	callstack 0
 11989  005CA8                     _GameParameters_setBackLight:
 11990                           	callstack 21
 11991  005CA8                     
 11992                           ;class/gameParameters.c: 21: void GameParameters_setBackLight(struct GameParameters* s, 
      +                          uint16_t value);class/gameParameters.c: 22: {;class/gameParameters.c: 23:     s->backlig
      +                          ht = value;
 11993  005CA8  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
 11994  005CAC  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
 11995  005CB0  C014  FFDE         	movff	GameParameters_setBackLight@value,postinc2
 11996  005CB4  C015  FFDD         	movff	GameParameters_setBackLight@value+1,postdec2
 11997  005CB8                     
 11998                           ;class/gameParameters.c: 24:     if(s->backlight==11)
 11999  005CB8  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
 12000  005CBC  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
 12001  005CC0  0E0B               	movlw	11
 12002  005CC2  18DE               	xorwf	postinc2,w,c
 12003  005CC4  10DE               	iorwf	postinc2,w,c
 12004  005CC6  A4D8               	btfss	status,2,c
 12005  005CC8  EF68  F02E         	goto	u6301
 12006  005CCC  EF6A  F02E         	goto	u6300
 12007  005CD0                     u6301:
 12008  005CD0  EF6D  F02E         	goto	l9172
 12009  005CD4                     u6300:
 12010  005CD4                     
 12011                           ;class/gameParameters.c: 25:     {;class/gameParameters.c: 26:         CCPR2L = 255;
 12012  005CD4  6867               	setf	103,c	;volatile
 12013                           
 12014                           ;class/gameParameters.c: 27:     }
 12015  005CD6  EF75  F02E         	goto	l138
 12016  005CDA                     l9172:
 12017                           
 12018                           ;class/gameParameters.c: 29:     {;class/gameParameters.c: 30:         CCPR2L=(s->backli
      +                          ght)*23;
 12019  005CDA  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
 12020  005CDE  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
 12021  005CE2  50DF               	movf	indf2,w,c
 12022  005CE4  0D17               	mullw	23
 12023  005CE6  CFF3 FF67          	movff	prodl,3943	;volatile
 12024  005CEA                     l138:
 12025  005CEA  0012               	return		;funcret
 12026  005CEC                     __end_of_GameParameters_setBackLight:
 12027                           	callstack 0
 12028                           
 12029 ;; *************** function _XF_pushEvent *****************
 12030 ;; Defined at:
 12031 ;;		line 49 in file "xf/xf.c"
 12032 ;; Parameters:    Size  Location     Type
 12033 ;;  ev              1    wreg     unsigned char 
 12034 ;;  inISR           1   23[COMRAM] _Bool 
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;  ev              1   24[COMRAM] unsigned char 
 12037 ;;  temp            1   25[COMRAM] unsigned char 
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  1    wreg      _Bool 
 12040 ;; Registers used:
 12041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12042 ;; Tracked objects:
 12043 ;;		On entry : 0/0
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12047 ;;      Params:         1       0       0       0       0       0       0
 12048 ;;      Locals:         2       0       0       0       0       0       0
 12049 ;;      Temps:          0       0       0       0       0       0       0
 12050 ;;      Totals:         3       0       0       0       0       0       0
 12051 ;;Total ram usage:        3 bytes
 12052 ;; Hardware stack levels used: 1
 12053 ;; Hardware stack levels required when called: 5
 12054 ;; This function calls:
 12055 ;;		_ENTERCRITICAL
 12056 ;;		_LEAVECRITICAL
 12057 ;;		___awmod
 12058 ;; This function is called by:
 12059 ;;		_gameControllerController
 12060 ;; This function uses a non-reentrant model
 12061 ;;
 12062                           
 12063                           	psect	text47
 12064  0058E2                     __ptext47:
 12065                           	callstack 0
 12066  0058E2                     _XF_pushEvent:
 12067                           	callstack 21
 12068                           
 12069                           ;incstack = 0
 12070                           ;XF_pushEvent@ev stored from wreg
 12071  0058E2  6E19               	movwf	XF_pushEvent@ev^0,c
 12072  0058E4                     
 12073                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
 12074  0058E4  5018               	movf	XF_pushEvent@inISR^0,w,c
 12075  0058E6  EC75  F02F         	call	_ENTERCRITICAL
 12076  0058EA                     
 12077                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
 12078  0058EA  0E01               	movlw	1
 12079  0058EC  0100               	movlb	0	; () banked
 12080  0058EE  25D9               	addwf	(_theXF+36)& (0+255),w,b
 12081  0058F0  6E12               	movwf	___awmod@dividend^0,c
 12082  0058F2  6A13               	clrf	(___awmod@dividend+1)^0,c
 12083  0058F4  0E00               	movlw	0
 12084  0058F6  2213               	addwfc	(___awmod@dividend+1)^0,f,c
 12085  0058F8  0E00               	movlw	0
 12086  0058FA  6E15               	movwf	(___awmod@divisor+1)^0,c
 12087  0058FC  0E0C               	movlw	12
 12088  0058FE  6E14               	movwf	___awmod@divisor^0,c
 12089  005900  EC7C  F028         	call	___awmod	;wreg free
 12090  005904  5012               	movf	?___awmod^0,w,c
 12091  005906  6E1A               	movwf	XF_pushEvent@temp^0,c
 12092  005908                     
 12093                           ;xf/xf.c: 55:     if(temp == theXF.out)
 12094  005908  501A               	movf	XF_pushEvent@temp^0,w,c
 12095  00590A  0100               	movlb	0	; () banked
 12096  00590C  19DA               	xorwf	(_theXF+37)& (0+255),w,b
 12097  00590E  A4D8               	btfss	status,2,c
 12098  005910  EF8C  F02C         	goto	u6551
 12099  005914  EF8E  F02C         	goto	u6550
 12100  005918                     u6551:
 12101  005918  EF94  F02C         	goto	l9420
 12102  00591C                     u6550:
 12103  00591C                     
 12104                           ; BSR set to: 0
 12105                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
 12106  00591C  5018               	movf	XF_pushEvent@inISR^0,w,c
 12107  00591E  EC6A  F02F         	call	_LEAVECRITICAL
 12108  005922                     
 12109                           ;xf/xf.c: 58:       return 0;
 12110  005922  0E00               	movlw	0
 12111  005924  EFA2  F02C         	goto	l705
 12112  005928                     l9420:
 12113                           
 12114                           ; BSR set to: 0
 12115                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
 12116  005928  0ECD               	movlw	low (_theXF+24)
 12117  00592A  25D9               	addwf	(_theXF+36)& (0+255),w,b
 12118  00592C  6ED9               	movwf	fsr2l,c
 12119  00592E  6ADA               	clrf	fsr2h,c
 12120  005930  0E00               	movlw	high (_theXF+24)
 12121  005932  22DA               	addwfc	fsr2h,f,c
 12122  005934  C019  FFDF         	movff	XF_pushEvent@ev,indf2
 12123  005938                     
 12124                           ; BSR set to: 0
 12125                           ;xf/xf.c: 61:     theXF.in = temp;
 12126  005938  C01A  F0D9         	movff	XF_pushEvent@temp,_theXF+36
 12127  00593C                     
 12128                           ; BSR set to: 0
 12129                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
 12130  00593C  5018               	movf	XF_pushEvent@inISR^0,w,c
 12131  00593E  EC6A  F02F         	call	_LEAVECRITICAL
 12132  005942                     
 12133                           ;xf/xf.c: 63:     return 1;
 12134  005942  0E01               	movlw	1
 12135  005944                     l705:
 12136  005944  0012               	return		;funcret
 12137  005946                     __end_of_XF_pushEvent:
 12138                           	callstack 0
 12139                           
 12140 ;; *************** function _LCD_InSlider *****************
 12141 ;; Defined at:
 12142 ;;		line 546 in file "libraries/lcd_highlevel.c"
 12143 ;; Parameters:    Size  Location     Type
 12144 ;;  slider          2   17[COMRAM] PTR struct .
 12145 ;;		 -> g1(201), 
 12146 ;;  posX            2   19[COMRAM] unsigned short 
 12147 ;;  posY            2   21[COMRAM] unsigned short 
 12148 ;; Auto vars:     Size  Location     Type
 12149 ;;		None
 12150 ;; Return value:  Size  Location     Type
 12151 ;;                  1    wreg      unsigned char 
 12152 ;; Registers used:
 12153 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12154 ;; Tracked objects:
 12155 ;;		On entry : 0/0
 12156 ;;		On exit  : 0/0
 12157 ;;		Unchanged: 0/0
 12158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12159 ;;      Params:         6       0       0       0       0       0       0
 12160 ;;      Locals:         0       0       0       0       0       0       0
 12161 ;;      Temps:          4       0       0       0       0       0       0
 12162 ;;      Totals:        10       0       0       0       0       0       0
 12163 ;;Total ram usage:       10 bytes
 12164 ;; Hardware stack levels used: 1
 12165 ;; Hardware stack levels required when called: 4
 12166 ;; This function calls:
 12167 ;;		Nothing
 12168 ;; This function is called by:
 12169 ;;		_gameControllerController
 12170 ;; This function uses a non-reentrant model
 12171 ;;
 12172                           
 12173                           	psect	text48
 12174  004930                     __ptext48:
 12175                           	callstack 0
 12176  004930                     _LCD_InSlider:
 12177                           	callstack 22
 12178  004930                     
 12179                           ;libraries/lcd_highlevel.c: 546: uint8_t LCD_InSlider(sld_t * slider, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 547: {;libraries/lcd_highlevel.c: 549:   if(posX 
      +                          < slider->posX)
 12180  004930  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
 12181  004934  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
 12182  004938  50DE               	movf	postinc2,w,c
 12183  00493A  5C14               	subwf	LCD_InSlider@posX^0,w,c
 12184  00493C  50DE               	movf	postinc2,w,c
 12185  00493E  5815               	subwfb	(LCD_InSlider@posX+1)^0,w,c
 12186  004940  B0D8               	btfsc	status,0,c
 12187  004942  EFA5  F024         	goto	u6511
 12188  004946  EFA7  F024         	goto	u6510
 12189  00494A                     u6511:
 12190  00494A  EFAA  F024         	goto	l9386
 12191  00494E                     u6510:
 12192  00494E                     l9382:
 12193                           
 12194                           ;libraries/lcd_highlevel.c: 550:   {;libraries/lcd_highlevel.c: 551:     return 0;
 12195  00494E  0E00               	movlw	0
 12196  004950  EF06  F025         	goto	l259
 12197  004954                     l9386:
 12198                           
 12199                           ;libraries/lcd_highlevel.c: 554:   if(posX > (slider->posX + slider->width))
 12200  004954  EE20 F004          	lfsr	2,4
 12201  004958  5012               	movf	LCD_InSlider@slider^0,w,c
 12202  00495A  26D9               	addwf	fsr2l,f,c
 12203  00495C  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 12204  00495E  22DA               	addwfc	fsr2h,f,c
 12205  004960  CFDE F018          	movff	postinc2,??_LCD_InSlider
 12206  004964  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
 12207  004968  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
 12208  00496C  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
 12209  004970  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
 12210  004974  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
 12211  004978  5018               	movf	??_LCD_InSlider^0,w,c
 12212  00497A  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
 12213  00497C  5019               	movf	(??_LCD_InSlider+1)^0,w,c
 12214  00497E  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
 12215  004980  5014               	movf	LCD_InSlider@posX^0,w,c
 12216  004982  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
 12217  004984  5015               	movf	(LCD_InSlider@posX+1)^0,w,c
 12218  004986  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
 12219  004988  B0D8               	btfsc	status,0,c
 12220  00498A  EFC9  F024         	goto	u6521
 12221  00498E  EFCB  F024         	goto	u6520
 12222  004992                     u6521:
 12223  004992  EFCD  F024         	goto	l9392
 12224  004996                     u6520:
 12225  004996  EFA7  F024         	goto	l9382
 12226  00499A                     l9392:
 12227                           
 12228                           ;libraries/lcd_highlevel.c: 559:   if(posY < slider->posY)
 12229  00499A  EE20 F002          	lfsr	2,2
 12230  00499E  5012               	movf	LCD_InSlider@slider^0,w,c
 12231  0049A0  26D9               	addwf	fsr2l,f,c
 12232  0049A2  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 12233  0049A4  22DA               	addwfc	fsr2h,f,c
 12234  0049A6  50DE               	movf	postinc2,w,c
 12235  0049A8  5C16               	subwf	LCD_InSlider@posY^0,w,c
 12236  0049AA  50DE               	movf	postinc2,w,c
 12237  0049AC  5817               	subwfb	(LCD_InSlider@posY+1)^0,w,c
 12238  0049AE  B0D8               	btfsc	status,0,c
 12239  0049B0  EFDC  F024         	goto	u6531
 12240  0049B4  EFDE  F024         	goto	u6530
 12241  0049B8                     u6531:
 12242  0049B8  EFE0  F024         	goto	l9398
 12243  0049BC                     u6530:
 12244  0049BC  EFA7  F024         	goto	l9382
 12245  0049C0                     l9398:
 12246                           
 12247                           ;libraries/lcd_highlevel.c: 564:   if(posY > (slider->posY + slider->height))
 12248  0049C0  EE20 F006          	lfsr	2,6
 12249  0049C4  5012               	movf	LCD_InSlider@slider^0,w,c
 12250  0049C6  26D9               	addwf	fsr2l,f,c
 12251  0049C8  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 12252  0049CA  22DA               	addwfc	fsr2h,f,c
 12253  0049CC  CFDE F018          	movff	postinc2,??_LCD_InSlider
 12254  0049D0  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
 12255  0049D4  EE20 F002          	lfsr	2,2
 12256  0049D8  5012               	movf	LCD_InSlider@slider^0,w,c
 12257  0049DA  26D9               	addwf	fsr2l,f,c
 12258  0049DC  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 12259  0049DE  22DA               	addwfc	fsr2h,f,c
 12260  0049E0  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
 12261  0049E4  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
 12262  0049E8  5018               	movf	??_LCD_InSlider^0,w,c
 12263  0049EA  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
 12264  0049EC  5019               	movf	(??_LCD_InSlider+1)^0,w,c
 12265  0049EE  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
 12266  0049F0  5016               	movf	LCD_InSlider@posY^0,w,c
 12267  0049F2  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
 12268  0049F4  5017               	movf	(LCD_InSlider@posY+1)^0,w,c
 12269  0049F6  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
 12270  0049F8  B0D8               	btfsc	status,0,c
 12271  0049FA  EF01  F025         	goto	u6541
 12272  0049FE  EF03  F025         	goto	u6540
 12273  004A02                     u6541:
 12274  004A02  EF05  F025         	goto	l9404
 12275  004A06                     u6540:
 12276  004A06  EFA7  F024         	goto	l9382
 12277  004A0A                     l9404:
 12278                           
 12279                           ;libraries/lcd_highlevel.c: 568:   return 1;
 12280  004A0A  0E01               	movlw	1
 12281  004A0C                     l259:
 12282  004A0C  0012               	return		;funcret
 12283  004A0E                     __end_of_LCD_InSlider:
 12284                           	callstack 0
 12285                           
 12286 ;; *************** function _LCD_InButton *****************
 12287 ;; Defined at:
 12288 ;;		line 514 in file "libraries/lcd_highlevel.c"
 12289 ;; Parameters:    Size  Location     Type
 12290 ;;  button          2   17[COMRAM] PTR struct .
 12291 ;;		 -> g1(201), 
 12292 ;;  posX            2   19[COMRAM] unsigned short 
 12293 ;;  posY            2   21[COMRAM] unsigned short 
 12294 ;; Auto vars:     Size  Location     Type
 12295 ;;		None
 12296 ;; Return value:  Size  Location     Type
 12297 ;;                  1    wreg      unsigned char 
 12298 ;; Registers used:
 12299 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12300 ;; Tracked objects:
 12301 ;;		On entry : 0/0
 12302 ;;		On exit  : 0/0
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12305 ;;      Params:         6       0       0       0       0       0       0
 12306 ;;      Locals:         0       0       0       0       0       0       0
 12307 ;;      Temps:          4       0       0       0       0       0       0
 12308 ;;      Totals:        10       0       0       0       0       0       0
 12309 ;;Total ram usage:       10 bytes
 12310 ;; Hardware stack levels used: 1
 12311 ;; Hardware stack levels required when called: 4
 12312 ;; This function calls:
 12313 ;;		Nothing
 12314 ;; This function is called by:
 12315 ;;		_gameControllerController
 12316 ;;		_moovePaddle
 12317 ;; This function uses a non-reentrant model
 12318 ;;
 12319                           
 12320                           	psect	text49
 12321  004A0E                     __ptext49:
 12322                           	callstack 0
 12323  004A0E                     _LCD_InButton:
 12324                           	callstack 22
 12325  004A0E                     
 12326                           ;libraries/lcd_highlevel.c: 514: uint8_t LCD_InButton(btn_t * button, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 515: {;libraries/lcd_highlevel.c: 517:   if(posX 
      +                          < button->posX)
 12327  004A0E  C012  FFD9         	movff	LCD_InButton@button,fsr2l
 12328  004A12  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
 12329  004A16  50DE               	movf	postinc2,w,c
 12330  004A18  5C14               	subwf	LCD_InButton@posX^0,w,c
 12331  004A1A  50DE               	movf	postinc2,w,c
 12332  004A1C  5815               	subwfb	(LCD_InButton@posX+1)^0,w,c
 12333  004A1E  B0D8               	btfsc	status,0,c
 12334  004A20  EF14  F025         	goto	u6471
 12335  004A24  EF16  F025         	goto	u6470
 12336  004A28                     u6471:
 12337  004A28  EF19  F025         	goto	l9358
 12338  004A2C                     u6470:
 12339  004A2C                     l9354:
 12340                           
 12341                           ;libraries/lcd_highlevel.c: 518:   {;libraries/lcd_highlevel.c: 519:     return 0;
 12342  004A2C  0E00               	movlw	0
 12343  004A2E  EF75  F025         	goto	l252
 12344  004A32                     l9358:
 12345                           
 12346                           ;libraries/lcd_highlevel.c: 522:   if(posX > (button->posX + button->width))
 12347  004A32  EE20 F004          	lfsr	2,4
 12348  004A36  5012               	movf	LCD_InButton@button^0,w,c
 12349  004A38  26D9               	addwf	fsr2l,f,c
 12350  004A3A  5013               	movf	(LCD_InButton@button+1)^0,w,c
 12351  004A3C  22DA               	addwfc	fsr2h,f,c
 12352  004A3E  CFDE F018          	movff	postinc2,??_LCD_InButton
 12353  004A42  CFDD F019          	movff	postdec2,??_LCD_InButton+1
 12354  004A46  C012  FFD9         	movff	LCD_InButton@button,fsr2l
 12355  004A4A  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
 12356  004A4E  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
 12357  004A52  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
 12358  004A56  5018               	movf	??_LCD_InButton^0,w,c
 12359  004A58  261A               	addwf	(??_LCD_InButton+2)^0,f,c
 12360  004A5A  5019               	movf	(??_LCD_InButton+1)^0,w,c
 12361  004A5C  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
 12362  004A5E  5014               	movf	LCD_InButton@posX^0,w,c
 12363  004A60  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
 12364  004A62  5015               	movf	(LCD_InButton@posX+1)^0,w,c
 12365  004A64  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
 12366  004A66  B0D8               	btfsc	status,0,c
 12367  004A68  EF38  F025         	goto	u6481
 12368  004A6C  EF3A  F025         	goto	u6480
 12369  004A70                     u6481:
 12370  004A70  EF3C  F025         	goto	l9364
 12371  004A74                     u6480:
 12372  004A74  EF16  F025         	goto	l9354
 12373  004A78                     l9364:
 12374                           
 12375                           ;libraries/lcd_highlevel.c: 527:   if(posY < button->posY)
 12376  004A78  EE20 F002          	lfsr	2,2
 12377  004A7C  5012               	movf	LCD_InButton@button^0,w,c
 12378  004A7E  26D9               	addwf	fsr2l,f,c
 12379  004A80  5013               	movf	(LCD_InButton@button+1)^0,w,c
 12380  004A82  22DA               	addwfc	fsr2h,f,c
 12381  004A84  50DE               	movf	postinc2,w,c
 12382  004A86  5C16               	subwf	LCD_InButton@posY^0,w,c
 12383  004A88  50DE               	movf	postinc2,w,c
 12384  004A8A  5817               	subwfb	(LCD_InButton@posY+1)^0,w,c
 12385  004A8C  B0D8               	btfsc	status,0,c
 12386  004A8E  EF4B  F025         	goto	u6491
 12387  004A92  EF4D  F025         	goto	u6490
 12388  004A96                     u6491:
 12389  004A96  EF4F  F025         	goto	l9370
 12390  004A9A                     u6490:
 12391  004A9A  EF16  F025         	goto	l9354
 12392  004A9E                     l9370:
 12393                           
 12394                           ;libraries/lcd_highlevel.c: 532:   if(posY > (button->posY + button->height))
 12395  004A9E  EE20 F006          	lfsr	2,6
 12396  004AA2  5012               	movf	LCD_InButton@button^0,w,c
 12397  004AA4  26D9               	addwf	fsr2l,f,c
 12398  004AA6  5013               	movf	(LCD_InButton@button+1)^0,w,c
 12399  004AA8  22DA               	addwfc	fsr2h,f,c
 12400  004AAA  CFDE F018          	movff	postinc2,??_LCD_InButton
 12401  004AAE  CFDD F019          	movff	postdec2,??_LCD_InButton+1
 12402  004AB2  EE20 F002          	lfsr	2,2
 12403  004AB6  5012               	movf	LCD_InButton@button^0,w,c
 12404  004AB8  26D9               	addwf	fsr2l,f,c
 12405  004ABA  5013               	movf	(LCD_InButton@button+1)^0,w,c
 12406  004ABC  22DA               	addwfc	fsr2h,f,c
 12407  004ABE  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
 12408  004AC2  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
 12409  004AC6  5018               	movf	??_LCD_InButton^0,w,c
 12410  004AC8  261A               	addwf	(??_LCD_InButton+2)^0,f,c
 12411  004ACA  5019               	movf	(??_LCD_InButton+1)^0,w,c
 12412  004ACC  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
 12413  004ACE  5016               	movf	LCD_InButton@posY^0,w,c
 12414  004AD0  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
 12415  004AD2  5017               	movf	(LCD_InButton@posY+1)^0,w,c
 12416  004AD4  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
 12417  004AD6  B0D8               	btfsc	status,0,c
 12418  004AD8  EF70  F025         	goto	u6501
 12419  004ADC  EF72  F025         	goto	u6500
 12420  004AE0                     u6501:
 12421  004AE0  EF74  F025         	goto	l9376
 12422  004AE4                     u6500:
 12423  004AE4  EF16  F025         	goto	l9354
 12424  004AE8                     l9376:
 12425                           
 12426                           ;libraries/lcd_highlevel.c: 536:   return 1;
 12427  004AE8  0E01               	movlw	1
 12428  004AEA                     l252:
 12429  004AEA  0012               	return		;funcret
 12430  004AEC                     __end_of_LCD_InButton:
 12431                           	callstack 0
 12432                           
 12433 ;; *************** function _GameParameters_resetPos *****************
 12434 ;; Defined at:
 12435 ;;		line 41 in file "class/gameParameters.c"
 12436 ;; Parameters:    Size  Location     Type
 12437 ;;  s               2   17[COMRAM] PTR struct GameParameter
 12438 ;;		 -> g1(201), 
 12439 ;; Auto vars:     Size  Location     Type
 12440 ;;		None
 12441 ;; Return value:  Size  Location     Type
 12442 ;;                  1    wreg      void 
 12443 ;; Registers used:
 12444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12445 ;; Tracked objects:
 12446 ;;		On entry : 0/0
 12447 ;;		On exit  : 0/0
 12448 ;;		Unchanged: 0/0
 12449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12450 ;;      Params:         2       0       0       0       0       0       0
 12451 ;;      Locals:         0       0       0       0       0       0       0
 12452 ;;      Temps:          0       0       0       0       0       0       0
 12453 ;;      Totals:         2       0       0       0       0       0       0
 12454 ;;Total ram usage:        2 bytes
 12455 ;; Hardware stack levels used: 1
 12456 ;; Hardware stack levels required when called: 4
 12457 ;; This function calls:
 12458 ;;		Nothing
 12459 ;; This function is called by:
 12460 ;;		_gameControllerController
 12461 ;;		_moovePaddle
 12462 ;; This function uses a non-reentrant model
 12463 ;;
 12464                           
 12465                           	psect	text50
 12466  005DD0                     __ptext50:
 12467                           	callstack 0
 12468  005DD0                     _GameParameters_resetPos:
 12469                           	callstack 22
 12470  005DD0                     
 12471                           ;class/gameParameters.c: 41: void GameParameters_resetPos(struct GameParameters* s);clas
      +                          s/gameParameters.c: 42: {;class/gameParameters.c: 43:     s->x=0;
 12472  005DD0  EE20 F004          	lfsr	2,4
 12473  005DD4  5012               	movf	GameParameters_resetPos@s^0,w,c
 12474  005DD6  26D9               	addwf	fsr2l,f,c
 12475  005DD8  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
 12476  005DDA  22DA               	addwfc	fsr2h,f,c
 12477  005DDC  0E00               	movlw	0
 12478  005DDE  6EDE               	movwf	postinc2,c
 12479  005DE0  0E00               	movlw	0
 12480  005DE2  6EDD               	movwf	postdec2,c
 12481                           
 12482                           ;class/gameParameters.c: 44:     s->y=0;
 12483  005DE4  EE20 F006          	lfsr	2,6
 12484  005DE8  5012               	movf	GameParameters_resetPos@s^0,w,c
 12485  005DEA  26D9               	addwf	fsr2l,f,c
 12486  005DEC  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
 12487  005DEE  22DA               	addwfc	fsr2h,f,c
 12488  005DF0  0E00               	movlw	0
 12489  005DF2  6EDE               	movwf	postinc2,c
 12490  005DF4  0E00               	movlw	0
 12491  005DF6  6EDD               	movwf	postdec2,c
 12492  005DF8  0012               	return		;funcret
 12493  005DFA                     __end_of_GameParameters_resetPos:
 12494                           	callstack 0
 12495                           
 12496 ;; *************** function _displaySM *****************
 12497 ;; Defined at:
 12498 ;;		line 18 in file "stateMachine/display.c"
 12499 ;; Parameters:    Size  Location     Type
 12500 ;;  ev              1    wreg     unsigned char 
 12501 ;;  g               2   64[BANK0 ] PTR struct GameParameter
 12502 ;;		 -> g1(201), 
 12503 ;; Auto vars:     Size  Location     Type
 12504 ;;  ev              1   68[BANK0 ] unsigned char 
 12505 ;; Return value:  Size  Location     Type
 12506 ;;                  1    wreg      void 
 12507 ;; Registers used:
 12508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12509 ;; Tracked objects:
 12510 ;;		On entry : 0/0
 12511 ;;		On exit  : 0/0
 12512 ;;		Unchanged: 0/0
 12513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12514 ;;      Params:         0       2       0       0       0       0       0
 12515 ;;      Locals:         0       1       0       0       0       0       0
 12516 ;;      Temps:          0       2       0       0       0       0       0
 12517 ;;      Totals:         0       5       0       0       0       0       0
 12518 ;;Total ram usage:        5 bytes
 12519 ;; Hardware stack levels used: 1
 12520 ;; Hardware stack levels required when called: 9
 12521 ;; This function calls:
 12522 ;;		_displayController
 12523 ;; This function is called by:
 12524 ;;		_Factory_exec
 12525 ;; This function uses a non-reentrant model
 12526 ;;
 12527                           
 12528                           	psect	text51
 12529  004BB6                     __ptext51:
 12530                           	callstack 0
 12531  004BB6                     _displaySM:
 12532                           	callstack 20
 12533                           
 12534                           ;incstack = 0
 12535                           ;displaySM@ev stored from wreg
 12536  004BB6  0100               	movlb	0	; () banked
 12537  004BB8  6FA4               	movwf	displaySM@ev& (0+255),b
 12538  004BBA                     
 12539                           ;stateMachine/display.c: 18: void displaySM(Event ev, GameParameters* g);stateMachine/di
      +                          splay.c: 19: {;stateMachine/display.c: 20:    switch(displayState)
 12540  004BBA  EF25  F026         	goto	l10152
 12541  004BBE                     l10124:
 12542                           
 12543                           ; BSR set to: 0
 12544                           ;stateMachine/display.c: 23:             if((ev==evOnePlayer)||(ev==evTwoPlayer))
 12545  004BBE  0E05               	movlw	5
 12546  004BC0  19A4               	xorwf	displaySM@ev& (0+255),w,b
 12547  004BC2  B4D8               	btfsc	status,2,c
 12548  004BC4  EFE6  F025         	goto	u7661
 12549  004BC8  EFE8  F025         	goto	u7660
 12550  004BCC                     u7661:
 12551  004BCC  EFF1  F025         	goto	l10128
 12552  004BD0                     u7660:
 12553  004BD0                     
 12554                           ; BSR set to: 0
 12555  004BD0  0E06               	movlw	6
 12556  004BD2  19A4               	xorwf	displaySM@ev& (0+255),w,b
 12557  004BD4  A4D8               	btfss	status,2,c
 12558  004BD6  EFEF  F025         	goto	u7671
 12559  004BDA  EFF1  F025         	goto	u7670
 12560  004BDE                     u7671:
 12561  004BDE  EFF9  F025         	goto	l10132
 12562  004BE2                     u7670:
 12563  004BE2                     l10128:
 12564                           
 12565                           ; BSR set to: 0
 12566                           ;stateMachine/display.c: 24:             {;stateMachine/display.c: 25:                 d
      +                          isplayState=INGAME;
 12567  004BE2  0E02               	movlw	2
 12568  004BE4  6FDD               	movwf	_displayState& (0+255),b
 12569  004BE6                     
 12570                           ; BSR set to: 0
 12571                           ;stateMachine/display.c: 26:                 displayController(g);
 12572  004BE6  C0A0  F09E         	movff	displaySM@g,displayController@g
 12573  004BEA  C0A1  F09F         	movff	displaySM@g+1,displayController@g+1
 12574  004BEE  EC09  F02C         	call	_displayController	;wreg free
 12575  004BF2                     l10132:
 12576                           
 12577                           ;stateMachine/display.c: 28:             if(ev==evParameters)
 12578  004BF2  0E07               	movlw	7
 12579  004BF4  0100               	movlb	0	; () banked
 12580  004BF6  19A4               	xorwf	displaySM@ev& (0+255),w,b
 12581  004BF8  A4D8               	btfss	status,2,c
 12582  004BFA  EF01  F026         	goto	u7681
 12583  004BFE  EF03  F026         	goto	u7680
 12584  004C02                     u7681:
 12585  004C02  EF3F  F026         	goto	l547
 12586  004C06                     u7680:
 12587  004C06                     
 12588                           ; BSR set to: 0
 12589                           ;stateMachine/display.c: 29:             {;stateMachine/display.c: 30:                 d
      +                          isplayState=PARAMETERS;
 12590  004C06  0E01               	movlw	1
 12591  004C08  6FDD               	movwf	_displayState& (0+255),b
 12592  004C0A                     l10136:
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;stateMachine/display.c: 31:                 displayController(g);
 12596  004C0A  C0A0  F09E         	movff	displaySM@g,displayController@g
 12597  004C0E  C0A1  F09F         	movff	displaySM@g+1,displayController@g+1
 12598  004C12  EC09  F02C         	call	_displayController	;wreg free
 12599  004C16  EF3F  F026         	goto	l547
 12600  004C1A                     l10138:
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;stateMachine/display.c: 35:             if(ev==evLeaveParam)
 12604  004C1A  0E08               	movlw	8
 12605  004C1C  19A4               	xorwf	displaySM@ev& (0+255),w,b
 12606  004C1E  A4D8               	btfss	status,2,c
 12607  004C20  EF14  F026         	goto	u7691
 12608  004C24  EF16  F026         	goto	u7690
 12609  004C28                     u7691:
 12610  004C28  EF3F  F026         	goto	l547
 12611  004C2C                     u7690:
 12612  004C2C                     l10140:
 12613                           
 12614                           ; BSR set to: 0
 12615                           ;stateMachine/display.c: 36:             {;stateMachine/display.c: 37:                 d
      +                          isplayState=WELCOME;
 12616  004C2C  0E00               	movlw	0
 12617  004C2E  6FDD               	movwf	_displayState& (0+255),b
 12618  004C30  EF05  F026         	goto	l10136
 12619  004C34                     l10144:
 12620                           
 12621                           ; BSR set to: 0
 12622                           ;stateMachine/display.c: 42:             if(ev==evNewGame)
 12623  004C34  0E09               	movlw	9
 12624  004C36  19A4               	xorwf	displaySM@ev& (0+255),w,b
 12625  004C38  A4D8               	btfss	status,2,c
 12626  004C3A  EF21  F026         	goto	u7701
 12627  004C3E  EF23  F026         	goto	u7700
 12628  004C42                     u7701:
 12629  004C42  EF3F  F026         	goto	l547
 12630  004C46                     u7700:
 12631  004C46  EF16  F026         	goto	l10140
 12632  004C4A                     l10152:
 12633  004C4A  0100               	movlb	0	; () banked
 12634  004C4C  51DD               	movf	_displayState& (0+255),w,b
 12635  004C4E  6FA2               	movwf	??_displaySM& (0+255),b
 12636  004C50  6BA3               	clrf	(??_displaySM+1)& (0+255),b
 12637                           
 12638                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12639                           ; Switch size 1, requested type "simple"
 12640                           ; Number of cases is 1, Range of values is 0 to 0
 12641                           ; switch strategies available:
 12642                           ; Name         Instructions Cycles
 12643                           ; simple_byte            4     3 (average)
 12644                           ;	Chosen strategy is simple_byte
 12645  004C52  51A3               	movf	(??_displaySM+1)& (0+255),w,b
 12646  004C54  0A00               	xorlw	0	; case 0
 12647  004C56  B4D8               	btfsc	status,2,c
 12648  004C58  EF30  F026         	goto	l10502
 12649  004C5C  EF3F  F026         	goto	l547
 12650  004C60                     l10502:
 12651                           
 12652                           ; BSR set to: 0
 12653                           ; Switch size 1, requested type "simple"
 12654                           ; Number of cases is 3, Range of values is 0 to 2
 12655                           ; switch strategies available:
 12656                           ; Name         Instructions Cycles
 12657                           ; simple_byte           10     6 (average)
 12658                           ;	Chosen strategy is simple_byte
 12659  004C60  51A2               	movf	??_displaySM& (0+255),w,b
 12660  004C62  0A00               	xorlw	0	; case 0
 12661  004C64  B4D8               	btfsc	status,2,c
 12662  004C66  EFDF  F025         	goto	l10124
 12663  004C6A  0A01               	xorlw	1	; case 1
 12664  004C6C  B4D8               	btfsc	status,2,c
 12665  004C6E  EF0D  F026         	goto	l10138
 12666  004C72  0A03               	xorlw	3	; case 2
 12667  004C74  B4D8               	btfsc	status,2,c
 12668  004C76  EF1A  F026         	goto	l10144
 12669  004C7A  EF3F  F026         	goto	l547
 12670  004C7E                     l547:
 12671  004C7E  0012               	return		;funcret
 12672  004C80                     __end_of_displaySM:
 12673                           	callstack 0
 12674                           
 12675 ;; *************** function _displayController *****************
 12676 ;; Defined at:
 12677 ;;		line 52 in file "stateMachine/display.c"
 12678 ;; Parameters:    Size  Location     Type
 12679 ;;  g               2   62[BANK0 ] PTR struct GameParameter
 12680 ;;		 -> g1(201), 
 12681 ;; Auto vars:     Size  Location     Type
 12682 ;;		None
 12683 ;; Return value:  Size  Location     Type
 12684 ;;                  1    wreg      void 
 12685 ;; Registers used:
 12686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12687 ;; Tracked objects:
 12688 ;;		On entry : 0/0
 12689 ;;		On exit  : 0/0
 12690 ;;		Unchanged: 0/0
 12691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12692 ;;      Params:         0       2       0       0       0       0       0
 12693 ;;      Locals:         0       0       0       0       0       0       0
 12694 ;;      Temps:          2       0       0       0       0       0       0
 12695 ;;      Totals:         2       2       0       0       0       0       0
 12696 ;;Total ram usage:        4 bytes
 12697 ;; Hardware stack levels used: 1
 12698 ;; Hardware stack levels required when called: 8
 12699 ;; This function calls:
 12700 ;;		_Menu_inGameDraw
 12701 ;;		_Menu_parametersDraw
 12702 ;;		_Menu_welcomeDraw
 12703 ;; This function is called by:
 12704 ;;		_displayInit
 12705 ;;		_displaySM
 12706 ;; This function uses a non-reentrant model
 12707 ;;
 12708                           
 12709                           	psect	text52
 12710  005812                     __ptext52:
 12711                           	callstack 0
 12712  005812                     _displayController:
 12713                           	callstack 19
 12714  005812                     
 12715                           ;stateMachine/display.c: 52: void displayController(GameParameters* g);stateMachine/disp
      +                          lay.c: 53: {;stateMachine/display.c: 54:     switch(displayState)
 12716  005812  EF23  F02C         	goto	l9602
 12717  005816                     l9594:
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;stateMachine/display.c: 58:             Menu_welcomeDraw(g);
 12721  005816  C09E  F09C         	movff	displayController@g,Menu_welcomeDraw@g
 12722  00581A  C09F  F09D         	movff	displayController@g+1,Menu_welcomeDraw@g+1
 12723  00581E  EC1F  F02B         	call	_Menu_welcomeDraw	;wreg free
 12724                           
 12725                           ;stateMachine/display.c: 59:             break;
 12726  005822  EF3D  F02C         	goto	l556
 12727  005826                     l9596:
 12728                           
 12729                           ; BSR set to: 0
 12730                           ;stateMachine/display.c: 62:             Menu_parametersDraw(g);
 12731  005826  C09E  F09C         	movff	displayController@g,Menu_parametersDraw@g
 12732  00582A  C09F  F09D         	movff	displayController@g+1,Menu_parametersDraw@g+1
 12733  00582E  EC9F  F02A         	call	_Menu_parametersDraw	;wreg free
 12734                           
 12735                           ;stateMachine/display.c: 63:             break;
 12736  005832  EF3D  F02C         	goto	l556
 12737  005836                     l9598:
 12738                           
 12739                           ; BSR set to: 0
 12740                           ;stateMachine/display.c: 68:             Menu_inGameDraw(g);
 12741  005836  C09E  F09C         	movff	displayController@g,Menu_inGameDraw@g
 12742  00583A  C09F  F09D         	movff	displayController@g+1,Menu_inGameDraw@g+1
 12743  00583E  EC3E  F02C         	call	_Menu_inGameDraw	;wreg free
 12744                           
 12745                           ;stateMachine/display.c: 69:             break;
 12746  005842  EF3D  F02C         	goto	l556
 12747  005846                     l9602:
 12748  005846  0100               	movlb	0	; () banked
 12749  005848  51DD               	movf	_displayState& (0+255),w,b
 12750  00584A  6E45               	movwf	??_displayController^0,c
 12751  00584C  6A46               	clrf	(??_displayController+1)^0,c
 12752                           
 12753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12754                           ; Switch size 1, requested type "simple"
 12755                           ; Number of cases is 1, Range of values is 0 to 0
 12756                           ; switch strategies available:
 12757                           ; Name         Instructions Cycles
 12758                           ; simple_byte            4     3 (average)
 12759                           ;	Chosen strategy is simple_byte
 12760  00584E  5046               	movf	(??_displayController+1)^0,w,c
 12761  005850  0A00               	xorlw	0	; case 0
 12762  005852  B4D8               	btfsc	status,2,c
 12763  005854  EF2E  F02C         	goto	l10504
 12764  005858  EF3D  F02C         	goto	l556
 12765  00585C                     l10504:
 12766                           
 12767                           ; BSR set to: 0
 12768                           ; Switch size 1, requested type "simple"
 12769                           ; Number of cases is 3, Range of values is 0 to 2
 12770                           ; switch strategies available:
 12771                           ; Name         Instructions Cycles
 12772                           ; simple_byte           10     6 (average)
 12773                           ;	Chosen strategy is simple_byte
 12774  00585C  5045               	movf	??_displayController^0,w,c
 12775  00585E  0A00               	xorlw	0	; case 0
 12776  005860  B4D8               	btfsc	status,2,c
 12777  005862  EF0B  F02C         	goto	l9594
 12778  005866  0A01               	xorlw	1	; case 1
 12779  005868  B4D8               	btfsc	status,2,c
 12780  00586A  EF13  F02C         	goto	l9596
 12781  00586E  0A03               	xorlw	3	; case 2
 12782  005870  B4D8               	btfsc	status,2,c
 12783  005872  EF1B  F02C         	goto	l9598
 12784  005876  EF3D  F02C         	goto	l556
 12785  00587A                     l556:
 12786  00587A  0012               	return		;funcret
 12787  00587C                     __end_of_displayController:
 12788                           	callstack 0
 12789                           
 12790 ;; *************** function _Menu_welcomeDraw *****************
 12791 ;; Defined at:
 12792 ;;		line 3 in file "class/menu.c"
 12793 ;; Parameters:    Size  Location     Type
 12794 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 12795 ;;		 -> g1(201), 
 12796 ;; Auto vars:     Size  Location     Type
 12797 ;;		None
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  1    wreg      void 
 12800 ;; Registers used:
 12801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12807 ;;      Params:         0       2       0       0       0       0       0
 12808 ;;      Locals:         0       0       0       0       0       0       0
 12809 ;;      Temps:          0       0       0       0       0       0       0
 12810 ;;      Totals:         0       2       0       0       0       0       0
 12811 ;;Total ram usage:        2 bytes
 12812 ;; Hardware stack levels used: 1
 12813 ;; Hardware stack levels required when called: 7
 12814 ;; This function calls:
 12815 ;;		_LCD_ButtonDraw
 12816 ;;		_LCD_DrawText
 12817 ;;		_LCD_Fill
 12818 ;; This function is called by:
 12819 ;;		_displayController
 12820 ;; This function uses a non-reentrant model
 12821 ;;
 12822                           
 12823                           	psect	text53
 12824  00563E                     __ptext53:
 12825                           	callstack 0
 12826  00563E                     _Menu_welcomeDraw:
 12827                           	callstack 19
 12828  00563E                     
 12829                           ;class/menu.c: 3: void Menu_welcomeDraw(GameParameters* g);class/menu.c: 4: {;class/menu
      +                          .c: 5:     LCD_Fill(0b1111111111111111);
 12830  00563E  0EFF               	movlw	255
 12831  005640  6E13               	movwf	(LCD_Fill@color+1)^0,c
 12832  005642  6812               	setf	LCD_Fill@color^0,c
 12833  005644  EC03  F027         	call	_LCD_Fill	;wreg free
 12834  005648                     
 12835                           ;class/menu.c: 6:     LCD_DrawText("WELCOME",&arialNarrow_12ptFontInfo,A_CENTER,50,50,0b
      +                          0000000000000000,0b1111111111111111);
 12836  005648  0EDA               	movlw	low STR_8
 12837  00564A  6E20               	movwf	LCD_DrawText@msg^0,c
 12838  00564C  0E7F               	movlw	high STR_8
 12839  00564E  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12840  005650  0EA1               	movlw	low _arialNarrow_12ptFontInfo
 12841  005652  6E22               	movwf	LCD_DrawText@font^0,c
 12842  005654  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12843  005656  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12844  005658  0E02               	movlw	2
 12845  00565A  6E24               	movwf	LCD_DrawText@align^0,c
 12846  00565C  0E00               	movlw	0
 12847  00565E  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12848  005660  0E32               	movlw	50
 12849  005662  6E25               	movwf	LCD_DrawText@posX^0,c
 12850  005664  0E00               	movlw	0
 12851  005666  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12852  005668  0E32               	movlw	50
 12853  00566A  6E27               	movwf	LCD_DrawText@posY^0,c
 12854  00566C  0E00               	movlw	0
 12855  00566E  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12856  005670  0E00               	movlw	0
 12857  005672  6E29               	movwf	LCD_DrawText@color^0,c
 12858  005674  0EFF               	movlw	255
 12859  005676  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12860  005678  682B               	setf	LCD_DrawText@bg_color^0,c
 12861  00567A  EC5B  F00E         	call	_LCD_DrawText	;wreg free
 12862  00567E                     
 12863                           ;class/menu.c: 7:     LCD_ButtonDraw(&(g->btnParam));
 12864  00567E  0E08               	movlw	8
 12865  005680  0100               	movlb	0	; () banked
 12866  005682  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 12867  005684  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 12868  005686  0E00               	movlw	0
 12869  005688  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 12870  00568A  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 12871  00568C  EC2A  F007         	call	_LCD_ButtonDraw	;wreg free
 12872  005690                     
 12873                           ;class/menu.c: 8:     LCD_ButtonDraw(&(g->btnOnePlayer));
 12874  005690  0E20               	movlw	32
 12875  005692  0100               	movlb	0	; () banked
 12876  005694  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 12877  005696  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 12878  005698  0E00               	movlw	0
 12879  00569A  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 12880  00569C  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 12881  00569E  EC2A  F007         	call	_LCD_ButtonDraw	;wreg free
 12882  0056A2                     
 12883                           ;class/menu.c: 9:     LCD_ButtonDraw(&(g->btnTwoPlayer));
 12884  0056A2  0E38               	movlw	56
 12885  0056A4  0100               	movlb	0	; () banked
 12886  0056A6  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 12887  0056A8  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 12888  0056AA  0E00               	movlw	0
 12889  0056AC  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 12890  0056AE  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 12891  0056B0  EC2A  F007         	call	_LCD_ButtonDraw	;wreg free
 12892  0056B4  0012               	return		;funcret
 12893  0056B6                     __end_of_Menu_welcomeDraw:
 12894                           	callstack 0
 12895                           
 12896 ;; *************** function _Menu_parametersDraw *****************
 12897 ;; Defined at:
 12898 ;;		line 11 in file "class/menu.c"
 12899 ;; Parameters:    Size  Location     Type
 12900 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 12901 ;;		 -> g1(201), 
 12902 ;; Auto vars:     Size  Location     Type
 12903 ;;		None
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  1    wreg      void 
 12906 ;; Registers used:
 12907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/0
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12913 ;;      Params:         0       2       0       0       0       0       0
 12914 ;;      Locals:         0       0       0       0       0       0       0
 12915 ;;      Temps:          0       0       0       0       0       0       0
 12916 ;;      Totals:         0       2       0       0       0       0       0
 12917 ;;Total ram usage:        2 bytes
 12918 ;; Hardware stack levels used: 1
 12919 ;; Hardware stack levels required when called: 7
 12920 ;; This function calls:
 12921 ;;		_LCD_ButtonDraw
 12922 ;;		_LCD_DrawText
 12923 ;;		_LCD_Fill
 12924 ;;		_LCD_SliderDraw
 12925 ;; This function is called by:
 12926 ;;		_displayController
 12927 ;; This function uses a non-reentrant model
 12928 ;;
 12929                           
 12930                           	psect	text54
 12931  00553E                     __ptext54:
 12932                           	callstack 0
 12933  00553E                     _Menu_parametersDraw:
 12934                           	callstack 19
 12935  00553E                     
 12936                           ;class/menu.c: 11: void Menu_parametersDraw(GameParameters* g);class/menu.c: 12: {;class
      +                          /menu.c: 13:     LCD_Fill(0b1111111111111111);
 12937  00553E  0EFF               	movlw	255
 12938  005540  6E13               	movwf	(LCD_Fill@color+1)^0,c
 12939  005542  6812               	setf	LCD_Fill@color^0,c
 12940  005544  EC03  F027         	call	_LCD_Fill	;wreg free
 12941  005548                     
 12942                           ;class/menu.c: 14:     LCD_DrawText("PARAMETERS",&arialNarrow_12ptFontInfo,A_CENTER,50,5
      +                          0,0b0000000000000000,0b1111111111111111);
 12943  005548  0EA8               	movlw	low STR_9
 12944  00554A  6E20               	movwf	LCD_DrawText@msg^0,c
 12945  00554C  0E7F               	movlw	high STR_9
 12946  00554E  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12947  005550  0EA1               	movlw	low _arialNarrow_12ptFontInfo
 12948  005552  6E22               	movwf	LCD_DrawText@font^0,c
 12949  005554  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12950  005556  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12951  005558  0E02               	movlw	2
 12952  00555A  6E24               	movwf	LCD_DrawText@align^0,c
 12953  00555C  0E00               	movlw	0
 12954  00555E  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12955  005560  0E32               	movlw	50
 12956  005562  6E25               	movwf	LCD_DrawText@posX^0,c
 12957  005564  0E00               	movlw	0
 12958  005566  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12959  005568  0E32               	movlw	50
 12960  00556A  6E27               	movwf	LCD_DrawText@posY^0,c
 12961  00556C  0E00               	movlw	0
 12962  00556E  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12963  005570  0E00               	movlw	0
 12964  005572  6E29               	movwf	LCD_DrawText@color^0,c
 12965  005574  0EFF               	movlw	255
 12966  005576  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12967  005578  682B               	setf	LCD_DrawText@bg_color^0,c
 12968  00557A  EC5B  F00E         	call	_LCD_DrawText	;wreg free
 12969  00557E                     
 12970                           ;class/menu.c: 15:     LCD_ButtonDraw(&(g->btnLeaveParam));
 12971  00557E  0E50               	movlw	80
 12972  005580  0100               	movlb	0	; () banked
 12973  005582  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 12974  005584  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 12975  005586  0E00               	movlw	0
 12976  005588  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 12977  00558A  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 12978  00558C  EC2A  F007         	call	_LCD_ButtonDraw	;wreg free
 12979  005590                     
 12980                           ;class/menu.c: 16:     g->sldParam.value=g->backlight;
 12981  005590  C09C  FFD9         	movff	Menu_parametersDraw@g,fsr2l
 12982  005594  C09D  FFDA         	movff	Menu_parametersDraw@g+1,fsr2h
 12983  005598  0100               	movlb	0	; () banked
 12984  00559A  EE10 F0A9          	lfsr	1,169
 12985  00559E  519C               	movf	Menu_parametersDraw@g& (0+255),w,b
 12986  0055A0  26E1               	addwf	fsr1l,f,c
 12987  0055A2  519D               	movf	(Menu_parametersDraw@g+1)& (0+255),w,b
 12988  0055A4  22E2               	addwfc	fsr1h,f,c
 12989  0055A6  CFDE FFE6          	movff	postinc2,postinc1
 12990  0055AA  CFDD FFE5          	movff	postdec2,postdec1
 12991  0055AE                     
 12992                           ; BSR set to: 0
 12993                           ;class/menu.c: 17:     LCD_SliderDraw(&(g->sldParam));
 12994  0055AE  0E98               	movlw	152
 12995  0055B0  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 12996  0055B2  6E37               	movwf	LCD_SliderDraw@slider^0,c
 12997  0055B4  0E00               	movlw	0
 12998  0055B6  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 12999  0055B8  6E38               	movwf	(LCD_SliderDraw@slider+1)^0,c
 13000  0055BA  EC1D  F022         	call	_LCD_SliderDraw	;wreg free
 13001  0055BE  0012               	return		;funcret
 13002  0055C0                     __end_of_Menu_parametersDraw:
 13003                           	callstack 0
 13004                           
 13005 ;; *************** function _LCD_SliderDraw *****************
 13006 ;; Defined at:
 13007 ;;		line 371 in file "libraries/lcd_highlevel.c"
 13008 ;; Parameters:    Size  Location     Type
 13009 ;;  slider          2   54[COMRAM] PTR struct .
 13010 ;;		 -> g1(201), 
 13011 ;; Auto vars:     Size  Location     Type
 13012 ;;  y2              2   66[COMRAM] unsigned short 
 13013 ;;  y1              2   64[COMRAM] unsigned short 
 13014 ;;  x2              2   62[COMRAM] unsigned short 
 13015 ;;  x1              2   60[COMRAM] unsigned short 
 13016 ;; Return value:  Size  Location     Type
 13017 ;;                  1    wreg      void 
 13018 ;; Registers used:
 13019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13020 ;; Tracked objects:
 13021 ;;		On entry : 0/0
 13022 ;;		On exit  : 0/0
 13023 ;;		Unchanged: 0/0
 13024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13025 ;;      Params:         2       0       0       0       0       0       0
 13026 ;;      Locals:         8       0       0       0       0       0       0
 13027 ;;      Temps:          4       0       0       0       0       0       0
 13028 ;;      Totals:        14       0       0       0       0       0       0
 13029 ;;Total ram usage:       14 bytes
 13030 ;; Hardware stack levels used: 1
 13031 ;; Hardware stack levels required when called: 6
 13032 ;; This function calls:
 13033 ;;		_LCD_DrawRect
 13034 ;;		_LCD_SliderUpdate
 13035 ;; This function is called by:
 13036 ;;		_Menu_parametersDraw
 13037 ;; This function uses a non-reentrant model
 13038 ;;
 13039                           
 13040                           	psect	text55
 13041  00443A                     __ptext55:
 13042                           	callstack 0
 13043  00443A                     _LCD_SliderDraw:
 13044                           	callstack 19
 13045  00443A                     
 13046                           ;libraries/lcd_highlevel.c: 371: void LCD_SliderDraw(sld_t * slider);libraries/lcd_highl
      +                          evel.c: 372: {;libraries/lcd_highlevel.c: 373:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 375:   x1 = slider->posX;
 13047  00443A  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 13048  00443E  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 13049  004442  CFDE F03D          	movff	postinc2,LCD_SliderDraw@x1
 13050  004446  CFDD F03E          	movff	postdec2,LCD_SliderDraw@x1+1
 13051  00444A                     
 13052                           ;libraries/lcd_highlevel.c: 376:   x2 = slider->posX + slider->width;
 13053  00444A  EE20 F004          	lfsr	2,4
 13054  00444E  5037               	movf	LCD_SliderDraw@slider^0,w,c
 13055  004450  26D9               	addwf	fsr2l,f,c
 13056  004452  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 13057  004454  22DA               	addwfc	fsr2h,f,c
 13058  004456  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 13059  00445A  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 13060  00445E  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 13061  004462  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 13062  004466  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 13063  00446A  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 13064  00446E  5039               	movf	??_LCD_SliderDraw^0,w,c
 13065  004470  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 13066  004472  6E3F               	movwf	LCD_SliderDraw@x2^0,c
 13067  004474  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 13068  004476  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 13069  004478  6E40               	movwf	(LCD_SliderDraw@x2+1)^0,c
 13070  00447A                     
 13071                           ;libraries/lcd_highlevel.c: 377:   y1 = slider->posY;
 13072  00447A  EE20 F002          	lfsr	2,2
 13073  00447E  5037               	movf	LCD_SliderDraw@slider^0,w,c
 13074  004480  26D9               	addwf	fsr2l,f,c
 13075  004482  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 13076  004484  22DA               	addwfc	fsr2h,f,c
 13077  004486  CFDE F041          	movff	postinc2,LCD_SliderDraw@y1
 13078  00448A  CFDD F042          	movff	postdec2,LCD_SliderDraw@y1+1
 13079  00448E                     
 13080                           ;libraries/lcd_highlevel.c: 378:   y2 = slider->posY + slider->height;
 13081  00448E  EE20 F006          	lfsr	2,6
 13082  004492  5037               	movf	LCD_SliderDraw@slider^0,w,c
 13083  004494  26D9               	addwf	fsr2l,f,c
 13084  004496  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 13085  004498  22DA               	addwfc	fsr2h,f,c
 13086  00449A  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 13087  00449E  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 13088  0044A2  EE20 F002          	lfsr	2,2
 13089  0044A6  5037               	movf	LCD_SliderDraw@slider^0,w,c
 13090  0044A8  26D9               	addwf	fsr2l,f,c
 13091  0044AA  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 13092  0044AC  22DA               	addwfc	fsr2h,f,c
 13093  0044AE  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 13094  0044B2  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 13095  0044B6  5039               	movf	??_LCD_SliderDraw^0,w,c
 13096  0044B8  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 13097  0044BA  6E43               	movwf	LCD_SliderDraw@y2^0,c
 13098  0044BC  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 13099  0044BE  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 13100  0044C0  6E44               	movwf	(LCD_SliderDraw@y2+1)^0,c
 13101  0044C2                     
 13102                           ;libraries/lcd_highlevel.c: 379:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->bgColor);
 13103  0044C2  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 13104  0044C6  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 13105  0044CA  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 13106  0044CE  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 13107  0044D2  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 13108  0044D6  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 13109  0044DA  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 13110  0044DE  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 13111  0044E2  0E01               	movlw	1
 13112  0044E4  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13113  0044E6  EE20 F00A          	lfsr	2,10
 13114  0044EA  5037               	movf	LCD_SliderDraw@slider^0,w,c
 13115  0044EC  26D9               	addwf	fsr2l,f,c
 13116  0044EE  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 13117  0044F0  22DA               	addwfc	fsr2h,f,c
 13118  0044F2  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 13119  0044F6  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 13120  0044FA  EC02  F014         	call	_LCD_DrawRect	;wreg free
 13121  0044FE                     
 13122                           ;libraries/lcd_highlevel.c: 380:   LCD_DrawRect(x1, y1, x2, y2, 0, slider->borderColor);
 13123  0044FE  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 13124  004502  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 13125  004506  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 13126  00450A  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 13127  00450E  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 13128  004512  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 13129  004516  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 13130  00451A  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 13131  00451E  0E00               	movlw	0
 13132  004520  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13133  004522  EE20 F00C          	lfsr	2,12
 13134  004526  5037               	movf	LCD_SliderDraw@slider^0,w,c
 13135  004528  26D9               	addwf	fsr2l,f,c
 13136  00452A  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 13137  00452C  22DA               	addwfc	fsr2h,f,c
 13138  00452E  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 13139  004532  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 13140  004536  EC02  F014         	call	_LCD_DrawRect	;wreg free
 13141  00453A                     
 13142                           ;libraries/lcd_highlevel.c: 381:   LCD_SliderUpdate(slider);
 13143  00453A  C037  F027         	movff	LCD_SliderDraw@slider,LCD_SliderUpdate@slider
 13144  00453E  C038  F028         	movff	LCD_SliderDraw@slider+1,LCD_SliderUpdate@slider+1
 13145  004542  ECA1  F009         	call	_LCD_SliderUpdate	;wreg free
 13146  004546  0012               	return		;funcret
 13147  004548                     __end_of_LCD_SliderDraw:
 13148                           	callstack 0
 13149                           
 13150 ;; *************** function _LCD_SliderUpdate *****************
 13151 ;; Defined at:
 13152 ;;		line 319 in file "libraries/lcd_highlevel.c"
 13153 ;; Parameters:    Size  Location     Type
 13154 ;;  slider          2   38[COMRAM] PTR struct .
 13155 ;;		 -> g1(201), 
 13156 ;; Auto vars:     Size  Location     Type
 13157 ;;  x1              2   52[COMRAM] unsigned short 
 13158 ;;  y2              2   50[COMRAM] unsigned short 
 13159 ;;  y1              2   48[COMRAM] unsigned short 
 13160 ;;  x2              2   46[COMRAM] unsigned short 
 13161 ;; Return value:  Size  Location     Type
 13162 ;;                  1    wreg      void 
 13163 ;; Registers used:
 13164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13165 ;; Tracked objects:
 13166 ;;		On entry : 0/0
 13167 ;;		On exit  : 0/0
 13168 ;;		Unchanged: 0/0
 13169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13170 ;;      Params:         2       0       0       0       0       0       0
 13171 ;;      Locals:         8       0       0       0       0       0       0
 13172 ;;      Temps:          6       0       0       0       0       0       0
 13173 ;;      Totals:        16       0       0       0       0       0       0
 13174 ;;Total ram usage:       16 bytes
 13175 ;; Hardware stack levels used: 1
 13176 ;; Hardware stack levels required when called: 5
 13177 ;; This function calls:
 13178 ;;		_LCD_DrawRect
 13179 ;;		___lwdiv
 13180 ;;		___wmul
 13181 ;; This function is called by:
 13182 ;;		_LCD_SliderDraw
 13183 ;;		_gameControllerController
 13184 ;; This function uses a non-reentrant model
 13185 ;;
 13186                           
 13187                           	psect	text56
 13188  001342                     __ptext56:
 13189                           	callstack 0
 13190  001342                     _LCD_SliderUpdate:
 13191                           	callstack 21
 13192  001342                     
 13193                           ;libraries/lcd_highlevel.c: 319: void LCD_SliderUpdate(sld_t * slider);libraries/lcd_hig
      +                          hlevel.c: 320: {;libraries/lcd_highlevel.c: 321:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 325:   if(slider->cursorWidth != 0)
 13194  001342  EE20 F00E          	lfsr	2,14
 13195  001346  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13196  001348  26D9               	addwf	fsr2l,f,c
 13197  00134A  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13198  00134C  22DA               	addwfc	fsr2h,f,c
 13199  00134E  50DE               	movf	postinc2,w,c
 13200  001350  10DE               	iorwf	postinc2,w,c
 13201  001352  B4D8               	btfsc	status,2,c
 13202  001354  EFAE  F009         	goto	u5961
 13203  001358  EFB0  F009         	goto	u5960
 13204  00135C                     u5961:
 13205  00135C  EF3C  F00A         	goto	l8668
 13206  001360                     u5960:
 13207  001360                     
 13208                           ;libraries/lcd_highlevel.c: 326:   {;libraries/lcd_highlevel.c: 327:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->oldValue)/ slider->steps);
 13209  001360  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 13210  001364  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 13211  001368  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13212  00136C  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13213  001370  EE20 F00E          	lfsr	2,14
 13214  001374  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13215  001376  26D9               	addwf	fsr2l,f,c
 13216  001378  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13217  00137A  22DA               	addwfc	fsr2h,f,c
 13218  00137C  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 13219  001380  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 13220  001384  EE20 F004          	lfsr	2,4
 13221  001388  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13222  00138A  26D9               	addwf	fsr2l,f,c
 13223  00138C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13224  00138E  22DA               	addwfc	fsr2h,f,c
 13225  001390  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 13226  001394  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 13227  001398  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 13228  00139A  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 13229  00139C  6E1A               	movwf	___wmul@multiplier^0,c
 13230  00139E  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 13231  0013A0  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 13232  0013A2  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 13233  0013A4  EE20 F013          	lfsr	2,19
 13234  0013A8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13235  0013AA  26D9               	addwf	fsr2l,f,c
 13236  0013AC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13237  0013AE  22DA               	addwfc	fsr2h,f,c
 13238  0013B0  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 13239  0013B4  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 13240  0013B8  EC11  F02F         	call	___wmul	;wreg free
 13241  0013BC  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 13242  0013C0  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 13243  0013C4  EE20 F015          	lfsr	2,21
 13244  0013C8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13245  0013CA  26D9               	addwf	fsr2l,f,c
 13246  0013CC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13247  0013CE  22DA               	addwfc	fsr2h,f,c
 13248  0013D0  CFDE F022          	movff	postinc2,___lwdiv@divisor
 13249  0013D4  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 13250  0013D8  EC95  F02B         	call	___lwdiv	;wreg free
 13251  0013DC  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13252  0013DE  2620               	addwf	?___lwdiv^0,f,c
 13253  0013E0  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13254  0013E2  2221               	addwfc	(?___lwdiv+1)^0,f,c
 13255  0013E4  0E01               	movlw	1
 13256  0013E6  2420               	addwf	?___lwdiv^0,w,c
 13257  0013E8  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 13258  0013EA  0E00               	movlw	0
 13259  0013EC  2021               	addwfc	(?___lwdiv+1)^0,w,c
 13260  0013EE  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 13261  0013F0                     
 13262                           ;libraries/lcd_highlevel.c: 328:     x2 = x1 + slider->cursorWidth-2;
 13263  0013F0  EE20 F00E          	lfsr	2,14
 13264  0013F4  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13265  0013F6  26D9               	addwf	fsr2l,f,c
 13266  0013F8  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13267  0013FA  22DA               	addwfc	fsr2h,f,c
 13268  0013FC  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13269  001400  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13270  001404  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 13271  001406  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 13272  001408  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 13273  00140A  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 13274  00140C  0EFE               	movlw	254
 13275  00140E  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13276  001410  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 13277  001412  0EFF               	movlw	255
 13278  001414  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13279  001416  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 13280  001418                     
 13281                           ;libraries/lcd_highlevel.c: 329:     y1 = slider->posY + 2;
 13282  001418  EE20 F002          	lfsr	2,2
 13283  00141C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13284  00141E  26D9               	addwf	fsr2l,f,c
 13285  001420  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13286  001422  22DA               	addwfc	fsr2h,f,c
 13287  001424  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13288  001428  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13289  00142C  0E02               	movlw	2
 13290  00142E  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13291  001430  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 13292  001432  0E00               	movlw	0
 13293  001434  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13294  001436  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 13295  001438                     
 13296                           ;libraries/lcd_highlevel.c: 330:     y2 = slider->posY + slider->height - 2;
 13297  001438  EE20 F006          	lfsr	2,6
 13298  00143C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13299  00143E  26D9               	addwf	fsr2l,f,c
 13300  001440  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13301  001442  22DA               	addwfc	fsr2h,f,c
 13302  001444  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13303  001448  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13304  00144C  EE20 F002          	lfsr	2,2
 13305  001450  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13306  001452  26D9               	addwf	fsr2l,f,c
 13307  001454  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13308  001456  22DA               	addwfc	fsr2h,f,c
 13309  001458  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 13310  00145C  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 13311  001460  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13312  001462  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 13313  001464  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13314  001466  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 13315  001468  0EFE               	movlw	254
 13316  00146A  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 13317  00146C  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 13318  00146E  0EFF               	movlw	255
 13319  001470  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 13320  001472  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 13321                           
 13322                           ;libraries/lcd_highlevel.c: 331:   }
 13323  001474  EFB0  F00A         	goto	l8676
 13324  001478                     l8668:
 13325                           
 13326                           ;libraries/lcd_highlevel.c: 333:   {;libraries/lcd_highlevel.c: 334:     x1 = slider->po
      +                          sX + 1;
 13327  001478  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 13328  00147C  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 13329  001480  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13330  001484  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13331  001488  0E01               	movlw	1
 13332  00148A  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13333  00148C  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 13334  00148E  0E00               	movlw	0
 13335  001490  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13336  001492  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 13337  001494                     
 13338                           ;libraries/lcd_highlevel.c: 335:     x2 = slider->posX - 1 + ((slider->width * slider->o
      +                          ldValue)/ slider->steps);
 13339  001494  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 13340  001498  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 13341  00149C  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13342  0014A0  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13343  0014A4  EE20 F004          	lfsr	2,4
 13344  0014A8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13345  0014AA  26D9               	addwf	fsr2l,f,c
 13346  0014AC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13347  0014AE  22DA               	addwfc	fsr2h,f,c
 13348  0014B0  CFDE F01A          	movff	postinc2,___wmul@multiplier
 13349  0014B4  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 13350  0014B8  EE20 F013          	lfsr	2,19
 13351  0014BC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13352  0014BE  26D9               	addwf	fsr2l,f,c
 13353  0014C0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13354  0014C2  22DA               	addwfc	fsr2h,f,c
 13355  0014C4  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 13356  0014C8  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 13357  0014CC  EC11  F02F         	call	___wmul	;wreg free
 13358  0014D0  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 13359  0014D4  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 13360  0014D8  EE20 F015          	lfsr	2,21
 13361  0014DC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13362  0014DE  26D9               	addwf	fsr2l,f,c
 13363  0014E0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13364  0014E2  22DA               	addwfc	fsr2h,f,c
 13365  0014E4  CFDE F022          	movff	postinc2,___lwdiv@divisor
 13366  0014E8  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 13367  0014EC  EC95  F02B         	call	___lwdiv	;wreg free
 13368  0014F0  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13369  0014F2  2620               	addwf	?___lwdiv^0,f,c
 13370  0014F4  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13371  0014F6  2221               	addwfc	(?___lwdiv+1)^0,f,c
 13372  0014F8  0EFF               	movlw	255
 13373  0014FA  2420               	addwf	?___lwdiv^0,w,c
 13374  0014FC  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 13375  0014FE  0EFF               	movlw	255
 13376  001500  2021               	addwfc	(?___lwdiv+1)^0,w,c
 13377  001502  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 13378  001504                     
 13379                           ;libraries/lcd_highlevel.c: 336:     y1 = slider->posY + 2;
 13380  001504  EE20 F002          	lfsr	2,2
 13381  001508  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13382  00150A  26D9               	addwf	fsr2l,f,c
 13383  00150C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13384  00150E  22DA               	addwfc	fsr2h,f,c
 13385  001510  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13386  001514  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13387  001518  0E02               	movlw	2
 13388  00151A  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13389  00151C  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 13390  00151E  0E00               	movlw	0
 13391  001520  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13392  001522  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 13393  001524                     
 13394                           ;libraries/lcd_highlevel.c: 337:     y2 = slider->posY + slider->height - 2;
 13395  001524  EE20 F006          	lfsr	2,6
 13396  001528  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13397  00152A  26D9               	addwf	fsr2l,f,c
 13398  00152C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13399  00152E  22DA               	addwfc	fsr2h,f,c
 13400  001530  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13401  001534  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13402  001538  EE20 F002          	lfsr	2,2
 13403  00153C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13404  00153E  26D9               	addwf	fsr2l,f,c
 13405  001540  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13406  001542  22DA               	addwfc	fsr2h,f,c
 13407  001544  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 13408  001548  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 13409  00154C  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13410  00154E  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 13411  001550  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13412  001552  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 13413  001554  0EFE               	movlw	254
 13414  001556  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 13415  001558  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 13416  00155A  0EFF               	movlw	255
 13417  00155C  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 13418  00155E  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 13419  001560                     l8676:
 13420                           
 13421                           ;libraries/lcd_highlevel.c: 339:   LCD_DrawRect(x1,
 13422  001560  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 13423  001564  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 13424  001568  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 13425  00156C  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 13426  001570  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 13427  001574  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 13428  001578  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 13429  00157C  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 13430  001580  0E01               	movlw	1
 13431  001582  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13432  001584  EE20 F00A          	lfsr	2,10
 13433  001588  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13434  00158A  26D9               	addwf	fsr2l,f,c
 13435  00158C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13436  00158E  22DA               	addwfc	fsr2h,f,c
 13437  001590  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 13438  001594  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 13439  001598  EC02  F014         	call	_LCD_DrawRect	;wreg free
 13440  00159C                     
 13441                           ;libraries/lcd_highlevel.c: 344:   slider->oldValue = slider->value;
 13442  00159C  EE20 F011          	lfsr	2,17
 13443  0015A0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13444  0015A2  26D9               	addwf	fsr2l,f,c
 13445  0015A4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13446  0015A6  22DA               	addwfc	fsr2h,f,c
 13447  0015A8  EE10 F013          	lfsr	1,19
 13448  0015AC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13449  0015AE  26E1               	addwf	fsr1l,f,c
 13450  0015B0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13451  0015B2  22E2               	addwfc	fsr1h,f,c
 13452  0015B4  CFDE FFE6          	movff	postinc2,postinc1
 13453  0015B8  CFDD FFE5          	movff	postdec2,postdec1
 13454  0015BC                     
 13455                           ;libraries/lcd_highlevel.c: 347:   if(slider->cursorWidth == 0)
 13456  0015BC  EE20 F00E          	lfsr	2,14
 13457  0015C0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13458  0015C2  26D9               	addwf	fsr2l,f,c
 13459  0015C4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13460  0015C6  22DA               	addwfc	fsr2h,f,c
 13461  0015C8  50DE               	movf	postinc2,w,c
 13462  0015CA  10DE               	iorwf	postinc2,w,c
 13463  0015CC  A4D8               	btfss	status,2,c
 13464  0015CE  EFEB  F00A         	goto	u5971
 13465  0015D2  EFED  F00A         	goto	u5970
 13466  0015D6                     u5971:
 13467  0015D6  EF63  F00B         	goto	l8690
 13468  0015DA                     u5970:
 13469  0015DA                     
 13470                           ;libraries/lcd_highlevel.c: 348:   {;libraries/lcd_highlevel.c: 349:     x1 = slider->po
      +                          sX + 1;
 13471  0015DA  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 13472  0015DE  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 13473  0015E2  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13474  0015E6  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13475  0015EA  0E01               	movlw	1
 13476  0015EC  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13477  0015EE  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 13478  0015F0  0E00               	movlw	0
 13479  0015F2  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13480  0015F4  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 13481  0015F6                     
 13482                           ;libraries/lcd_highlevel.c: 350:     x2 = slider->posX - 1 + ((slider->width * slider->v
      +                          alue)/ slider->steps);
 13483  0015F6  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 13484  0015FA  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 13485  0015FE  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13486  001602  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13487  001606  EE20 F004          	lfsr	2,4
 13488  00160A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13489  00160C  26D9               	addwf	fsr2l,f,c
 13490  00160E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13491  001610  22DA               	addwfc	fsr2h,f,c
 13492  001612  CFDE F01A          	movff	postinc2,___wmul@multiplier
 13493  001616  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 13494  00161A  EE20 F011          	lfsr	2,17
 13495  00161E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13496  001620  26D9               	addwf	fsr2l,f,c
 13497  001622  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13498  001624  22DA               	addwfc	fsr2h,f,c
 13499  001626  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 13500  00162A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 13501  00162E  EC11  F02F         	call	___wmul	;wreg free
 13502  001632  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 13503  001636  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 13504  00163A  EE20 F015          	lfsr	2,21
 13505  00163E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13506  001640  26D9               	addwf	fsr2l,f,c
 13507  001642  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13508  001644  22DA               	addwfc	fsr2h,f,c
 13509  001646  CFDE F022          	movff	postinc2,___lwdiv@divisor
 13510  00164A  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 13511  00164E  EC95  F02B         	call	___lwdiv	;wreg free
 13512  001652  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13513  001654  2620               	addwf	?___lwdiv^0,f,c
 13514  001656  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13515  001658  2221               	addwfc	(?___lwdiv+1)^0,f,c
 13516  00165A  0EFF               	movlw	255
 13517  00165C  2420               	addwf	?___lwdiv^0,w,c
 13518  00165E  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 13519  001660  0EFF               	movlw	255
 13520  001662  2021               	addwfc	(?___lwdiv+1)^0,w,c
 13521  001664  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 13522  001666                     
 13523                           ;libraries/lcd_highlevel.c: 351:     y1 = slider->posY + 2;
 13524  001666  EE20 F002          	lfsr	2,2
 13525  00166A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13526  00166C  26D9               	addwf	fsr2l,f,c
 13527  00166E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13528  001670  22DA               	addwfc	fsr2h,f,c
 13529  001672  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13530  001676  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13531  00167A  0E02               	movlw	2
 13532  00167C  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13533  00167E  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 13534  001680  0E00               	movlw	0
 13535  001682  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13536  001684  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 13537  001686                     
 13538                           ;libraries/lcd_highlevel.c: 352:     y2 = slider->posY + slider->height - 2;
 13539  001686  EE20 F006          	lfsr	2,6
 13540  00168A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13541  00168C  26D9               	addwf	fsr2l,f,c
 13542  00168E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13543  001690  22DA               	addwfc	fsr2h,f,c
 13544  001692  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13545  001696  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13546  00169A  EE20 F002          	lfsr	2,2
 13547  00169E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13548  0016A0  26D9               	addwf	fsr2l,f,c
 13549  0016A2  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13550  0016A4  22DA               	addwfc	fsr2h,f,c
 13551  0016A6  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 13552  0016AA  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 13553  0016AE  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13554  0016B0  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 13555  0016B2  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13556  0016B4  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 13557  0016B6  0EFE               	movlw	254
 13558  0016B8  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 13559  0016BA  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 13560  0016BC  0EFF               	movlw	255
 13561  0016BE  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 13562  0016C0  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 13563                           
 13564                           ;libraries/lcd_highlevel.c: 353:   }
 13565  0016C2  EFED  F00B         	goto	l8698
 13566  0016C6                     l8690:
 13567                           
 13568                           ;libraries/lcd_highlevel.c: 357:   {;libraries/lcd_highlevel.c: 358:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->value)/ slider->steps);
 13569  0016C6  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 13570  0016CA  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 13571  0016CE  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13572  0016D2  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13573  0016D6  EE20 F00E          	lfsr	2,14
 13574  0016DA  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13575  0016DC  26D9               	addwf	fsr2l,f,c
 13576  0016DE  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13577  0016E0  22DA               	addwfc	fsr2h,f,c
 13578  0016E2  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 13579  0016E6  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 13580  0016EA  EE20 F004          	lfsr	2,4
 13581  0016EE  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13582  0016F0  26D9               	addwf	fsr2l,f,c
 13583  0016F2  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13584  0016F4  22DA               	addwfc	fsr2h,f,c
 13585  0016F6  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 13586  0016FA  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 13587  0016FE  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 13588  001700  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 13589  001702  6E1A               	movwf	___wmul@multiplier^0,c
 13590  001704  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 13591  001706  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 13592  001708  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 13593  00170A  EE20 F011          	lfsr	2,17
 13594  00170E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13595  001710  26D9               	addwf	fsr2l,f,c
 13596  001712  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13597  001714  22DA               	addwfc	fsr2h,f,c
 13598  001716  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 13599  00171A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 13600  00171E  EC11  F02F         	call	___wmul	;wreg free
 13601  001722  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 13602  001726  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 13603  00172A  EE20 F015          	lfsr	2,21
 13604  00172E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13605  001730  26D9               	addwf	fsr2l,f,c
 13606  001732  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13607  001734  22DA               	addwfc	fsr2h,f,c
 13608  001736  CFDE F022          	movff	postinc2,___lwdiv@divisor
 13609  00173A  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 13610  00173E  EC95  F02B         	call	___lwdiv	;wreg free
 13611  001742  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13612  001744  2620               	addwf	?___lwdiv^0,f,c
 13613  001746  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13614  001748  2221               	addwfc	(?___lwdiv+1)^0,f,c
 13615  00174A  0E01               	movlw	1
 13616  00174C  2420               	addwf	?___lwdiv^0,w,c
 13617  00174E  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 13618  001750  0E00               	movlw	0
 13619  001752  2021               	addwfc	(?___lwdiv+1)^0,w,c
 13620  001754  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 13621  001756                     
 13622                           ;libraries/lcd_highlevel.c: 359:     x2 = x1 + slider->cursorWidth-2;
 13623  001756  EE20 F00E          	lfsr	2,14
 13624  00175A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13625  00175C  26D9               	addwf	fsr2l,f,c
 13626  00175E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13627  001760  22DA               	addwfc	fsr2h,f,c
 13628  001762  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13629  001766  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13630  00176A  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 13631  00176C  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 13632  00176E  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 13633  001770  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 13634  001772  0EFE               	movlw	254
 13635  001774  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13636  001776  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 13637  001778  0EFF               	movlw	255
 13638  00177A  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13639  00177C  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 13640  00177E                     
 13641                           ;libraries/lcd_highlevel.c: 360:     y1 = slider->posY + 2;
 13642  00177E  EE20 F002          	lfsr	2,2
 13643  001782  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13644  001784  26D9               	addwf	fsr2l,f,c
 13645  001786  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13646  001788  22DA               	addwfc	fsr2h,f,c
 13647  00178A  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13648  00178E  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13649  001792  0E02               	movlw	2
 13650  001794  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13651  001796  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 13652  001798  0E00               	movlw	0
 13653  00179A  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13654  00179C  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 13655  00179E                     
 13656                           ;libraries/lcd_highlevel.c: 361:     y2 = slider->posY + slider->height - 2;
 13657  00179E  EE20 F006          	lfsr	2,6
 13658  0017A2  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13659  0017A4  26D9               	addwf	fsr2l,f,c
 13660  0017A6  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13661  0017A8  22DA               	addwfc	fsr2h,f,c
 13662  0017AA  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13663  0017AE  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13664  0017B2  EE20 F002          	lfsr	2,2
 13665  0017B6  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13666  0017B8  26D9               	addwf	fsr2l,f,c
 13667  0017BA  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13668  0017BC  22DA               	addwfc	fsr2h,f,c
 13669  0017BE  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 13670  0017C2  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 13671  0017C6  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13672  0017C8  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 13673  0017CA  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13674  0017CC  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 13675  0017CE  0EFE               	movlw	254
 13676  0017D0  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 13677  0017D2  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 13678  0017D4  0EFF               	movlw	255
 13679  0017D6  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 13680  0017D8  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 13681  0017DA                     l8698:
 13682                           
 13683                           ;libraries/lcd_highlevel.c: 363:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->sldColor);
 13684  0017DA  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 13685  0017DE  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 13686  0017E2  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 13687  0017E6  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 13688  0017EA  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 13689  0017EE  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 13690  0017F2  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 13691  0017F6  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 13692  0017FA  0E01               	movlw	1
 13693  0017FC  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13694  0017FE  EE20 F008          	lfsr	2,8
 13695  001802  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13696  001804  26D9               	addwf	fsr2l,f,c
 13697  001806  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13698  001808  22DA               	addwfc	fsr2h,f,c
 13699  00180A  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 13700  00180E  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 13701  001812  EC02  F014         	call	_LCD_DrawRect	;wreg free
 13702  001816  0012               	return		;funcret
 13703  001818                     __end_of_LCD_SliderUpdate:
 13704                           	callstack 0
 13705                           
 13706 ;; *************** function _Menu_inGameDraw *****************
 13707 ;; Defined at:
 13708 ;;		line 19 in file "class/menu.c"
 13709 ;; Parameters:    Size  Location     Type
 13710 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 13711 ;;		 -> g1(201), 
 13712 ;; Auto vars:     Size  Location     Type
 13713 ;;		None
 13714 ;; Return value:  Size  Location     Type
 13715 ;;                  1    wreg      void 
 13716 ;; Registers used:
 13717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13718 ;; Tracked objects:
 13719 ;;		On entry : 0/0
 13720 ;;		On exit  : 0/0
 13721 ;;		Unchanged: 0/0
 13722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13723 ;;      Params:         0       2       0       0       0       0       0
 13724 ;;      Locals:         0       0       0       0       0       0       0
 13725 ;;      Temps:          0       0       0       0       0       0       0
 13726 ;;      Totals:         0       2       0       0       0       0       0
 13727 ;;Total ram usage:        2 bytes
 13728 ;; Hardware stack levels used: 1
 13729 ;; Hardware stack levels required when called: 7
 13730 ;; This function calls:
 13731 ;;		_Ball_draw
 13732 ;;		_LCD_ButtonDraw
 13733 ;;		_LCD_Fill
 13734 ;;		_Paddle_draw
 13735 ;; This function is called by:
 13736 ;;		_displayController
 13737 ;; This function uses a non-reentrant model
 13738 ;;
 13739                           
 13740                           	psect	text57
 13741  00587C                     __ptext57:
 13742                           	callstack 0
 13743  00587C                     _Menu_inGameDraw:
 13744                           	callstack 19
 13745  00587C                     
 13746                           ;class/menu.c: 19: void Menu_inGameDraw(GameParameters* g);class/menu.c: 20: {;class/men
      +                          u.c: 21:     LCD_Fill(0b1111111111111111);
 13747  00587C  0EFF               	movlw	255
 13748  00587E  6E13               	movwf	(LCD_Fill@color+1)^0,c
 13749  005880  6812               	setf	LCD_Fill@color^0,c
 13750  005882  EC03  F027         	call	_LCD_Fill	;wreg free
 13751  005886                     
 13752                           ;class/menu.c: 22:     LCD_ButtonDraw(&(g->btnRight));
 13753  005886  0E80               	movlw	128
 13754  005888  0100               	movlb	0	; () banked
 13755  00588A  259C               	addwf	Menu_inGameDraw@g& (0+255),w,b
 13756  00588C  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 13757  00588E  0E00               	movlw	0
 13758  005890  219D               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 13759  005892  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 13760  005894  EC2A  F007         	call	_LCD_ButtonDraw	;wreg free
 13761  005898                     
 13762                           ;class/menu.c: 23:     LCD_ButtonDraw(&(g->btnLeft));
 13763  005898  0E68               	movlw	104
 13764  00589A  0100               	movlb	0	; () banked
 13765  00589C  259C               	addwf	Menu_inGameDraw@g& (0+255),w,b
 13766  00589E  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 13767  0058A0  0E00               	movlw	0
 13768  0058A2  219D               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 13769  0058A4  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 13770  0058A6  EC2A  F007         	call	_LCD_ButtonDraw	;wreg free
 13771  0058AA                     
 13772                           ;class/menu.c: 24:     Paddle_draw(&g->p1);
 13773  0058AA  0EB9               	movlw	185
 13774  0058AC  0100               	movlb	0	; () banked
 13775  0058AE  259C               	addwf	Menu_inGameDraw@g& (0+255),w,b
 13776  0058B0  6E25               	movwf	Paddle_draw@p^0,c
 13777  0058B2  0E00               	movlw	0
 13778  0058B4  219D               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 13779  0058B6  6E26               	movwf	(Paddle_draw@p+1)^0,c
 13780  0058B8  ECE0  F02A         	call	_Paddle_draw	;wreg free
 13781  0058BC                     
 13782                           ;class/menu.c: 25:     Paddle_draw(&g->p2);
 13783  0058BC  0EBF               	movlw	191
 13784  0058BE  0100               	movlb	0	; () banked
 13785  0058C0  259C               	addwf	Menu_inGameDraw@g& (0+255),w,b
 13786  0058C2  6E25               	movwf	Paddle_draw@p^0,c
 13787  0058C4  0E00               	movlw	0
 13788  0058C6  219D               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 13789  0058C8  6E26               	movwf	(Paddle_draw@p+1)^0,c
 13790  0058CA  ECE0  F02A         	call	_Paddle_draw	;wreg free
 13791  0058CE                     
 13792                           ;class/menu.c: 26:     Ball_draw(&g->b);
 13793  0058CE  0EB1               	movlw	177
 13794  0058D0  0100               	movlb	0	; () banked
 13795  0058D2  259C               	addwf	Menu_inGameDraw@g& (0+255),w,b
 13796  0058D4  6E25               	movwf	Ball_draw@b^0,c
 13797  0058D6  0E00               	movlw	0
 13798  0058D8  219D               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 13799  0058DA  6E26               	movwf	(Ball_draw@b+1)^0,c
 13800  0058DC  EC16  F02A         	call	_Ball_draw	;wreg free
 13801  0058E0  0012               	return		;funcret
 13802  0058E2                     __end_of_Menu_inGameDraw:
 13803                           	callstack 0
 13804                           
 13805 ;; *************** function _Paddle_draw *****************
 13806 ;; Defined at:
 13807 ;;		line 43 in file "class/paddle.c"
 13808 ;; Parameters:    Size  Location     Type
 13809 ;;  p               2   36[COMRAM] PTR struct Paddle
 13810 ;;		 -> g1(201), 
 13811 ;; Auto vars:     Size  Location     Type
 13812 ;;		None
 13813 ;; Return value:  Size  Location     Type
 13814 ;;                  1    wreg      void 
 13815 ;; Registers used:
 13816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13817 ;; Tracked objects:
 13818 ;;		On entry : 0/0
 13819 ;;		On exit  : 0/0
 13820 ;;		Unchanged: 0/0
 13821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13822 ;;      Params:         2       0       0       0       0       0       0
 13823 ;;      Locals:         0       0       0       0       0       0       0
 13824 ;;      Temps:          4       0       0       0       0       0       0
 13825 ;;      Totals:         6       0       0       0       0       0       0
 13826 ;;Total ram usage:        6 bytes
 13827 ;; Hardware stack levels used: 1
 13828 ;; Hardware stack levels required when called: 5
 13829 ;; This function calls:
 13830 ;;		_LCD_DrawRect
 13831 ;; This function is called by:
 13832 ;;		_Menu_inGameDraw
 13833 ;;		_gameControllerSM
 13834 ;;		_moovePaddle
 13835 ;; This function uses a non-reentrant model
 13836 ;;
 13837                           
 13838                           	psect	text58
 13839  0055C0                     __ptext58:
 13840                           	callstack 0
 13841  0055C0                     _Paddle_draw:
 13842                           	callstack 20
 13843  0055C0                     
 13844                           ;class/paddle.c: 43: void Paddle_draw(struct Paddle* p);class/paddle.c: 44: {;class/padd
      +                          le.c: 46:     LCD_DrawRect(p->x,p->y,p->x+50,p->y+20,1,p->color);
 13845  0055C0  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 13846  0055C4  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 13847  0055C8  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
 13848  0055CC  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
 13849  0055D0  EE20 F002          	lfsr	2,2
 13850  0055D4  5025               	movf	Paddle_draw@p^0,w,c
 13851  0055D6  26D9               	addwf	fsr2l,f,c
 13852  0055D8  5026               	movf	(Paddle_draw@p+1)^0,w,c
 13853  0055DA  22DA               	addwfc	fsr2h,f,c
 13854  0055DC  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
 13855  0055E0  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
 13856  0055E4  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 13857  0055E8  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 13858  0055EC  CFDE F027          	movff	postinc2,??_Paddle_draw
 13859  0055F0  CFDD F028          	movff	postdec2,??_Paddle_draw+1
 13860  0055F4  0E32               	movlw	50
 13861  0055F6  2427               	addwf	??_Paddle_draw^0,w,c
 13862  0055F8  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13863  0055FA  0E00               	movlw	0
 13864  0055FC  2028               	addwfc	(??_Paddle_draw+1)^0,w,c
 13865  0055FE  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13866  005600  EE20 F002          	lfsr	2,2
 13867  005604  5025               	movf	Paddle_draw@p^0,w,c
 13868  005606  26D9               	addwf	fsr2l,f,c
 13869  005608  5026               	movf	(Paddle_draw@p+1)^0,w,c
 13870  00560A  22DA               	addwfc	fsr2h,f,c
 13871  00560C  CFDE F029          	movff	postinc2,??_Paddle_draw+2
 13872  005610  CFDD F02A          	movff	postdec2,??_Paddle_draw+3
 13873  005614  0E14               	movlw	20
 13874  005616  2429               	addwf	(??_Paddle_draw+2)^0,w,c
 13875  005618  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13876  00561A  0E00               	movlw	0
 13877  00561C  202A               	addwfc	(??_Paddle_draw+3)^0,w,c
 13878  00561E  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13879  005620  0E01               	movlw	1
 13880  005622  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13881  005624  EE20 F004          	lfsr	2,4
 13882  005628  5025               	movf	Paddle_draw@p^0,w,c
 13883  00562A  26D9               	addwf	fsr2l,f,c
 13884  00562C  5026               	movf	(Paddle_draw@p+1)^0,w,c
 13885  00562E  22DA               	addwfc	fsr2h,f,c
 13886  005630  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 13887  005634  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 13888  005638  EC02  F014         	call	_LCD_DrawRect	;wreg free
 13889  00563C  0012               	return		;funcret
 13890  00563E                     __end_of_Paddle_draw:
 13891                           	callstack 0
 13892                           
 13893 ;; *************** function _LCD_Fill *****************
 13894 ;; Defined at:
 13895 ;;		line 218 in file "libraries/lcd_highlevel.c"
 13896 ;; Parameters:    Size  Location     Type
 13897 ;;  color           2   17[COMRAM] unsigned short 
 13898 ;; Auto vars:     Size  Location     Type
 13899 ;;  page            2   23[COMRAM] unsigned short 
 13900 ;;  column          2   21[COMRAM] unsigned short 
 13901 ;;  colorL          1   20[COMRAM] unsigned char 
 13902 ;;  colorH          1   19[COMRAM] unsigned char 
 13903 ;; Return value:  Size  Location     Type
 13904 ;;                  1    wreg      void 
 13905 ;; Registers used:
 13906 ;;		wreg, status,2, status,0
 13907 ;; Tracked objects:
 13908 ;;		On entry : 0/0
 13909 ;;		On exit  : 0/0
 13910 ;;		Unchanged: 0/0
 13911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13912 ;;      Params:         2       0       0       0       0       0       0
 13913 ;;      Locals:         6       0       0       0       0       0       0
 13914 ;;      Temps:          0       0       0       0       0       0       0
 13915 ;;      Totals:         8       0       0       0       0       0       0
 13916 ;;Total ram usage:        8 bytes
 13917 ;; Hardware stack levels used: 1
 13918 ;; Hardware stack levels required when called: 4
 13919 ;; This function calls:
 13920 ;;		Nothing
 13921 ;; This function is called by:
 13922 ;;		_Factory_init
 13923 ;;		_Menu_welcomeDraw
 13924 ;;		_Menu_parametersDraw
 13925 ;;		_Menu_inGameDraw
 13926 ;; This function uses a non-reentrant model
 13927 ;;
 13928                           
 13929                           	psect	text59
 13930  004E06                     __ptext59:
 13931                           	callstack 0
 13932  004E06                     _LCD_Fill:
 13933                           	callstack 21
 13934  004E06                     
 13935                           ;libraries/lcd_highlevel.c: 218: void LCD_Fill(uint16_t color);libraries/lcd_highlevel.c
      +                          : 219: {;libraries/lcd_highlevel.c: 220:   uint16_t column;;libraries/lcd_highlevel.c: 2
      +                          21:   uint16_t page;;libraries/lcd_highlevel.c: 222:   uint8_t colorH, colorL;;libraries
      +                          /lcd_highlevel.c: 223:   colorH = color >> 8;
 13936  004E06  5013               	movf	(LCD_Fill@color+1)^0,w,c
 13937  004E08  6E14               	movwf	LCD_Fill@colorH^0,c
 13938  004E0A                     
 13939                           ;libraries/lcd_highlevel.c: 224:   colorL = color;
 13940  004E0A  C012  F015         	movff	LCD_Fill@color,LCD_Fill@colorL
 13941                           
 13942                           ;libraries/lcd_highlevel.c: 226:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13943  004E0E  0E2A               	movlw	42
 13944  004E10  6E80               	movwf	128,c	;volatile
 13945  004E12  988B               	bcf	3979,4,c	;volatile
 13946  004E14  968B               	bcf	3979,3,c	;volatile
 13947  004E16  868B               	bsf	3979,3,c	;volatile
 13948  004E18  888B               	bsf	3979,4,c	;volatile
 13949                           
 13950                           ;libraries/lcd_highlevel.c: 227:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 13951  004E1A  0E00               	movlw	0
 13952  004E1C  6E80               	movwf	128,c	;volatile
 13953  004E1E  968B               	bcf	3979,3,c	;volatile
 13954  004E20  868B               	bsf	3979,3,c	;volatile
 13955                           
 13956                           ;libraries/lcd_highlevel.c: 228:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 13957  004E22  0E00               	movlw	0
 13958  004E24  6E80               	movwf	128,c	;volatile
 13959  004E26  968B               	bcf	3979,3,c	;volatile
 13960  004E28  868B               	bsf	3979,3,c	;volatile
 13961                           
 13962                           ;libraries/lcd_highlevel.c: 229:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13963  004E2A  0E00               	movlw	0
 13964  004E2C  6E80               	movwf	128,c	;volatile
 13965  004E2E  968B               	bcf	3979,3,c	;volatile
 13966  004E30  868B               	bsf	3979,3,c	;volatile
 13967                           
 13968                           ;libraries/lcd_highlevel.c: 230:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 13969  004E32  0EEF               	movlw	239
 13970  004E34  6E80               	movwf	128,c	;volatile
 13971  004E36  968B               	bcf	3979,3,c	;volatile
 13972  004E38  868B               	bsf	3979,3,c	;volatile
 13973                           
 13974                           ;libraries/lcd_highlevel.c: 232:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13975  004E3A  0E2B               	movlw	43
 13976  004E3C  6E80               	movwf	128,c	;volatile
 13977  004E3E  988B               	bcf	3979,4,c	;volatile
 13978  004E40  968B               	bcf	3979,3,c	;volatile
 13979  004E42  868B               	bsf	3979,3,c	;volatile
 13980  004E44  888B               	bsf	3979,4,c	;volatile
 13981                           
 13982                           ;libraries/lcd_highlevel.c: 233:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 13983  004E46  0E00               	movlw	0
 13984  004E48  6E80               	movwf	128,c	;volatile
 13985  004E4A  968B               	bcf	3979,3,c	;volatile
 13986  004E4C  868B               	bsf	3979,3,c	;volatile
 13987                           
 13988                           ;libraries/lcd_highlevel.c: 234:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 13989  004E4E  0E00               	movlw	0
 13990  004E50  6E80               	movwf	128,c	;volatile
 13991  004E52  968B               	bcf	3979,3,c	;volatile
 13992  004E54  868B               	bsf	3979,3,c	;volatile
 13993                           
 13994                           ;libraries/lcd_highlevel.c: 235:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13995  004E56  0E01               	movlw	1
 13996  004E58  6E80               	movwf	128,c	;volatile
 13997  004E5A  968B               	bcf	3979,3,c	;volatile
 13998  004E5C  868B               	bsf	3979,3,c	;volatile
 13999                           
 14000                           ;libraries/lcd_highlevel.c: 236:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 14001  004E5E  0E3F               	movlw	63
 14002  004E60  6E80               	movwf	128,c	;volatile
 14003  004E62  968B               	bcf	3979,3,c	;volatile
 14004  004E64  868B               	bsf	3979,3,c	;volatile
 14005                           
 14006                           ;libraries/lcd_highlevel.c: 238:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14007  004E66  0E2C               	movlw	44
 14008  004E68  6E80               	movwf	128,c	;volatile
 14009  004E6A  988B               	bcf	3979,4,c	;volatile
 14010  004E6C  968B               	bcf	3979,3,c	;volatile
 14011  004E6E  868B               	bsf	3979,3,c	;volatile
 14012  004E70  888B               	bsf	3979,4,c	;volatile
 14013                           
 14014                           ;libraries/lcd_highlevel.c: 239:   for(column=0; column<320; column++)
 14015  004E72  0E00               	movlw	0
 14016  004E74  6E17               	movwf	(LCD_Fill@column+1)^0,c
 14017  004E76  0E00               	movlw	0
 14018  004E78  6E16               	movwf	LCD_Fill@column^0,c
 14019  004E7A                     l9152:
 14020                           
 14021                           ;libraries/lcd_highlevel.c: 240:   {;libraries/lcd_highlevel.c: 241:     for(page=0; pag
      +                          e<240; page++)
 14022  004E7A  0E00               	movlw	0
 14023  004E7C  6E19               	movwf	(LCD_Fill@page+1)^0,c
 14024  004E7E  0E00               	movlw	0
 14025  004E80  6E18               	movwf	LCD_Fill@page^0,c
 14026  004E82                     l212:
 14027                           
 14028                           ;libraries/lcd_highlevel.c: 242:     {;libraries/lcd_highlevel.c: 243:       PORTA = col
      +                          orH;
 14029  004E82  C014  FF80         	movff	LCD_Fill@colorH,3968	;volatile
 14030                           
 14031                           ;libraries/lcd_highlevel.c: 244:       LATC3 = 0;
 14032  004E86  968B               	bcf	3979,3,c	;volatile
 14033                           
 14034                           ;libraries/lcd_highlevel.c: 245:       LATC3 = 1;
 14035  004E88  868B               	bsf	3979,3,c	;volatile
 14036                           
 14037                           ;libraries/lcd_highlevel.c: 246:       PORTA = colorL;
 14038  004E8A  C015  FF80         	movff	LCD_Fill@colorL,3968	;volatile
 14039                           
 14040                           ;libraries/lcd_highlevel.c: 247:       LATC3 = 0;
 14041  004E8E  968B               	bcf	3979,3,c	;volatile
 14042                           
 14043                           ;libraries/lcd_highlevel.c: 248:       LATC3 = 1;
 14044  004E90  868B               	bsf	3979,3,c	;volatile
 14045  004E92                     
 14046                           ;libraries/lcd_highlevel.c: 249:     }
 14047  004E92  4A18               	infsnz	LCD_Fill@page^0,f,c
 14048  004E94  2A19               	incf	(LCD_Fill@page+1)^0,f,c
 14049  004E96  5019               	movf	(LCD_Fill@page+1)^0,w,c
 14050  004E98  E109               	bnz	u6280
 14051  004E9A  0EF0               	movlw	240
 14052  004E9C  5C18               	subwf	LCD_Fill@page^0,w,c
 14053  004E9E  A0D8               	btfss	status,0,c
 14054  004EA0  EF54  F027         	goto	u6281
 14055  004EA4  EF56  F027         	goto	u6280
 14056  004EA8                     u6281:
 14057  004EA8  EF41  F027         	goto	l212
 14058  004EAC                     u6280:
 14059  004EAC                     
 14060                           ;libraries/lcd_highlevel.c: 250:   }
 14061  004EAC  4A16               	infsnz	LCD_Fill@column^0,f,c
 14062  004EAE  2A17               	incf	(LCD_Fill@column+1)^0,f,c
 14063  004EB0  0E40               	movlw	64
 14064  004EB2  5C16               	subwf	LCD_Fill@column^0,w,c
 14065  004EB4  0E01               	movlw	1
 14066  004EB6  5817               	subwfb	(LCD_Fill@column+1)^0,w,c
 14067  004EB8  A0D8               	btfss	status,0,c
 14068  004EBA  EF61  F027         	goto	u6291
 14069  004EBE  EF63  F027         	goto	u6290
 14070  004EC2                     u6291:
 14071  004EC2  EF3D  F027         	goto	l9152
 14072  004EC6                     u6290:
 14073  004EC6  0012               	return		;funcret
 14074  004EC8                     __end_of_LCD_Fill:
 14075                           	callstack 0
 14076                           
 14077 ;; *************** function _LCD_ButtonDraw *****************
 14078 ;; Defined at:
 14079 ;;		line 462 in file "libraries/lcd_highlevel.c"
 14080 ;; Parameters:    Size  Location     Type
 14081 ;;  button          2   28[BANK0 ] PTR struct .
 14082 ;;		 -> g1(201), 
 14083 ;; Auto vars:     Size  Location     Type
 14084 ;;  bmpPtr          2   58[BANK0 ] PTR struct .
 14085 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
 14086 ;;		 -> STR_3(9), STR_2(11), 
 14087 ;;  yText           2   55[BANK0 ] unsigned short 
 14088 ;;  xText           2   53[BANK0 ] unsigned short 
 14089 ;;  y2              2   51[BANK0 ] unsigned short 
 14090 ;;  y1              2   49[BANK0 ] unsigned short 
 14091 ;;  x2              2   47[BANK0 ] unsigned short 
 14092 ;;  x1              2   45[BANK0 ] unsigned short 
 14093 ;;  width           2   43[BANK0 ] unsigned short 
 14094 ;;  i               1   57[BANK0 ] unsigned char 
 14095 ;;  tempChar        1   42[BANK0 ] unsigned char 
 14096 ;; Return value:  Size  Location     Type
 14097 ;;                  1    wreg      void 
 14098 ;; Registers used:
 14099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14100 ;; Tracked objects:
 14101 ;;		On entry : 0/0
 14102 ;;		On exit  : 0/0
 14103 ;;		Unchanged: 0/0
 14104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14105 ;;      Params:         0       2       0       0       0       0       0
 14106 ;;      Locals:         0      18       0       0       0       0       0
 14107 ;;      Temps:          0      12       0       0       0       0       0
 14108 ;;      Totals:         0      32       0       0       0       0       0
 14109 ;;Total ram usage:       32 bytes
 14110 ;; Hardware stack levels used: 1
 14111 ;; Hardware stack levels required when called: 6
 14112 ;; This function calls:
 14113 ;;		_LCD_Bitmap
 14114 ;;		_LCD_ButtonUpdate
 14115 ;;		_LCD_DrawRect
 14116 ;;		_LCD_DrawText
 14117 ;;		___awdiv
 14118 ;;		_strlen
 14119 ;; This function is called by:
 14120 ;;		_Menu_welcomeDraw
 14121 ;;		_Menu_parametersDraw
 14122 ;;		_Menu_inGameDraw
 14123 ;; This function uses a non-reentrant model
 14124 ;;
 14125                           
 14126                           	psect	text60
 14127  000E54                     __ptext60:
 14128                           	callstack 0
 14129  000E54                     _LCD_ButtonDraw:
 14130                           	callstack 19
 14131  000E54                     
 14132                           ;libraries/lcd_highlevel.c: 462: void LCD_ButtonDraw(btn_t * button);libraries/lcd_highl
      +                          evel.c: 463: {;libraries/lcd_highlevel.c: 464:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 465:   uint16_t xText,yText;;libraries/lcd_highlevel.c: 466:   uint8_t i, temp
      +                          Char;;libraries/lcd_highlevel.c: 467:   uint16_t width=0;
 14133  000E54  0E00               	movlw	0
 14134  000E56  0100               	movlb	0	; () banked
 14135  000E58  6F8C               	movwf	(LCD_ButtonDraw@width+1)& (0+255),b
 14136  000E5A  0E00               	movlw	0
 14137  000E5C  6F8B               	movwf	LCD_ButtonDraw@width& (0+255),b
 14138  000E5E                     
 14139                           ; BSR set to: 0
 14140                           ;libraries/lcd_highlevel.c: 468:   BMP_STRUCT *bmpPtr;;libraries/lcd_highlevel.c: 470:  
      +                           x1 = button->posX;
 14141  000E5E  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 14142  000E62  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 14143  000E66  CFDE F08D          	movff	postinc2,LCD_ButtonDraw@x1
 14144  000E6A  CFDD F08E          	movff	postdec2,LCD_ButtonDraw@x1+1
 14145  000E6E                     
 14146                           ; BSR set to: 0
 14147                           ;libraries/lcd_highlevel.c: 471:   x2 = button->posX + button->width;
 14148  000E6E  EE20 F004          	lfsr	2,4
 14149  000E72  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14150  000E74  26D9               	addwf	fsr2l,f,c
 14151  000E76  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14152  000E78  22DA               	addwfc	fsr2h,f,c
 14153  000E7A  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14154  000E7E  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14155  000E82  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 14156  000E86  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 14157  000E8A  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 14158  000E8E  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 14159  000E92  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 14160  000E94  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 14161  000E96  6F8F               	movwf	LCD_ButtonDraw@x2& (0+255),b
 14162  000E98  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 14163  000E9A  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 14164  000E9C  6F90               	movwf	(LCD_ButtonDraw@x2+1)& (0+255),b
 14165  000E9E                     
 14166                           ; BSR set to: 0
 14167                           ;libraries/lcd_highlevel.c: 472:   y1 = button->posY;
 14168  000E9E  EE20 F002          	lfsr	2,2
 14169  000EA2  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14170  000EA4  26D9               	addwf	fsr2l,f,c
 14171  000EA6  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14172  000EA8  22DA               	addwfc	fsr2h,f,c
 14173  000EAA  CFDE F091          	movff	postinc2,LCD_ButtonDraw@y1
 14174  000EAE  CFDD F092          	movff	postdec2,LCD_ButtonDraw@y1+1
 14175  000EB2                     
 14176                           ; BSR set to: 0
 14177                           ;libraries/lcd_highlevel.c: 473:   y2 = button->posY + button->height;
 14178  000EB2  EE20 F006          	lfsr	2,6
 14179  000EB6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14180  000EB8  26D9               	addwf	fsr2l,f,c
 14181  000EBA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14182  000EBC  22DA               	addwfc	fsr2h,f,c
 14183  000EBE  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14184  000EC2  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14185  000EC6  EE20 F002          	lfsr	2,2
 14186  000ECA  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14187  000ECC  26D9               	addwf	fsr2l,f,c
 14188  000ECE  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14189  000ED0  22DA               	addwfc	fsr2h,f,c
 14190  000ED2  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 14191  000ED6  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 14192  000EDA  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 14193  000EDC  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 14194  000EDE  6F93               	movwf	LCD_ButtonDraw@y2& (0+255),b
 14195  000EE0  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 14196  000EE2  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 14197  000EE4  6F94               	movwf	(LCD_ButtonDraw@y2+1)& (0+255),b
 14198  000EE6                     
 14199                           ; BSR set to: 0
 14200                           ;libraries/lcd_highlevel.c: 474:   if(button->bgColor != button->txtColor)
 14201  000EE6  EE20 F008          	lfsr	2,8
 14202  000EEA  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14203  000EEC  26D9               	addwf	fsr2l,f,c
 14204  000EEE  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14205  000EF0  22DA               	addwfc	fsr2h,f,c
 14206  000EF2  EE10 F00A          	lfsr	1,10
 14207  000EF6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14208  000EF8  26E1               	addwf	fsr1l,f,c
 14209  000EFA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14210  000EFC  22E2               	addwfc	fsr1h,f,c
 14211  000EFE  50DE               	movf	postinc2,w,c
 14212  000F00  18E6               	xorwf	postinc1,w,c
 14213  000F02  E109               	bnz	u6310
 14214  000F04  50DE               	movf	postinc2,w,c
 14215  000F06  18E6               	xorwf	postinc1,w,c
 14216  000F08  B4D8               	btfsc	status,2,c
 14217  000F0A  EF89  F007         	goto	u6311
 14218  000F0E  EF8B  F007         	goto	u6310
 14219  000F12                     u6311:
 14220  000F12  EFC8  F007         	goto	l9188
 14221  000F16                     u6310:
 14222  000F16                     
 14223                           ; BSR set to: 0
 14224                           ;libraries/lcd_highlevel.c: 475:   {;libraries/lcd_highlevel.c: 476:     LCD_DrawRect(x1
      +                          , y1, x2, y2, 1, button->bgColor);
 14225  000F16  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 14226  000F1A  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 14227  000F1E  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 14228  000F22  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 14229  000F26  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 14230  000F2A  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 14231  000F2E  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 14232  000F32  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 14233  000F36  0E01               	movlw	1
 14234  000F38  6E1A               	movwf	LCD_DrawRect@fill^0,c
 14235  000F3A  EE20 F00A          	lfsr	2,10
 14236  000F3E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14237  000F40  26D9               	addwf	fsr2l,f,c
 14238  000F42  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14239  000F44  22DA               	addwfc	fsr2h,f,c
 14240  000F46  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 14241  000F4A  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 14242  000F4E  EC02  F014         	call	_LCD_DrawRect	;wreg free
 14243                           
 14244                           ;libraries/lcd_highlevel.c: 477:     LCD_DrawRect(x1, y1, x2, y2, 0, button->txtColor);
 14245  000F52  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 14246  000F56  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 14247  000F5A  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 14248  000F5E  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 14249  000F62  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 14250  000F66  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 14251  000F6A  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 14252  000F6E  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 14253  000F72  0E00               	movlw	0
 14254  000F74  6E1A               	movwf	LCD_DrawRect@fill^0,c
 14255  000F76  0100               	movlb	0	; () banked
 14256  000F78  EE20 F008          	lfsr	2,8
 14257  000F7C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14258  000F7E  26D9               	addwf	fsr2l,f,c
 14259  000F80  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14260  000F82  22DA               	addwfc	fsr2h,f,c
 14261  000F84  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 14262  000F88  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 14263  000F8C  EC02  F014         	call	_LCD_DrawRect	;wreg free
 14264  000F90                     l9188:
 14265                           
 14266                           ;libraries/lcd_highlevel.c: 482:   if((button->text[0] == 'B')&&(button->text[1] == 'M')
      +                          )
 14267  000F90  0100               	movlb	0	; () banked
 14268  000F92  EE20 F00C          	lfsr	2,12
 14269  000F96  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14270  000F98  26D9               	addwf	fsr2l,f,c
 14271  000F9A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14272  000F9C  22DA               	addwfc	fsr2h,f,c
 14273  000F9E  CFDE FFF6          	movff	postinc2,tblptrl
 14274  000FA2  CFDD FFF7          	movff	postdec2,tblptrh
 14275  000FA6                     	if	0	;tblptru may be non-zero
 14276  000FA6                     	endif
 14277  000FA6                     	if	0	;tblptru may be non-zero
 14278  000FA6                     	endif
 14279  000FA6  0008               	tblrd		*
 14280  000FA8  50F5               	movf	tablat,w,c
 14281  000FAA  0A42               	xorlw	66
 14282  000FAC  A4D8               	btfss	status,2,c
 14283  000FAE  EFDB  F007         	goto	u6321
 14284  000FB2  EFDD  F007         	goto	u6320
 14285  000FB6                     u6321:
 14286  000FB6  EF8D  F008         	goto	l9200
 14287  000FBA                     u6320:
 14288  000FBA                     
 14289                           ; BSR set to: 0
 14290  000FBA  EE20 F00C          	lfsr	2,12
 14291  000FBE  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14292  000FC0  26D9               	addwf	fsr2l,f,c
 14293  000FC2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14294  000FC4  22DA               	addwfc	fsr2h,f,c
 14295  000FC6  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14296  000FCA  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14297  000FCE  0E01               	movlw	1
 14298  000FD0  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 14299  000FD2  0E00               	movlw	0
 14300  000FD4  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 14301  000FD6  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 14302  000FDA  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 14303  000FDE                     	if	0	;tblptru may be non-zero
 14304  000FDE                     	endif
 14305  000FDE                     	if	0	;tblptru may be non-zero
 14306  000FDE                     	endif
 14307  000FDE  0008               	tblrd		*
 14308  000FE0  50F5               	movf	tablat,w,c
 14309  000FE2  0A4D               	xorlw	77
 14310  000FE4  A4D8               	btfss	status,2,c
 14311  000FE6  EFF7  F007         	goto	u6331
 14312  000FEA  EFF9  F007         	goto	u6330
 14313  000FEE                     u6331:
 14314  000FEE  EF8D  F008         	goto	l9200
 14315  000FF2                     u6330:
 14316  000FF2                     
 14317                           ; BSR set to: 0
 14318                           ;libraries/lcd_highlevel.c: 483:   {;libraries/lcd_highlevel.c: 484:     bmpPtr = (BMP_S
      +                          TRUCT *)button->text;
 14319  000FF2  EE20 F00C          	lfsr	2,12
 14320  000FF6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14321  000FF8  26D9               	addwf	fsr2l,f,c
 14322  000FFA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14323  000FFC  22DA               	addwfc	fsr2h,f,c
 14324  000FFE  CFDE F09A          	movff	postinc2,LCD_ButtonDraw@bmpPtr
 14325  001002  CFDD F09B          	movff	postdec2,LCD_ButtonDraw@bmpPtr+1
 14326  001006                     
 14327                           ; BSR set to: 0
 14328                           ;libraries/lcd_highlevel.c: 485:     yText = button->height / 2 + button->posY - (bmpPtr
      +                          ->biHeight / 2);
 14329  001006  EE20 F002          	lfsr	2,2
 14330  00100A  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14331  00100C  26D9               	addwf	fsr2l,f,c
 14332  00100E  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14333  001010  22DA               	addwfc	fsr2h,f,c
 14334  001012  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14335  001016  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14336  00101A  0E16               	movlw	22
 14337  00101C  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 14338  00101E  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 14339  001020  0E00               	movlw	0
 14340  001022  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 14341  001024  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 14342  001026  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 14343  00102A  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 14344  00102E                     	if	0	;tblptru may be non-zero
 14345  00102E                     	endif
 14346  00102E                     	if	0	;tblptru may be non-zero
 14347  00102E                     	endif
 14348  00102E  0009               	tblrd		*+
 14349  001030  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 14350  001034  0009               	tblrd		*+
 14351  001036  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 14352  00103A  0009               	tblrd		*+
 14353  00103C  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 14354  001040  0009               	tblrd		*+
 14355  001042  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 14356  001046  90D8               	bcf	status,0,c
 14357  001048  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 14358  00104A  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 14359  00104C  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 14360  00104E  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 14361  001050  EE20 F006          	lfsr	2,6
 14362  001054  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14363  001056  26D9               	addwf	fsr2l,f,c
 14364  001058  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14365  00105A  22DA               	addwfc	fsr2h,f,c
 14366  00105C  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 14367  001060  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 14368  001064  90D8               	bcf	status,0,c
 14369  001066  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 14370  001068  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 14371  00106A  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 14372  00106C  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 14373  00106E  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 14374  001070  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 14375  001072  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 14376  001074  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 14377  001076  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 14378  001078  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 14379  00107A  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 14380  00107C  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 14381  00107E  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 14382  001080  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 14383  001082                     
 14384                           ; BSR set to: 0
 14385                           ;libraries/lcd_highlevel.c: 486:     xText = button->width / 2 + button->posX - (bmpPtr-
      +                          >biWidth / 2);
 14386  001082  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 14387  001086  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 14388  00108A  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14389  00108E  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14390  001092  0E12               	movlw	18
 14391  001094  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 14392  001096  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 14393  001098  0E00               	movlw	0
 14394  00109A  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 14395  00109C  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 14396  00109E  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 14397  0010A2  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 14398  0010A6                     	if	0	;tblptru may be non-zero
 14399  0010A6                     	endif
 14400  0010A6                     	if	0	;tblptru may be non-zero
 14401  0010A6                     	endif
 14402  0010A6  0009               	tblrd		*+
 14403  0010A8  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 14404  0010AC  0009               	tblrd		*+
 14405  0010AE  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 14406  0010B2  0009               	tblrd		*+
 14407  0010B4  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 14408  0010B8  0009               	tblrd		*+
 14409  0010BA  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 14410  0010BE  90D8               	bcf	status,0,c
 14411  0010C0  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 14412  0010C2  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 14413  0010C4  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 14414  0010C6  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 14415  0010C8  EE20 F004          	lfsr	2,4
 14416  0010CC  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14417  0010CE  26D9               	addwf	fsr2l,f,c
 14418  0010D0  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14419  0010D2  22DA               	addwfc	fsr2h,f,c
 14420  0010D4  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 14421  0010D8  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 14422  0010DC  90D8               	bcf	status,0,c
 14423  0010DE  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 14424  0010E0  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 14425  0010E2  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 14426  0010E4  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 14427  0010E6  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 14428  0010E8  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 14429  0010EA  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 14430  0010EC  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 14431  0010EE  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 14432  0010F0  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 14433  0010F2  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 14434  0010F4  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 14435  0010F6  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 14436  0010F8  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 14437  0010FA                     
 14438                           ; BSR set to: 0
 14439                           ;libraries/lcd_highlevel.c: 487:     LCD_Bitmap((const uint8_t *)bmpPtr,xText,yText);
 14440  0010FA  C09A  F027         	movff	LCD_ButtonDraw@bmpPtr,LCD_Bitmap@bmpPtr
 14441  0010FE  C09B  F028         	movff	LCD_ButtonDraw@bmpPtr+1,LCD_Bitmap@bmpPtr+1
 14442  001102  C095  F029         	movff	LCD_ButtonDraw@xText,LCD_Bitmap@posX
 14443  001106  C096  F02A         	movff	LCD_ButtonDraw@xText+1,LCD_Bitmap@posX+1
 14444  00110A  C097  F02B         	movff	LCD_ButtonDraw@yText,LCD_Bitmap@posY
 14445  00110E  C098  F02C         	movff	LCD_ButtonDraw@yText+1,LCD_Bitmap@posY+1
 14446  001112  EC2F  F004         	call	_LCD_Bitmap	;wreg free
 14447                           
 14448                           ;libraries/lcd_highlevel.c: 488:   }
 14449  001116  EF9A  F009         	goto	l9216
 14450  00111A                     l9200:
 14451                           
 14452                           ; BSR set to: 0
 14453                           ;libraries/lcd_highlevel.c: 493:   {;libraries/lcd_highlevel.c: 494:     yText = button-
      +                          >height / 2 + button->posY - (button->font->height / 2);
 14454  00111A  EE20 F002          	lfsr	2,2
 14455  00111E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14456  001120  26D9               	addwf	fsr2l,f,c
 14457  001122  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14458  001124  22DA               	addwfc	fsr2h,f,c
 14459  001126  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14460  00112A  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14461  00112E  EE20 F00E          	lfsr	2,14
 14462  001132  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14463  001134  26D9               	addwf	fsr2l,f,c
 14464  001136  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14465  001138  22DA               	addwfc	fsr2h,f,c
 14466  00113A  CFDE FFF6          	movff	postinc2,tblptrl
 14467  00113E  CFDD FFF7          	movff	postdec2,tblptrh
 14468  001142                     	if	0	;tblptru may be non-zero
 14469  001142                     	endif
 14470  001142                     	if	0	;tblptru may be non-zero
 14471  001142                     	endif
 14472  001142  0008               	tblrd		*
 14473  001144  50F5               	movf	tablat,w,c
 14474  001146  6E12               	movwf	___awdiv@dividend^0,c
 14475  001148  6A13               	clrf	(___awdiv@dividend+1)^0,c
 14476  00114A  0E00               	movlw	0
 14477  00114C  6E15               	movwf	(___awdiv@divisor+1)^0,c
 14478  00114E  0E02               	movlw	2
 14479  001150  6E14               	movwf	___awdiv@divisor^0,c
 14480  001152  EC40  F026         	call	___awdiv	;wreg free
 14481  001156  0100               	movlb	0	; () banked
 14482  001158  EE20 F006          	lfsr	2,6
 14483  00115C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14484  00115E  26D9               	addwf	fsr2l,f,c
 14485  001160  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14486  001162  22DA               	addwfc	fsr2h,f,c
 14487  001164  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 14488  001168  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 14489  00116C  90D8               	bcf	status,0,c
 14490  00116E  3181               	rrcf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 14491  001170  6F83               	movwf	(??_LCD_ButtonDraw+5)& (0+255),b
 14492  001172  3180               	rrcf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 14493  001174  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 14494  001176  5012               	movf	?___awdiv^0,w,c
 14495  001178  5F82               	subwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 14496  00117A  5013               	movf	(?___awdiv+1)^0,w,c
 14497  00117C  5B83               	subwfb	(??_LCD_ButtonDraw+5)& (0+255),f,b
 14498  00117E  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 14499  001180  2582               	addwf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 14500  001182  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 14501  001184  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 14502  001186  2183               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),w,b
 14503  001188  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 14504  00118A                     
 14505                           ; BSR set to: 0
 14506                           ;libraries/lcd_highlevel.c: 495:     for(i=0;i<strlen(button->text);i++)
 14507  00118A  0E00               	movlw	0
 14508  00118C  6F99               	movwf	LCD_ButtonDraw@i& (0+255),b
 14509  00118E  EF25  F009         	goto	l9210
 14510  001192                     l9204:
 14511                           
 14512                           ; BSR set to: 0
 14513                           ;libraries/lcd_highlevel.c: 496:     {;libraries/lcd_highlevel.c: 497:       tempChar = 
      +                          (button->text[i]) - button->font->start_char;
 14514  001192  EE20 F00E          	lfsr	2,14
 14515  001196  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14516  001198  26D9               	addwf	fsr2l,f,c
 14517  00119A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14518  00119C  22DA               	addwfc	fsr2h,f,c
 14519  00119E  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14520  0011A2  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14521  0011A6  0E01               	movlw	1
 14522  0011A8  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 14523  0011AA  0E00               	movlw	0
 14524  0011AC  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 14525  0011AE  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 14526  0011B2  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 14527  0011B6                     	if	0	;tblptru may be non-zero
 14528  0011B6                     	endif
 14529  0011B6                     	if	0	;tblptru may be non-zero
 14530  0011B6                     	endif
 14531  0011B6  0008               	tblrd		*
 14532  0011B8  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 14533  0011BC  EE20 F00C          	lfsr	2,12
 14534  0011C0  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14535  0011C2  26D9               	addwf	fsr2l,f,c
 14536  0011C4  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14537  0011C6  22DA               	addwfc	fsr2h,f,c
 14538  0011C8  CFDE F081          	movff	postinc2,??_LCD_ButtonDraw+3
 14539  0011CC  CFDD F082          	movff	postdec2,??_LCD_ButtonDraw+4
 14540  0011D0  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 14541  0011D2  2781               	addwf	(??_LCD_ButtonDraw+3)& (0+255),f,b
 14542  0011D4  0E00               	movlw	0
 14543  0011D6  2382               	addwfc	(??_LCD_ButtonDraw+4)& (0+255),f,b
 14544  0011D8  C081  FFF6         	movff	??_LCD_ButtonDraw+3,tblptrl
 14545  0011DC  C082  FFF7         	movff	??_LCD_ButtonDraw+4,tblptrh
 14546  0011E0                     	if	0	;tblptru may be non-zero
 14547  0011E0                     	endif
 14548  0011E0                     	if	0	;tblptru may be non-zero
 14549  0011E0                     	endif
 14550  0011E0  0008               	tblrd		*
 14551  0011E2  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 14552  0011E6  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 14553  0011E8  5D83               	subwf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 14554  0011EA  6F8A               	movwf	LCD_ButtonDraw@tempChar& (0+255),b
 14555  0011EC                     
 14556                           ; BSR set to: 0
 14557                           ;libraries/lcd_highlevel.c: 498:       width += button->font->descriptor[tempChar].width
      +                          +2;
 14558  0011EC  518A               	movf	LCD_ButtonDraw@tempChar& (0+255),w,b
 14559  0011EE  0D03               	mullw	3
 14560  0011F0  EE20 F00E          	lfsr	2,14
 14561  0011F4  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14562  0011F6  26D9               	addwf	fsr2l,f,c
 14563  0011F8  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14564  0011FA  22DA               	addwfc	fsr2h,f,c
 14565  0011FC  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14566  001200  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14567  001204  0E03               	movlw	3
 14568  001206  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 14569  001208  0E00               	movlw	0
 14570  00120A  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 14571  00120C  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 14572  001210  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 14573  001214                     	if	0	;tblptru may be non-zero
 14574  001214                     	endif
 14575  001214                     	if	0	;tblptru may be non-zero
 14576  001214                     	endif
 14577  001214  0009               	tblrd		*+
 14578  001216  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 14579  00121A  0009               	tblrd		*+
 14580  00121C  CFF5 F081          	movff	tablat,??_LCD_ButtonDraw+3
 14581  001220  50F3               	movf	243,w,c
 14582  001222  2780               	addwf	(??_LCD_ButtonDraw+2)& (0+255),f,b
 14583  001224  50F4               	movf	244,w,c
 14584  001226  2381               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),f,b
 14585  001228  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 14586  00122C  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 14587  001230                     	if	0	;tblptru may be non-zero
 14588  001230                     	endif
 14589  001230                     	if	0	;tblptru may be non-zero
 14590  001230                     	endif
 14591  001230  0008               	tblrd		*
 14592  001232  50F5               	movf	tablat,w,c
 14593  001234  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 14594  001236  6B83               	clrf	(??_LCD_ButtonDraw+5)& (0+255),b
 14595  001238  0E02               	movlw	2
 14596  00123A  2782               	addwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 14597  00123C  0E00               	movlw	0
 14598  00123E  2383               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),f,b
 14599  001240  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 14600  001242  278B               	addwf	LCD_ButtonDraw@width& (0+255),f,b
 14601  001244  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 14602  001246  238C               	addwfc	(LCD_ButtonDraw@width+1)& (0+255),f,b
 14603  001248                     
 14604                           ; BSR set to: 0
 14605                           ;libraries/lcd_highlevel.c: 499:     }
 14606  001248  2B99               	incf	LCD_ButtonDraw@i& (0+255),f,b
 14607  00124A                     l9210:
 14608                           
 14609                           ; BSR set to: 0
 14610  00124A  EE20 F00C          	lfsr	2,12
 14611  00124E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14612  001250  26D9               	addwf	fsr2l,f,c
 14613  001252  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14614  001254  22DA               	addwfc	fsr2h,f,c
 14615  001256  CFDE F012          	movff	postinc2,strlen@s
 14616  00125A  CFDD F013          	movff	postdec2,strlen@s+1
 14617  00125E  EC0B  F02E         	call	_strlen	;wreg free
 14618  001262  0100               	movlb	0	; () banked
 14619  001264  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 14620  001266  6F7E               	movwf	??_LCD_ButtonDraw& (0+255),b
 14621  001268  6B7F               	clrf	(??_LCD_ButtonDraw+1)& (0+255),b
 14622  00126A  5012               	movf	?_strlen^0,w,c
 14623  00126C  5D7E               	subwf	??_LCD_ButtonDraw& (0+255),w,b
 14624  00126E  5013               	movf	(?_strlen+1)^0,w,c
 14625  001270  597F               	subwfb	(??_LCD_ButtonDraw+1)& (0+255),w,b
 14626  001272  A0D8               	btfss	status,0,c
 14627  001274  EF3E  F009         	goto	u6341
 14628  001278  EF40  F009         	goto	u6340
 14629  00127C                     u6341:
 14630  00127C  EFC9  F008         	goto	l9204
 14631  001280                     u6340:
 14632  001280                     
 14633                           ; BSR set to: 0
 14634                           ;libraries/lcd_highlevel.c: 500:     xText = button->width / 2 + button->posX - (width /
      +                           2);
 14635  001280  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 14636  001284  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 14637  001288  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14638  00128C  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14639  001290  90D8               	bcf	status,0,c
 14640  001292  318C               	rrcf	(LCD_ButtonDraw@width+1)& (0+255),w,b
 14641  001294  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 14642  001296  318B               	rrcf	LCD_ButtonDraw@width& (0+255),w,b
 14643  001298  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 14644  00129A  EE20 F004          	lfsr	2,4
 14645  00129E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14646  0012A0  26D9               	addwf	fsr2l,f,c
 14647  0012A2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14648  0012A4  22DA               	addwfc	fsr2h,f,c
 14649  0012A6  CFDE F082          	movff	postinc2,??_LCD_ButtonDraw+4
 14650  0012AA  CFDD F083          	movff	postdec2,??_LCD_ButtonDraw+5
 14651  0012AE  90D8               	bcf	status,0,c
 14652  0012B0  3183               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 14653  0012B2  6F85               	movwf	(??_LCD_ButtonDraw+7)& (0+255),b
 14654  0012B4  3182               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 14655  0012B6  6F84               	movwf	(??_LCD_ButtonDraw+6)& (0+255),b
 14656  0012B8  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 14657  0012BA  5F84               	subwf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 14658  0012BC  5181               	movf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 14659  0012BE  5B85               	subwfb	(??_LCD_ButtonDraw+7)& (0+255),f,b
 14660  0012C0  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 14661  0012C2  2584               	addwf	(??_LCD_ButtonDraw+6)& (0+255),w,b
 14662  0012C4  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 14663  0012C6  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 14664  0012C8  2185               	addwfc	(??_LCD_ButtonDraw+7)& (0+255),w,b
 14665  0012CA  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 14666  0012CC                     
 14667                           ; BSR set to: 0
 14668                           ;libraries/lcd_highlevel.c: 501:     LCD_DrawText(button->text, button->font,A_LEFT,
 14669  0012CC  EE20 F00C          	lfsr	2,12
 14670  0012D0  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14671  0012D2  26D9               	addwf	fsr2l,f,c
 14672  0012D4  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14673  0012D6  22DA               	addwfc	fsr2h,f,c
 14674  0012D8  CFDE F020          	movff	postinc2,LCD_DrawText@msg
 14675  0012DC  CFDD F021          	movff	postdec2,LCD_DrawText@msg+1
 14676  0012E0  EE20 F00E          	lfsr	2,14
 14677  0012E4  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14678  0012E6  26D9               	addwf	fsr2l,f,c
 14679  0012E8  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14680  0012EA  22DA               	addwfc	fsr2h,f,c
 14681  0012EC  CFDE F022          	movff	postinc2,LCD_DrawText@font
 14682  0012F0  CFDD F023          	movff	postdec2,LCD_DrawText@font+1
 14683  0012F4  0E00               	movlw	0
 14684  0012F6  6E24               	movwf	LCD_DrawText@align^0,c
 14685  0012F8  C095  F025         	movff	LCD_ButtonDraw@xText,LCD_DrawText@posX
 14686  0012FC  C096  F026         	movff	LCD_ButtonDraw@xText+1,LCD_DrawText@posX+1
 14687  001300  C097  F027         	movff	LCD_ButtonDraw@yText,LCD_DrawText@posY
 14688  001304  C098  F028         	movff	LCD_ButtonDraw@yText+1,LCD_DrawText@posY+1
 14689  001308  EE20 F008          	lfsr	2,8
 14690  00130C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14691  00130E  26D9               	addwf	fsr2l,f,c
 14692  001310  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14693  001312  22DA               	addwfc	fsr2h,f,c
 14694  001314  CFDE F029          	movff	postinc2,LCD_DrawText@color
 14695  001318  CFDD F02A          	movff	postdec2,LCD_DrawText@color+1
 14696  00131C  EE20 F00A          	lfsr	2,10
 14697  001320  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14698  001322  26D9               	addwf	fsr2l,f,c
 14699  001324  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14700  001326  22DA               	addwfc	fsr2h,f,c
 14701  001328  CFDE F02B          	movff	postinc2,LCD_DrawText@bg_color
 14702  00132C  CFDD F02C          	movff	postdec2,LCD_DrawText@bg_color+1
 14703  001330  EC5B  F00E         	call	_LCD_DrawText	;wreg free
 14704  001334                     l9216:
 14705                           
 14706                           ;libraries/lcd_highlevel.c: 504:   LCD_ButtonUpdate(button);
 14707  001334  C07C  F025         	movff	LCD_ButtonDraw@button,LCD_ButtonUpdate@button
 14708  001338  C07D  F026         	movff	LCD_ButtonDraw@button+1,LCD_ButtonUpdate@button+1
 14709  00133C  EC9A  F019         	call	_LCD_ButtonUpdate	;wreg free
 14710  001340  0012               	return		;funcret
 14711  001342                     __end_of_LCD_ButtonDraw:
 14712                           	callstack 0
 14713                           
 14714 ;; *************** function _LCD_DrawText *****************
 14715 ;; Defined at:
 14716 ;;		line 713 in file "libraries/lcd_highlevel.c"
 14717 ;; Parameters:    Size  Location     Type
 14718 ;;  msg             2   31[COMRAM] PTR const unsigned char 
 14719 ;;		 -> touchScreenController@s(20), STR_9(11), STR_8(8), STR_7(4), 
 14720 ;;		 -> STR_6(4), STR_5(8), STR_4(9), STR_3(9), 
 14721 ;;		 -> STR_2(11), STR_1(10), 
 14722 ;;  font            2   33[COMRAM] PTR const struct .
 14723 ;;		 -> arialNarrow_12ptFontInfo(7), 
 14724 ;;  align           1   35[COMRAM] enum E355
 14725 ;;  posX            2   36[COMRAM] unsigned short 
 14726 ;;  posY            2   38[COMRAM] unsigned short 
 14727 ;;  color           2   40[COMRAM] unsigned short 
 14728 ;;  bg_color        2   42[COMRAM] unsigned short 
 14729 ;; Auto vars:     Size  Location     Type
 14730 ;;  posXEnd         2   58[COMRAM] unsigned short 
 14731 ;;  posYEnd         2   56[COMRAM] unsigned short 
 14732 ;;  yOffset         2   52[COMRAM] unsigned short 
 14733 ;;  offset          2   50[COMRAM] unsigned short 
 14734 ;;  width           1   64[COMRAM] unsigned char 
 14735 ;;  x               1   63[COMRAM] unsigned char 
 14736 ;;  tempChar        1   62[COMRAM] char 
 14737 ;;  i               1   61[COMRAM] unsigned char 
 14738 ;;  y               1   60[COMRAM] unsigned char 
 14739 ;;  fontPixel       1   55[COMRAM] unsigned char 
 14740 ;;  fontByte        1   54[COMRAM] unsigned char 
 14741 ;; Return value:  Size  Location     Type
 14742 ;;                  1    wreg      void 
 14743 ;; Registers used:
 14744 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14745 ;; Tracked objects:
 14746 ;;		On entry : 0/0
 14747 ;;		On exit  : 0/0
 14748 ;;		Unchanged: 0/0
 14749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14750 ;;      Params:        13       0       0       0       0       0       0
 14751 ;;      Locals:        15       0       0       0       0       0       0
 14752 ;;      Temps:          6       0       0       0       0       0       0
 14753 ;;      Totals:        34       0       0       0       0       0       0
 14754 ;;Total ram usage:       34 bytes
 14755 ;; Hardware stack levels used: 1
 14756 ;; Hardware stack levels required when called: 5
 14757 ;; This function calls:
 14758 ;;		___awdiv
 14759 ;;		___wmul
 14760 ;;		_strlen
 14761 ;; This function is called by:
 14762 ;;		_Factory_init
 14763 ;;		_Menu_welcomeDraw
 14764 ;;		_Menu_parametersDraw
 14765 ;;		_LCD_ButtonDraw
 14766 ;;		_touchScreenController
 14767 ;; This function uses a non-reentrant model
 14768 ;;
 14769                           
 14770                           	psect	text61
 14771  001CB6                     __ptext61:
 14772                           	callstack 0
 14773  001CB6                     _LCD_DrawText:
 14774                           	callstack 20
 14775  001CB6                     
 14776                           ;libraries/lcd_highlevel.c: 713: void LCD_DrawText(const uint8_t * msg,const FONT_INFO *
      +                           font, ALIGN align,;libraries/lcd_highlevel.c: 714:         uint16_t posX, uint16_t posY
      +                          , uint16_t color, uint16_t bg_color);libraries/lcd_highlevel.c: 715: {;libraries/lcd_hig
      +                          hlevel.c: 716:   uint8_t x,y,i;;libraries/lcd_highlevel.c: 717:   int8_t tempChar;;libra
      +                          ries/lcd_highlevel.c: 718:   uint16_t offset;;libraries/lcd_highlevel.c: 719:   uint8_t 
      +                          width=0;
 14777  001CB6  0E00               	movlw	0
 14778  001CB8  6E41               	movwf	LCD_DrawText@width^0,c
 14779                           
 14780                           ;libraries/lcd_highlevel.c: 720:   uint8_t fontByte,fontPixel;;libraries/lcd_highlevel.c
      +                          : 721:   uint16_t posYEnd, posXEnd, yOffset;;libraries/lcd_highlevel.c: 725:   for(i=0;i
      +                          <strlen(msg);i++)
 14781  001CBA  0E00               	movlw	0
 14782  001CBC  6E3E               	movwf	LCD_DrawText@i^0,c
 14783  001CBE  EFB0  F00E         	goto	l8488
 14784  001CC2                     l8482:
 14785                           
 14786                           ;libraries/lcd_highlevel.c: 726:   {;libraries/lcd_highlevel.c: 727:     tempChar = (msg
      +                          [i]) - font->start_char;
 14787  001CC2  0E01               	movlw	1
 14788  001CC4  2422               	addwf	LCD_DrawText@font^0,w,c
 14789  001CC6  6E2D               	movwf	??_LCD_DrawText^0,c
 14790  001CC8  0E00               	movlw	0
 14791  001CCA  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 14792  001CCC  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 14793  001CCE  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 14794  001CD2  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 14795  001CD6                     	if	0	;tblptru may be non-zero
 14796  001CD6                     	endif
 14797  001CD6                     	if	0	;tblptru may be non-zero
 14798  001CD6                     	endif
 14799  001CD6  0008               	tblrd		*
 14800  001CD8  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 14801  001CDC  503E               	movf	LCD_DrawText@i^0,w,c
 14802  001CDE  2420               	addwf	LCD_DrawText@msg^0,w,c
 14803  001CE0  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 14804  001CE2  0E00               	movlw	0
 14805  001CE4  2021               	addwfc	(LCD_DrawText@msg+1)^0,w,c
 14806  001CE6  6E31               	movwf	(??_LCD_DrawText+4)^0,c
 14807  001CE8  C030  FFF6         	movff	??_LCD_DrawText+3,tblptrl
 14808  001CEC  C031  FFF7         	movff	??_LCD_DrawText+4,tblptrh
 14809  001CF0  6AF8               	clrf	tblptru,c
 14810  001CF2  0E05               	movlw	(high __ramtop+-1)
 14811  001CF4  64F7               	cpfsgt	tblptrh,c
 14812  001CF6  D003               	bra	u5847
 14813  001CF8  0008               	tblrd		*
 14814  001CFA  50F5               	movf	tablat,w,c
 14815  001CFC  D005               	bra	u5840
 14816  001CFE                     u5847:
 14817  001CFE  CFF6 FFE1          	movff	tblptrl,fsr1l
 14818  001D02  CFF7 FFE2          	movff	tblptrh,fsr1h
 14819  001D06  50E7               	movf	indf1,w,c
 14820  001D08                     u5840:
 14821  001D08  6E32               	movwf	(??_LCD_DrawText+5)^0,c
 14822  001D0A  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 14823  001D0C  5C32               	subwf	(??_LCD_DrawText+5)^0,w,c
 14824  001D0E  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 14825  001D10                     
 14826                           ;libraries/lcd_highlevel.c: 728:     width += font->descriptor[tempChar].width+2;
 14827  001D10  503F               	movf	LCD_DrawText@tempChar^0,w,c
 14828  001D12  6E1A               	movwf	___wmul@multiplier^0,c
 14829  001D14  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 14830  001D16  BE1A               	btfsc	___wmul@multiplier^0,7,c
 14831  001D18  061B               	decf	(___wmul@multiplier+1)^0,f,c
 14832  001D1A  0E00               	movlw	0
 14833  001D1C  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 14834  001D1E  0E03               	movlw	3
 14835  001D20  6E1C               	movwf	___wmul@multiplicand^0,c
 14836  001D22  EC11  F02F         	call	___wmul	;wreg free
 14837  001D26  0E03               	movlw	3
 14838  001D28  2422               	addwf	LCD_DrawText@font^0,w,c
 14839  001D2A  6E2D               	movwf	??_LCD_DrawText^0,c
 14840  001D2C  0E00               	movlw	0
 14841  001D2E  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 14842  001D30  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 14843  001D32  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 14844  001D36  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 14845  001D3A                     	if	0	;tblptru may be non-zero
 14846  001D3A                     	endif
 14847  001D3A                     	if	0	;tblptru may be non-zero
 14848  001D3A                     	endif
 14849  001D3A  0009               	tblrd		*+
 14850  001D3C  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 14851  001D40  0009               	tblrd		*+
 14852  001D42  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 14853  001D46  501A               	movf	?___wmul^0,w,c
 14854  001D48  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 14855  001D4A  501B               	movf	(?___wmul+1)^0,w,c
 14856  001D4C  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 14857  001D4E  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 14858  001D52  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 14859  001D56                     	if	0	;tblptru may be non-zero
 14860  001D56                     	endif
 14861  001D56                     	if	0	;tblptru may be non-zero
 14862  001D56                     	endif
 14863  001D56  0008               	tblrd		*
 14864  001D58  50F5               	movf	tablat,w,c
 14865  001D5A  0F02               	addlw	2
 14866  001D5C  2641               	addwf	LCD_DrawText@width^0,f,c
 14867  001D5E                     
 14868                           ;libraries/lcd_highlevel.c: 729:   }
 14869  001D5E  2A3E               	incf	LCD_DrawText@i^0,f,c
 14870  001D60                     l8488:
 14871  001D60  C020  F012         	movff	LCD_DrawText@msg,strlen@s
 14872  001D64  C021  F013         	movff	LCD_DrawText@msg+1,strlen@s+1
 14873  001D68  EC0B  F02E         	call	_strlen	;wreg free
 14874  001D6C  503E               	movf	LCD_DrawText@i^0,w,c
 14875  001D6E  6E2D               	movwf	??_LCD_DrawText^0,c
 14876  001D70  6A2E               	clrf	(??_LCD_DrawText+1)^0,c
 14877  001D72  5012               	movf	?_strlen^0,w,c
 14878  001D74  5C2D               	subwf	??_LCD_DrawText^0,w,c
 14879  001D76  5013               	movf	(?_strlen+1)^0,w,c
 14880  001D78  582E               	subwfb	(??_LCD_DrawText+1)^0,w,c
 14881  001D7A  A0D8               	btfss	status,0,c
 14882  001D7C  EFC2  F00E         	goto	u5851
 14883  001D80  EFC4  F00E         	goto	u5850
 14884  001D84                     u5851:
 14885  001D84  EF61  F00E         	goto	l8482
 14886  001D88                     u5850:
 14887  001D88                     
 14888                           ;libraries/lcd_highlevel.c: 730:   if(align == A_RIGHT)
 14889  001D88  0424               	decf	LCD_DrawText@align^0,w,c
 14890  001D8A  A4D8               	btfss	status,2,c
 14891  001D8C  EFCA  F00E         	goto	u5861
 14892  001D90  EFCC  F00E         	goto	u5860
 14893  001D94                     u5861:
 14894  001D94  EFD5  F00E         	goto	l8494
 14895  001D98                     u5860:
 14896  001D98                     
 14897                           ;libraries/lcd_highlevel.c: 731:   {;libraries/lcd_highlevel.c: 732:     posX = posX - w
      +                          idth;
 14898  001D98  5041               	movf	LCD_DrawText@width^0,w,c
 14899  001D9A  5C25               	subwf	LCD_DrawText@posX^0,w,c
 14900  001D9C  6E25               	movwf	LCD_DrawText@posX^0,c
 14901  001D9E  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 14902  001DA0  A0D8               	btfss	status,0,c
 14903  001DA2  0426               	decf	(LCD_DrawText@posX+1)^0,w,c
 14904  001DA4  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 14905                           
 14906                           ;libraries/lcd_highlevel.c: 733:   }
 14907  001DA6  EFED  F00E         	goto	l8498
 14908  001DAA                     l8494:
 14909  001DAA  0E02               	movlw	2
 14910  001DAC  1824               	xorwf	LCD_DrawText@align^0,w,c
 14911  001DAE  A4D8               	btfss	status,2,c
 14912  001DB0  EFDC  F00E         	goto	u5871
 14913  001DB4  EFDE  F00E         	goto	u5870
 14914  001DB8                     u5871:
 14915  001DB8  EFED  F00E         	goto	l8498
 14916  001DBC                     u5870:
 14917  001DBC                     
 14918                           ;libraries/lcd_highlevel.c: 735:   {;libraries/lcd_highlevel.c: 736:     posX = posX - w
      +                          idth / 2;
 14919  001DBC  C041  F012         	movff	LCD_DrawText@width,___awdiv@dividend
 14920  001DC0  6A13               	clrf	(___awdiv@dividend+1)^0,c
 14921  001DC2  0E00               	movlw	0
 14922  001DC4  6E15               	movwf	(___awdiv@divisor+1)^0,c
 14923  001DC6  0E02               	movlw	2
 14924  001DC8  6E14               	movwf	___awdiv@divisor^0,c
 14925  001DCA  EC40  F026         	call	___awdiv	;wreg free
 14926  001DCE  5012               	movf	?___awdiv^0,w,c
 14927  001DD0  5C25               	subwf	LCD_DrawText@posX^0,w,c
 14928  001DD2  6E25               	movwf	LCD_DrawText@posX^0,c
 14929  001DD4  5013               	movf	(?___awdiv+1)^0,w,c
 14930  001DD6  5826               	subwfb	(LCD_DrawText@posX+1)^0,w,c
 14931  001DD8  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 14932  001DDA                     l8498:
 14933                           
 14934                           ;libraries/lcd_highlevel.c: 740:   {;libraries/lcd_highlevel.c: 741:     tempChar = (*ms
      +                          g) - font->start_char;
 14935  001DDA  0E01               	movlw	1
 14936  001DDC  2422               	addwf	LCD_DrawText@font^0,w,c
 14937  001DDE  6E2D               	movwf	??_LCD_DrawText^0,c
 14938  001DE0  0E00               	movlw	0
 14939  001DE2  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 14940  001DE4  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 14941  001DE6  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 14942  001DEA  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 14943  001DEE                     	if	0	;tblptru may be non-zero
 14944  001DEE                     	endif
 14945  001DEE                     	if	0	;tblptru may be non-zero
 14946  001DEE                     	endif
 14947  001DEE  0008               	tblrd		*
 14948  001DF0  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 14949  001DF4  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 14950  001DF8  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 14951  001DFC  6AF8               	clrf	tblptru,c
 14952  001DFE  0E05               	movlw	(high __ramtop+-1)
 14953  001E00  64F7               	cpfsgt	tblptrh,c
 14954  001E02  D003               	bra	u5887
 14955  001E04  0008               	tblrd		*
 14956  001E06  50F5               	movf	tablat,w,c
 14957  001E08  D005               	bra	u5880
 14958  001E0A                     u5887:
 14959  001E0A  CFF6 FFE1          	movff	tblptrl,fsr1l
 14960  001E0E  CFF7 FFE2          	movff	tblptrh,fsr1h
 14961  001E12  50E7               	movf	indf1,w,c
 14962  001E14                     u5880:
 14963  001E14  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 14964  001E16  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 14965  001E18  5C30               	subwf	(??_LCD_DrawText+3)^0,w,c
 14966  001E1A  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 14967  001E1C                     
 14968                           ;libraries/lcd_highlevel.c: 742:     offset = font->descriptor[tempChar].offset;
 14969  001E1C  503F               	movf	LCD_DrawText@tempChar^0,w,c
 14970  001E1E  6E1A               	movwf	___wmul@multiplier^0,c
 14971  001E20  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 14972  001E22  BE1A               	btfsc	___wmul@multiplier^0,7,c
 14973  001E24  061B               	decf	(___wmul@multiplier+1)^0,f,c
 14974  001E26  0E00               	movlw	0
 14975  001E28  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 14976  001E2A  0E03               	movlw	3
 14977  001E2C  6E1C               	movwf	___wmul@multiplicand^0,c
 14978  001E2E  EC11  F02F         	call	___wmul	;wreg free
 14979  001E32  0E03               	movlw	3
 14980  001E34  2422               	addwf	LCD_DrawText@font^0,w,c
 14981  001E36  6E2D               	movwf	??_LCD_DrawText^0,c
 14982  001E38  0E00               	movlw	0
 14983  001E3A  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 14984  001E3C  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 14985  001E3E  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 14986  001E42  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 14987  001E46                     	if	0	;tblptru may be non-zero
 14988  001E46                     	endif
 14989  001E46                     	if	0	;tblptru may be non-zero
 14990  001E46                     	endif
 14991  001E46  0009               	tblrd		*+
 14992  001E48  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 14993  001E4C  0009               	tblrd		*+
 14994  001E4E  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 14995  001E52  501A               	movf	?___wmul^0,w,c
 14996  001E54  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 14997  001E56  501B               	movf	(?___wmul+1)^0,w,c
 14998  001E58  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 14999  001E5A  0E01               	movlw	1
 15000  001E5C  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 15001  001E5E  0E00               	movlw	0
 15002  001E60  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 15003  001E62  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 15004  001E66  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 15005  001E6A                     	if	0	;tblptru may be non-zero
 15006  001E6A                     	endif
 15007  001E6A                     	if	0	;tblptru may be non-zero
 15008  001E6A                     	endif
 15009  001E6A  0009               	tblrd		*+
 15010  001E6C  CFF5 F033          	movff	tablat,LCD_DrawText@offset
 15011  001E70  000A               	tblrd		*-
 15012  001E72  CFF5 F034          	movff	tablat,LCD_DrawText@offset+1
 15013  001E76                     
 15014                           ;libraries/lcd_highlevel.c: 743:     width = font->descriptor[tempChar].width;
 15015  001E76  503F               	movf	LCD_DrawText@tempChar^0,w,c
 15016  001E78  6E1A               	movwf	___wmul@multiplier^0,c
 15017  001E7A  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 15018  001E7C  BE1A               	btfsc	___wmul@multiplier^0,7,c
 15019  001E7E  061B               	decf	(___wmul@multiplier+1)^0,f,c
 15020  001E80  0E00               	movlw	0
 15021  001E82  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 15022  001E84  0E03               	movlw	3
 15023  001E86  6E1C               	movwf	___wmul@multiplicand^0,c
 15024  001E88  EC11  F02F         	call	___wmul	;wreg free
 15025  001E8C  0E03               	movlw	3
 15026  001E8E  2422               	addwf	LCD_DrawText@font^0,w,c
 15027  001E90  6E2D               	movwf	??_LCD_DrawText^0,c
 15028  001E92  0E00               	movlw	0
 15029  001E94  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 15030  001E96  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15031  001E98  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 15032  001E9C  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 15033  001EA0                     	if	0	;tblptru may be non-zero
 15034  001EA0                     	endif
 15035  001EA0                     	if	0	;tblptru may be non-zero
 15036  001EA0                     	endif
 15037  001EA0  0009               	tblrd		*+
 15038  001EA2  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 15039  001EA6  0009               	tblrd		*+
 15040  001EA8  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 15041  001EAC  501A               	movf	?___wmul^0,w,c
 15042  001EAE  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 15043  001EB0  501B               	movf	(?___wmul+1)^0,w,c
 15044  001EB2  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 15045  001EB4  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 15046  001EB8  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 15047  001EBC                     	if	0	;tblptru may be non-zero
 15048  001EBC                     	endif
 15049  001EBC                     	if	0	;tblptru may be non-zero
 15050  001EBC                     	endif
 15051  001EBC  0008               	tblrd		*
 15052  001EBE  CFF5 F041          	movff	tablat,LCD_DrawText@width
 15053  001EC2                     
 15054                           ;libraries/lcd_highlevel.c: 748:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 15055  001EC2  0E2A               	movlw	42
 15056  001EC4  6E80               	movwf	128,c	;volatile
 15057  001EC6  988B               	bcf	3979,4,c	;volatile
 15058  001EC8  968B               	bcf	3979,3,c	;volatile
 15059  001ECA  868B               	bsf	3979,3,c	;volatile
 15060  001ECC  888B               	bsf	3979,4,c	;volatile
 15061  001ECE                     
 15062                           ;libraries/lcd_highlevel.c: 749:     PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 15063  001ECE  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 15064  001ED0  6E80               	movwf	128,c	;volatile
 15065  001ED2  968B               	bcf	3979,3,c	;volatile
 15066  001ED4  868B               	bsf	3979,3,c	;volatile
 15067  001ED6                     
 15068                           ;libraries/lcd_highlevel.c: 750:     PORTA = posX; LATC3 = 0; LATC3 = 1;;
 15069  001ED6  C025  FF80         	movff	LCD_DrawText@posX,3968	;volatile
 15070  001EDA  968B               	bcf	3979,3,c	;volatile
 15071  001EDC  868B               	bsf	3979,3,c	;volatile
 15072  001EDE                     
 15073                           ;libraries/lcd_highlevel.c: 751:     posXEnd = posX+width-1+2;
 15074  001EDE  5041               	movf	LCD_DrawText@width^0,w,c
 15075  001EE0  2425               	addwf	LCD_DrawText@posX^0,w,c
 15076  001EE2  6E2D               	movwf	??_LCD_DrawText^0,c
 15077  001EE4  0E00               	movlw	0
 15078  001EE6  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 15079  001EE8  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15080  001EEA  0E01               	movlw	1
 15081  001EEC  242D               	addwf	??_LCD_DrawText^0,w,c
 15082  001EEE  6E3B               	movwf	LCD_DrawText@posXEnd^0,c
 15083  001EF0  0E00               	movlw	0
 15084  001EF2  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 15085  001EF4  6E3C               	movwf	(LCD_DrawText@posXEnd+1)^0,c
 15086  001EF6                     
 15087                           ;libraries/lcd_highlevel.c: 752:     PORTA = posXEnd>>8; LATC3 = 0; LATC3 = 1;;
 15088  001EF6  503C               	movf	(LCD_DrawText@posXEnd+1)^0,w,c
 15089  001EF8  6E80               	movwf	128,c	;volatile
 15090  001EFA  968B               	bcf	3979,3,c	;volatile
 15091  001EFC  868B               	bsf	3979,3,c	;volatile
 15092  001EFE                     
 15093                           ;libraries/lcd_highlevel.c: 753:     PORTA = posXEnd; LATC3 = 0; LATC3 = 1;;
 15094  001EFE  C03B  FF80         	movff	LCD_DrawText@posXEnd,3968	;volatile
 15095  001F02  968B               	bcf	3979,3,c	;volatile
 15096  001F04  868B               	bsf	3979,3,c	;volatile
 15097  001F06                     
 15098                           ;libraries/lcd_highlevel.c: 755:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 15099  001F06  0E2B               	movlw	43
 15100  001F08  6E80               	movwf	128,c	;volatile
 15101  001F0A  988B               	bcf	3979,4,c	;volatile
 15102  001F0C  968B               	bcf	3979,3,c	;volatile
 15103  001F0E  868B               	bsf	3979,3,c	;volatile
 15104  001F10  888B               	bsf	3979,4,c	;volatile
 15105  001F12                     
 15106                           ;libraries/lcd_highlevel.c: 756:     PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 15107  001F12  5028               	movf	(LCD_DrawText@posY+1)^0,w,c
 15108  001F14  6E80               	movwf	128,c	;volatile
 15109  001F16  968B               	bcf	3979,3,c	;volatile
 15110  001F18  868B               	bsf	3979,3,c	;volatile
 15111  001F1A                     
 15112                           ;libraries/lcd_highlevel.c: 757:     PORTA = posY; LATC3 = 0; LATC3 = 1;;
 15113  001F1A  C027  FF80         	movff	LCD_DrawText@posY,3968	;volatile
 15114  001F1E  968B               	bcf	3979,3,c	;volatile
 15115  001F20  868B               	bsf	3979,3,c	;volatile
 15116  001F22                     
 15117                           ;libraries/lcd_highlevel.c: 758:     posYEnd = posY + font->height-1;
 15118  001F22  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 15119  001F26  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 15120  001F2A                     	if	0	;tblptru may be non-zero
 15121  001F2A                     	endif
 15122  001F2A                     	if	0	;tblptru may be non-zero
 15123  001F2A                     	endif
 15124  001F2A  0008               	tblrd		*
 15125  001F2C  50F5               	movf	tablat,w,c
 15126  001F2E  2427               	addwf	LCD_DrawText@posY^0,w,c
 15127  001F30  6E2D               	movwf	??_LCD_DrawText^0,c
 15128  001F32  0E00               	movlw	0
 15129  001F34  2028               	addwfc	(LCD_DrawText@posY+1)^0,w,c
 15130  001F36  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15131  001F38  0EFF               	movlw	255
 15132  001F3A  242D               	addwf	??_LCD_DrawText^0,w,c
 15133  001F3C  6E39               	movwf	LCD_DrawText@posYEnd^0,c
 15134  001F3E  0EFF               	movlw	255
 15135  001F40  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 15136  001F42  6E3A               	movwf	(LCD_DrawText@posYEnd+1)^0,c
 15137  001F44                     
 15138                           ;libraries/lcd_highlevel.c: 759:     PORTA = posYEnd>>8; LATC3 = 0; LATC3 = 1;;
 15139  001F44  503A               	movf	(LCD_DrawText@posYEnd+1)^0,w,c
 15140  001F46  6E80               	movwf	128,c	;volatile
 15141  001F48  968B               	bcf	3979,3,c	;volatile
 15142  001F4A  868B               	bsf	3979,3,c	;volatile
 15143  001F4C                     
 15144                           ;libraries/lcd_highlevel.c: 760:     PORTA = posYEnd; LATC3 = 0; LATC3 = 1;;
 15145  001F4C  C039  FF80         	movff	LCD_DrawText@posYEnd,3968	;volatile
 15146  001F50  968B               	bcf	3979,3,c	;volatile
 15147  001F52  868B               	bsf	3979,3,c	;volatile
 15148  001F54                     
 15149                           ;libraries/lcd_highlevel.c: 761:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 15150  001F54  0E2C               	movlw	44
 15151  001F56  6E80               	movwf	128,c	;volatile
 15152  001F58  988B               	bcf	3979,4,c	;volatile
 15153  001F5A  968B               	bcf	3979,3,c	;volatile
 15154  001F5C  868B               	bsf	3979,3,c	;volatile
 15155  001F5E  888B               	bsf	3979,4,c	;volatile
 15156  001F60                     
 15157                           ;libraries/lcd_highlevel.c: 763:     for(y=0;y<font->height;y++)
 15158  001F60  0E00               	movlw	0
 15159  001F62  6E3D               	movwf	LCD_DrawText@y^0,c
 15160  001F64  EF4B  F010         	goto	l8650
 15161  001F68                     l8588:
 15162                           
 15163                           ;libraries/lcd_highlevel.c: 764:     {;libraries/lcd_highlevel.c: 765:       yOffset = o
      +                          ffset + (y * ((width+7)/8));
 15164  001F68  C03D  F01A         	movff	LCD_DrawText@y,___wmul@multiplier
 15165  001F6C  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 15166  001F6E  0E00               	movlw	0
 15167  001F70  6E15               	movwf	(___awdiv@divisor+1)^0,c
 15168  001F72  0E08               	movlw	8
 15169  001F74  6E14               	movwf	___awdiv@divisor^0,c
 15170  001F76  0E07               	movlw	7
 15171  001F78  2441               	addwf	LCD_DrawText@width^0,w,c
 15172  001F7A  6E12               	movwf	___awdiv@dividend^0,c
 15173  001F7C  6A13               	clrf	(___awdiv@dividend+1)^0,c
 15174  001F7E  0E00               	movlw	0
 15175  001F80  2213               	addwfc	(___awdiv@dividend+1)^0,f,c
 15176  001F82  EC40  F026         	call	___awdiv	;wreg free
 15177  001F86  C012  F01C         	movff	?___awdiv,___wmul@multiplicand
 15178  001F8A  C013  F01D         	movff	?___awdiv+1,___wmul@multiplicand+1
 15179  001F8E  EC11  F02F         	call	___wmul	;wreg free
 15180  001F92  5033               	movf	LCD_DrawText@offset^0,w,c
 15181  001F94  241A               	addwf	?___wmul^0,w,c
 15182  001F96  6E35               	movwf	LCD_DrawText@yOffset^0,c
 15183  001F98  5034               	movf	(LCD_DrawText@offset+1)^0,w,c
 15184  001F9A  201B               	addwfc	(?___wmul+1)^0,w,c
 15185  001F9C  6E36               	movwf	(LCD_DrawText@yOffset+1)^0,c
 15186  001F9E                     
 15187                           ;libraries/lcd_highlevel.c: 766:       for(x=0;x<width;x++)
 15188  001F9E  0E00               	movlw	0
 15189  001FA0  6E40               	movwf	LCD_DrawText@x^0,c
 15190  001FA2  EF2A  F010         	goto	l8624
 15191  001FA6                     l8592:
 15192                           
 15193                           ;libraries/lcd_highlevel.c: 767:       {;libraries/lcd_highlevel.c: 768:         fontByt
      +                          e = font->bitmap[yOffset + (x/8)];
 15194  001FA6  C040  F012         	movff	LCD_DrawText@x,___awdiv@dividend
 15195  001FAA  6A13               	clrf	(___awdiv@dividend+1)^0,c
 15196  001FAC  0E00               	movlw	0
 15197  001FAE  6E15               	movwf	(___awdiv@divisor+1)^0,c
 15198  001FB0  0E08               	movlw	8
 15199  001FB2  6E14               	movwf	___awdiv@divisor^0,c
 15200  001FB4  EC40  F026         	call	___awdiv	;wreg free
 15201  001FB8  0E05               	movlw	5
 15202  001FBA  2422               	addwf	LCD_DrawText@font^0,w,c
 15203  001FBC  6E2D               	movwf	??_LCD_DrawText^0,c
 15204  001FBE  0E00               	movlw	0
 15205  001FC0  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 15206  001FC2  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15207  001FC4  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 15208  001FC8  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 15209  001FCC                     	if	0	;tblptru may be non-zero
 15210  001FCC                     	endif
 15211  001FCC                     	if	0	;tblptru may be non-zero
 15212  001FCC                     	endif
 15213  001FCC  0009               	tblrd		*+
 15214  001FCE  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 15215  001FD2  0009               	tblrd		*+
 15216  001FD4  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 15217  001FD8  5012               	movf	?___awdiv^0,w,c
 15218  001FDA  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 15219  001FDC  5013               	movf	(?___awdiv+1)^0,w,c
 15220  001FDE  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 15221  001FE0  5035               	movf	LCD_DrawText@yOffset^0,w,c
 15222  001FE2  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 15223  001FE4  5036               	movf	(LCD_DrawText@yOffset+1)^0,w,c
 15224  001FE6  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 15225  001FE8  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 15226  001FEC  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 15227  001FF0                     	if	0	;tblptru may be non-zero
 15228  001FF0                     	endif
 15229  001FF0                     	if	0	;tblptru may be non-zero
 15230  001FF0                     	endif
 15231  001FF0  0008               	tblrd		*
 15232  001FF2  CFF5 F037          	movff	tablat,LCD_DrawText@fontByte
 15233  001FF6                     
 15234                           ;libraries/lcd_highlevel.c: 769:         fontPixel = fontByte & (0x80 >> (x%8));
 15235  001FF6  C040  F02D         	movff	LCD_DrawText@x,??_LCD_DrawText
 15236  001FFA  0E07               	movlw	7
 15237  001FFC  162D               	andwf	??_LCD_DrawText^0,f,c
 15238  001FFE  0E80               	movlw	128
 15239  002000  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15240  002002  0E00               	movlw	0
 15241  002004  6E2F               	movwf	(??_LCD_DrawText+2)^0,c
 15242  002006  2A2D               	incf	??_LCD_DrawText^0,f,c
 15243  002008  EF09  F010         	goto	u5894
 15244  00200C                     u5895:
 15245  00200C  342F               	rlcf	(??_LCD_DrawText+2)^0,w,c
 15246  00200E  322F               	rrcf	(??_LCD_DrawText+2)^0,f,c
 15247  002010  322E               	rrcf	(??_LCD_DrawText+1)^0,f,c
 15248  002012                     u5894:
 15249  002012  2E2D               	decfsz	??_LCD_DrawText^0,f,c
 15250  002014  EF06  F010         	goto	u5895
 15251  002018  502E               	movf	(??_LCD_DrawText+1)^0,w,c
 15252  00201A  1437               	andwf	LCD_DrawText@fontByte^0,w,c
 15253  00201C  6E38               	movwf	LCD_DrawText@fontPixel^0,c
 15254  00201E                     
 15255                           ;libraries/lcd_highlevel.c: 770:         if(fontPixel != 0)
 15256  00201E  5038               	movf	LCD_DrawText@fontPixel^0,w,c
 15257  002020  B4D8               	btfsc	status,2,c
 15258  002022  EF15  F010         	goto	u5901
 15259  002026  EF17  F010         	goto	u5900
 15260  00202A                     u5901:
 15261  00202A  EF21  F010         	goto	l8610
 15262  00202E                     u5900:
 15263  00202E                     
 15264                           ;libraries/lcd_highlevel.c: 771:         {;libraries/lcd_highlevel.c: 772:           POR
      +                          TA = color>>8; LATC3 = 0; LATC3 = 1;;
 15265  00202E  502A               	movf	(LCD_DrawText@color+1)^0,w,c
 15266  002030  6E80               	movwf	128,c	;volatile
 15267  002032  968B               	bcf	3979,3,c	;volatile
 15268  002034  868B               	bsf	3979,3,c	;volatile
 15269  002036                     
 15270                           ;libraries/lcd_highlevel.c: 773:           PORTA = color; LATC3 = 0; LATC3 = 1;;
 15271  002036  C029  FF80         	movff	LCD_DrawText@color,3968	;volatile
 15272  00203A                     l8606:
 15273  00203A  968B               	bcf	3979,3,c	;volatile
 15274  00203C  868B               	bsf	3979,3,c	;volatile
 15275                           
 15276                           ;libraries/lcd_highlevel.c: 774:         }
 15277  00203E  EF29  F010         	goto	l8622
 15278  002042                     l8610:
 15279                           
 15280                           ;libraries/lcd_highlevel.c: 776:         {;libraries/lcd_highlevel.c: 777:           POR
      +                          TA = bg_color>>8; LATC3 = 0; LATC3 = 1;;
 15281  002042  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 15282  002044  6E80               	movwf	128,c	;volatile
 15283  002046  968B               	bcf	3979,3,c	;volatile
 15284  002048  868B               	bsf	3979,3,c	;volatile
 15285  00204A                     
 15286                           ;libraries/lcd_highlevel.c: 778:           PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 15287  00204A  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 15288  00204E  EF1D  F010         	goto	l8606
 15289  002052                     l8622:
 15290                           
 15291                           ;libraries/lcd_highlevel.c: 780:       }
 15292  002052  2A40               	incf	LCD_DrawText@x^0,f,c
 15293  002054                     l8624:
 15294  002054  5041               	movf	LCD_DrawText@width^0,w,c
 15295  002056  5C40               	subwf	LCD_DrawText@x^0,w,c
 15296  002058  A0D8               	btfss	status,0,c
 15297  00205A  EF31  F010         	goto	u5911
 15298  00205E  EF33  F010         	goto	u5910
 15299  002062                     u5911:
 15300  002062  EFD3  F00F         	goto	l8592
 15301  002066                     u5910:
 15302  002066                     
 15303                           ;libraries/lcd_highlevel.c: 781:       for(x=0;x<2;x++)
 15304  002066  0E00               	movlw	0
 15305  002068  6E40               	movwf	LCD_DrawText@x^0,c
 15306  00206A                     l8628:
 15307  00206A  0E01               	movlw	1
 15308  00206C  6440               	cpfsgt	LCD_DrawText@x^0,c
 15309  00206E  EF3B  F010         	goto	u5921
 15310  002072  EF3D  F010         	goto	u5920
 15311  002076                     u5921:
 15312  002076  EF3F  F010         	goto	l8632
 15313  00207A                     u5920:
 15314  00207A  EF4A  F010         	goto	l8648
 15315  00207E                     l8632:
 15316                           
 15317                           ;libraries/lcd_highlevel.c: 782:       {;libraries/lcd_highlevel.c: 783:         PORTA =
      +                           bg_color>>8; LATC3 = 0; LATC3 = 1;;
 15318  00207E  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 15319  002080  6E80               	movwf	128,c	;volatile
 15320  002082  968B               	bcf	3979,3,c	;volatile
 15321  002084  868B               	bsf	3979,3,c	;volatile
 15322  002086                     
 15323                           ;libraries/lcd_highlevel.c: 784:         PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 15324  002086  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 15325  00208A  968B               	bcf	3979,3,c	;volatile
 15326  00208C  868B               	bsf	3979,3,c	;volatile
 15327  00208E                     
 15328                           ;libraries/lcd_highlevel.c: 785:       }
 15329  00208E  2A40               	incf	LCD_DrawText@x^0,f,c
 15330  002090  EF35  F010         	goto	l8628
 15331  002094                     l8648:
 15332                           
 15333                           ;libraries/lcd_highlevel.c: 786:     }
 15334  002094  2A3D               	incf	LCD_DrawText@y^0,f,c
 15335  002096                     l8650:
 15336  002096  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 15337  00209A  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 15338  00209E                     	if	0	;tblptru may be non-zero
 15339  00209E                     	endif
 15340  00209E                     	if	0	;tblptru may be non-zero
 15341  00209E                     	endif
 15342  00209E  0009               	tblrd		*+
 15343  0020A0  50F5               	movf	tablat,w,c
 15344  0020A2  5C3D               	subwf	LCD_DrawText@y^0,w,c
 15345  0020A4  A0D8               	btfss	status,0,c
 15346  0020A6  EF57  F010         	goto	u5931
 15347  0020AA  EF59  F010         	goto	u5930
 15348  0020AE                     u5931:
 15349  0020AE  EFB4  F00F         	goto	l8588
 15350  0020B2                     u5930:
 15351  0020B2                     
 15352                           ;libraries/lcd_highlevel.c: 787:     posX = posX + 2 + width;
 15353  0020B2  5041               	movf	LCD_DrawText@width^0,w,c
 15354  0020B4  2425               	addwf	LCD_DrawText@posX^0,w,c
 15355  0020B6  6E2D               	movwf	??_LCD_DrawText^0,c
 15356  0020B8  0E00               	movlw	0
 15357  0020BA  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 15358  0020BC  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15359  0020BE  0E02               	movlw	2
 15360  0020C0  242D               	addwf	??_LCD_DrawText^0,w,c
 15361  0020C2  6E25               	movwf	LCD_DrawText@posX^0,c
 15362  0020C4  0E00               	movlw	0
 15363  0020C6  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 15364  0020C8  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15365  0020CA                     
 15366                           ;libraries/lcd_highlevel.c: 788:     msg++;
 15367  0020CA  4A20               	infsnz	LCD_DrawText@msg^0,f,c
 15368  0020CC  2A21               	incf	(LCD_DrawText@msg+1)^0,f,c
 15369  0020CE                     
 15370                           ;libraries/lcd_highlevel.c: 789:  }while(*msg != 0);
 15371  0020CE  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 15372  0020D2  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 15373  0020D6  6AF8               	clrf	tblptru,c
 15374  0020D8  0E05               	movlw	(high __ramtop+-1)
 15375  0020DA  64F7               	cpfsgt	tblptrh,c
 15376  0020DC  D003               	bra	u5947
 15377  0020DE  0008               	tblrd		*
 15378  0020E0  50F5               	movf	tablat,w,c
 15379  0020E2  D005               	bra	u5940
 15380  0020E4                     u5947:
 15381  0020E4  CFF6 FFE1          	movff	tblptrl,fsr1l
 15382  0020E8  CFF7 FFE2          	movff	tblptrh,fsr1h
 15383  0020EC  50E7               	movf	indf1,w,c
 15384  0020EE                     u5940:
 15385  0020EE  0900               	iorlw	0
 15386  0020F0  A4D8               	btfss	status,2,c
 15387  0020F2  EF7D  F010         	goto	u5951
 15388  0020F6  EF7F  F010         	goto	u5950
 15389  0020FA                     u5951:
 15390  0020FA  EFED  F00E         	goto	l8498
 15391  0020FE                     u5950:
 15392  0020FE  0012               	return		;funcret
 15393  002100                     __end_of_LCD_DrawText:
 15394                           	callstack 0
 15395                           
 15396 ;; *************** function _strlen *****************
 15397 ;; Defined at:
 15398 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 15399 ;; Parameters:    Size  Location     Type
 15400 ;;  s               2   17[COMRAM] PTR const unsigned char 
 15401 ;;		 -> dbuf(32), touchScreenController@s(20), STR_9(11), STR_8(8), 
 15402 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
 15403 ;;		 -> STR_3(9), STR_2(11), STR_1(10), 
 15404 ;; Auto vars:     Size  Location     Type
 15405 ;;  a               2   19[COMRAM] PTR const unsigned char 
 15406 ;;		 -> dbuf(32), touchScreenController@s(20), STR_9(11), STR_8(8), 
 15407 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
 15408 ;;		 -> STR_3(9), STR_2(11), STR_1(10), 
 15409 ;; Return value:  Size  Location     Type
 15410 ;;                  2   17[COMRAM] unsigned int 
 15411 ;; Registers used:
 15412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 15413 ;; Tracked objects:
 15414 ;;		On entry : 0/0
 15415 ;;		On exit  : 0/0
 15416 ;;		Unchanged: 0/0
 15417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15418 ;;      Params:         2       0       0       0       0       0       0
 15419 ;;      Locals:         2       0       0       0       0       0       0
 15420 ;;      Temps:          0       0       0       0       0       0       0
 15421 ;;      Totals:         4       0       0       0       0       0       0
 15422 ;;Total ram usage:        4 bytes
 15423 ;; Hardware stack levels used: 1
 15424 ;; Hardware stack levels required when called: 4
 15425 ;; This function calls:
 15426 ;;		Nothing
 15427 ;; This function is called by:
 15428 ;;		_LCD_ButtonDraw
 15429 ;;		_LCD_DrawText
 15430 ;;		_pad
 15431 ;; This function uses a non-reentrant model
 15432 ;;
 15433                           
 15434                           	psect	text62
 15435  005C16                     __ptext62:
 15436                           	callstack 0
 15437  005C16                     _strlen:
 15438                           	callstack 20
 15439  005C16  C012  F014         	movff	strlen@s,strlen@a
 15440  005C1A  C013  F015         	movff	strlen@s+1,strlen@a+1
 15441  005C1E  EF13  F02E         	goto	l7844
 15442  005C22                     l7842:
 15443  005C22  4A12               	infsnz	strlen@s^0,f,c
 15444  005C24  2A13               	incf	(strlen@s+1)^0,f,c
 15445  005C26                     l7844:
 15446  005C26  C012  FFF6         	movff	strlen@s,tblptrl
 15447  005C2A  C013  FFF7         	movff	strlen@s+1,tblptrh
 15448  005C2E  6AF8               	clrf	tblptru,c
 15449  005C30  0E05               	movlw	(high __ramtop+-1)
 15450  005C32  64F7               	cpfsgt	tblptrh,c
 15451  005C34  D003               	bra	u5387
 15452  005C36  0008               	tblrd		*
 15453  005C38  50F5               	movf	tablat,w,c
 15454  005C3A  D005               	bra	u5380
 15455  005C3C                     u5387:
 15456  005C3C  CFF6 FFE1          	movff	tblptrl,fsr1l
 15457  005C40  CFF7 FFE2          	movff	tblptrh,fsr1h
 15458  005C44  50E7               	movf	indf1,w,c
 15459  005C46                     u5380:
 15460  005C46  0900               	iorlw	0
 15461  005C48  A4D8               	btfss	status,2,c
 15462  005C4A  EF29  F02E         	goto	u5391
 15463  005C4E  EF2B  F02E         	goto	u5390
 15464  005C52                     u5391:
 15465  005C52  EF11  F02E         	goto	l7842
 15466  005C56                     u5390:
 15467  005C56  5014               	movf	strlen@a^0,w,c
 15468  005C58  5C12               	subwf	strlen@s^0,w,c
 15469  005C5A  6E12               	movwf	?_strlen^0,c
 15470  005C5C  5015               	movf	(strlen@a+1)^0,w,c
 15471  005C5E  5813               	subwfb	(strlen@s+1)^0,w,c
 15472  005C60  6E13               	movwf	(?_strlen+1)^0,c
 15473  005C62  0012               	return		;funcret
 15474  005C64                     __end_of_strlen:
 15475                           	callstack 0
 15476                           
 15477 ;; *************** function ___awdiv *****************
 15478 ;; Defined at:
 15479 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 15480 ;; Parameters:    Size  Location     Type
 15481 ;;  dividend        2   17[COMRAM] int 
 15482 ;;  divisor         2   19[COMRAM] int 
 15483 ;; Auto vars:     Size  Location     Type
 15484 ;;  quotient        2   23[COMRAM] int 
 15485 ;;  sign            1   22[COMRAM] unsigned char 
 15486 ;;  counter         1   21[COMRAM] unsigned char 
 15487 ;; Return value:  Size  Location     Type
 15488 ;;                  2   17[COMRAM] int 
 15489 ;; Registers used:
 15490 ;;		wreg, status,2, status,0
 15491 ;; Tracked objects:
 15492 ;;		On entry : 0/0
 15493 ;;		On exit  : 0/0
 15494 ;;		Unchanged: 0/0
 15495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15496 ;;      Params:         4       0       0       0       0       0       0
 15497 ;;      Locals:         4       0       0       0       0       0       0
 15498 ;;      Temps:          0       0       0       0       0       0       0
 15499 ;;      Totals:         8       0       0       0       0       0       0
 15500 ;;Total ram usage:        8 bytes
 15501 ;; Hardware stack levels used: 1
 15502 ;; Hardware stack levels required when called: 4
 15503 ;; This function calls:
 15504 ;;		Nothing
 15505 ;; This function is called by:
 15506 ;;		_LCD_ButtonDraw
 15507 ;;		_LCD_DrawText
 15508 ;; This function uses a non-reentrant model
 15509 ;;
 15510                           
 15511                           	psect	text63
 15512  004C80                     __ptext63:
 15513                           	callstack 0
 15514  004C80                     ___awdiv:
 15515                           	callstack 20
 15516  004C80  0E00               	movlw	0
 15517  004C82  6E17               	movwf	___awdiv@sign^0,c
 15518  004C84  BE15               	btfsc	(___awdiv@divisor+1)^0,7,c
 15519  004C86  EF49  F026         	goto	u5670
 15520  004C8A  EF47  F026         	goto	u5671
 15521  004C8E                     u5671:
 15522  004C8E  EF4F  F026         	goto	l8380
 15523  004C92                     u5670:
 15524  004C92  6C14               	negf	___awdiv@divisor^0,c
 15525  004C94  1E15               	comf	(___awdiv@divisor+1)^0,f,c
 15526  004C96  B0D8               	btfsc	status,0,c
 15527  004C98  2A15               	incf	(___awdiv@divisor+1)^0,f,c
 15528  004C9A  0E01               	movlw	1
 15529  004C9C  6E17               	movwf	___awdiv@sign^0,c
 15530  004C9E                     l8380:
 15531  004C9E  BE13               	btfsc	(___awdiv@dividend+1)^0,7,c
 15532  004CA0  EF56  F026         	goto	u5680
 15533  004CA4  EF54  F026         	goto	u5681
 15534  004CA8                     u5681:
 15535  004CA8  EF5C  F026         	goto	l8386
 15536  004CAC                     u5680:
 15537  004CAC  6C12               	negf	___awdiv@dividend^0,c
 15538  004CAE  1E13               	comf	(___awdiv@dividend+1)^0,f,c
 15539  004CB0  B0D8               	btfsc	status,0,c
 15540  004CB2  2A13               	incf	(___awdiv@dividend+1)^0,f,c
 15541  004CB4  0E01               	movlw	1
 15542  004CB6  1A17               	xorwf	___awdiv@sign^0,f,c
 15543  004CB8                     l8386:
 15544  004CB8  0E00               	movlw	0
 15545  004CBA  6E19               	movwf	(___awdiv@quotient+1)^0,c
 15546  004CBC  0E00               	movlw	0
 15547  004CBE  6E18               	movwf	___awdiv@quotient^0,c
 15548  004CC0  5014               	movf	___awdiv@divisor^0,w,c
 15549  004CC2  1015               	iorwf	(___awdiv@divisor+1)^0,w,c
 15550  004CC4  B4D8               	btfsc	status,2,c
 15551  004CC6  EF67  F026         	goto	u5691
 15552  004CCA  EF69  F026         	goto	u5690
 15553  004CCE                     u5691:
 15554  004CCE  EF91  F026         	goto	l8408
 15555  004CD2                     u5690:
 15556  004CD2  0E01               	movlw	1
 15557  004CD4  6E16               	movwf	___awdiv@counter^0,c
 15558  004CD6  EF71  F026         	goto	l8394
 15559  004CDA                     l8392:
 15560  004CDA  90D8               	bcf	status,0,c
 15561  004CDC  3614               	rlcf	___awdiv@divisor^0,f,c
 15562  004CDE  3615               	rlcf	(___awdiv@divisor+1)^0,f,c
 15563  004CE0  2A16               	incf	___awdiv@counter^0,f,c
 15564  004CE2                     l8394:
 15565  004CE2  AE15               	btfss	(___awdiv@divisor+1)^0,7,c
 15566  004CE4  EF76  F026         	goto	u5701
 15567  004CE8  EF78  F026         	goto	u5700
 15568  004CEC                     u5701:
 15569  004CEC  EF6D  F026         	goto	l8392
 15570  004CF0                     u5700:
 15571  004CF0                     l8396:
 15572  004CF0  90D8               	bcf	status,0,c
 15573  004CF2  3618               	rlcf	___awdiv@quotient^0,f,c
 15574  004CF4  3619               	rlcf	(___awdiv@quotient+1)^0,f,c
 15575  004CF6  5014               	movf	___awdiv@divisor^0,w,c
 15576  004CF8  5C12               	subwf	___awdiv@dividend^0,w,c
 15577  004CFA  5015               	movf	(___awdiv@divisor+1)^0,w,c
 15578  004CFC  5813               	subwfb	(___awdiv@dividend+1)^0,w,c
 15579  004CFE  A0D8               	btfss	status,0,c
 15580  004D00  EF84  F026         	goto	u5711
 15581  004D04  EF86  F026         	goto	u5710
 15582  004D08                     u5711:
 15583  004D08  EF8B  F026         	goto	l8404
 15584  004D0C                     u5710:
 15585  004D0C  5014               	movf	___awdiv@divisor^0,w,c
 15586  004D0E  5E12               	subwf	___awdiv@dividend^0,f,c
 15587  004D10  5015               	movf	(___awdiv@divisor+1)^0,w,c
 15588  004D12  5A13               	subwfb	(___awdiv@dividend+1)^0,f,c
 15589  004D14  8018               	bsf	___awdiv@quotient^0,0,c
 15590  004D16                     l8404:
 15591  004D16  90D8               	bcf	status,0,c
 15592  004D18  3215               	rrcf	(___awdiv@divisor+1)^0,f,c
 15593  004D1A  3214               	rrcf	___awdiv@divisor^0,f,c
 15594  004D1C  2E16               	decfsz	___awdiv@counter^0,f,c
 15595  004D1E  EF78  F026         	goto	l8396
 15596  004D22                     l8408:
 15597  004D22  5017               	movf	___awdiv@sign^0,w,c
 15598  004D24  B4D8               	btfsc	status,2,c
 15599  004D26  EF97  F026         	goto	u5721
 15600  004D2A  EF99  F026         	goto	u5720
 15601  004D2E                     u5721:
 15602  004D2E  EF9D  F026         	goto	l8412
 15603  004D32                     u5720:
 15604  004D32  6C18               	negf	___awdiv@quotient^0,c
 15605  004D34  1E19               	comf	(___awdiv@quotient+1)^0,f,c
 15606  004D36  B0D8               	btfsc	status,0,c
 15607  004D38  2A19               	incf	(___awdiv@quotient+1)^0,f,c
 15608  004D3A                     l8412:
 15609  004D3A  C018  F012         	movff	___awdiv@quotient,?___awdiv
 15610  004D3E  C019  F013         	movff	___awdiv@quotient+1,?___awdiv+1
 15611  004D42  0012               	return		;funcret
 15612  004D44                     __end_of___awdiv:
 15613                           	callstack 0
 15614                           
 15615 ;; *************** function _LCD_ButtonUpdate *****************
 15616 ;; Defined at:
 15617 ;;		line 425 in file "libraries/lcd_highlevel.c"
 15618 ;; Parameters:    Size  Location     Type
 15619 ;;  button          2   36[COMRAM] PTR struct .
 15620 ;;		 -> g1(201), 
 15621 ;; Auto vars:     Size  Location     Type
 15622 ;;  y2              2   52[COMRAM] unsigned short 
 15623 ;;  x1              2   50[COMRAM] unsigned short 
 15624 ;;  y1              2   48[COMRAM] unsigned short 
 15625 ;;  x2              2   46[COMRAM] unsigned short 
 15626 ;;  colorIn         2   44[COMRAM] unsigned short 
 15627 ;;  colorOut        2   42[COMRAM] unsigned short 
 15628 ;; Return value:  Size  Location     Type
 15629 ;;                  1    wreg      void 
 15630 ;; Registers used:
 15631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15632 ;; Tracked objects:
 15633 ;;		On entry : 0/0
 15634 ;;		On exit  : 0/0
 15635 ;;		Unchanged: 0/0
 15636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15637 ;;      Params:         2       0       0       0       0       0       0
 15638 ;;      Locals:        12       0       0       0       0       0       0
 15639 ;;      Temps:          4       0       0       0       0       0       0
 15640 ;;      Totals:        18       0       0       0       0       0       0
 15641 ;;Total ram usage:       18 bytes
 15642 ;; Hardware stack levels used: 1
 15643 ;; Hardware stack levels required when called: 5
 15644 ;; This function calls:
 15645 ;;		_LCD_DrawRect
 15646 ;;		_LCD_Read
 15647 ;; This function is called by:
 15648 ;;		_LCD_ButtonDraw
 15649 ;; This function uses a non-reentrant model
 15650 ;;
 15651                           
 15652                           	psect	text64
 15653  003334                     __ptext64:
 15654                           	callstack 0
 15655  003334                     _LCD_ButtonUpdate:
 15656                           	callstack 19
 15657  003334                     
 15658                           ;libraries/lcd_highlevel.c: 425: void LCD_ButtonUpdate(btn_t * button);libraries/lcd_hig
      +                          hlevel.c: 426: {;libraries/lcd_highlevel.c: 427:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 428:   uint16_t colorOut, colorIn;;libraries/lcd_highlevel.c: 430:   x1 = bu
      +                          tton->posX;
 15659  003334  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 15660  003338  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 15661  00333C  CFDE F033          	movff	postinc2,LCD_ButtonUpdate@x1
 15662  003340  CFDD F034          	movff	postdec2,LCD_ButtonUpdate@x1+1
 15663  003344                     
 15664                           ;libraries/lcd_highlevel.c: 431:   x2 = button->posX + button->width;
 15665  003344  EE20 F004          	lfsr	2,4
 15666  003348  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15667  00334A  26D9               	addwf	fsr2l,f,c
 15668  00334C  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15669  00334E  22DA               	addwfc	fsr2h,f,c
 15670  003350  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 15671  003354  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 15672  003358  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 15673  00335C  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 15674  003360  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 15675  003364  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 15676  003368  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 15677  00336A  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 15678  00336C  6E2F               	movwf	LCD_ButtonUpdate@x2^0,c
 15679  00336E  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 15680  003370  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 15681  003372  6E30               	movwf	(LCD_ButtonUpdate@x2+1)^0,c
 15682  003374                     
 15683                           ;libraries/lcd_highlevel.c: 432:   y1 = button->posY;
 15684  003374  EE20 F002          	lfsr	2,2
 15685  003378  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15686  00337A  26D9               	addwf	fsr2l,f,c
 15687  00337C  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15688  00337E  22DA               	addwfc	fsr2h,f,c
 15689  003380  CFDE F031          	movff	postinc2,LCD_ButtonUpdate@y1
 15690  003384  CFDD F032          	movff	postdec2,LCD_ButtonUpdate@y1+1
 15691  003388                     
 15692                           ;libraries/lcd_highlevel.c: 433:   y2 = button->posY + button->height;
 15693  003388  EE20 F006          	lfsr	2,6
 15694  00338C  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15695  00338E  26D9               	addwf	fsr2l,f,c
 15696  003390  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15697  003392  22DA               	addwfc	fsr2h,f,c
 15698  003394  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 15699  003398  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 15700  00339C  EE20 F002          	lfsr	2,2
 15701  0033A0  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15702  0033A2  26D9               	addwf	fsr2l,f,c
 15703  0033A4  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15704  0033A6  22DA               	addwfc	fsr2h,f,c
 15705  0033A8  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 15706  0033AC  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 15707  0033B0  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 15708  0033B2  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 15709  0033B4  6E35               	movwf	LCD_ButtonUpdate@y2^0,c
 15710  0033B6  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 15711  0033B8  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 15712  0033BA  6E36               	movwf	(LCD_ButtonUpdate@y2+1)^0,c
 15713  0033BC                     
 15714                           ;libraries/lcd_highlevel.c: 435:   if(button->pressed == 0)
 15715  0033BC  EE20 F010          	lfsr	2,16
 15716  0033C0  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15717  0033C2  26D9               	addwf	fsr2l,f,c
 15718  0033C4  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15719  0033C6  22DA               	addwfc	fsr2h,f,c
 15720  0033C8  50DF               	movf	indf2,w,c
 15721  0033CA  A4D8               	btfss	status,2,c
 15722  0033CC  EFEA  F019         	goto	u5981
 15723  0033D0  EFEC  F019         	goto	u5980
 15724  0033D4                     u5981:
 15725  0033D4  EF02  F01A         	goto	l8712
 15726  0033D8                     u5980:
 15727  0033D8                     
 15728                           ;libraries/lcd_highlevel.c: 436:   {;libraries/lcd_highlevel.c: 437:     colorOut = butt
      +                          on->txtColor;
 15729  0033D8  EE20 F008          	lfsr	2,8
 15730  0033DC  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15731  0033DE  26D9               	addwf	fsr2l,f,c
 15732  0033E0  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15733  0033E2  22DA               	addwfc	fsr2h,f,c
 15734  0033E4  CFDE F02B          	movff	postinc2,LCD_ButtonUpdate@colorOut
 15735  0033E8  CFDD F02C          	movff	postdec2,LCD_ButtonUpdate@colorOut+1
 15736                           
 15737                           ;libraries/lcd_highlevel.c: 438:     colorIn = button->bgColor;
 15738  0033EC  EE20 F00A          	lfsr	2,10
 15739  0033F0  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15740  0033F2  26D9               	addwf	fsr2l,f,c
 15741  0033F4  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15742  0033F6  22DA               	addwfc	fsr2h,f,c
 15743  0033F8  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 15744  0033FC  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 15745                           
 15746                           ;libraries/lcd_highlevel.c: 439:   }
 15747  003400  EF1C  F01A         	goto	l8716
 15748  003404                     l8712:
 15749                           
 15750                           ;libraries/lcd_highlevel.c: 441:   {;libraries/lcd_highlevel.c: 443:     colorOut = LCD_
      +                          Read(x1,y2+1);
 15751  003404  C033  F012         	movff	LCD_ButtonUpdate@x1,LCD_Read@posX
 15752  003408  C034  F013         	movff	LCD_ButtonUpdate@x1+1,LCD_Read@posX+1
 15753  00340C  0E01               	movlw	1
 15754  00340E  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 15755  003410  6E14               	movwf	LCD_Read@posY^0,c
 15756  003412  0E00               	movlw	0
 15757  003414  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 15758  003416  6E15               	movwf	(LCD_Read@posY+1)^0,c
 15759  003418  EC61  F020         	call	_LCD_Read	;wreg free
 15760  00341C  C012  F02B         	movff	?_LCD_Read,LCD_ButtonUpdate@colorOut
 15761  003420  C013  F02C         	movff	?_LCD_Read+1,LCD_ButtonUpdate@colorOut+1
 15762  003424                     
 15763                           ;libraries/lcd_highlevel.c: 444:     colorIn = button->txtColor;
 15764  003424  EE20 F008          	lfsr	2,8
 15765  003428  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15766  00342A  26D9               	addwf	fsr2l,f,c
 15767  00342C  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15768  00342E  22DA               	addwfc	fsr2h,f,c
 15769  003430  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 15770  003434  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 15771  003438                     l8716:
 15772                           
 15773                           ;libraries/lcd_highlevel.c: 446:   if(button->bgColor != button->txtColor)
 15774  003438  EE20 F008          	lfsr	2,8
 15775  00343C  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15776  00343E  26D9               	addwf	fsr2l,f,c
 15777  003440  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15778  003442  22DA               	addwfc	fsr2h,f,c
 15779  003444  EE10 F00A          	lfsr	1,10
 15780  003448  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15781  00344A  26E1               	addwf	fsr1l,f,c
 15782  00344C  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15783  00344E  22E2               	addwfc	fsr1h,f,c
 15784  003450  50DE               	movf	postinc2,w,c
 15785  003452  18E6               	xorwf	postinc1,w,c
 15786  003454  E109               	bnz	u5990
 15787  003456  50DE               	movf	postinc2,w,c
 15788  003458  18E6               	xorwf	postinc1,w,c
 15789  00345A  B4D8               	btfsc	status,2,c
 15790  00345C  EF32  F01A         	goto	u5991
 15791  003460  EF34  F01A         	goto	u5990
 15792  003464                     u5991:
 15793  003464  EFB4  F01A         	goto	l239
 15794  003468                     u5990:
 15795  003468                     
 15796                           ;libraries/lcd_highlevel.c: 447:   {;libraries/lcd_highlevel.c: 449:     LCD_DrawRect(x1
      +                          +3, y2+1, x2+3, y2+3, 1, colorOut);
 15797  003468  0E03               	movlw	3
 15798  00346A  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 15799  00346C  6E12               	movwf	LCD_DrawRect@posX1^0,c
 15800  00346E  0E00               	movlw	0
 15801  003470  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 15802  003472  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 15803  003474  0E01               	movlw	1
 15804  003476  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 15805  003478  6E14               	movwf	LCD_DrawRect@posY1^0,c
 15806  00347A  0E00               	movlw	0
 15807  00347C  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 15808  00347E  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 15809  003480  0E03               	movlw	3
 15810  003482  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 15811  003484  6E16               	movwf	LCD_DrawRect@posX2^0,c
 15812  003486  0E00               	movlw	0
 15813  003488  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 15814  00348A  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 15815  00348C  0E03               	movlw	3
 15816  00348E  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 15817  003490  6E18               	movwf	LCD_DrawRect@posY2^0,c
 15818  003492  0E00               	movlw	0
 15819  003494  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 15820  003496  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 15821  003498  0E01               	movlw	1
 15822  00349A  6E1A               	movwf	LCD_DrawRect@fill^0,c
 15823  00349C  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 15824  0034A0  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 15825  0034A4  EC02  F014         	call	_LCD_DrawRect	;wreg free
 15826                           
 15827                           ;libraries/lcd_highlevel.c: 450:     LCD_DrawRect(x2+1, y1+3, x2+3, y2+3, 1, colorOut);
 15828  0034A8  0E01               	movlw	1
 15829  0034AA  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 15830  0034AC  6E12               	movwf	LCD_DrawRect@posX1^0,c
 15831  0034AE  0E00               	movlw	0
 15832  0034B0  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 15833  0034B2  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 15834  0034B4  0E03               	movlw	3
 15835  0034B6  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 15836  0034B8  6E14               	movwf	LCD_DrawRect@posY1^0,c
 15837  0034BA  0E00               	movlw	0
 15838  0034BC  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 15839  0034BE  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 15840  0034C0  0E03               	movlw	3
 15841  0034C2  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 15842  0034C4  6E16               	movwf	LCD_DrawRect@posX2^0,c
 15843  0034C6  0E00               	movlw	0
 15844  0034C8  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 15845  0034CA  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 15846  0034CC  0E03               	movlw	3
 15847  0034CE  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 15848  0034D0  6E18               	movwf	LCD_DrawRect@posY2^0,c
 15849  0034D2  0E00               	movlw	0
 15850  0034D4  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 15851  0034D6  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 15852  0034D8  0E01               	movlw	1
 15853  0034DA  6E1A               	movwf	LCD_DrawRect@fill^0,c
 15854  0034DC  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 15855  0034E0  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 15856  0034E4  EC02  F014         	call	_LCD_DrawRect	;wreg free
 15857                           
 15858                           ;libraries/lcd_highlevel.c: 451:     LCD_DrawRect(x1+1, y1+1, x2-1, y1+2, 1, colorIn);
 15859  0034E8  0E01               	movlw	1
 15860  0034EA  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 15861  0034EC  6E12               	movwf	LCD_DrawRect@posX1^0,c
 15862  0034EE  0E00               	movlw	0
 15863  0034F0  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 15864  0034F2  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 15865  0034F4  0E01               	movlw	1
 15866  0034F6  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 15867  0034F8  6E14               	movwf	LCD_DrawRect@posY1^0,c
 15868  0034FA  0E00               	movlw	0
 15869  0034FC  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 15870  0034FE  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 15871  003500  0EFF               	movlw	255
 15872  003502  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 15873  003504  6E16               	movwf	LCD_DrawRect@posX2^0,c
 15874  003506  0EFF               	movlw	255
 15875  003508  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 15876  00350A  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 15877  00350C  0E02               	movlw	2
 15878  00350E  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 15879  003510  6E18               	movwf	LCD_DrawRect@posY2^0,c
 15880  003512  0E00               	movlw	0
 15881  003514  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 15882  003516  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 15883  003518  0E01               	movlw	1
 15884  00351A  6E1A               	movwf	LCD_DrawRect@fill^0,c
 15885  00351C  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 15886  003520  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 15887  003524  EC02  F014         	call	_LCD_DrawRect	;wreg free
 15888                           
 15889                           ;libraries/lcd_highlevel.c: 452:     LCD_DrawRect(x1+1, y1+1, x1+2, y2-1, 1, colorIn);
 15890  003528  0E01               	movlw	1
 15891  00352A  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 15892  00352C  6E12               	movwf	LCD_DrawRect@posX1^0,c
 15893  00352E  0E00               	movlw	0
 15894  003530  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 15895  003532  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 15896  003534  0E01               	movlw	1
 15897  003536  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 15898  003538  6E14               	movwf	LCD_DrawRect@posY1^0,c
 15899  00353A  0E00               	movlw	0
 15900  00353C  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 15901  00353E  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 15902  003540  0E02               	movlw	2
 15903  003542  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 15904  003544  6E16               	movwf	LCD_DrawRect@posX2^0,c
 15905  003546  0E00               	movlw	0
 15906  003548  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 15907  00354A  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 15908  00354C  0EFF               	movlw	255
 15909  00354E  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 15910  003550  6E18               	movwf	LCD_DrawRect@posY2^0,c
 15911  003552  0EFF               	movlw	255
 15912  003554  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 15913  003556  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 15914  003558  0E01               	movlw	1
 15915  00355A  6E1A               	movwf	LCD_DrawRect@fill^0,c
 15916  00355C  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 15917  003560  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 15918  003564  EC02  F014         	call	_LCD_DrawRect	;wreg free
 15919  003568                     l239:
 15920  003568  0012               	return		;funcret
 15921  00356A                     __end_of_LCD_ButtonUpdate:
 15922                           	callstack 0
 15923                           
 15924 ;; *************** function _LCD_Read *****************
 15925 ;; Defined at:
 15926 ;;		line 64 in file "libraries/lcd_lowlevel.c"
 15927 ;; Parameters:    Size  Location     Type
 15928 ;;  posX            2   17[COMRAM] unsigned short 
 15929 ;;  posY            2   19[COMRAM] unsigned short 
 15930 ;; Auto vars:     Size  Location     Type
 15931 ;;  temp16          2   25[COMRAM] unsigned short 
 15932 ;;  color           2   23[COMRAM] unsigned short 
 15933 ;; Return value:  Size  Location     Type
 15934 ;;                  2   17[COMRAM] unsigned short 
 15935 ;; Registers used:
 15936 ;;		wreg, status,2, status,0
 15937 ;; Tracked objects:
 15938 ;;		On entry : 0/0
 15939 ;;		On exit  : 0/0
 15940 ;;		Unchanged: 0/0
 15941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15942 ;;      Params:         4       0       0       0       0       0       0
 15943 ;;      Locals:         4       0       0       0       0       0       0
 15944 ;;      Temps:          2       0       0       0       0       0       0
 15945 ;;      Totals:        10       0       0       0       0       0       0
 15946 ;;Total ram usage:       10 bytes
 15947 ;; Hardware stack levels used: 1
 15948 ;; Hardware stack levels required when called: 4
 15949 ;; This function calls:
 15950 ;;		Nothing
 15951 ;; This function is called by:
 15952 ;;		_LCD_ButtonUpdate
 15953 ;; This function uses a non-reentrant model
 15954 ;;
 15955                           
 15956                           	psect	text65
 15957  0040C2                     __ptext65:
 15958                           	callstack 0
 15959  0040C2                     _LCD_Read:
 15960                           	callstack 19
 15961  0040C2                     
 15962                           ;libraries/lcd_lowlevel.c: 64: uint16_t LCD_Read(uint16_t posX, uint16_t posY);libraries
      +                          /lcd_lowlevel.c: 65: {;libraries/lcd_lowlevel.c: 66:  uint16_t temp16;;libraries/lcd_low
      +                          level.c: 67:   uint16_t color;;libraries/lcd_lowlevel.c: 70:   PORTA = 0x2A; LATC4 = 0; 
      +                          LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 15963  0040C2  0E2A               	movlw	42
 15964  0040C4  6E80               	movwf	128,c	;volatile
 15965  0040C6  988B               	bcf	3979,4,c	;volatile
 15966  0040C8  968B               	bcf	3979,3,c	;volatile
 15967  0040CA  868B               	bsf	3979,3,c	;volatile
 15968  0040CC  888B               	bsf	3979,4,c	;volatile
 15969                           
 15970                           ;libraries/lcd_lowlevel.c: 71:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 15971  0040CE  5013               	movf	(LCD_Read@posX+1)^0,w,c
 15972  0040D0  6E80               	movwf	128,c	;volatile
 15973  0040D2  968B               	bcf	3979,3,c	;volatile
 15974  0040D4  868B               	bsf	3979,3,c	;volatile
 15975  0040D6                     
 15976                           ;libraries/lcd_lowlevel.c: 72:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 15977  0040D6  C012  FF80         	movff	LCD_Read@posX,3968	;volatile
 15978  0040DA  968B               	bcf	3979,3,c	;volatile
 15979  0040DC  868B               	bsf	3979,3,c	;volatile
 15980                           
 15981                           ;libraries/lcd_lowlevel.c: 73:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 15982  0040DE  0E00               	movlw	0
 15983  0040E0  6E80               	movwf	128,c	;volatile
 15984  0040E2  968B               	bcf	3979,3,c	;volatile
 15985  0040E4  868B               	bsf	3979,3,c	;volatile
 15986                           
 15987                           ;libraries/lcd_lowlevel.c: 74:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 15988  0040E6  0EEF               	movlw	239
 15989  0040E8  6E80               	movwf	128,c	;volatile
 15990  0040EA  968B               	bcf	3979,3,c	;volatile
 15991  0040EC  868B               	bsf	3979,3,c	;volatile
 15992                           
 15993                           ;libraries/lcd_lowlevel.c: 76:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 15994  0040EE  0E2B               	movlw	43
 15995  0040F0  6E80               	movwf	128,c	;volatile
 15996  0040F2  988B               	bcf	3979,4,c	;volatile
 15997  0040F4  968B               	bcf	3979,3,c	;volatile
 15998  0040F6  868B               	bsf	3979,3,c	;volatile
 15999  0040F8  888B               	bsf	3979,4,c	;volatile
 16000                           
 16001                           ;libraries/lcd_lowlevel.c: 77:   PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 16002  0040FA  5015               	movf	(LCD_Read@posY+1)^0,w,c
 16003  0040FC  6E80               	movwf	128,c	;volatile
 16004  0040FE  968B               	bcf	3979,3,c	;volatile
 16005  004100  868B               	bsf	3979,3,c	;volatile
 16006  004102                     
 16007                           ;libraries/lcd_lowlevel.c: 78:   PORTA = posY; LATC3 = 0; LATC3 = 1;;
 16008  004102  C014  FF80         	movff	LCD_Read@posY,3968	;volatile
 16009  004106  968B               	bcf	3979,3,c	;volatile
 16010  004108  868B               	bsf	3979,3,c	;volatile
 16011                           
 16012                           ;libraries/lcd_lowlevel.c: 79:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 16013  00410A  0E01               	movlw	1
 16014  00410C  6E80               	movwf	128,c	;volatile
 16015  00410E  968B               	bcf	3979,3,c	;volatile
 16016  004110  868B               	bsf	3979,3,c	;volatile
 16017                           
 16018                           ;libraries/lcd_lowlevel.c: 80:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 16019  004112  0E3F               	movlw	63
 16020  004114  6E80               	movwf	128,c	;volatile
 16021  004116  968B               	bcf	3979,3,c	;volatile
 16022  004118  868B               	bsf	3979,3,c	;volatile
 16023                           
 16024                           ;libraries/lcd_lowlevel.c: 82:   PORTA = 0x2E; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 16025  00411A  0E2E               	movlw	46
 16026  00411C  6E80               	movwf	128,c	;volatile
 16027  00411E  988B               	bcf	3979,4,c	;volatile
 16028  004120  968B               	bcf	3979,3,c	;volatile
 16029  004122  868B               	bsf	3979,3,c	;volatile
 16030  004124  888B               	bsf	3979,4,c	;volatile
 16031  004126                     
 16032                           ;libraries/lcd_lowlevel.c: 83:  TRISA = 0xFF;
 16033  004126  6892               	setf	146,c	;volatile
 16034  004128                     
 16035                           ;libraries/lcd_lowlevel.c: 84:  LATC2 = 0;
 16036  004128  948B               	bcf	3979,2,c	;volatile
 16037  00412A                     
 16038                           ;libraries/lcd_lowlevel.c: 85:   __nop();
 16039  00412A  F000               	nop	
 16040  00412C                     
 16041                           ;libraries/lcd_lowlevel.c: 86:  LATC2 = 1;
 16042  00412C  848B               	bsf	3979,2,c	;volatile
 16043  00412E                     
 16044                           ;libraries/lcd_lowlevel.c: 87:  TRISA = 0xFF;
 16045  00412E  6892               	setf	146,c	;volatile
 16046  004130                     
 16047                           ;libraries/lcd_lowlevel.c: 88:  LATC2 = 0;
 16048  004130  948B               	bcf	3979,2,c	;volatile
 16049  004132                     
 16050                           ;libraries/lcd_lowlevel.c: 89:   __nop();
 16051  004132  F000               	nop	
 16052  004134                     
 16053                           ;libraries/lcd_lowlevel.c: 90:  temp16 = PORTA;
 16054  004134  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 16055  004138  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 16056  00413A                     
 16057                           ;libraries/lcd_lowlevel.c: 91:  LATC2 = 1;
 16058  00413A  848B               	bsf	3979,2,c	;volatile
 16059  00413C                     
 16060                           ;libraries/lcd_lowlevel.c: 92:   temp16 = temp16 >> 3;
 16061  00413C  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 16062  004140  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 16063  004144  90D8               	bcf	status,0,c
 16064  004146  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16065  004148  3216               	rrcf	??_LCD_Read^0,f,c
 16066  00414A  90D8               	bcf	status,0,c
 16067  00414C  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16068  00414E  3216               	rrcf	??_LCD_Read^0,f,c
 16069  004150  90D8               	bcf	status,0,c
 16070  004152  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16071  004154  3216               	rrcf	??_LCD_Read^0,f,c
 16072  004156  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 16073  00415A  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 16074  00415E                     
 16075                           ;libraries/lcd_lowlevel.c: 93:   color = temp16 << 11;
 16076  00415E  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 16077  004162  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 16078  004166  0E0B               	movlw	11
 16079  004168                     u5505:
 16080  004168  90D8               	bcf	status,0,c
 16081  00416A  3616               	rlcf	??_LCD_Read^0,f,c
 16082  00416C  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 16083  00416E  2EE8               	decfsz	wreg,f,c
 16084  004170  EFB4  F020         	goto	u5505
 16085  004174  C016  F018         	movff	??_LCD_Read,LCD_Read@color
 16086  004178  C017  F019         	movff	??_LCD_Read+1,LCD_Read@color+1
 16087  00417C                     
 16088                           ;libraries/lcd_lowlevel.c: 94:  LATC2 = 0;
 16089  00417C  948B               	bcf	3979,2,c	;volatile
 16090  00417E                     
 16091                           ;libraries/lcd_lowlevel.c: 95:   __nop();
 16092  00417E  F000               	nop	
 16093  004180                     
 16094                           ;libraries/lcd_lowlevel.c: 96:  temp16 = PORTA;
 16095  004180  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 16096  004184  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 16097  004186                     
 16098                           ;libraries/lcd_lowlevel.c: 97:  LATC2 = 1;
 16099  004186  848B               	bsf	3979,2,c	;volatile
 16100  004188                     
 16101                           ;libraries/lcd_lowlevel.c: 98:   temp16 = temp16 >> 2;
 16102  004188  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 16103  00418C  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 16104  004190  90D8               	bcf	status,0,c
 16105  004192  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16106  004194  3216               	rrcf	??_LCD_Read^0,f,c
 16107  004196  90D8               	bcf	status,0,c
 16108  004198  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16109  00419A  3216               	rrcf	??_LCD_Read^0,f,c
 16110  00419C  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 16111  0041A0  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 16112  0041A4                     
 16113                           ;libraries/lcd_lowlevel.c: 99:   color |= temp16 << 5;
 16114  0041A4  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 16115  0041A8  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 16116  0041AC  0E05               	movlw	5
 16117  0041AE                     u5515:
 16118  0041AE  90D8               	bcf	status,0,c
 16119  0041B0  3616               	rlcf	??_LCD_Read^0,f,c
 16120  0041B2  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 16121  0041B4  2EE8               	decfsz	wreg,f,c
 16122  0041B6  EFD7  F020         	goto	u5515
 16123  0041BA  5016               	movf	??_LCD_Read^0,w,c
 16124  0041BC  1218               	iorwf	LCD_Read@color^0,f,c
 16125  0041BE  5017               	movf	(??_LCD_Read+1)^0,w,c
 16126  0041C0  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 16127  0041C2                     
 16128                           ;libraries/lcd_lowlevel.c: 100:  LATC2 = 0;
 16129  0041C2  948B               	bcf	3979,2,c	;volatile
 16130  0041C4                     
 16131                           ;libraries/lcd_lowlevel.c: 101:   __nop();
 16132  0041C4  F000               	nop	
 16133  0041C6                     
 16134                           ;libraries/lcd_lowlevel.c: 102:  temp16 |= PORTA;
 16135  0041C6  5080               	movf	128,w,c	;volatile
 16136  0041C8  121A               	iorwf	LCD_Read@temp16^0,f,c
 16137  0041CA                     
 16138                           ;libraries/lcd_lowlevel.c: 103:  LATC2 = 1;
 16139  0041CA  848B               	bsf	3979,2,c	;volatile
 16140  0041CC                     
 16141                           ;libraries/lcd_lowlevel.c: 104:   temp16 = temp16 >> 3;
 16142  0041CC  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 16143  0041D0  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 16144  0041D4  90D8               	bcf	status,0,c
 16145  0041D6  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16146  0041D8  3216               	rrcf	??_LCD_Read^0,f,c
 16147  0041DA  90D8               	bcf	status,0,c
 16148  0041DC  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16149  0041DE  3216               	rrcf	??_LCD_Read^0,f,c
 16150  0041E0  90D8               	bcf	status,0,c
 16151  0041E2  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16152  0041E4  3216               	rrcf	??_LCD_Read^0,f,c
 16153  0041E6  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 16154  0041EA  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 16155  0041EE                     
 16156                           ;libraries/lcd_lowlevel.c: 105:   color |= temp16;
 16157  0041EE  501A               	movf	LCD_Read@temp16^0,w,c
 16158  0041F0  1218               	iorwf	LCD_Read@color^0,f,c
 16159  0041F2  501B               	movf	(LCD_Read@temp16+1)^0,w,c
 16160  0041F4  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 16161  0041F6                     
 16162                           ;libraries/lcd_lowlevel.c: 106:  TRISA = 0x00;
 16163  0041F6  0E00               	movlw	0
 16164  0041F8  6E92               	movwf	146,c	;volatile
 16165  0041FA                     
 16166                           ;libraries/lcd_lowlevel.c: 107:  return color;
 16167  0041FA  C018  F012         	movff	LCD_Read@color,?_LCD_Read
 16168  0041FE  C019  F013         	movff	LCD_Read@color+1,?_LCD_Read+1
 16169  004202  0012               	return		;funcret
 16170  004204                     __end_of_LCD_Read:
 16171                           	callstack 0
 16172                           
 16173 ;; *************** function _LCD_Bitmap *****************
 16174 ;; Defined at:
 16175 ;;		line 823 in file "libraries/lcd_highlevel.c"
 16176 ;; Parameters:    Size  Location     Type
 16177 ;;  bmpPtr          2   38[COMRAM] PTR const unsigned char 
 16178 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
 16179 ;;		 -> STR_3(9), STR_2(11), 
 16180 ;;  posX            2   40[COMRAM] unsigned short 
 16181 ;;  posY            2   42[COMRAM] unsigned short 
 16182 ;; Auto vars:     Size  Location     Type
 16183 ;;  bfOffBits       4    0[BANK0 ] unsigned long 
 16184 ;;  i               2   26[BANK0 ] unsigned short 
 16185 ;;  jumpColor       2   24[BANK0 ] unsigned short 
 16186 ;;  biWidth         2   22[BANK0 ] unsigned short 
 16187 ;;  newY            2   19[BANK0 ] unsigned short 
 16188 ;;  strPtr          2   17[BANK0 ] PTR struct .
 16189 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
 16190 ;;		 -> STR_3(9), STR_2(11), 
 16191 ;;  curXPos         2   15[BANK0 ] unsigned short 
 16192 ;;  color           2   13[BANK0 ] unsigned short 
 16193 ;;  biHeight        2   11[BANK0 ] unsigned short 
 16194 ;;  colorTablePt    2    9[BANK0 ] PTR unsigned char 
 16195 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
 16196 ;;		 -> STR_3(9), STR_2(11), 
 16197 ;;  curYPos         2    7[BANK0 ] unsigned short 
 16198 ;;  jumpCount       2    5[BANK0 ] unsigned short 
 16199 ;;  pixelCount      1   21[BANK0 ] unsigned char 
 16200 ;;  endOfImage      1    4[BANK0 ] unsigned char 
 16201 ;; Return value:  Size  Location     Type
 16202 ;;                  1    wreg      unsigned char 
 16203 ;; Registers used:
 16204 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16205 ;; Tracked objects:
 16206 ;;		On entry : 0/0
 16207 ;;		On exit  : 0/0
 16208 ;;		Unchanged: 0/0
 16209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16210 ;;      Params:         6       0       0       0       0       0       0
 16211 ;;      Locals:         0      28       0       0       0       0       0
 16212 ;;      Temps:          4       0       0       0       0       0       0
 16213 ;;      Totals:        10      28       0       0       0       0       0
 16214 ;;Total ram usage:       38 bytes
 16215 ;; Hardware stack levels used: 1
 16216 ;; Hardware stack levels required when called: 5
 16217 ;; This function calls:
 16218 ;;		_RGB2LCD
 16219 ;;		___lwdiv
 16220 ;;		___lwmod
 16221 ;;		___wmul
 16222 ;; This function is called by:
 16223 ;;		_LCD_ButtonDraw
 16224 ;; This function uses a non-reentrant model
 16225 ;;
 16226                           
 16227                           	psect	text66
 16228  00085E                     __ptext66:
 16229                           	callstack 0
 16230  00085E                     _LCD_Bitmap:
 16231                           	callstack 19
 16232  00085E                     
 16233                           ;libraries/lcd_highlevel.c: 823: uint8_t LCD_Bitmap(const uint8_t * bmpPtr, uint16_t pos
      +                          X, uint16_t posY);libraries/lcd_highlevel.c: 824: {;libraries/lcd_highlevel.c: 825:   ui
      +                          nt32_t bfOffBits;;libraries/lcd_highlevel.c: 826:   uint16_t biWidth, biHeight;;librarie
      +                          s/lcd_highlevel.c: 827:   uint8_t * colorTablePtr;;libraries/lcd_highlevel.c: 828:   uin
      +                          t8_t endOfImage;;libraries/lcd_highlevel.c: 829:   uint16_t i,curXPos,curYPos;;libraries
      +                          /lcd_highlevel.c: 830:   uint8_t pixelCount;;libraries/lcd_highlevel.c: 831:   uint16_t 
      +                          color;
 16234  00085E  C027  F071         	movff	LCD_Bitmap@bmpPtr,LCD_Bitmap@strPtr
 16235  000862  C028  F072         	movff	LCD_Bitmap@bmpPtr+1,LCD_Bitmap@strPtr+1
 16236  000866                     
 16237                           ;libraries/lcd_highlevel.c: 839:   bfOffBits = strPtr->bfOffBits;
 16238  000866  0E0A               	movlw	10
 16239  000868  0100               	movlb	0	; () banked
 16240  00086A  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 16241  00086C  6E2D               	movwf	??_LCD_Bitmap^0,c
 16242  00086E  0E00               	movlw	0
 16243  000870  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 16244  000872  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16245  000874  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 16246  000878  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 16247  00087C                     	if	0	;tblptru may be non-zero
 16248  00087C                     	endif
 16249  00087C                     	if	0	;tblptru may be non-zero
 16250  00087C                     	endif
 16251  00087C  0009               	tblrd		*+
 16252  00087E  CFF5 F060          	movff	tablat,LCD_Bitmap@bfOffBits
 16253  000882  0009               	tblrd		*+
 16254  000884  CFF5 F061          	movff	tablat,LCD_Bitmap@bfOffBits+1
 16255  000888  0009               	tblrd		*+
 16256  00088A  CFF5 F062          	movff	tablat,LCD_Bitmap@bfOffBits+2
 16257  00088E  000A               	tblrd		*-
 16258  000890  CFF5 F063          	movff	tablat,LCD_Bitmap@bfOffBits+3
 16259  000894                     
 16260                           ; BSR set to: 0
 16261                           ;libraries/lcd_highlevel.c: 840:   biWidth = strPtr->biWidth;
 16262  000894  0E12               	movlw	18
 16263  000896  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 16264  000898  6E2D               	movwf	??_LCD_Bitmap^0,c
 16265  00089A  0E00               	movlw	0
 16266  00089C  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 16267  00089E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16268  0008A0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 16269  0008A4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 16270  0008A8                     	if	0	;tblptru may be non-zero
 16271  0008A8                     	endif
 16272  0008A8                     	if	0	;tblptru may be non-zero
 16273  0008A8                     	endif
 16274  0008A8  0009               	tblrd		*+
 16275  0008AA  CFF5 F076          	movff	tablat,LCD_Bitmap@biWidth
 16276  0008AE  000A               	tblrd		*-
 16277  0008B0  CFF5 F077          	movff	tablat,LCD_Bitmap@biWidth+1
 16278  0008B4                     
 16279                           ; BSR set to: 0
 16280                           ;libraries/lcd_highlevel.c: 841:   biHeight = strPtr->biHeight;
 16281  0008B4  0E16               	movlw	22
 16282  0008B6  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 16283  0008B8  6E2D               	movwf	??_LCD_Bitmap^0,c
 16284  0008BA  0E00               	movlw	0
 16285  0008BC  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 16286  0008BE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16287  0008C0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 16288  0008C4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 16289  0008C8                     	if	0	;tblptru may be non-zero
 16290  0008C8                     	endif
 16291  0008C8                     	if	0	;tblptru may be non-zero
 16292  0008C8                     	endif
 16293  0008C8  0009               	tblrd		*+
 16294  0008CA  CFF5 F06B          	movff	tablat,LCD_Bitmap@biHeight
 16295  0008CE  000A               	tblrd		*-
 16296  0008D0  CFF5 F06C          	movff	tablat,LCD_Bitmap@biHeight+1
 16297  0008D4                     
 16298                           ; BSR set to: 0
 16299                           ;libraries/lcd_highlevel.c: 842:   if((strPtr->biBitCount != 8) ||
 16300  0008D4  0E1C               	movlw	28
 16301  0008D6  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 16302  0008D8  6E2D               	movwf	??_LCD_Bitmap^0,c
 16303  0008DA  0E00               	movlw	0
 16304  0008DC  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 16305  0008DE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16306  0008E0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 16307  0008E4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 16308  0008E8                     	if	0	;tblptru may be non-zero
 16309  0008E8                     	endif
 16310  0008E8                     	if	0	;tblptru may be non-zero
 16311  0008E8                     	endif
 16312  0008E8  0009               	tblrd		*+
 16313  0008EA  0E08               	movlw	8
 16314  0008EC  18F5               	xorwf	tablat,w,c
 16315  0008EE  0009               	tblrd		*+
 16316  0008F0  10F5               	iorwf	tablat,w,c
 16317  0008F2  A4D8               	btfss	status,2,c
 16318  0008F4  EF7E  F004         	goto	u6001
 16319  0008F8  EF80  F004         	goto	u6000
 16320  0008FC                     u6001:
 16321  0008FC  EF29  F007         	goto	l317
 16322  000900                     u6000:
 16323  000900                     
 16324                           ; BSR set to: 0
 16325  000900  0E1E               	movlw	30
 16326  000902  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 16327  000904  6E2D               	movwf	??_LCD_Bitmap^0,c
 16328  000906  0E00               	movlw	0
 16329  000908  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 16330  00090A  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16331  00090C  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 16332  000910  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 16333  000914                     	if	0	;tblptru may be non-zero
 16334  000914                     	endif
 16335  000914                     	if	0	;tblptru may be non-zero
 16336  000914                     	endif
 16337  000914  0009               	tblrd		*+
 16338  000916  04F5               	decf	tablat,w,c
 16339  000918  0009               	tblrd		*+
 16340  00091A  10F5               	iorwf	tablat,w,c
 16341  00091C  0009               	tblrd		*+
 16342  00091E  10F5               	iorwf	tablat,w,c
 16343  000920  0009               	tblrd		*+
 16344  000922  10F5               	iorwf	tablat,w,c
 16345  000924  B4D8               	btfsc	status,2,c
 16346  000926  EF97  F004         	goto	u6011
 16347  00092A  EF99  F004         	goto	u6010
 16348  00092E                     u6011:
 16349  00092E  EF9B  F004         	goto	l8732
 16350  000932                     u6010:
 16351  000932  EF29  F007         	goto	l317
 16352  000936                     l8732:
 16353                           
 16354                           ; BSR set to: 0
 16355                           ;libraries/lcd_highlevel.c: 847:   if(((posX + biWidth) > (240)) ||
 16356  000936  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 16357  000938  2429               	addwf	LCD_Bitmap@posX^0,w,c
 16358  00093A  6E2D               	movwf	??_LCD_Bitmap^0,c
 16359  00093C  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 16360  00093E  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 16361  000940  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16362  000942  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 16363  000944  E107               	bnz	u6021
 16364  000946  0EF1               	movlw	241
 16365  000948  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 16366  00094A  B0D8               	btfsc	status,0,c
 16367  00094C  EFAA  F004         	goto	u6021
 16368  000950  EFAC  F004         	goto	u6020
 16369  000954                     u6021:
 16370  000954  EF29  F007         	goto	l317
 16371  000958                     u6020:
 16372  000958                     
 16373                           ; BSR set to: 0
 16374  000958  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 16375  00095A  242B               	addwf	LCD_Bitmap@posY^0,w,c
 16376  00095C  6E2D               	movwf	??_LCD_Bitmap^0,c
 16377  00095E  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 16378  000960  202C               	addwfc	(LCD_Bitmap@posY+1)^0,w,c
 16379  000962  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16380  000964  0E41               	movlw	65
 16381  000966  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 16382  000968  0E01               	movlw	1
 16383  00096A  582E               	subwfb	(??_LCD_Bitmap+1)^0,w,c
 16384  00096C  A0D8               	btfss	status,0,c
 16385  00096E  EFBB  F004         	goto	u6031
 16386  000972  EFBD  F004         	goto	u6030
 16387  000976                     u6031:
 16388  000976  EFBF  F004         	goto	l8736
 16389  00097A                     u6030:
 16390  00097A  EF29  F007         	goto	l317
 16391  00097E                     l8736:
 16392                           
 16393                           ; BSR set to: 0
 16394                           ;libraries/lcd_highlevel.c: 853:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 16395  00097E  0E36               	movlw	54
 16396  000980  6E80               	movwf	128,c	;volatile
 16397  000982                     
 16398                           ; BSR set to: 0
 16399  000982  988B               	bcf	3979,4,c	;volatile
 16400  000984                     
 16401                           ; BSR set to: 0
 16402  000984  968B               	bcf	3979,3,c	;volatile
 16403  000986                     
 16404                           ; BSR set to: 0
 16405  000986  868B               	bsf	3979,3,c	;volatile
 16406  000988                     
 16407                           ; BSR set to: 0
 16408  000988  888B               	bsf	3979,4,c	;volatile
 16409                           
 16410                           ;libraries/lcd_highlevel.c: 855:   PORTA = 0b10000000; LATC3 = 0; LATC3 = 1;;
 16411  00098A  0E80               	movlw	128
 16412  00098C  6E80               	movwf	128,c	;volatile
 16413  00098E                     
 16414                           ; BSR set to: 0
 16415  00098E  968B               	bcf	3979,3,c	;volatile
 16416  000990                     
 16417                           ; BSR set to: 0
 16418  000990  868B               	bsf	3979,3,c	;volatile
 16419  000992                     
 16420                           ; BSR set to: 0
 16421                           ;libraries/lcd_highlevel.c: 857:   colorTablePtr = (uint8_t *)bmpPtr + 54;
 16422  000992  0E36               	movlw	54
 16423  000994  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 16424  000996  6F69               	movwf	LCD_Bitmap@colorTablePtr& (0+255),b
 16425  000998  0E00               	movlw	0
 16426  00099A  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 16427  00099C  6F6A               	movwf	(LCD_Bitmap@colorTablePtr+1)& (0+255),b
 16428  00099E                     
 16429                           ; BSR set to: 0
 16430                           ;libraries/lcd_highlevel.c: 858:   bmpPtr += bfOffBits;
 16431  00099E  5160               	movf	LCD_Bitmap@bfOffBits& (0+255),w,b
 16432  0009A0  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 16433  0009A2  5161               	movf	(LCD_Bitmap@bfOffBits+1)& (0+255),w,b
 16434  0009A4  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 16435                           
 16436                           ;libraries/lcd_highlevel.c: 859:   endOfImage = 0;
 16437  0009A6  0E00               	movlw	0
 16438  0009A8  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 16439  0009AA                     
 16440                           ; BSR set to: 0
 16441                           ;libraries/lcd_highlevel.c: 860:   jumpColor = RGB2LCD(colorTablePtr);
 16442  0009AA  C069  F012         	movff	LCD_Bitmap@colorTablePtr,RGB2LCD@colorTableEntry
 16443  0009AE  C06A  F013         	movff	LCD_Bitmap@colorTablePtr+1,RGB2LCD@colorTableEntry+1
 16444  0009B2  EC64  F027         	call	_RGB2LCD	;wreg free
 16445  0009B6  C012  F078         	movff	?_RGB2LCD,LCD_Bitmap@jumpColor
 16446  0009BA  C013  F079         	movff	?_RGB2LCD+1,LCD_Bitmap@jumpColor+1
 16447  0009BE                     
 16448                           ;libraries/lcd_highlevel.c: 862:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 16449  0009BE  0E2A               	movlw	42
 16450  0009C0  6E80               	movwf	128,c	;volatile
 16451  0009C2  988B               	bcf	3979,4,c	;volatile
 16452  0009C4  968B               	bcf	3979,3,c	;volatile
 16453  0009C6  868B               	bsf	3979,3,c	;volatile
 16454  0009C8  888B               	bsf	3979,4,c	;volatile
 16455  0009CA                     
 16456                           ;libraries/lcd_highlevel.c: 863:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 16457  0009CA  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 16458  0009CC  6E80               	movwf	128,c	;volatile
 16459  0009CE  968B               	bcf	3979,3,c	;volatile
 16460  0009D0  868B               	bsf	3979,3,c	;volatile
 16461  0009D2                     
 16462                           ;libraries/lcd_highlevel.c: 864:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 16463  0009D2  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 16464  0009D6  968B               	bcf	3979,3,c	;volatile
 16465  0009D8  868B               	bsf	3979,3,c	;volatile
 16466  0009DA                     
 16467                           ;libraries/lcd_highlevel.c: 865:   posX = posX + biWidth-1;
 16468  0009DA  0100               	movlb	0	; () banked
 16469  0009DC  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 16470  0009DE  2429               	addwf	LCD_Bitmap@posX^0,w,c
 16471  0009E0  6E2D               	movwf	??_LCD_Bitmap^0,c
 16472  0009E2  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 16473  0009E4  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 16474  0009E6  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16475  0009E8  0EFF               	movlw	255
 16476  0009EA  242D               	addwf	??_LCD_Bitmap^0,w,c
 16477  0009EC  6E29               	movwf	LCD_Bitmap@posX^0,c
 16478  0009EE  0EFF               	movlw	255
 16479  0009F0  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 16480  0009F2  6E2A               	movwf	(LCD_Bitmap@posX+1)^0,c
 16481  0009F4                     
 16482                           ; BSR set to: 0
 16483                           ;libraries/lcd_highlevel.c: 866:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 16484  0009F4  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 16485  0009F6  6E80               	movwf	128,c	;volatile
 16486  0009F8                     
 16487                           ; BSR set to: 0
 16488  0009F8  968B               	bcf	3979,3,c	;volatile
 16489  0009FA                     
 16490                           ; BSR set to: 0
 16491  0009FA  868B               	bsf	3979,3,c	;volatile
 16492  0009FC                     
 16493                           ; BSR set to: 0
 16494                           ;libraries/lcd_highlevel.c: 867:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 16495  0009FC  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 16496  000A00                     
 16497                           ; BSR set to: 0
 16498  000A00  968B               	bcf	3979,3,c	;volatile
 16499  000A02                     
 16500                           ; BSR set to: 0
 16501  000A02  868B               	bsf	3979,3,c	;volatile
 16502  000A04                     
 16503                           ; BSR set to: 0
 16504                           ;libraries/lcd_highlevel.c: 869:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 16505  000A04  0E2B               	movlw	43
 16506  000A06  6E80               	movwf	128,c	;volatile
 16507  000A08                     
 16508                           ; BSR set to: 0
 16509  000A08  988B               	bcf	3979,4,c	;volatile
 16510  000A0A                     
 16511                           ; BSR set to: 0
 16512  000A0A  968B               	bcf	3979,3,c	;volatile
 16513  000A0C                     
 16514                           ; BSR set to: 0
 16515  000A0C  868B               	bsf	3979,3,c	;volatile
 16516  000A0E                     
 16517                           ; BSR set to: 0
 16518  000A0E  888B               	bsf	3979,4,c	;volatile
 16519  000A10                     
 16520                           ; BSR set to: 0
 16521                           ;libraries/lcd_highlevel.c: 870:   newY = 320 - posY - biHeight;
 16522  000A10  C02B  F02D         	movff	LCD_Bitmap@posY,??_LCD_Bitmap
 16523  000A14  C02C  F02E         	movff	LCD_Bitmap@posY+1,??_LCD_Bitmap+1
 16524  000A18  1E2D               	comf	??_LCD_Bitmap^0,f,c
 16525  000A1A  1E2E               	comf	(??_LCD_Bitmap+1)^0,f,c
 16526  000A1C  4A2D               	infsnz	??_LCD_Bitmap^0,f,c
 16527  000A1E  2A2E               	incf	(??_LCD_Bitmap+1)^0,f,c
 16528  000A20  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 16529  000A22  5E2D               	subwf	??_LCD_Bitmap^0,f,c
 16530  000A24  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 16531  000A26  5A2E               	subwfb	(??_LCD_Bitmap+1)^0,f,c
 16532  000A28  0E40               	movlw	64
 16533  000A2A  242D               	addwf	??_LCD_Bitmap^0,w,c
 16534  000A2C  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 16535  000A2E  0E01               	movlw	1
 16536  000A30  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 16537  000A32  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 16538  000A34                     
 16539                           ; BSR set to: 0
 16540                           ;libraries/lcd_highlevel.c: 871:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 16541  000A34  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 16542  000A36  6E80               	movwf	128,c	;volatile
 16543  000A38                     
 16544                           ; BSR set to: 0
 16545  000A38  968B               	bcf	3979,3,c	;volatile
 16546  000A3A                     
 16547                           ; BSR set to: 0
 16548  000A3A  868B               	bsf	3979,3,c	;volatile
 16549  000A3C                     
 16550                           ; BSR set to: 0
 16551                           ;libraries/lcd_highlevel.c: 872:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 16552  000A3C  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 16553  000A40                     
 16554                           ; BSR set to: 0
 16555  000A40  968B               	bcf	3979,3,c	;volatile
 16556  000A42                     
 16557                           ; BSR set to: 0
 16558  000A42  868B               	bsf	3979,3,c	;volatile
 16559  000A44                     
 16560                           ; BSR set to: 0
 16561                           ;libraries/lcd_highlevel.c: 873:   newY = newY + biHeight-1;
 16562  000A44  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 16563  000A46  2573               	addwf	LCD_Bitmap@newY& (0+255),w,b
 16564  000A48  6E2D               	movwf	??_LCD_Bitmap^0,c
 16565  000A4A  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 16566  000A4C  2174               	addwfc	(LCD_Bitmap@newY+1)& (0+255),w,b
 16567  000A4E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16568  000A50  0EFF               	movlw	255
 16569  000A52  242D               	addwf	??_LCD_Bitmap^0,w,c
 16570  000A54  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 16571  000A56  0EFF               	movlw	255
 16572  000A58  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 16573  000A5A  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 16574  000A5C                     
 16575                           ; BSR set to: 0
 16576                           ;libraries/lcd_highlevel.c: 874:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 16577  000A5C  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 16578  000A5E  6E80               	movwf	128,c	;volatile
 16579  000A60                     
 16580                           ; BSR set to: 0
 16581  000A60  968B               	bcf	3979,3,c	;volatile
 16582  000A62                     
 16583                           ; BSR set to: 0
 16584  000A62  868B               	bsf	3979,3,c	;volatile
 16585  000A64                     
 16586                           ; BSR set to: 0
 16587                           ;libraries/lcd_highlevel.c: 875:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 16588  000A64  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 16589  000A68                     
 16590                           ; BSR set to: 0
 16591  000A68  968B               	bcf	3979,3,c	;volatile
 16592  000A6A                     
 16593                           ; BSR set to: 0
 16594  000A6A  868B               	bsf	3979,3,c	;volatile
 16595  000A6C                     
 16596                           ; BSR set to: 0
 16597                           ;libraries/lcd_highlevel.c: 877:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 16598  000A6C  0E2C               	movlw	44
 16599  000A6E  6E80               	movwf	128,c	;volatile
 16600  000A70                     
 16601                           ; BSR set to: 0
 16602  000A70  988B               	bcf	3979,4,c	;volatile
 16603  000A72                     
 16604                           ; BSR set to: 0
 16605  000A72  968B               	bcf	3979,3,c	;volatile
 16606  000A74                     
 16607                           ; BSR set to: 0
 16608  000A74  868B               	bsf	3979,3,c	;volatile
 16609  000A76                     
 16610                           ; BSR set to: 0
 16611  000A76  888B               	bsf	3979,4,c	;volatile
 16612  000A78                     
 16613                           ; BSR set to: 0
 16614                           ;libraries/lcd_highlevel.c: 878:   curXPos = 0;
 16615  000A78  0E00               	movlw	0
 16616  000A7A  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 16617  000A7C  0E00               	movlw	0
 16618  000A7E  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 16619  000A80                     
 16620                           ; BSR set to: 0
 16621                           ;libraries/lcd_highlevel.c: 879:   curYPos = 0;
 16622  000A80  0E00               	movlw	0
 16623  000A82  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 16624  000A84  0E00               	movlw	0
 16625  000A86  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 16626  000A88                     l8844:
 16627                           
 16628                           ; BSR set to: 0
 16629                           ;libraries/lcd_highlevel.c: 881:   {;libraries/lcd_highlevel.c: 882:     if(bmpPtr[0] ==
      +                           0)
 16630  000A88  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 16631  000A8C  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 16632  000A90                     	if	0	;tblptru may be non-zero
 16633  000A90                     	endif
 16634  000A90                     	if	0	;tblptru may be non-zero
 16635  000A90                     	endif
 16636  000A90  0008               	tblrd		*
 16637  000A92  50F5               	movf	tablat,w,c
 16638  000A94  0900               	iorlw	0
 16639  000A96  A4D8               	btfss	status,2,c
 16640  000A98  EF50  F005         	goto	u6041
 16641  000A9C  EF52  F005         	goto	u6040
 16642  000AA0                     u6041:
 16643  000AA0  EFCD  F006         	goto	l8970
 16644  000AA4                     u6040:
 16645  000AA4  EFA9  F006         	goto	l8968
 16646  000AA8                     l8848:
 16647                           
 16648                           ; BSR set to: 0
 16649                           ;libraries/lcd_highlevel.c: 887:           bmpPtr += 2;
 16650  000AA8  0E02               	movlw	2
 16651  000AAA  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 16652  000AAC  0E00               	movlw	0
 16653  000AAE  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 16654  000AB0                     
 16655                           ; BSR set to: 0
 16656                           ;libraries/lcd_highlevel.c: 888:           for(i=0;i<biWidth - curXPos;i++)
 16657  000AB0  0E00               	movlw	0
 16658  000AB2  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 16659  000AB4  0E00               	movlw	0
 16660  000AB6  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 16661  000AB8  EF68  F005         	goto	l8866
 16662  000ABC                     l8852:
 16663                           
 16664                           ; BSR set to: 0
 16665                           ;libraries/lcd_highlevel.c: 889:           {;libraries/lcd_highlevel.c: 890:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 16666  000ABC  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 16667  000ABE  6E80               	movwf	128,c	;volatile
 16668  000AC0                     
 16669                           ; BSR set to: 0
 16670  000AC0  968B               	bcf	3979,3,c	;volatile
 16671  000AC2                     
 16672                           ; BSR set to: 0
 16673  000AC2  868B               	bsf	3979,3,c	;volatile
 16674  000AC4                     
 16675                           ; BSR set to: 0
 16676                           ;libraries/lcd_highlevel.c: 891:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 16677  000AC4  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 16678  000AC8                     
 16679                           ; BSR set to: 0
 16680  000AC8  968B               	bcf	3979,3,c	;volatile
 16681  000ACA                     
 16682                           ; BSR set to: 0
 16683  000ACA  868B               	bsf	3979,3,c	;volatile
 16684  000ACC                     
 16685                           ; BSR set to: 0
 16686                           ;libraries/lcd_highlevel.c: 892:           }
 16687  000ACC  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 16688  000ACE  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 16689  000AD0                     l8866:
 16690                           
 16691                           ; BSR set to: 0
 16692  000AD0  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 16693  000AD2  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 16694  000AD4  6E2D               	movwf	??_LCD_Bitmap^0,c
 16695  000AD6  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 16696  000AD8  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 16697  000ADA  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16698  000ADC  502D               	movf	??_LCD_Bitmap^0,w,c
 16699  000ADE  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 16700  000AE0  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 16701  000AE2  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 16702  000AE4  A0D8               	btfss	status,0,c
 16703  000AE6  EF77  F005         	goto	u6051
 16704  000AEA  EF79  F005         	goto	u6050
 16705  000AEE                     u6051:
 16706  000AEE  EF5E  F005         	goto	l8852
 16707  000AF2                     u6050:
 16708  000AF2                     
 16709                           ; BSR set to: 0
 16710                           ;libraries/lcd_highlevel.c: 893:           curXPos = 0;
 16711  000AF2  0E00               	movlw	0
 16712  000AF4  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 16713  000AF6  0E00               	movlw	0
 16714  000AF8  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 16715  000AFA                     
 16716                           ; BSR set to: 0
 16717                           ;libraries/lcd_highlevel.c: 894:           curYPos++;
 16718  000AFA  4B67               	infsnz	LCD_Bitmap@curYPos& (0+255),f,b
 16719  000AFC  2B68               	incf	(LCD_Bitmap@curYPos+1)& (0+255),f,b
 16720                           
 16721                           ;libraries/lcd_highlevel.c: 895:         break;
 16722  000AFE  EF16  F007         	goto	l8996
 16723  000B02                     l8872:
 16724                           
 16725                           ; BSR set to: 0
 16726                           ;libraries/lcd_highlevel.c: 897:           for(i=0;i<biWidth - curXPos;i++)
 16727  000B02  0E00               	movlw	0
 16728  000B04  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 16729  000B06  0E00               	movlw	0
 16730  000B08  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 16731  000B0A  EF91  F005         	goto	l8888
 16732  000B0E                     l8874:
 16733                           
 16734                           ; BSR set to: 0
 16735                           ;libraries/lcd_highlevel.c: 898:           {;libraries/lcd_highlevel.c: 899:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 16736  000B0E  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 16737  000B10  6E80               	movwf	128,c	;volatile
 16738  000B12                     
 16739                           ; BSR set to: 0
 16740  000B12  968B               	bcf	3979,3,c	;volatile
 16741  000B14                     
 16742                           ; BSR set to: 0
 16743  000B14  868B               	bsf	3979,3,c	;volatile
 16744  000B16                     
 16745                           ; BSR set to: 0
 16746                           ;libraries/lcd_highlevel.c: 900:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 16747  000B16  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 16748  000B1A                     
 16749                           ; BSR set to: 0
 16750  000B1A  968B               	bcf	3979,3,c	;volatile
 16751  000B1C                     
 16752                           ; BSR set to: 0
 16753  000B1C  868B               	bsf	3979,3,c	;volatile
 16754  000B1E                     
 16755                           ; BSR set to: 0
 16756                           ;libraries/lcd_highlevel.c: 901:           }
 16757  000B1E  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 16758  000B20  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 16759  000B22                     l8888:
 16760                           
 16761                           ; BSR set to: 0
 16762  000B22  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 16763  000B24  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 16764  000B26  6E2D               	movwf	??_LCD_Bitmap^0,c
 16765  000B28  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 16766  000B2A  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 16767  000B2C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16768  000B2E  502D               	movf	??_LCD_Bitmap^0,w,c
 16769  000B30  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 16770  000B32  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 16771  000B34  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 16772  000B36  A0D8               	btfss	status,0,c
 16773  000B38  EFA0  F005         	goto	u6061
 16774  000B3C  EFA2  F005         	goto	u6060
 16775  000B40                     u6061:
 16776  000B40  EF87  F005         	goto	l8874
 16777  000B44                     u6060:
 16778  000B44                     
 16779                           ; BSR set to: 0
 16780                           ;libraries/lcd_highlevel.c: 902:           for(i=0;i<(biHeight - curYPos -1)*biWidth;i++
      +                          )
 16781  000B44  0E00               	movlw	0
 16782  000B46  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 16783  000B48  0E00               	movlw	0
 16784  000B4A  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 16785  000B4C  EFB2  F005         	goto	l8906
 16786  000B50                     l8892:
 16787                           
 16788                           ; BSR set to: 0
 16789                           ;libraries/lcd_highlevel.c: 903:           {;libraries/lcd_highlevel.c: 904:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 16790  000B50  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 16791  000B52  6E80               	movwf	128,c	;volatile
 16792  000B54                     
 16793                           ; BSR set to: 0
 16794  000B54  968B               	bcf	3979,3,c	;volatile
 16795  000B56                     
 16796                           ; BSR set to: 0
 16797  000B56  868B               	bsf	3979,3,c	;volatile
 16798  000B58                     
 16799                           ; BSR set to: 0
 16800                           ;libraries/lcd_highlevel.c: 905:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 16801  000B58  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 16802  000B5C                     
 16803                           ; BSR set to: 0
 16804  000B5C  968B               	bcf	3979,3,c	;volatile
 16805  000B5E                     
 16806                           ; BSR set to: 0
 16807  000B5E  868B               	bsf	3979,3,c	;volatile
 16808  000B60                     
 16809                           ; BSR set to: 0
 16810                           ;libraries/lcd_highlevel.c: 906:           }
 16811  000B60  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 16812  000B62  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 16813  000B64                     l8906:
 16814                           
 16815                           ; BSR set to: 0
 16816  000B64  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 16817  000B66  5D6B               	subwf	LCD_Bitmap@biHeight& (0+255),w,b
 16818  000B68  6E2D               	movwf	??_LCD_Bitmap^0,c
 16819  000B6A  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 16820  000B6C  596C               	subwfb	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 16821  000B6E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16822  000B70  0EFF               	movlw	255
 16823  000B72  242D               	addwf	??_LCD_Bitmap^0,w,c
 16824  000B74  6E1A               	movwf	___wmul@multiplier^0,c
 16825  000B76  0EFF               	movlw	255
 16826  000B78  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 16827  000B7A  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 16828  000B7C  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 16829  000B80  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 16830  000B84  EC11  F02F         	call	___wmul	;wreg free
 16831  000B88  501A               	movf	?___wmul^0,w,c
 16832  000B8A  0100               	movlb	0	; () banked
 16833  000B8C  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 16834  000B8E  501B               	movf	(?___wmul+1)^0,w,c
 16835  000B90  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 16836  000B92  A0D8               	btfss	status,0,c
 16837  000B94  EFCE  F005         	goto	u6071
 16838  000B98  EFD0  F005         	goto	u6070
 16839  000B9C                     u6071:
 16840  000B9C  EFA8  F005         	goto	l8892
 16841  000BA0                     u6070:
 16842  000BA0                     
 16843                           ; BSR set to: 0
 16844                           ;libraries/lcd_highlevel.c: 907:           endOfImage = 1;
 16845  000BA0  0E01               	movlw	1
 16846  000BA2  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 16847                           
 16848                           ;libraries/lcd_highlevel.c: 908:         break;
 16849  000BA4  EF16  F007         	goto	l8996
 16850  000BA8                     l8910:
 16851                           
 16852                           ; BSR set to: 0
 16853                           ;libraries/lcd_highlevel.c: 910:           jumpCount = bmpPtr[2] + (bmpPtr[3]*biWidth);
 16854  000BA8  0E03               	movlw	3
 16855  000BAA  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 16856  000BAC  6E2D               	movwf	??_LCD_Bitmap^0,c
 16857  000BAE  0E00               	movlw	0
 16858  000BB0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 16859  000BB2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16860  000BB4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 16861  000BB8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 16862  000BBC                     	if	0	;tblptru may be non-zero
 16863  000BBC                     	endif
 16864  000BBC                     	if	0	;tblptru may be non-zero
 16865  000BBC                     	endif
 16866  000BBC  0008               	tblrd		*
 16867  000BBE  50F5               	movf	tablat,w,c
 16868  000BC0  6E1A               	movwf	___wmul@multiplier^0,c
 16869  000BC2  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 16870  000BC4  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 16871  000BC8  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 16872  000BCC  EC11  F02F         	call	___wmul	;wreg free
 16873  000BD0  0E02               	movlw	2
 16874  000BD2  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 16875  000BD4  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 16876  000BD6  0E00               	movlw	0
 16877  000BD8  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 16878  000BDA  6E30               	movwf	(??_LCD_Bitmap+3)^0,c
 16879  000BDC  C02F  FFF6         	movff	??_LCD_Bitmap+2,tblptrl
 16880  000BE0  C030  FFF7         	movff	??_LCD_Bitmap+3,tblptrh
 16881  000BE4                     	if	0	;tblptru may be non-zero
 16882  000BE4                     	endif
 16883  000BE4                     	if	0	;tblptru may be non-zero
 16884  000BE4                     	endif
 16885  000BE4  0008               	tblrd		*
 16886  000BE6  50F5               	movf	tablat,w,c
 16887  000BE8  241A               	addwf	?___wmul^0,w,c
 16888  000BEA  0100               	movlb	0	; () banked
 16889  000BEC  6F65               	movwf	LCD_Bitmap@jumpCount& (0+255),b
 16890  000BEE  0E00               	movlw	0
 16891  000BF0  201B               	addwfc	(?___wmul+1)^0,w,c
 16892  000BF2  6F66               	movwf	(LCD_Bitmap@jumpCount+1)& (0+255),b
 16893  000BF4                     
 16894                           ; BSR set to: 0
 16895                           ;libraries/lcd_highlevel.c: 911:           for(i=0;i<jumpCount;i++)
 16896  000BF4  0E00               	movlw	0
 16897  000BF6  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 16898  000BF8  0E00               	movlw	0
 16899  000BFA  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 16900  000BFC  EF0C  F006         	goto	l8930
 16901  000C00                     l8914:
 16902                           
 16903                           ; BSR set to: 0
 16904                           ;libraries/lcd_highlevel.c: 912:           {;libraries/lcd_highlevel.c: 913:            
      +                           curXPos++;
 16905  000C00  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 16906  000C02  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 16907  000C04                     
 16908                           ; BSR set to: 0
 16909                           ;libraries/lcd_highlevel.c: 914:             PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 
      +                          1;;
 16910  000C04  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 16911  000C06  6E80               	movwf	128,c	;volatile
 16912  000C08                     
 16913                           ; BSR set to: 0
 16914  000C08  968B               	bcf	3979,3,c	;volatile
 16915  000C0A                     
 16916                           ; BSR set to: 0
 16917  000C0A  868B               	bsf	3979,3,c	;volatile
 16918  000C0C                     
 16919                           ; BSR set to: 0
 16920                           ;libraries/lcd_highlevel.c: 915:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 16921  000C0C  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 16922  000C10                     
 16923                           ; BSR set to: 0
 16924  000C10  968B               	bcf	3979,3,c	;volatile
 16925  000C12                     
 16926                           ; BSR set to: 0
 16927  000C12  868B               	bsf	3979,3,c	;volatile
 16928  000C14                     
 16929                           ; BSR set to: 0
 16930                           ;libraries/lcd_highlevel.c: 916:           }
 16931  000C14  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 16932  000C16  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 16933  000C18                     l8930:
 16934                           
 16935                           ; BSR set to: 0
 16936  000C18  5165               	movf	LCD_Bitmap@jumpCount& (0+255),w,b
 16937  000C1A  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 16938  000C1C  5166               	movf	(LCD_Bitmap@jumpCount+1)& (0+255),w,b
 16939  000C1E  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 16940  000C20  A0D8               	btfss	status,0,c
 16941  000C22  EF15  F006         	goto	u6081
 16942  000C26  EF17  F006         	goto	u6080
 16943  000C2A                     u6081:
 16944  000C2A  EF00  F006         	goto	l8914
 16945  000C2E                     u6080:
 16946  000C2E                     
 16947                           ; BSR set to: 0
 16948                           ;libraries/lcd_highlevel.c: 917:           curYPos = curYPos + (jumpCount / biWidth);
 16949  000C2E  C065  F020         	movff	LCD_Bitmap@jumpCount,___lwdiv@dividend
 16950  000C32  C066  F021         	movff	LCD_Bitmap@jumpCount+1,___lwdiv@dividend+1
 16951  000C36  C076  F022         	movff	LCD_Bitmap@biWidth,___lwdiv@divisor
 16952  000C3A  C077  F023         	movff	LCD_Bitmap@biWidth+1,___lwdiv@divisor+1
 16953  000C3E  EC95  F02B         	call	___lwdiv	;wreg free
 16954  000C42  0100               	movlb	0	; () banked
 16955  000C44  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 16956  000C46  2420               	addwf	?___lwdiv^0,w,c
 16957  000C48  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 16958  000C4A  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 16959  000C4C  2021               	addwfc	(?___lwdiv+1)^0,w,c
 16960  000C4E  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 16961                           
 16962                           ;libraries/lcd_highlevel.c: 918:           curXPos = curXPos % biWidth;
 16963  000C50  C06F  F012         	movff	LCD_Bitmap@curXPos,___lwmod@dividend
 16964  000C54  C070  F013         	movff	LCD_Bitmap@curXPos+1,___lwmod@dividend+1
 16965  000C58  C076  F014         	movff	LCD_Bitmap@biWidth,___lwmod@divisor
 16966  000C5C  C077  F015         	movff	LCD_Bitmap@biWidth+1,___lwmod@divisor+1
 16967  000C60  ECA3  F02C         	call	___lwmod	;wreg free
 16968  000C64  C012  F06F         	movff	?___lwmod,LCD_Bitmap@curXPos
 16969  000C68  C013  F070         	movff	?___lwmod+1,LCD_Bitmap@curXPos+1
 16970  000C6C                     
 16971                           ;libraries/lcd_highlevel.c: 919:           bmpPtr += 4;
 16972  000C6C  0E04               	movlw	4
 16973  000C6E  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 16974  000C70  0E00               	movlw	0
 16975  000C72  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 16976                           
 16977                           ;libraries/lcd_highlevel.c: 920:         break;
 16978  000C74  EF16  F007         	goto	l8996
 16979  000C78                     l8936:
 16980                           
 16981                           ; BSR set to: 0
 16982                           ;libraries/lcd_highlevel.c: 922:           pixelCount = bmpPtr[1];
 16983  000C78  0E01               	movlw	1
 16984  000C7A  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 16985  000C7C  6E2D               	movwf	??_LCD_Bitmap^0,c
 16986  000C7E  0E00               	movlw	0
 16987  000C80  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 16988  000C82  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16989  000C84  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 16990  000C88  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 16991  000C8C                     	if	0	;tblptru may be non-zero
 16992  000C8C                     	endif
 16993  000C8C                     	if	0	;tblptru may be non-zero
 16994  000C8C                     	endif
 16995  000C8C  0008               	tblrd		*
 16996  000C8E  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 16997  000C92                     
 16998                           ; BSR set to: 0
 16999                           ;libraries/lcd_highlevel.c: 923:           for(i=0;i < pixelCount;i++)
 17000  000C92  0E00               	movlw	0
 17001  000C94  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 17002  000C96  0E00               	movlw	0
 17003  000C98  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 17004  000C9A  EF7D  F006         	goto	l8958
 17005  000C9E                     l8940:
 17006                           
 17007                           ; BSR set to: 0
 17008                           ;libraries/lcd_highlevel.c: 924:           {;libraries/lcd_highlevel.c: 925:            
      +                           color = RGB2LCD(colorTablePtr+(bmpPtr[2+i]*4));
 17009  000C9E  517A               	movf	LCD_Bitmap@i& (0+255),w,b
 17010  000CA0  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 17011  000CA2  6E2D               	movwf	??_LCD_Bitmap^0,c
 17012  000CA4  517B               	movf	(LCD_Bitmap@i+1)& (0+255),w,b
 17013  000CA6  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 17014  000CA8  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 17015  000CAA  0E02               	movlw	2
 17016  000CAC  262D               	addwf	??_LCD_Bitmap^0,f,c
 17017  000CAE  0E00               	movlw	0
 17018  000CB0  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 17019  000CB2  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 17020  000CB6  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 17021  000CBA                     	if	0	;tblptru may be non-zero
 17022  000CBA                     	endif
 17023  000CBA                     	if	0	;tblptru may be non-zero
 17024  000CBA                     	endif
 17025  000CBA  0008               	tblrd		*
 17026  000CBC  50F5               	movf	tablat,w,c
 17027  000CBE  0D04               	mullw	4
 17028  000CC0  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 17029  000CC4  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 17030  000CC8  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 17031  000CCA  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 17032  000CCC  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 17033  000CCE  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 17034  000CD0  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 17035  000CD2  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 17036  000CD4  EC64  F027         	call	_RGB2LCD	;wreg free
 17037  000CD8  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 17038  000CDC  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 17039  000CE0                     
 17040                           ;libraries/lcd_highlevel.c: 926:             curXPos++;
 17041  000CE0  0100               	movlb	0	; () banked
 17042  000CE2  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 17043  000CE4  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 17044  000CE6                     
 17045                           ; BSR set to: 0
 17046                           ;libraries/lcd_highlevel.c: 927:             PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 17047  000CE6  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 17048  000CE8  6E80               	movwf	128,c	;volatile
 17049  000CEA                     
 17050                           ; BSR set to: 0
 17051  000CEA  968B               	bcf	3979,3,c	;volatile
 17052  000CEC                     
 17053                           ; BSR set to: 0
 17054  000CEC  868B               	bsf	3979,3,c	;volatile
 17055  000CEE                     
 17056                           ; BSR set to: 0
 17057                           ;libraries/lcd_highlevel.c: 928:             PORTA = color; LATC3 = 0; LATC3 = 1;;
 17058  000CEE  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 17059  000CF2                     
 17060                           ; BSR set to: 0
 17061  000CF2  968B               	bcf	3979,3,c	;volatile
 17062  000CF4                     
 17063                           ; BSR set to: 0
 17064  000CF4  868B               	bsf	3979,3,c	;volatile
 17065  000CF6                     
 17066                           ; BSR set to: 0
 17067                           ;libraries/lcd_highlevel.c: 929:           }
 17068  000CF6  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 17069  000CF8  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 17070  000CFA                     l8958:
 17071                           
 17072                           ; BSR set to: 0
 17073  000CFA  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 17074  000CFC  6E2D               	movwf	??_LCD_Bitmap^0,c
 17075  000CFE  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 17076  000D00  502D               	movf	??_LCD_Bitmap^0,w,c
 17077  000D02  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 17078  000D04  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 17079  000D06  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 17080  000D08  A0D8               	btfss	status,0,c
 17081  000D0A  EF89  F006         	goto	u6091
 17082  000D0E  EF8B  F006         	goto	u6090
 17083  000D12                     u6091:
 17084  000D12  EF4F  F006         	goto	l8940
 17085  000D16                     u6090:
 17086  000D16                     
 17087                           ; BSR set to: 0
 17088                           ;libraries/lcd_highlevel.c: 930:           if(pixelCount < 255)
 17089  000D16  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 17090  000D18  B4D8               	btfsc	status,2,c
 17091  000D1A  EF91  F006         	goto	u6101
 17092  000D1E  EF93  F006         	goto	u6100
 17093  000D22                     u6101:
 17094  000D22  EFA3  F006         	goto	l8964
 17095  000D26                     u6100:
 17096  000D26                     
 17097                           ; BSR set to: 0
 17098                           ;libraries/lcd_highlevel.c: 931:           {;libraries/lcd_highlevel.c: 932:            
      +                           pixelCount = (pixelCount+1) & 0xFE;
 17099  000D26  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 17100  000D28  0BFE               	andlw	254
 17101  000D2A  6F75               	movwf	LCD_Bitmap@pixelCount& (0+255),b
 17102                           
 17103                           ;libraries/lcd_highlevel.c: 933:             bmpPtr+=pixelCount+2;
 17104  000D2C  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 17105  000D2E  6E2D               	movwf	??_LCD_Bitmap^0,c
 17106  000D30  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 17107  000D32  0E02               	movlw	2
 17108  000D34  262D               	addwf	??_LCD_Bitmap^0,f,c
 17109  000D36  0E00               	movlw	0
 17110  000D38  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 17111  000D3A  502D               	movf	??_LCD_Bitmap^0,w,c
 17112  000D3C  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 17113  000D3E  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 17114  000D40  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 17115                           
 17116                           ;libraries/lcd_highlevel.c: 934:           }
 17117  000D42  EF16  F007         	goto	l8996
 17118  000D46                     l8964:
 17119                           
 17120                           ; BSR set to: 0
 17121                           ;libraries/lcd_highlevel.c: 936:           {;libraries/lcd_highlevel.c: 937:            
      +                             bmpPtr += 258;
 17122  000D46  0E02               	movlw	2
 17123  000D48  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 17124  000D4A  0E01               	movlw	1
 17125  000D4C  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 17126  000D4E  EF16  F007         	goto	l8996
 17127  000D52                     l8968:
 17128                           
 17129                           ; BSR set to: 0
 17130  000D52  0E01               	movlw	1
 17131  000D54  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 17132  000D56  6E2D               	movwf	??_LCD_Bitmap^0,c
 17133  000D58  0E00               	movlw	0
 17134  000D5A  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 17135  000D5C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 17136  000D5E  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 17137  000D62  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 17138  000D66                     	if	0	;tblptru may be non-zero
 17139  000D66                     	endif
 17140  000D66                     	if	0	;tblptru may be non-zero
 17141  000D66                     	endif
 17142  000D66  0008               	tblrd		*
 17143  000D68  50F5               	movf	tablat,w,c
 17144  000D6A  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 17145  000D6C  6A30               	clrf	(??_LCD_Bitmap+3)^0,c
 17146                           
 17147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17148                           ; Switch size 1, requested type "simple"
 17149                           ; Number of cases is 1, Range of values is 0 to 0
 17150                           ; switch strategies available:
 17151                           ; Name         Instructions Cycles
 17152                           ; simple_byte            4     3 (average)
 17153                           ;	Chosen strategy is simple_byte
 17154  000D6E  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 17155  000D70  0A00               	xorlw	0	; case 0
 17156  000D72  B4D8               	btfsc	status,2,c
 17157  000D74  EFBE  F006         	goto	l10506
 17158  000D78  EF3C  F006         	goto	l8936
 17159  000D7C                     l10506:
 17160                           
 17161                           ; BSR set to: 0
 17162                           ; Switch size 1, requested type "simple"
 17163                           ; Number of cases is 3, Range of values is 0 to 2
 17164                           ; switch strategies available:
 17165                           ; Name         Instructions Cycles
 17166                           ; simple_byte           10     6 (average)
 17167                           ;	Chosen strategy is simple_byte
 17168  000D7C  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 17169  000D7E  0A00               	xorlw	0	; case 0
 17170  000D80  B4D8               	btfsc	status,2,c
 17171  000D82  EF54  F005         	goto	l8848
 17172  000D86  0A01               	xorlw	1	; case 1
 17173  000D88  B4D8               	btfsc	status,2,c
 17174  000D8A  EF81  F005         	goto	l8872
 17175  000D8E  0A03               	xorlw	3	; case 2
 17176  000D90  B4D8               	btfsc	status,2,c
 17177  000D92  EFD4  F005         	goto	l8910
 17178  000D96  EF3C  F006         	goto	l8936
 17179  000D9A                     l8970:
 17180                           
 17181                           ; BSR set to: 0
 17182                           ;libraries/lcd_highlevel.c: 943:     {;libraries/lcd_highlevel.c: 944:       pixelCount 
      +                          = bmpPtr[0];
 17183  000D9A  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 17184  000D9E  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 17185  000DA2                     	if	0	;tblptru may be non-zero
 17186  000DA2                     	endif
 17187  000DA2                     	if	0	;tblptru may be non-zero
 17188  000DA2                     	endif
 17189  000DA2  0008               	tblrd		*
 17190  000DA4  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 17191  000DA8                     
 17192                           ; BSR set to: 0
 17193                           ;libraries/lcd_highlevel.c: 945:       color = RGB2LCD(colorTablePtr+(bmpPtr[1]*4));
 17194  000DA8  0E01               	movlw	1
 17195  000DAA  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 17196  000DAC  6E2D               	movwf	??_LCD_Bitmap^0,c
 17197  000DAE  0E00               	movlw	0
 17198  000DB0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 17199  000DB2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 17200  000DB4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 17201  000DB8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 17202  000DBC                     	if	0	;tblptru may be non-zero
 17203  000DBC                     	endif
 17204  000DBC                     	if	0	;tblptru may be non-zero
 17205  000DBC                     	endif
 17206  000DBC  0008               	tblrd		*
 17207  000DBE  50F5               	movf	tablat,w,c
 17208  000DC0  0D04               	mullw	4
 17209  000DC2  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 17210  000DC6  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 17211  000DCA  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 17212  000DCC  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 17213  000DCE  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 17214  000DD0  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 17215  000DD2  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 17216  000DD4  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 17217  000DD6  EC64  F027         	call	_RGB2LCD	;wreg free
 17218  000DDA  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 17219  000DDE  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 17220  000DE2                     
 17221                           ;libraries/lcd_highlevel.c: 946:       for(i=0;i < pixelCount;i++)
 17222  000DE2  0E00               	movlw	0
 17223  000DE4  0100               	movlb	0	; () banked
 17224  000DE6  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 17225  000DE8  0E00               	movlw	0
 17226  000DEA  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 17227  000DEC  EF04  F007         	goto	l8992
 17228  000DF0                     l8976:
 17229                           
 17230                           ; BSR set to: 0
 17231                           ;libraries/lcd_highlevel.c: 947:       {;libraries/lcd_highlevel.c: 948:         curXPos
      +                          ++;
 17232  000DF0  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 17233  000DF2  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 17234  000DF4                     
 17235                           ; BSR set to: 0
 17236                           ;libraries/lcd_highlevel.c: 949:         PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 17237  000DF4  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 17238  000DF6  6E80               	movwf	128,c	;volatile
 17239  000DF8                     
 17240                           ; BSR set to: 0
 17241  000DF8  968B               	bcf	3979,3,c	;volatile
 17242  000DFA                     
 17243                           ; BSR set to: 0
 17244  000DFA  868B               	bsf	3979,3,c	;volatile
 17245  000DFC                     
 17246                           ; BSR set to: 0
 17247                           ;libraries/lcd_highlevel.c: 950:         PORTA = color; LATC3 = 0; LATC3 = 1;;
 17248  000DFC  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 17249  000E00                     
 17250                           ; BSR set to: 0
 17251  000E00  968B               	bcf	3979,3,c	;volatile
 17252  000E02                     
 17253                           ; BSR set to: 0
 17254  000E02  868B               	bsf	3979,3,c	;volatile
 17255  000E04                     
 17256                           ; BSR set to: 0
 17257                           ;libraries/lcd_highlevel.c: 951:       }
 17258  000E04  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 17259  000E06  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 17260  000E08                     l8992:
 17261                           
 17262                           ; BSR set to: 0
 17263  000E08  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 17264  000E0A  6E2D               	movwf	??_LCD_Bitmap^0,c
 17265  000E0C  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 17266  000E0E  502D               	movf	??_LCD_Bitmap^0,w,c
 17267  000E10  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 17268  000E12  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 17269  000E14  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 17270  000E16  A0D8               	btfss	status,0,c
 17271  000E18  EF10  F007         	goto	u6111
 17272  000E1C  EF12  F007         	goto	u6110
 17273  000E20                     u6111:
 17274  000E20  EFF8  F006         	goto	l8976
 17275  000E24                     u6110:
 17276  000E24                     
 17277                           ; BSR set to: 0
 17278                           ;libraries/lcd_highlevel.c: 952:       bmpPtr+=2;
 17279  000E24  0E02               	movlw	2
 17280  000E26  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 17281  000E28  0E00               	movlw	0
 17282  000E2A  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 17283  000E2C                     l8996:
 17284                           
 17285                           ;libraries/lcd_highlevel.c: 954:   }while(endOfImage == 0);
 17286  000E2C  0100               	movlb	0	; () banked
 17287  000E2E  5164               	movf	LCD_Bitmap@endOfImage& (0+255),w,b
 17288  000E30  B4D8               	btfsc	status,2,c
 17289  000E32  EF1D  F007         	goto	u6121
 17290  000E36  EF1F  F007         	goto	u6120
 17291  000E3A                     u6121:
 17292  000E3A  EF44  F005         	goto	l8844
 17293  000E3E                     u6120:
 17294  000E3E                     
 17295                           ; BSR set to: 0
 17296                           ;libraries/lcd_highlevel.c: 955:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 17297  000E3E  0E36               	movlw	54
 17298  000E40  6E80               	movwf	128,c	;volatile
 17299  000E42                     
 17300                           ; BSR set to: 0
 17301  000E42  988B               	bcf	3979,4,c	;volatile
 17302  000E44                     
 17303                           ; BSR set to: 0
 17304  000E44  968B               	bcf	3979,3,c	;volatile
 17305  000E46                     
 17306                           ; BSR set to: 0
 17307  000E46  868B               	bsf	3979,3,c	;volatile
 17308  000E48                     
 17309                           ; BSR set to: 0
 17310  000E48  888B               	bsf	3979,4,c	;volatile
 17311                           
 17312                           ;libraries/lcd_highlevel.c: 957:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
 17313  000E4A  0E00               	movlw	0
 17314  000E4C  6E80               	movwf	128,c	;volatile
 17315  000E4E                     
 17316                           ; BSR set to: 0
 17317  000E4E  968B               	bcf	3979,3,c	;volatile
 17318  000E50                     
 17319                           ; BSR set to: 0
 17320  000E50  868B               	bsf	3979,3,c	;volatile
 17321  000E52                     l317:
 17322                           
 17323                           ; BSR set to: 0
 17324  000E52  0012               	return		;funcret
 17325  000E54                     __end_of_LCD_Bitmap:
 17326                           	callstack 0
 17327                           
 17328 ;; *************** function ___wmul *****************
 17329 ;; Defined at:
 17330 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 17331 ;; Parameters:    Size  Location     Type
 17332 ;;  multiplier      2   25[COMRAM] unsigned int 
 17333 ;;  multiplicand    2   27[COMRAM] unsigned int 
 17334 ;; Auto vars:     Size  Location     Type
 17335 ;;  product         2   29[COMRAM] unsigned int 
 17336 ;; Return value:  Size  Location     Type
 17337 ;;                  2   25[COMRAM] unsigned int 
 17338 ;; Registers used:
 17339 ;;		wreg, status,2, status,0, prodl, prodh
 17340 ;; Tracked objects:
 17341 ;;		On entry : 0/0
 17342 ;;		On exit  : 0/0
 17343 ;;		Unchanged: 0/0
 17344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17345 ;;      Params:         4       0       0       0       0       0       0
 17346 ;;      Locals:         2       0       0       0       0       0       0
 17347 ;;      Temps:          0       0       0       0       0       0       0
 17348 ;;      Totals:         6       0       0       0       0       0       0
 17349 ;;Total ram usage:        6 bytes
 17350 ;; Hardware stack levels used: 1
 17351 ;; Hardware stack levels required when called: 4
 17352 ;; This function calls:
 17353 ;;		Nothing
 17354 ;; This function is called by:
 17355 ;;		_LCD_SliderUpdate
 17356 ;;		_LCD_DrawText
 17357 ;;		_LCD_Bitmap
 17358 ;;		_XF_init
 17359 ;; This function uses a non-reentrant model
 17360 ;;
 17361                           
 17362                           	psect	text67
 17363  005E22                     __ptext67:
 17364                           	callstack 0
 17365  005E22                     ___wmul:
 17366                           	callstack 21
 17367  005E22  501A               	movf	___wmul@multiplier^0,w,c
 17368  005E24  021C               	mulwf	___wmul@multiplicand^0,c
 17369  005E26  CFF3 F01E          	movff	prodl,___wmul@product
 17370  005E2A  CFF4 F01F          	movff	prodh,___wmul@product+1
 17371  005E2E  501A               	movf	___wmul@multiplier^0,w,c
 17372  005E30  021D               	mulwf	(___wmul@multiplicand+1)^0,c
 17373  005E32  50F3               	movf	243,w,c
 17374  005E34  261F               	addwf	(___wmul@product+1)^0,f,c
 17375  005E36  501B               	movf	(___wmul@multiplier+1)^0,w,c
 17376  005E38  021C               	mulwf	___wmul@multiplicand^0,c
 17377  005E3A  50F3               	movf	243,w,c
 17378  005E3C  261F               	addwf	(___wmul@product+1)^0,f,c
 17379  005E3E  C01E  F01A         	movff	___wmul@product,?___wmul
 17380  005E42  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
 17381  005E46  0012               	return		;funcret
 17382  005E48                     __end_of___wmul:
 17383                           	callstack 0
 17384                           
 17385 ;; *************** function ___lwmod *****************
 17386 ;; Defined at:
 17387 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
 17388 ;; Parameters:    Size  Location     Type
 17389 ;;  dividend        2   17[COMRAM] unsigned int 
 17390 ;;  divisor         2   19[COMRAM] unsigned int 
 17391 ;; Auto vars:     Size  Location     Type
 17392 ;;  counter         1   21[COMRAM] unsigned char 
 17393 ;; Return value:  Size  Location     Type
 17394 ;;                  2   17[COMRAM] unsigned int 
 17395 ;; Registers used:
 17396 ;;		wreg, status,2, status,0
 17397 ;; Tracked objects:
 17398 ;;		On entry : 0/0
 17399 ;;		On exit  : 0/0
 17400 ;;		Unchanged: 0/0
 17401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17402 ;;      Params:         4       0       0       0       0       0       0
 17403 ;;      Locals:         1       0       0       0       0       0       0
 17404 ;;      Temps:          0       0       0       0       0       0       0
 17405 ;;      Totals:         5       0       0       0       0       0       0
 17406 ;;Total ram usage:        5 bytes
 17407 ;; Hardware stack levels used: 1
 17408 ;; Hardware stack levels required when called: 4
 17409 ;; This function calls:
 17410 ;;		Nothing
 17411 ;; This function is called by:
 17412 ;;		_LCD_Bitmap
 17413 ;; This function uses a non-reentrant model
 17414 ;;
 17415                           
 17416                           	psect	text68
 17417  005946                     __ptext68:
 17418                           	callstack 0
 17419  005946                     ___lwmod:
 17420                           	callstack 19
 17421  005946  5014               	movf	___lwmod@divisor^0,w,c
 17422  005948  1015               	iorwf	(___lwmod@divisor+1)^0,w,c
 17423  00594A  B4D8               	btfsc	status,2,c
 17424  00594C  EFAA  F02C         	goto	u5761
 17425  005950  EFAC  F02C         	goto	u5760
 17426  005954                     u5761:
 17427  005954  EFD0  F02C         	goto	l1287
 17428  005958                     u5760:
 17429  005958  0E01               	movlw	1
 17430  00595A  6E16               	movwf	___lwmod@counter^0,c
 17431  00595C  EFB4  F02C         	goto	l8444
 17432  005960                     l8442:
 17433  005960  90D8               	bcf	status,0,c
 17434  005962  3614               	rlcf	___lwmod@divisor^0,f,c
 17435  005964  3615               	rlcf	(___lwmod@divisor+1)^0,f,c
 17436  005966  2A16               	incf	___lwmod@counter^0,f,c
 17437  005968                     l8444:
 17438  005968  AE15               	btfss	(___lwmod@divisor+1)^0,7,c
 17439  00596A  EFB9  F02C         	goto	u5771
 17440  00596E  EFBB  F02C         	goto	u5770
 17441  005972                     u5771:
 17442  005972  EFB0  F02C         	goto	l8442
 17443  005976                     u5770:
 17444  005976                     l8446:
 17445  005976  5014               	movf	___lwmod@divisor^0,w,c
 17446  005978  5C12               	subwf	___lwmod@dividend^0,w,c
 17447  00597A  5015               	movf	(___lwmod@divisor+1)^0,w,c
 17448  00597C  5813               	subwfb	(___lwmod@dividend+1)^0,w,c
 17449  00597E  A0D8               	btfss	status,0,c
 17450  005980  EFC4  F02C         	goto	u5781
 17451  005984  EFC6  F02C         	goto	u5780
 17452  005988                     u5781:
 17453  005988  EFCA  F02C         	goto	l8450
 17454  00598C                     u5780:
 17455  00598C  5014               	movf	___lwmod@divisor^0,w,c
 17456  00598E  5E12               	subwf	___lwmod@dividend^0,f,c
 17457  005990  5015               	movf	(___lwmod@divisor+1)^0,w,c
 17458  005992  5A13               	subwfb	(___lwmod@dividend+1)^0,f,c
 17459  005994                     l8450:
 17460  005994  90D8               	bcf	status,0,c
 17461  005996  3215               	rrcf	(___lwmod@divisor+1)^0,f,c
 17462  005998  3214               	rrcf	___lwmod@divisor^0,f,c
 17463  00599A  2E16               	decfsz	___lwmod@counter^0,f,c
 17464  00599C  EFBB  F02C         	goto	l8446
 17465  0059A0                     l1287:
 17466  0059A0  C012  F012         	movff	___lwmod@dividend,?___lwmod
 17467  0059A4  C013  F013         	movff	___lwmod@dividend+1,?___lwmod+1
 17468  0059A8  0012               	return		;funcret
 17469  0059AA                     __end_of___lwmod:
 17470                           	callstack 0
 17471                           
 17472 ;; *************** function ___lwdiv *****************
 17473 ;; Defined at:
 17474 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
 17475 ;; Parameters:    Size  Location     Type
 17476 ;;  dividend        2   31[COMRAM] unsigned int 
 17477 ;;  divisor         2   33[COMRAM] unsigned int 
 17478 ;; Auto vars:     Size  Location     Type
 17479 ;;  quotient        2   36[COMRAM] unsigned int 
 17480 ;;  counter         1   35[COMRAM] unsigned char 
 17481 ;; Return value:  Size  Location     Type
 17482 ;;                  2   31[COMRAM] unsigned int 
 17483 ;; Registers used:
 17484 ;;		wreg, status,2, status,0
 17485 ;; Tracked objects:
 17486 ;;		On entry : 0/0
 17487 ;;		On exit  : 0/0
 17488 ;;		Unchanged: 0/0
 17489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17490 ;;      Params:         4       0       0       0       0       0       0
 17491 ;;      Locals:         3       0       0       0       0       0       0
 17492 ;;      Temps:          0       0       0       0       0       0       0
 17493 ;;      Totals:         7       0       0       0       0       0       0
 17494 ;;Total ram usage:        7 bytes
 17495 ;; Hardware stack levels used: 1
 17496 ;; Hardware stack levels required when called: 4
 17497 ;; This function calls:
 17498 ;;		Nothing
 17499 ;; This function is called by:
 17500 ;;		_LCD_SliderUpdate
 17501 ;;		_LCD_Bitmap
 17502 ;; This function uses a non-reentrant model
 17503 ;;
 17504                           
 17505                           	psect	text69
 17506  00572A                     __ptext69:
 17507                           	callstack 0
 17508  00572A                     ___lwdiv:
 17509                           	callstack 21
 17510  00572A  0E00               	movlw	0
 17511  00572C  6E26               	movwf	(___lwdiv@quotient+1)^0,c
 17512  00572E  0E00               	movlw	0
 17513  005730  6E25               	movwf	___lwdiv@quotient^0,c
 17514  005732  5022               	movf	___lwdiv@divisor^0,w,c
 17515  005734  1023               	iorwf	(___lwdiv@divisor+1)^0,w,c
 17516  005736  B4D8               	btfsc	status,2,c
 17517  005738  EFA0  F02B         	goto	u5731
 17518  00573C  EFA2  F02B         	goto	u5730
 17519  005740                     u5731:
 17520  005740  EFCA  F02B         	goto	l1277
 17521  005744                     u5730:
 17522  005744  0E01               	movlw	1
 17523  005746  6E24               	movwf	___lwdiv@counter^0,c
 17524  005748  EFAA  F02B         	goto	l8424
 17525  00574C                     l8422:
 17526  00574C  90D8               	bcf	status,0,c
 17527  00574E  3622               	rlcf	___lwdiv@divisor^0,f,c
 17528  005750  3623               	rlcf	(___lwdiv@divisor+1)^0,f,c
 17529  005752  2A24               	incf	___lwdiv@counter^0,f,c
 17530  005754                     l8424:
 17531  005754  AE23               	btfss	(___lwdiv@divisor+1)^0,7,c
 17532  005756  EFAF  F02B         	goto	u5741
 17533  00575A  EFB1  F02B         	goto	u5740
 17534  00575E                     u5741:
 17535  00575E  EFA6  F02B         	goto	l8422
 17536  005762                     u5740:
 17537  005762                     l8426:
 17538  005762  90D8               	bcf	status,0,c
 17539  005764  3625               	rlcf	___lwdiv@quotient^0,f,c
 17540  005766  3626               	rlcf	(___lwdiv@quotient+1)^0,f,c
 17541  005768  5022               	movf	___lwdiv@divisor^0,w,c
 17542  00576A  5C20               	subwf	___lwdiv@dividend^0,w,c
 17543  00576C  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 17544  00576E  5821               	subwfb	(___lwdiv@dividend+1)^0,w,c
 17545  005770  A0D8               	btfss	status,0,c
 17546  005772  EFBD  F02B         	goto	u5751
 17547  005776  EFBF  F02B         	goto	u5750
 17548  00577A                     u5751:
 17549  00577A  EFC4  F02B         	goto	l8434
 17550  00577E                     u5750:
 17551  00577E  5022               	movf	___lwdiv@divisor^0,w,c
 17552  005780  5E20               	subwf	___lwdiv@dividend^0,f,c
 17553  005782  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 17554  005784  5A21               	subwfb	(___lwdiv@dividend+1)^0,f,c
 17555  005786  8025               	bsf	___lwdiv@quotient^0,0,c
 17556  005788                     l8434:
 17557  005788  90D8               	bcf	status,0,c
 17558  00578A  3223               	rrcf	(___lwdiv@divisor+1)^0,f,c
 17559  00578C  3222               	rrcf	___lwdiv@divisor^0,f,c
 17560  00578E  2E24               	decfsz	___lwdiv@counter^0,f,c
 17561  005790  EFB1  F02B         	goto	l8426
 17562  005794                     l1277:
 17563  005794  C025  F020         	movff	___lwdiv@quotient,?___lwdiv
 17564  005798  C026  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17565  00579C  0012               	return		;funcret
 17566  00579E                     __end_of___lwdiv:
 17567                           	callstack 0
 17568                           
 17569 ;; *************** function _RGB2LCD *****************
 17570 ;; Defined at:
 17571 ;;		line 799 in file "libraries/lcd_highlevel.c"
 17572 ;; Parameters:    Size  Location     Type
 17573 ;;  colorTableEn    2   17[COMRAM] PTR unsigned char 
 17574 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
 17575 ;;		 -> STR_3(9), STR_2(11), 
 17576 ;; Auto vars:     Size  Location     Type
 17577 ;;  color           2   29[COMRAM] unsigned short 
 17578 ;;  blue            2   27[COMRAM] unsigned short 
 17579 ;;  green           2   25[COMRAM] unsigned short 
 17580 ;;  red             2   23[COMRAM] unsigned short 
 17581 ;; Return value:  Size  Location     Type
 17582 ;;                  2   17[COMRAM] unsigned short 
 17583 ;; Registers used:
 17584 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 17585 ;; Tracked objects:
 17586 ;;		On entry : 0/0
 17587 ;;		On exit  : 0/0
 17588 ;;		Unchanged: 0/0
 17589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17590 ;;      Params:         2       0       0       0       0       0       0
 17591 ;;      Locals:         8       0       0       0       0       0       0
 17592 ;;      Temps:          4       0       0       0       0       0       0
 17593 ;;      Totals:        14       0       0       0       0       0       0
 17594 ;;Total ram usage:       14 bytes
 17595 ;; Hardware stack levels used: 1
 17596 ;; Hardware stack levels required when called: 4
 17597 ;; This function calls:
 17598 ;;		Nothing
 17599 ;; This function is called by:
 17600 ;;		_LCD_Bitmap
 17601 ;; This function uses a non-reentrant model
 17602 ;;
 17603                           
 17604                           	psect	text70
 17605  004EC8                     __ptext70:
 17606                           	callstack 0
 17607  004EC8                     _RGB2LCD:
 17608                           	callstack 19
 17609  004EC8                     
 17610                           ;libraries/lcd_highlevel.c: 799: uint16_t RGB2LCD(uint8_t * colorTableEntry);libraries/l
      +                          cd_highlevel.c: 800: {;libraries/lcd_highlevel.c: 801:     uint16_t red,green,blue;;libr
      +                          aries/lcd_highlevel.c: 802:     uint16_t color;;libraries/lcd_highlevel.c: 804:     red 
      +                          = colorTableEntry[2] >> 3;
 17611  004EC8  0E02               	movlw	2
 17612  004ECA  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 17613  004ECC  6E14               	movwf	??_RGB2LCD^0,c
 17614  004ECE  0E00               	movlw	0
 17615  004ED0  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 17616  004ED2  6E15               	movwf	(??_RGB2LCD+1)^0,c
 17617  004ED4  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 17618  004ED8  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 17619  004EDC                     	if	0	;tblptru may be non-zero
 17620  004EDC                     	endif
 17621  004EDC                     	if	0	;tblptru may be non-zero
 17622  004EDC                     	endif
 17623  004EDC  0008               	tblrd		*
 17624  004EDE  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 17625  004EE2  90D8               	bcf	status,0,c
 17626  004EE4  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 17627  004EE6  90D8               	bcf	status,0,c
 17628  004EE8  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 17629  004EEA  90D8               	bcf	status,0,c
 17630  004EEC  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 17631  004EEE  5016               	movf	(??_RGB2LCD+2)^0,w,c
 17632  004EF0  6E18               	movwf	RGB2LCD@red^0,c
 17633  004EF2  6A19               	clrf	(RGB2LCD@red+1)^0,c
 17634                           
 17635                           ;libraries/lcd_highlevel.c: 805:     green = colorTableEntry[1] >> 2;
 17636  004EF4  0E01               	movlw	1
 17637  004EF6  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 17638  004EF8  6E14               	movwf	??_RGB2LCD^0,c
 17639  004EFA  0E00               	movlw	0
 17640  004EFC  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 17641  004EFE  6E15               	movwf	(??_RGB2LCD+1)^0,c
 17642  004F00  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 17643  004F04  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 17644  004F08                     	if	0	;tblptru may be non-zero
 17645  004F08                     	endif
 17646  004F08                     	if	0	;tblptru may be non-zero
 17647  004F08                     	endif
 17648  004F08  0008               	tblrd		*
 17649  004F0A  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 17650  004F0E  90D8               	bcf	status,0,c
 17651  004F10  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 17652  004F12  90D8               	bcf	status,0,c
 17653  004F14  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 17654  004F16  5016               	movf	(??_RGB2LCD+2)^0,w,c
 17655  004F18  6E1A               	movwf	RGB2LCD@green^0,c
 17656  004F1A  6A1B               	clrf	(RGB2LCD@green+1)^0,c
 17657                           
 17658                           ;libraries/lcd_highlevel.c: 806:     blue = colorTableEntry[0] >> 3;
 17659  004F1C  C012  FFF6         	movff	RGB2LCD@colorTableEntry,tblptrl
 17660  004F20  C013  FFF7         	movff	RGB2LCD@colorTableEntry+1,tblptrh
 17661  004F24                     	if	0	;tblptru may be non-zero
 17662  004F24                     	endif
 17663  004F24                     	if	0	;tblptru may be non-zero
 17664  004F24                     	endif
 17665  004F24  0008               	tblrd		*
 17666  004F26  CFF5 F014          	movff	tablat,??_RGB2LCD
 17667  004F2A  90D8               	bcf	status,0,c
 17668  004F2C  3214               	rrcf	??_RGB2LCD^0,f,c
 17669  004F2E  90D8               	bcf	status,0,c
 17670  004F30  3214               	rrcf	??_RGB2LCD^0,f,c
 17671  004F32  90D8               	bcf	status,0,c
 17672  004F34  3214               	rrcf	??_RGB2LCD^0,f,c
 17673  004F36  5014               	movf	??_RGB2LCD^0,w,c
 17674  004F38  6E1C               	movwf	RGB2LCD@blue^0,c
 17675  004F3A  6A1D               	clrf	(RGB2LCD@blue+1)^0,c
 17676  004F3C                     
 17677                           ;libraries/lcd_highlevel.c: 807:     color = (red << 11) | (green << 5) | (blue << 0);
 17678  004F3C  C01A  F014         	movff	RGB2LCD@green,??_RGB2LCD
 17679  004F40  C01B  F015         	movff	RGB2LCD@green+1,??_RGB2LCD+1
 17680  004F44  0E05               	movlw	5
 17681  004F46                     u5525:
 17682  004F46  90D8               	bcf	status,0,c
 17683  004F48  3614               	rlcf	??_RGB2LCD^0,f,c
 17684  004F4A  3615               	rlcf	(??_RGB2LCD+1)^0,f,c
 17685  004F4C  2EE8               	decfsz	wreg,f,c
 17686  004F4E  EFA3  F027         	goto	u5525
 17687  004F52  C018  F016         	movff	RGB2LCD@red,??_RGB2LCD+2
 17688  004F56  C019  F017         	movff	RGB2LCD@red+1,??_RGB2LCD+3
 17689  004F5A  0E0B               	movlw	11
 17690  004F5C                     u5535:
 17691  004F5C  90D8               	bcf	status,0,c
 17692  004F5E  3616               	rlcf	(??_RGB2LCD+2)^0,f,c
 17693  004F60  3617               	rlcf	(??_RGB2LCD+3)^0,f,c
 17694  004F62  2EE8               	decfsz	wreg,f,c
 17695  004F64  EFAE  F027         	goto	u5535
 17696  004F68  5014               	movf	??_RGB2LCD^0,w,c
 17697  004F6A  1216               	iorwf	(??_RGB2LCD+2)^0,f,c
 17698  004F6C  5015               	movf	(??_RGB2LCD+1)^0,w,c
 17699  004F6E  1217               	iorwf	(??_RGB2LCD+3)^0,f,c
 17700  004F70  501C               	movf	RGB2LCD@blue^0,w,c
 17701  004F72  1016               	iorwf	(??_RGB2LCD+2)^0,w,c
 17702  004F74  6E1E               	movwf	RGB2LCD@color^0,c
 17703  004F76  501D               	movf	(RGB2LCD@blue+1)^0,w,c
 17704  004F78  1017               	iorwf	(??_RGB2LCD+3)^0,w,c
 17705  004F7A  6E1F               	movwf	(RGB2LCD@color+1)^0,c
 17706  004F7C                     
 17707                           ;libraries/lcd_highlevel.c: 808:     return color;
 17708  004F7C  C01E  F012         	movff	RGB2LCD@color,?_RGB2LCD
 17709  004F80  C01F  F013         	movff	RGB2LCD@color+1,?_RGB2LCD+1
 17710  004F84  0012               	return		;funcret
 17711  004F86                     __end_of_RGB2LCD:
 17712                           	callstack 0
 17713                           
 17714 ;; *************** function _Ball_draw *****************
 17715 ;; Defined at:
 17716 ;;		line 17 in file "class/ball.c"
 17717 ;; Parameters:    Size  Location     Type
 17718 ;;  b               2   36[COMRAM] PTR struct Ball
 17719 ;;		 -> g1(201), 
 17720 ;; Auto vars:     Size  Location     Type
 17721 ;;		None
 17722 ;; Return value:  Size  Location     Type
 17723 ;;                  1    wreg      void 
 17724 ;; Registers used:
 17725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17726 ;; Tracked objects:
 17727 ;;		On entry : 0/0
 17728 ;;		On exit  : 0/0
 17729 ;;		Unchanged: 0/0
 17730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17731 ;;      Params:         2       0       0       0       0       0       0
 17732 ;;      Locals:         0       0       0       0       0       0       0
 17733 ;;      Temps:          8       0       0       0       0       0       0
 17734 ;;      Totals:        10       0       0       0       0       0       0
 17735 ;;Total ram usage:       10 bytes
 17736 ;; Hardware stack levels used: 1
 17737 ;; Hardware stack levels required when called: 5
 17738 ;; This function calls:
 17739 ;;		_LCD_DrawRect
 17740 ;; This function is called by:
 17741 ;;		_Ball_Update
 17742 ;;		_Menu_inGameDraw
 17743 ;; This function uses a non-reentrant model
 17744 ;;
 17745                           
 17746                           	psect	text71
 17747  00542C                     __ptext71:
 17748                           	callstack 0
 17749  00542C                     _Ball_draw:
 17750                           	callstack 20
 17751  00542C                     
 17752                           ;class/ball.c: 17: void Ball_draw(struct Ball* b);class/ball.c: 18: {;class/ball.c: 19: 
      +                              LCD_DrawRect(b->x-8,b->y-8,b->x+8,b->y+8,1,0b1111100000000000);
 17753  00542C  C025  FFD9         	movff	Ball_draw@b,fsr2l
 17754  005430  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 17755  005434  CFDE F027          	movff	postinc2,??_Ball_draw
 17756  005438  CFDD F028          	movff	postdec2,??_Ball_draw+1
 17757  00543C  0EF8               	movlw	248
 17758  00543E  2427               	addwf	??_Ball_draw^0,w,c
 17759  005440  6E12               	movwf	LCD_DrawRect@posX1^0,c
 17760  005442  0EFF               	movlw	255
 17761  005444  2028               	addwfc	(??_Ball_draw+1)^0,w,c
 17762  005446  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 17763  005448  EE20 F002          	lfsr	2,2
 17764  00544C  5025               	movf	Ball_draw@b^0,w,c
 17765  00544E  26D9               	addwf	fsr2l,f,c
 17766  005450  5026               	movf	(Ball_draw@b+1)^0,w,c
 17767  005452  22DA               	addwfc	fsr2h,f,c
 17768  005454  CFDE F029          	movff	postinc2,??_Ball_draw+2
 17769  005458  CFDD F02A          	movff	postdec2,??_Ball_draw+3
 17770  00545C  0EF8               	movlw	248
 17771  00545E  2429               	addwf	(??_Ball_draw+2)^0,w,c
 17772  005460  6E14               	movwf	LCD_DrawRect@posY1^0,c
 17773  005462  0EFF               	movlw	255
 17774  005464  202A               	addwfc	(??_Ball_draw+3)^0,w,c
 17775  005466  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 17776  005468  C025  FFD9         	movff	Ball_draw@b,fsr2l
 17777  00546C  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 17778  005470  CFDE F02B          	movff	postinc2,??_Ball_draw+4
 17779  005474  CFDD F02C          	movff	postdec2,??_Ball_draw+5
 17780  005478  0E08               	movlw	8
 17781  00547A  242B               	addwf	(??_Ball_draw+4)^0,w,c
 17782  00547C  6E16               	movwf	LCD_DrawRect@posX2^0,c
 17783  00547E  0E00               	movlw	0
 17784  005480  202C               	addwfc	(??_Ball_draw+5)^0,w,c
 17785  005482  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 17786  005484  EE20 F002          	lfsr	2,2
 17787  005488  5025               	movf	Ball_draw@b^0,w,c
 17788  00548A  26D9               	addwf	fsr2l,f,c
 17789  00548C  5026               	movf	(Ball_draw@b+1)^0,w,c
 17790  00548E  22DA               	addwfc	fsr2h,f,c
 17791  005490  CFDE F02D          	movff	postinc2,??_Ball_draw+6
 17792  005494  CFDD F02E          	movff	postdec2,??_Ball_draw+7
 17793  005498  0E08               	movlw	8
 17794  00549A  242D               	addwf	(??_Ball_draw+6)^0,w,c
 17795  00549C  6E18               	movwf	LCD_DrawRect@posY2^0,c
 17796  00549E  0E00               	movlw	0
 17797  0054A0  202E               	addwfc	(??_Ball_draw+7)^0,w,c
 17798  0054A2  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 17799  0054A4  0E01               	movlw	1
 17800  0054A6  6E1A               	movwf	LCD_DrawRect@fill^0,c
 17801  0054A8  0EF8               	movlw	248
 17802  0054AA  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 17803  0054AC  0E00               	movlw	0
 17804  0054AE  6E1B               	movwf	LCD_DrawRect@color^0,c
 17805  0054B0  EC02  F014         	call	_LCD_DrawRect	;wreg free
 17806  0054B4  0012               	return		;funcret
 17807  0054B6                     __end_of_Ball_draw:
 17808                           	callstack 0
 17809                           
 17810 ;; *************** function _LCD_DrawRect *****************
 17811 ;; Defined at:
 17812 ;;		line 584 in file "libraries/lcd_highlevel.c"
 17813 ;; Parameters:    Size  Location     Type
 17814 ;;  posX1           2   17[COMRAM] unsigned short 
 17815 ;;  posY1           2   19[COMRAM] unsigned short 
 17816 ;;  posX2           2   21[COMRAM] unsigned short 
 17817 ;;  posY2           2   23[COMRAM] unsigned short 
 17818 ;;  fill            1   25[COMRAM] unsigned char 
 17819 ;;  color           2   26[COMRAM] unsigned short 
 17820 ;; Auto vars:     Size  Location     Type
 17821 ;;  i               2   34[COMRAM] unsigned short 
 17822 ;;  temp            2   30[COMRAM] unsigned short 
 17823 ;;  j               2   28[COMRAM] unsigned short 
 17824 ;;  colorL          1   33[COMRAM] unsigned char 
 17825 ;;  colorH          1   32[COMRAM] unsigned char 
 17826 ;; Return value:  Size  Location     Type
 17827 ;;                  1    wreg      void 
 17828 ;; Registers used:
 17829 ;;		wreg, status,2, status,0
 17830 ;; Tracked objects:
 17831 ;;		On entry : 0/0
 17832 ;;		On exit  : 0/0
 17833 ;;		Unchanged: 0/0
 17834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17835 ;;      Params:        11       0       0       0       0       0       0
 17836 ;;      Locals:         8       0       0       0       0       0       0
 17837 ;;      Temps:          0       0       0       0       0       0       0
 17838 ;;      Totals:        19       0       0       0       0       0       0
 17839 ;;Total ram usage:       19 bytes
 17840 ;; Hardware stack levels used: 1
 17841 ;; Hardware stack levels required when called: 4
 17842 ;; This function calls:
 17843 ;;		Nothing
 17844 ;; This function is called by:
 17845 ;;		_Ball_Update
 17846 ;;		_Ball_draw
 17847 ;;		_Paddle_addX
 17848 ;;		_Paddle_draw
 17849 ;;		_LCD_SliderUpdate
 17850 ;;		_LCD_SliderDraw
 17851 ;;		_LCD_ButtonUpdate
 17852 ;;		_LCD_ButtonDraw
 17853 ;;		_gameControllerSM
 17854 ;; This function uses a non-reentrant model
 17855 ;;
 17856                           
 17857                           	psect	text72
 17858  002804                     __ptext72:
 17859                           	callstack 0
 17860  002804                     _LCD_DrawRect:
 17861                           	callstack 21
 17862  002804                     
 17863                           ;libraries/lcd_highlevel.c: 584: void LCD_DrawRect(uint16_t posX1,uint16_t posY1, uint16
      +                          _t posX2,;libraries/lcd_highlevel.c: 585:   uint16_t posY2,uint8_t fill,uint16_t color);
      +                          libraries/lcd_highlevel.c: 586: {;libraries/lcd_highlevel.c: 587:   uint16_t i;;librarie
      +                          s/lcd_highlevel.c: 588:   uint16_t j;;libraries/lcd_highlevel.c: 589:   uint16_t temp;;l
      +                          ibraries/lcd_highlevel.c: 590:   uint8_t colorH,colorL;;libraries/lcd_highlevel.c: 592: 
      +                            colorH = color>>8;
 17864  002804  501C               	movf	(LCD_DrawRect@color+1)^0,w,c
 17865  002806  6E21               	movwf	LCD_DrawRect@colorH^0,c
 17866  002808                     
 17867                           ;libraries/lcd_highlevel.c: 593:   colorL = color;
 17868  002808  C01B  F022         	movff	LCD_DrawRect@color,LCD_DrawRect@colorL
 17869  00280C                     
 17870                           ;libraries/lcd_highlevel.c: 597:   if(posX1 > posX2)
 17871  00280C  5012               	movf	LCD_DrawRect@posX1^0,w,c
 17872  00280E  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 17873  002810  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 17874  002812  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 17875  002814  B0D8               	btfsc	status,0,c
 17876  002816  EF0F  F014         	goto	u5411
 17877  00281A  EF11  F014         	goto	u5410
 17878  00281E                     u5411:
 17879  00281E  EF1D  F014         	goto	l7866
 17880  002822                     u5410:
 17881  002822                     
 17882                           ;libraries/lcd_highlevel.c: 598:   {;libraries/lcd_highlevel.c: 599:     temp = posX1;
 17883  002822  C012  F01F         	movff	LCD_DrawRect@posX1,LCD_DrawRect@temp
 17884  002826  C013  F020         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@temp+1
 17885                           
 17886                           ;libraries/lcd_highlevel.c: 600:     posX1 = posX2;
 17887  00282A  C016  F012         	movff	LCD_DrawRect@posX2,LCD_DrawRect@posX1
 17888  00282E  C017  F013         	movff	LCD_DrawRect@posX2+1,LCD_DrawRect@posX1+1
 17889                           
 17890                           ;libraries/lcd_highlevel.c: 601:     posX2 = temp;
 17891  002832  C01F  F016         	movff	LCD_DrawRect@temp,LCD_DrawRect@posX2
 17892  002836  C020  F017         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posX2+1
 17893  00283A                     l7866:
 17894                           
 17895                           ;libraries/lcd_highlevel.c: 603:   if(posY1 > posY2)
 17896  00283A  5014               	movf	LCD_DrawRect@posY1^0,w,c
 17897  00283C  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 17898  00283E  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 17899  002840  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 17900  002842  B0D8               	btfsc	status,0,c
 17901  002844  EF26  F014         	goto	u5421
 17902  002848  EF28  F014         	goto	u5420
 17903  00284C                     u5421:
 17904  00284C  EF34  F014         	goto	l7870
 17905  002850                     u5420:
 17906  002850                     
 17907                           ;libraries/lcd_highlevel.c: 604:   {;libraries/lcd_highlevel.c: 605:     temp = posY1;
 17908  002850  C014  F01F         	movff	LCD_DrawRect@posY1,LCD_DrawRect@temp
 17909  002854  C015  F020         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@temp+1
 17910                           
 17911                           ;libraries/lcd_highlevel.c: 606:     posY1 = posY2;
 17912  002858  C018  F014         	movff	LCD_DrawRect@posY2,LCD_DrawRect@posY1
 17913  00285C  C019  F015         	movff	LCD_DrawRect@posY2+1,LCD_DrawRect@posY1+1
 17914                           
 17915                           ;libraries/lcd_highlevel.c: 607:     posY2 = temp;
 17916  002860  C01F  F018         	movff	LCD_DrawRect@temp,LCD_DrawRect@posY2
 17917  002864  C020  F019         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posY2+1
 17918  002868                     l7870:
 17919                           
 17920                           ;libraries/lcd_highlevel.c: 610:   if(fill==1)
 17921  002868  041A               	decf	LCD_DrawRect@fill^0,w,c
 17922  00286A  A4D8               	btfss	status,2,c
 17923  00286C  EF3A  F014         	goto	u5431
 17924  002870  EF3C  F014         	goto	u5430
 17925  002874                     u5431:
 17926  002874  EF9E  F014         	goto	l7946
 17927  002878                     u5430:
 17928  002878                     
 17929                           ;libraries/lcd_highlevel.c: 611:   {;libraries/lcd_highlevel.c: 613:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 17930  002878  0E2A               	movlw	42
 17931  00287A  6E80               	movwf	128,c	;volatile
 17932  00287C  988B               	bcf	3979,4,c	;volatile
 17933  00287E  968B               	bcf	3979,3,c	;volatile
 17934  002880  868B               	bsf	3979,3,c	;volatile
 17935  002882  888B               	bsf	3979,4,c	;volatile
 17936                           
 17937                           ;libraries/lcd_highlevel.c: 614:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 17938  002884  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 17939  002886  6E80               	movwf	128,c	;volatile
 17940  002888  968B               	bcf	3979,3,c	;volatile
 17941  00288A  868B               	bsf	3979,3,c	;volatile
 17942  00288C                     
 17943                           ;libraries/lcd_highlevel.c: 615:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 17944  00288C  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 17945  002890  968B               	bcf	3979,3,c	;volatile
 17946  002892  868B               	bsf	3979,3,c	;volatile
 17947                           
 17948                           ;libraries/lcd_highlevel.c: 616:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 17949  002894  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 17950  002896  6E80               	movwf	128,c	;volatile
 17951  002898  968B               	bcf	3979,3,c	;volatile
 17952  00289A  868B               	bsf	3979,3,c	;volatile
 17953  00289C                     
 17954                           ;libraries/lcd_highlevel.c: 617:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 17955  00289C  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 17956  0028A0  968B               	bcf	3979,3,c	;volatile
 17957  0028A2  868B               	bsf	3979,3,c	;volatile
 17958                           
 17959                           ;libraries/lcd_highlevel.c: 619:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17960  0028A4  0E2B               	movlw	43
 17961  0028A6  6E80               	movwf	128,c	;volatile
 17962  0028A8  988B               	bcf	3979,4,c	;volatile
 17963  0028AA  968B               	bcf	3979,3,c	;volatile
 17964  0028AC  868B               	bsf	3979,3,c	;volatile
 17965  0028AE  888B               	bsf	3979,4,c	;volatile
 17966                           
 17967                           ;libraries/lcd_highlevel.c: 620:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 17968  0028B0  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 17969  0028B2  6E80               	movwf	128,c	;volatile
 17970  0028B4  968B               	bcf	3979,3,c	;volatile
 17971  0028B6  868B               	bsf	3979,3,c	;volatile
 17972  0028B8                     
 17973                           ;libraries/lcd_highlevel.c: 621:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 17974  0028B8  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 17975  0028BC  968B               	bcf	3979,3,c	;volatile
 17976  0028BE  868B               	bsf	3979,3,c	;volatile
 17977                           
 17978                           ;libraries/lcd_highlevel.c: 622:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 17979  0028C0  0E01               	movlw	1
 17980  0028C2  6E80               	movwf	128,c	;volatile
 17981  0028C4  968B               	bcf	3979,3,c	;volatile
 17982  0028C6  868B               	bsf	3979,3,c	;volatile
 17983                           
 17984                           ;libraries/lcd_highlevel.c: 623:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 17985  0028C8  0E3F               	movlw	63
 17986  0028CA  6E80               	movwf	128,c	;volatile
 17987  0028CC  968B               	bcf	3979,3,c	;volatile
 17988  0028CE  868B               	bsf	3979,3,c	;volatile
 17989                           
 17990                           ;libraries/lcd_highlevel.c: 625:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17991  0028D0  0E2C               	movlw	44
 17992  0028D2  6E80               	movwf	128,c	;volatile
 17993  0028D4  988B               	bcf	3979,4,c	;volatile
 17994  0028D6  968B               	bcf	3979,3,c	;volatile
 17995  0028D8  868B               	bsf	3979,3,c	;volatile
 17996  0028DA  888B               	bsf	3979,4,c	;volatile
 17997  0028DC                     
 17998                           ;libraries/lcd_highlevel.c: 626:     for(i=posX1;i<=posX2;i++)
 17999  0028DC  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18000  0028E0  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18001  0028E4  EF91  F014         	goto	l7944
 18002  0028E8                     l269:
 18003                           
 18004                           ;libraries/lcd_highlevel.c: 627:     {;libraries/lcd_highlevel.c: 628:       for(j=posY1
      +                          ;j<=posY2;j++)
 18005  0028E8  C014  F01D         	movff	LCD_DrawRect@posY1,LCD_DrawRect@j
 18006  0028EC  C015  F01E         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@j+1
 18007  0028F0  EF84  F014         	goto	l7940
 18008  0028F4                     l271:
 18009                           
 18010                           ;libraries/lcd_highlevel.c: 629:       {;libraries/lcd_highlevel.c: 630:         PORTA =
      +                           colorH; LATC3 = 0; LATC3 = 1;;
 18011  0028F4  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18012  0028F8  968B               	bcf	3979,3,c	;volatile
 18013  0028FA  868B               	bsf	3979,3,c	;volatile
 18014                           
 18015                           ;libraries/lcd_highlevel.c: 631:         PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18016  0028FC  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18017  002900  968B               	bcf	3979,3,c	;volatile
 18018  002902  868B               	bsf	3979,3,c	;volatile
 18019  002904                     
 18020                           ;libraries/lcd_highlevel.c: 632:       }
 18021  002904  4A1D               	infsnz	LCD_DrawRect@j^0,f,c
 18022  002906  2A1E               	incf	(LCD_DrawRect@j+1)^0,f,c
 18023  002908                     l7940:
 18024  002908  501D               	movf	LCD_DrawRect@j^0,w,c
 18025  00290A  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18026  00290C  501E               	movf	(LCD_DrawRect@j+1)^0,w,c
 18027  00290E  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18028  002910  B0D8               	btfsc	status,0,c
 18029  002912  EF8D  F014         	goto	u5441
 18030  002916  EF8F  F014         	goto	u5440
 18031  00291A                     u5441:
 18032  00291A  EF7A  F014         	goto	l271
 18033  00291E                     u5440:
 18034  00291E                     
 18035                           ;libraries/lcd_highlevel.c: 633:     }
 18036  00291E  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18037  002920  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18038  002922                     l7944:
 18039  002922  5023               	movf	LCD_DrawRect@i^0,w,c
 18040  002924  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18041  002926  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18042  002928  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18043  00292A  B0D8               	btfsc	status,0,c
 18044  00292C  EF9A  F014         	goto	u5451
 18045  002930  EF9C  F014         	goto	u5450
 18046  002934                     u5451:
 18047  002934  EF74  F014         	goto	l269
 18048  002938                     u5450:
 18049  002938  EF9E  F015         	goto	l287
 18050  00293C                     l7946:
 18051                           
 18052                           ;libraries/lcd_highlevel.c: 637:   {;libraries/lcd_highlevel.c: 639:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 18053  00293C  0E2A               	movlw	42
 18054  00293E  6E80               	movwf	128,c	;volatile
 18055  002940  988B               	bcf	3979,4,c	;volatile
 18056  002942  968B               	bcf	3979,3,c	;volatile
 18057  002944  868B               	bsf	3979,3,c	;volatile
 18058  002946  888B               	bsf	3979,4,c	;volatile
 18059                           
 18060                           ;libraries/lcd_highlevel.c: 640:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18061  002948  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18062  00294A  6E80               	movwf	128,c	;volatile
 18063  00294C  968B               	bcf	3979,3,c	;volatile
 18064  00294E  868B               	bsf	3979,3,c	;volatile
 18065  002950                     
 18066                           ;libraries/lcd_highlevel.c: 641:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18067  002950  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18068  002954  968B               	bcf	3979,3,c	;volatile
 18069  002956  868B               	bsf	3979,3,c	;volatile
 18070                           
 18071                           ;libraries/lcd_highlevel.c: 642:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18072  002958  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18073  00295A  6E80               	movwf	128,c	;volatile
 18074  00295C  968B               	bcf	3979,3,c	;volatile
 18075  00295E  868B               	bsf	3979,3,c	;volatile
 18076  002960                     
 18077                           ;libraries/lcd_highlevel.c: 643:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18078  002960  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18079  002964  968B               	bcf	3979,3,c	;volatile
 18080  002966  868B               	bsf	3979,3,c	;volatile
 18081                           
 18082                           ;libraries/lcd_highlevel.c: 645:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18083  002968  0E2B               	movlw	43
 18084  00296A  6E80               	movwf	128,c	;volatile
 18085  00296C  988B               	bcf	3979,4,c	;volatile
 18086  00296E  968B               	bcf	3979,3,c	;volatile
 18087  002970  868B               	bsf	3979,3,c	;volatile
 18088  002972  888B               	bsf	3979,4,c	;volatile
 18089                           
 18090                           ;libraries/lcd_highlevel.c: 646:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 18091  002974  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18092  002976  6E80               	movwf	128,c	;volatile
 18093  002978  968B               	bcf	3979,3,c	;volatile
 18094  00297A  868B               	bsf	3979,3,c	;volatile
 18095  00297C                     
 18096                           ;libraries/lcd_highlevel.c: 647:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 18097  00297C  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 18098  002980  968B               	bcf	3979,3,c	;volatile
 18099  002982  868B               	bsf	3979,3,c	;volatile
 18100                           
 18101                           ;libraries/lcd_highlevel.c: 648:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18102  002984  0E01               	movlw	1
 18103  002986  6E80               	movwf	128,c	;volatile
 18104  002988  968B               	bcf	3979,3,c	;volatile
 18105  00298A  868B               	bsf	3979,3,c	;volatile
 18106                           
 18107                           ;libraries/lcd_highlevel.c: 649:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18108  00298C  0E3F               	movlw	63
 18109  00298E  6E80               	movwf	128,c	;volatile
 18110  002990  968B               	bcf	3979,3,c	;volatile
 18111  002992  868B               	bsf	3979,3,c	;volatile
 18112                           
 18113                           ;libraries/lcd_highlevel.c: 651:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18114  002994  0E2C               	movlw	44
 18115  002996  6E80               	movwf	128,c	;volatile
 18116  002998  988B               	bcf	3979,4,c	;volatile
 18117  00299A  968B               	bcf	3979,3,c	;volatile
 18118  00299C  868B               	bsf	3979,3,c	;volatile
 18119  00299E  888B               	bsf	3979,4,c	;volatile
 18120  0029A0                     
 18121                           ;libraries/lcd_highlevel.c: 653:     for(i=posX1;i<=posX2;i++)
 18122  0029A0  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18123  0029A4  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18124  0029A8  EFE0  F014         	goto	l8014
 18125  0029AC                     l276:
 18126                           
 18127                           ;libraries/lcd_highlevel.c: 654:     {;libraries/lcd_highlevel.c: 655:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18128  0029AC  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18129  0029B0  968B               	bcf	3979,3,c	;volatile
 18130  0029B2  868B               	bsf	3979,3,c	;volatile
 18131                           
 18132                           ;libraries/lcd_highlevel.c: 656:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18133  0029B4  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18134  0029B8  968B               	bcf	3979,3,c	;volatile
 18135  0029BA  868B               	bsf	3979,3,c	;volatile
 18136  0029BC                     
 18137                           ;libraries/lcd_highlevel.c: 657:     }
 18138  0029BC  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18139  0029BE  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18140  0029C0                     l8014:
 18141  0029C0  5023               	movf	LCD_DrawRect@i^0,w,c
 18142  0029C2  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18143  0029C4  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18144  0029C6  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18145  0029C8  B0D8               	btfsc	status,0,c
 18146  0029CA  EFE9  F014         	goto	u5461
 18147  0029CE  EFEB  F014         	goto	u5460
 18148  0029D2                     u5461:
 18149  0029D2  EFD6  F014         	goto	l276
 18150  0029D6                     u5460:
 18151  0029D6                     
 18152                           ;libraries/lcd_highlevel.c: 659:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18153  0029D6  0E2B               	movlw	43
 18154  0029D8  6E80               	movwf	128,c	;volatile
 18155  0029DA  988B               	bcf	3979,4,c	;volatile
 18156  0029DC  968B               	bcf	3979,3,c	;volatile
 18157  0029DE  868B               	bsf	3979,3,c	;volatile
 18158  0029E0  888B               	bsf	3979,4,c	;volatile
 18159                           
 18160                           ;libraries/lcd_highlevel.c: 660:     PORTA = posY2>>8; LATC3 = 0; LATC3 = 1;;
 18161  0029E2  5019               	movf	(LCD_DrawRect@posY2+1)^0,w,c
 18162  0029E4  6E80               	movwf	128,c	;volatile
 18163  0029E6  968B               	bcf	3979,3,c	;volatile
 18164  0029E8  868B               	bsf	3979,3,c	;volatile
 18165  0029EA                     
 18166                           ;libraries/lcd_highlevel.c: 661:     PORTA = posY2; LATC3 = 0; LATC3 = 1;;
 18167  0029EA  C018  FF80         	movff	LCD_DrawRect@posY2,3968	;volatile
 18168  0029EE  968B               	bcf	3979,3,c	;volatile
 18169  0029F0  868B               	bsf	3979,3,c	;volatile
 18170                           
 18171                           ;libraries/lcd_highlevel.c: 662:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18172  0029F2  0E2C               	movlw	44
 18173  0029F4  6E80               	movwf	128,c	;volatile
 18174  0029F6  988B               	bcf	3979,4,c	;volatile
 18175  0029F8  968B               	bcf	3979,3,c	;volatile
 18176  0029FA  868B               	bsf	3979,3,c	;volatile
 18177  0029FC  888B               	bsf	3979,4,c	;volatile
 18178  0029FE                     
 18179                           ;libraries/lcd_highlevel.c: 663:     for(i=posX1;i<=posX2;i++)
 18180  0029FE  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18181  002A02  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18182  002A06  EF0F  F015         	goto	l8048
 18183  002A0A                     l279:
 18184                           
 18185                           ;libraries/lcd_highlevel.c: 664:     {;libraries/lcd_highlevel.c: 665:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18186  002A0A  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18187  002A0E  968B               	bcf	3979,3,c	;volatile
 18188  002A10  868B               	bsf	3979,3,c	;volatile
 18189                           
 18190                           ;libraries/lcd_highlevel.c: 666:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18191  002A12  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18192  002A16  968B               	bcf	3979,3,c	;volatile
 18193  002A18  868B               	bsf	3979,3,c	;volatile
 18194  002A1A                     
 18195                           ;libraries/lcd_highlevel.c: 667:     }
 18196  002A1A  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18197  002A1C  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18198  002A1E                     l8048:
 18199  002A1E  5023               	movf	LCD_DrawRect@i^0,w,c
 18200  002A20  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18201  002A22  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18202  002A24  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18203  002A26  B0D8               	btfsc	status,0,c
 18204  002A28  EF18  F015         	goto	u5471
 18205  002A2C  EF1A  F015         	goto	u5470
 18206  002A30                     u5471:
 18207  002A30  EF05  F015         	goto	l279
 18208  002A34                     u5470:
 18209  002A34                     
 18210                           ;libraries/lcd_highlevel.c: 669:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18211  002A34  0E2A               	movlw	42
 18212  002A36  6E80               	movwf	128,c	;volatile
 18213  002A38  988B               	bcf	3979,4,c	;volatile
 18214  002A3A  968B               	bcf	3979,3,c	;volatile
 18215  002A3C  868B               	bsf	3979,3,c	;volatile
 18216  002A3E  888B               	bsf	3979,4,c	;volatile
 18217                           
 18218                           ;libraries/lcd_highlevel.c: 670:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18219  002A40  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18220  002A42  6E80               	movwf	128,c	;volatile
 18221  002A44  968B               	bcf	3979,3,c	;volatile
 18222  002A46  868B               	bsf	3979,3,c	;volatile
 18223  002A48                     
 18224                           ;libraries/lcd_highlevel.c: 671:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18225  002A48  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18226  002A4C  968B               	bcf	3979,3,c	;volatile
 18227  002A4E  868B               	bsf	3979,3,c	;volatile
 18228                           
 18229                           ;libraries/lcd_highlevel.c: 672:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18230  002A50  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18231  002A52  6E80               	movwf	128,c	;volatile
 18232  002A54  968B               	bcf	3979,3,c	;volatile
 18233  002A56  868B               	bsf	3979,3,c	;volatile
 18234  002A58                     
 18235                           ;libraries/lcd_highlevel.c: 673:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18236  002A58  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18237  002A5C  968B               	bcf	3979,3,c	;volatile
 18238  002A5E  868B               	bsf	3979,3,c	;volatile
 18239                           
 18240                           ;libraries/lcd_highlevel.c: 675:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18241  002A60  0E2B               	movlw	43
 18242  002A62  6E80               	movwf	128,c	;volatile
 18243  002A64  988B               	bcf	3979,4,c	;volatile
 18244  002A66  968B               	bcf	3979,3,c	;volatile
 18245  002A68  868B               	bsf	3979,3,c	;volatile
 18246  002A6A  888B               	bsf	3979,4,c	;volatile
 18247                           
 18248                           ;libraries/lcd_highlevel.c: 676:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 18249  002A6C  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18250  002A6E  6E80               	movwf	128,c	;volatile
 18251  002A70  968B               	bcf	3979,3,c	;volatile
 18252  002A72  868B               	bsf	3979,3,c	;volatile
 18253  002A74                     
 18254                           ;libraries/lcd_highlevel.c: 677:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 18255  002A74  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 18256  002A78  968B               	bcf	3979,3,c	;volatile
 18257  002A7A  868B               	bsf	3979,3,c	;volatile
 18258                           
 18259                           ;libraries/lcd_highlevel.c: 678:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18260  002A7C  0E01               	movlw	1
 18261  002A7E  6E80               	movwf	128,c	;volatile
 18262  002A80  968B               	bcf	3979,3,c	;volatile
 18263  002A82  868B               	bsf	3979,3,c	;volatile
 18264                           
 18265                           ;libraries/lcd_highlevel.c: 679:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18266  002A84  0E3F               	movlw	63
 18267  002A86  6E80               	movwf	128,c	;volatile
 18268  002A88  968B               	bcf	3979,3,c	;volatile
 18269  002A8A  868B               	bsf	3979,3,c	;volatile
 18270                           
 18271                           ;libraries/lcd_highlevel.c: 680:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18272  002A8C  0E2C               	movlw	44
 18273  002A8E  6E80               	movwf	128,c	;volatile
 18274  002A90  988B               	bcf	3979,4,c	;volatile
 18275  002A92  968B               	bcf	3979,3,c	;volatile
 18276  002A94  868B               	bsf	3979,3,c	;volatile
 18277  002A96  888B               	bsf	3979,4,c	;volatile
 18278  002A98                     
 18279                           ;libraries/lcd_highlevel.c: 681:     for(i=posY1;i<=posY2;i++)
 18280  002A98  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 18281  002A9C  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 18282  002AA0  EF5C  F015         	goto	l8118
 18283  002AA4                     l282:
 18284                           
 18285                           ;libraries/lcd_highlevel.c: 682:     {;libraries/lcd_highlevel.c: 683:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18286  002AA4  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18287  002AA8  968B               	bcf	3979,3,c	;volatile
 18288  002AAA  868B               	bsf	3979,3,c	;volatile
 18289                           
 18290                           ;libraries/lcd_highlevel.c: 684:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18291  002AAC  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18292  002AB0  968B               	bcf	3979,3,c	;volatile
 18293  002AB2  868B               	bsf	3979,3,c	;volatile
 18294  002AB4                     
 18295                           ;libraries/lcd_highlevel.c: 685:     }
 18296  002AB4  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18297  002AB6  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18298  002AB8                     l8118:
 18299  002AB8  5023               	movf	LCD_DrawRect@i^0,w,c
 18300  002ABA  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18301  002ABC  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18302  002ABE  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18303  002AC0  B0D8               	btfsc	status,0,c
 18304  002AC2  EF65  F015         	goto	u5481
 18305  002AC6  EF67  F015         	goto	u5480
 18306  002ACA                     u5481:
 18307  002ACA  EF52  F015         	goto	l282
 18308  002ACE                     u5480:
 18309  002ACE                     
 18310                           ;libraries/lcd_highlevel.c: 687:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18311  002ACE  0E2A               	movlw	42
 18312  002AD0  6E80               	movwf	128,c	;volatile
 18313  002AD2  988B               	bcf	3979,4,c	;volatile
 18314  002AD4  968B               	bcf	3979,3,c	;volatile
 18315  002AD6  868B               	bsf	3979,3,c	;volatile
 18316  002AD8  888B               	bsf	3979,4,c	;volatile
 18317                           
 18318                           ;libraries/lcd_highlevel.c: 688:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18319  002ADA  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18320  002ADC  6E80               	movwf	128,c	;volatile
 18321  002ADE  968B               	bcf	3979,3,c	;volatile
 18322  002AE0  868B               	bsf	3979,3,c	;volatile
 18323  002AE2                     
 18324                           ;libraries/lcd_highlevel.c: 689:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18325  002AE2  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18326  002AE6  968B               	bcf	3979,3,c	;volatile
 18327  002AE8  868B               	bsf	3979,3,c	;volatile
 18328                           
 18329                           ;libraries/lcd_highlevel.c: 690:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18330  002AEA  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18331  002AEC  6E80               	movwf	128,c	;volatile
 18332  002AEE  968B               	bcf	3979,3,c	;volatile
 18333  002AF0  868B               	bsf	3979,3,c	;volatile
 18334  002AF2                     
 18335                           ;libraries/lcd_highlevel.c: 691:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18336  002AF2  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18337  002AF6  968B               	bcf	3979,3,c	;volatile
 18338  002AF8  868B               	bsf	3979,3,c	;volatile
 18339                           
 18340                           ;libraries/lcd_highlevel.c: 692:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18341  002AFA  0E2C               	movlw	44
 18342  002AFC  6E80               	movwf	128,c	;volatile
 18343  002AFE  988B               	bcf	3979,4,c	;volatile
 18344  002B00  968B               	bcf	3979,3,c	;volatile
 18345  002B02  868B               	bsf	3979,3,c	;volatile
 18346  002B04  888B               	bsf	3979,4,c	;volatile
 18347  002B06                     
 18348                           ;libraries/lcd_highlevel.c: 693:     for(i=posY1;i<=posY2;i++)
 18349  002B06  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 18350  002B0A  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 18351  002B0E  EF93  F015         	goto	l8162
 18352  002B12                     l285:
 18353                           
 18354                           ;libraries/lcd_highlevel.c: 694:     {;libraries/lcd_highlevel.c: 695:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18355  002B12  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18356  002B16  968B               	bcf	3979,3,c	;volatile
 18357  002B18  868B               	bsf	3979,3,c	;volatile
 18358                           
 18359                           ;libraries/lcd_highlevel.c: 696:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18360  002B1A  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18361  002B1E  968B               	bcf	3979,3,c	;volatile
 18362  002B20  868B               	bsf	3979,3,c	;volatile
 18363  002B22                     
 18364                           ;libraries/lcd_highlevel.c: 697:     }
 18365  002B22  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18366  002B24  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18367  002B26                     l8162:
 18368  002B26  5023               	movf	LCD_DrawRect@i^0,w,c
 18369  002B28  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18370  002B2A  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18371  002B2C  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18372  002B2E  B0D8               	btfsc	status,0,c
 18373  002B30  EF9C  F015         	goto	u5491
 18374  002B34  EF9E  F015         	goto	u5490
 18375  002B38                     u5491:
 18376  002B38  EF89  F015         	goto	l285
 18377  002B3C                     u5490:
 18378  002B3C                     l287:
 18379  002B3C  0012               	return		;funcret
 18380  002B3E                     __end_of_LCD_DrawRect:
 18381                           	callstack 0
 18382                           
 18383 ;; *************** function _XF_popEvent *****************
 18384 ;; Defined at:
 18385 ;;		line 72 in file "xf/xf.c"
 18386 ;; Parameters:    Size  Location     Type
 18387 ;;  inISR           1    wreg     _Bool 
 18388 ;; Auto vars:     Size  Location     Type
 18389 ;;  inISR           1   24[COMRAM] _Bool 
 18390 ;;  ev              1   23[COMRAM] unsigned char 
 18391 ;; Return value:  Size  Location     Type
 18392 ;;                  1    wreg      unsigned char 
 18393 ;; Registers used:
 18394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18395 ;; Tracked objects:
 18396 ;;		On entry : 0/0
 18397 ;;		On exit  : 0/0
 18398 ;;		Unchanged: 0/0
 18399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18400 ;;      Params:         0       0       0       0       0       0       0
 18401 ;;      Locals:         2       0       0       0       0       0       0
 18402 ;;      Temps:          0       0       0       0       0       0       0
 18403 ;;      Totals:         2       0       0       0       0       0       0
 18404 ;;Total ram usage:        2 bytes
 18405 ;; Hardware stack levels used: 1
 18406 ;; Hardware stack levels required when called: 5
 18407 ;; This function calls:
 18408 ;;		_ENTERCRITICAL
 18409 ;;		_LEAVECRITICAL
 18410 ;;		___awmod
 18411 ;; This function is called by:
 18412 ;;		_Factory_exec
 18413 ;; This function uses a non-reentrant model
 18414 ;;
 18415                           
 18416                           	psect	text73
 18417  005A70                     __ptext73:
 18418                           	callstack 0
 18419  005A70                     _XF_popEvent:
 18420                           	callstack 24
 18421                           
 18422                           ;incstack = 0
 18423                           ;XF_popEvent@inISR stored from wreg
 18424  005A70  6E19               	movwf	XF_popEvent@inISR^0,c
 18425  005A72                     
 18426                           ;xf/xf.c: 76:     ENTERCRITICAL(inISR);
 18427  005A72  5019               	movf	XF_popEvent@inISR^0,w,c
 18428  005A74  EC75  F02F         	call	_ENTERCRITICAL
 18429  005A78                     
 18430                           ;xf/xf.c: 77:     if(theXF.in == theXF.out)
 18431  005A78  0100               	movlb	0	; () banked
 18432  005A7A  51DA               	movf	(_theXF+37)& (0+255),w,b
 18433  005A7C  19D9               	xorwf	(_theXF+36)& (0+255),w,b
 18434  005A7E  A4D8               	btfss	status,2,c
 18435  005A80  EF44  F02D         	goto	u7581
 18436  005A84  EF46  F02D         	goto	u7580
 18437  005A88                     u7581:
 18438  005A88  EF4C  F02D         	goto	l10050
 18439  005A8C                     u7580:
 18440  005A8C                     
 18441                           ; BSR set to: 0
 18442                           ;xf/xf.c: 78:     {;xf/xf.c: 79:       LEAVECRITICAL(inISR);
 18443  005A8C  5019               	movf	XF_popEvent@inISR^0,w,c
 18444  005A8E  EC6A  F02F         	call	_LEAVECRITICAL
 18445  005A92                     
 18446                           ;xf/xf.c: 80:       return ev;
 18447  005A92  0E00               	movlw	0
 18448  005A94  EF67  F02D         	goto	l709
 18449  005A98                     l10050:
 18450                           
 18451                           ; BSR set to: 0
 18452                           ;xf/xf.c: 82:     ev = theXF.eventQueue[theXF.out];
 18453  005A98  0ECD               	movlw	low (_theXF+24)
 18454  005A9A  25DA               	addwf	(_theXF+37)& (0+255),w,b
 18455  005A9C  6ED9               	movwf	fsr2l,c
 18456  005A9E  6ADA               	clrf	fsr2h,c
 18457  005AA0  0E00               	movlw	high (_theXF+24)
 18458  005AA2  22DA               	addwfc	fsr2h,f,c
 18459  005AA4  50DF               	movf	indf2,w,c
 18460  005AA6  6E18               	movwf	XF_popEvent@ev^0,c
 18461  005AA8                     
 18462                           ; BSR set to: 0
 18463                           ;xf/xf.c: 83:     theXF.out = (theXF.out + 1)%(uint8_t)sizeof(theXF.eventQueue);
 18464  005AA8  0E01               	movlw	1
 18465  005AAA  25DA               	addwf	(_theXF+37)& (0+255),w,b
 18466  005AAC  6E12               	movwf	___awmod@dividend^0,c
 18467  005AAE  6A13               	clrf	(___awmod@dividend+1)^0,c
 18468  005AB0  0E00               	movlw	0
 18469  005AB2  2213               	addwfc	(___awmod@dividend+1)^0,f,c
 18470  005AB4  0E00               	movlw	0
 18471  005AB6  6E15               	movwf	(___awmod@divisor+1)^0,c
 18472  005AB8  0E0C               	movlw	12
 18473  005ABA  6E14               	movwf	___awmod@divisor^0,c
 18474  005ABC  EC7C  F028         	call	___awmod	;wreg free
 18475  005AC0  5012               	movf	?___awmod^0,w,c
 18476  005AC2  0100               	movlb	0	; () banked
 18477  005AC4  6FDA               	movwf	(_theXF+37)& (0+255),b
 18478  005AC6                     
 18479                           ; BSR set to: 0
 18480                           ;xf/xf.c: 84:     LEAVECRITICAL(inISR);
 18481  005AC6  5019               	movf	XF_popEvent@inISR^0,w,c
 18482  005AC8  EC6A  F02F         	call	_LEAVECRITICAL
 18483  005ACC                     
 18484                           ;xf/xf.c: 85:     return ev;
 18485  005ACC  5018               	movf	XF_popEvent@ev^0,w,c
 18486  005ACE                     l709:
 18487  005ACE  0012               	return		;funcret
 18488  005AD0                     __end_of_XF_popEvent:
 18489                           	callstack 0
 18490                           
 18491 ;; *************** function ___awmod *****************
 18492 ;; Defined at:
 18493 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 18494 ;; Parameters:    Size  Location     Type
 18495 ;;  dividend        2   17[COMRAM] int 
 18496 ;;  divisor         2   19[COMRAM] int 
 18497 ;; Auto vars:     Size  Location     Type
 18498 ;;  sign            1   22[COMRAM] unsigned char 
 18499 ;;  counter         1   21[COMRAM] unsigned char 
 18500 ;; Return value:  Size  Location     Type
 18501 ;;                  2   17[COMRAM] int 
 18502 ;; Registers used:
 18503 ;;		wreg, status,2, status,0
 18504 ;; Tracked objects:
 18505 ;;		On entry : 0/0
 18506 ;;		On exit  : 0/0
 18507 ;;		Unchanged: 0/0
 18508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18509 ;;      Params:         4       0       0       0       0       0       0
 18510 ;;      Locals:         2       0       0       0       0       0       0
 18511 ;;      Temps:          0       0       0       0       0       0       0
 18512 ;;      Totals:         6       0       0       0       0       0       0
 18513 ;;Total ram usage:        6 bytes
 18514 ;; Hardware stack levels used: 1
 18515 ;; Hardware stack levels required when called: 4
 18516 ;; This function calls:
 18517 ;;		Nothing
 18518 ;; This function is called by:
 18519 ;;		_XF_pushEvent
 18520 ;;		_XF_popEvent
 18521 ;; This function uses a non-reentrant model
 18522 ;;
 18523                           
 18524                           	psect	text74
 18525  0050F8                     __ptext74:
 18526                           	callstack 0
 18527  0050F8                     ___awmod:
 18528                           	callstack 21
 18529  0050F8  0E00               	movlw	0
 18530  0050FA  6E17               	movwf	___awmod@sign^0,c
 18531  0050FC  BE13               	btfsc	(___awmod@dividend+1)^0,7,c
 18532  0050FE  EF85  F028         	goto	u6370
 18533  005102  EF83  F028         	goto	u6371
 18534  005106                     u6371:
 18535  005106  EF8B  F028         	goto	l9248
 18536  00510A                     u6370:
 18537  00510A  6C12               	negf	___awmod@dividend^0,c
 18538  00510C  1E13               	comf	(___awmod@dividend+1)^0,f,c
 18539  00510E  B0D8               	btfsc	status,0,c
 18540  005110  2A13               	incf	(___awmod@dividend+1)^0,f,c
 18541  005112  0E01               	movlw	1
 18542  005114  6E17               	movwf	___awmod@sign^0,c
 18543  005116                     l9248:
 18544  005116  BE15               	btfsc	(___awmod@divisor+1)^0,7,c
 18545  005118  EF92  F028         	goto	u6380
 18546  00511C  EF90  F028         	goto	u6381
 18547  005120                     u6381:
 18548  005120  EF96  F028         	goto	l9252
 18549  005124                     u6380:
 18550  005124  6C14               	negf	___awmod@divisor^0,c
 18551  005126  1E15               	comf	(___awmod@divisor+1)^0,f,c
 18552  005128  B0D8               	btfsc	status,0,c
 18553  00512A  2A15               	incf	(___awmod@divisor+1)^0,f,c
 18554  00512C                     l9252:
 18555  00512C  5014               	movf	___awmod@divisor^0,w,c
 18556  00512E  1015               	iorwf	(___awmod@divisor+1)^0,w,c
 18557  005130  B4D8               	btfsc	status,2,c
 18558  005132  EF9D  F028         	goto	u6391
 18559  005136  EF9F  F028         	goto	u6390
 18560  00513A                     u6391:
 18561  00513A  EFC3  F028         	goto	l9268
 18562  00513E                     u6390:
 18563  00513E  0E01               	movlw	1
 18564  005140  6E16               	movwf	___awmod@counter^0,c
 18565  005142  EFA7  F028         	goto	l9258
 18566  005146                     l9256:
 18567  005146  90D8               	bcf	status,0,c
 18568  005148  3614               	rlcf	___awmod@divisor^0,f,c
 18569  00514A  3615               	rlcf	(___awmod@divisor+1)^0,f,c
 18570  00514C  2A16               	incf	___awmod@counter^0,f,c
 18571  00514E                     l9258:
 18572  00514E  AE15               	btfss	(___awmod@divisor+1)^0,7,c
 18573  005150  EFAC  F028         	goto	u6401
 18574  005154  EFAE  F028         	goto	u6400
 18575  005158                     u6401:
 18576  005158  EFA3  F028         	goto	l9256
 18577  00515C                     u6400:
 18578  00515C                     l9260:
 18579  00515C  5014               	movf	___awmod@divisor^0,w,c
 18580  00515E  5C12               	subwf	___awmod@dividend^0,w,c
 18581  005160  5015               	movf	(___awmod@divisor+1)^0,w,c
 18582  005162  5813               	subwfb	(___awmod@dividend+1)^0,w,c
 18583  005164  A0D8               	btfss	status,0,c
 18584  005166  EFB7  F028         	goto	u6411
 18585  00516A  EFB9  F028         	goto	u6410
 18586  00516E                     u6411:
 18587  00516E  EFBD  F028         	goto	l9264
 18588  005172                     u6410:
 18589  005172  5014               	movf	___awmod@divisor^0,w,c
 18590  005174  5E12               	subwf	___awmod@dividend^0,f,c
 18591  005176  5015               	movf	(___awmod@divisor+1)^0,w,c
 18592  005178  5A13               	subwfb	(___awmod@dividend+1)^0,f,c
 18593  00517A                     l9264:
 18594  00517A  90D8               	bcf	status,0,c
 18595  00517C  3215               	rrcf	(___awmod@divisor+1)^0,f,c
 18596  00517E  3214               	rrcf	___awmod@divisor^0,f,c
 18597  005180  2E16               	decfsz	___awmod@counter^0,f,c
 18598  005182  EFAE  F028         	goto	l9260
 18599  005186                     l9268:
 18600  005186  5017               	movf	___awmod@sign^0,w,c
 18601  005188  B4D8               	btfsc	status,2,c
 18602  00518A  EFC9  F028         	goto	u6421
 18603  00518E  EFCB  F028         	goto	u6420
 18604  005192                     u6421:
 18605  005192  EFCF  F028         	goto	l9272
 18606  005196                     u6420:
 18607  005196  6C12               	negf	___awmod@dividend^0,c
 18608  005198  1E13               	comf	(___awmod@dividend+1)^0,f,c
 18609  00519A  B0D8               	btfsc	status,0,c
 18610  00519C  2A13               	incf	(___awmod@dividend+1)^0,f,c
 18611  00519E                     l9272:
 18612  00519E  C012  F012         	movff	___awmod@dividend,?___awmod
 18613  0051A2  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
 18614  0051A6  0012               	return		;funcret
 18615  0051A8                     __end_of___awmod:
 18616                           	callstack 0
 18617                           
 18618 ;; *************** function _LEAVECRITICAL *****************
 18619 ;; Defined at:
 18620 ;;		line 186 in file "xf/xf.c"
 18621 ;; Parameters:    Size  Location     Type
 18622 ;;  inISR           1    wreg     _Bool 
 18623 ;; Auto vars:     Size  Location     Type
 18624 ;;  inISR           1   17[COMRAM] _Bool 
 18625 ;; Return value:  Size  Location     Type
 18626 ;;                  1    wreg      void 
 18627 ;; Registers used:
 18628 ;;		wreg, status,2
 18629 ;; Tracked objects:
 18630 ;;		On entry : 0/0
 18631 ;;		On exit  : 0/0
 18632 ;;		Unchanged: 0/0
 18633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18634 ;;      Params:         0       0       0       0       0       0       0
 18635 ;;      Locals:         1       0       0       0       0       0       0
 18636 ;;      Temps:          0       0       0       0       0       0       0
 18637 ;;      Totals:         1       0       0       0       0       0       0
 18638 ;;Total ram usage:        1 bytes
 18639 ;; Hardware stack levels used: 1
 18640 ;; Hardware stack levels required when called: 4
 18641 ;; This function calls:
 18642 ;;		Nothing
 18643 ;; This function is called by:
 18644 ;;		_XF_pushEvent
 18645 ;;		_XF_popEvent
 18646 ;;		_XF_scheduleTimer
 18647 ;; This function uses a non-reentrant model
 18648 ;;
 18649                           
 18650                           	psect	text75
 18651  005ED4                     __ptext75:
 18652                           	callstack 0
 18653  005ED4                     _LEAVECRITICAL:
 18654                           	callstack 21
 18655                           
 18656                           ;incstack = 0
 18657                           ;LEAVECRITICAL@inISR stored from wreg
 18658  005ED4  6E12               	movwf	LEAVECRITICAL@inISR^0,c
 18659  005ED6                     
 18660                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 18661  005ED6  5012               	movf	LEAVECRITICAL@inISR^0,w,c
 18662  005ED8  A4D8               	btfss	status,2,c
 18663  005EDA  EF71  F02F         	goto	u6361
 18664  005EDE  EF73  F02F         	goto	u6360
 18665  005EE2                     u6361:
 18666  005EE2  EF74  F02F         	goto	l735
 18667  005EE6                     u6360:
 18668  005EE6                     
 18669                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 18670  005EE6  8EF2               	bsf	4082,7,c	;volatile
 18671  005EE8                     l735:
 18672  005EE8  0012               	return		;funcret
 18673  005EEA                     __end_of_LEAVECRITICAL:
 18674                           	callstack 0
 18675                           
 18676 ;; *************** function _ENTERCRITICAL *****************
 18677 ;; Defined at:
 18678 ;;		line 172 in file "xf/xf.c"
 18679 ;; Parameters:    Size  Location     Type
 18680 ;;  inISR           1    wreg     _Bool 
 18681 ;; Auto vars:     Size  Location     Type
 18682 ;;  inISR           1   17[COMRAM] _Bool 
 18683 ;; Return value:  Size  Location     Type
 18684 ;;                  1    wreg      void 
 18685 ;; Registers used:
 18686 ;;		wreg, status,2
 18687 ;; Tracked objects:
 18688 ;;		On entry : 0/0
 18689 ;;		On exit  : 0/0
 18690 ;;		Unchanged: 0/0
 18691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18692 ;;      Params:         0       0       0       0       0       0       0
 18693 ;;      Locals:         1       0       0       0       0       0       0
 18694 ;;      Temps:          0       0       0       0       0       0       0
 18695 ;;      Totals:         1       0       0       0       0       0       0
 18696 ;;Total ram usage:        1 bytes
 18697 ;; Hardware stack levels used: 1
 18698 ;; Hardware stack levels required when called: 4
 18699 ;; This function calls:
 18700 ;;		Nothing
 18701 ;; This function is called by:
 18702 ;;		_XF_pushEvent
 18703 ;;		_XF_popEvent
 18704 ;;		_XF_scheduleTimer
 18705 ;; This function uses a non-reentrant model
 18706 ;;
 18707                           
 18708                           	psect	text76
 18709  005EEA                     __ptext76:
 18710                           	callstack 0
 18711  005EEA                     _ENTERCRITICAL:
 18712                           	callstack 21
 18713                           
 18714                           ;incstack = 0
 18715                           ;ENTERCRITICAL@inISR stored from wreg
 18716  005EEA  6E12               	movwf	ENTERCRITICAL@inISR^0,c
 18717  005EEC                     
 18718                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 18719  005EEC  5012               	movf	ENTERCRITICAL@inISR^0,w,c
 18720  005EEE  A4D8               	btfss	status,2,c
 18721  005EF0  EF7C  F02F         	goto	u6351
 18722  005EF4  EF7E  F02F         	goto	u6350
 18723  005EF8                     u6351:
 18724  005EF8  EF7F  F02F         	goto	l731
 18725  005EFC                     u6350:
 18726  005EFC                     
 18727                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 18728  005EFC  9EF2               	bcf	4082,7,c	;volatile
 18729  005EFE                     l731:
 18730  005EFE  0012               	return		;funcret
 18731  005F00                     __end_of_ENTERCRITICAL:
 18732                           	callstack 0
 18733                           
 18734 ;; *************** function _isr *****************
 18735 ;; Defined at:
 18736 ;;		line 19 in file "main.c"
 18737 ;; Parameters:    Size  Location     Type
 18738 ;;		None
 18739 ;; Auto vars:     Size  Location     Type
 18740 ;;		None
 18741 ;; Return value:  Size  Location     Type
 18742 ;;                  1    wreg      void 
 18743 ;; Registers used:
 18744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18745 ;; Tracked objects:
 18746 ;;		On entry : 0/0
 18747 ;;		On exit  : 0/0
 18748 ;;		Unchanged: 0/0
 18749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18750 ;;      Params:         0       0       0       0       0       0       0
 18751 ;;      Locals:         0       0       0       0       0       0       0
 18752 ;;      Temps:          4       0       0       0       0       0       0
 18753 ;;      Totals:         4       0       0       0       0       0       0
 18754 ;;Total ram usage:        4 bytes
 18755 ;; Hardware stack levels used: 1
 18756 ;; Hardware stack levels required when called: 3
 18757 ;; This function calls:
 18758 ;;		_XF_decrementAndQueueTimers
 18759 ;;		i2_XF_pushEvent
 18760 ;;		i2_XF_scheduleTimer
 18761 ;; This function is called by:
 18762 ;;		Interrupt level 2
 18763 ;; This function uses a non-reentrant model
 18764 ;;
 18765                           
 18766                           	psect	intcode
 18767  000008                     __pintcode:
 18768                           	callstack 0
 18769  000008                     _isr:
 18770                           	callstack 16
 18771                           
 18772                           ;incstack = 0
 18773  000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 18774  00000A  CFD9 F00E          	movff	fsr2l,??_isr
 18775  00000E  CFDA F00F          	movff	fsr2h,??_isr+1
 18776  000012  CFF3 F010          	movff	prodl,??_isr+2
 18777  000016  CFF4 F011          	movff	prodh,??_isr+3
 18778  00001A                     
 18779                           ;main.c: 21:     if((INT1IF==1)&&(INT1IE==1))
 18780  00001A  A0F0               	btfss	4080,0,c	;volatile
 18781  00001C  EF12  F000         	goto	i2u528_41
 18782  000020  EF14  F000         	goto	i2u528_40
 18783  000024                     i2u528_41:
 18784  000024  EF39  F000         	goto	i2l7592
 18785  000028                     i2u528_40:
 18786  000028  A6F0               	btfss	4080,3,c	;volatile
 18787  00002A  EF19  F000         	goto	i2u529_41
 18788  00002E  EF1B  F000         	goto	i2u529_40
 18789  000032                     i2u529_41:
 18790  000032  EF39  F000         	goto	i2l7592
 18791  000036                     i2u529_40:
 18792  000036                     
 18793                           ;main.c: 22:     {;main.c: 23:         if(INTEDG1==0)
 18794  000036  BAF1               	btfsc	4081,5,c	;volatile
 18795  000038  EF20  F000         	goto	i2u530_41
 18796  00003C  EF22  F000         	goto	i2u530_40
 18797  000040                     i2u530_41:
 18798  000040  EF2B  F000         	goto	i2l771
 18799  000044                     i2u530_40:
 18800  000044                     
 18801                           ;main.c: 24:         {;main.c: 25:             INTEDG1=1;
 18802  000044  8AF1               	bsf	4081,5,c	;volatile
 18803                           
 18804                           ;main.c: 26:             INT1IF=0;
 18805  000046  90F0               	bcf	4080,0,c	;volatile
 18806  000048                     
 18807                           ;main.c: 27:             XF_pushEvent(evPress,1);
 18808  000048  0E01               	movlw	1
 18809  00004A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 18810  00004C  0E01               	movlw	1
 18811  00004E  ECD5  F02C         	call	i2_XF_pushEvent
 18812                           
 18813                           ;main.c: 29:         }
 18814  000052  EF39  F000         	goto	i2l7592
 18815  000056                     i2l771:
 18816  000056  AAF1               	btfss	4081,5,c	;volatile
 18817  000058  EF30  F000         	goto	i2u531_41
 18818  00005C  EF32  F000         	goto	i2u531_40
 18819  000060                     i2u531_41:
 18820  000060  EF39  F000         	goto	i2l7592
 18821  000064                     i2u531_40:
 18822  000064                     
 18823                           ;main.c: 31:         {;main.c: 32:             INTEDG1=0;
 18824  000064  9AF1               	bcf	4081,5,c	;volatile
 18825                           
 18826                           ;main.c: 33:             INT1IF=0;
 18827  000066  90F0               	bcf	4080,0,c	;volatile
 18828  000068                     
 18829                           ;main.c: 34:             XF_pushEvent(evRelease,1);
 18830  000068  0E01               	movlw	1
 18831  00006A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 18832  00006C  0E02               	movlw	2
 18833  00006E  ECD5  F02C         	call	i2_XF_pushEvent
 18834  000072                     i2l7592:
 18835                           
 18836                           ;main.c: 40:     if((TMR0IF==1)&&(TMR0IE==1))
 18837  000072  A4F2               	btfss	4082,2,c	;volatile
 18838  000074  EF3E  F000         	goto	i2u532_41
 18839  000078  EF40  F000         	goto	i2u532_40
 18840  00007C                     i2u532_41:
 18841  00007C  EF58  F000         	goto	i2l775
 18842  000080                     i2u532_40:
 18843  000080  AAF2               	btfss	4082,5,c	;volatile
 18844  000082  EF45  F000         	goto	i2u533_41
 18845  000086  EF47  F000         	goto	i2u533_40
 18846  00008A                     i2u533_41:
 18847  00008A  EF58  F000         	goto	i2l775
 18848  00008E                     i2u533_40:
 18849  00008E                     
 18850                           ;main.c: 41:     {;main.c: 42:         XF_decrementAndQueueTimers();
 18851  00008E  EC02  F021         	call	_XF_decrementAndQueueTimers	;wreg free
 18852                           
 18853                           ;main.c: 43:         XF_scheduleTimer(5,evGameUpdate,1);
 18854  000092  0E00               	movlw	0
 18855  000094  6E03               	movwf	(i2XF_scheduleTimer@tm+1)^0,c
 18856  000096  0E05               	movlw	5
 18857  000098  6E02               	movwf	i2XF_scheduleTimer@tm^0,c
 18858  00009A  0E0A               	movlw	10
 18859  00009C  6E04               	movwf	i2XF_scheduleTimer@ev^0,c
 18860  00009E  0E01               	movlw	1
 18861  0000A0  6E05               	movwf	i2XF_scheduleTimer@inISR^0,c
 18862  0000A2  ECCF  F02B         	call	i2_XF_scheduleTimer	;wreg free
 18863  0000A6                     
 18864                           ;main.c: 44:         TMR0H=0xFB;
 18865  0000A6  0EFB               	movlw	251
 18866  0000A8  6ED7               	movwf	215,c	;volatile
 18867  0000AA                     
 18868                           ;main.c: 45:         TMR0L=0x1D;
 18869  0000AA  0E1D               	movlw	29
 18870  0000AC  6ED6               	movwf	214,c	;volatile
 18871  0000AE                     
 18872                           ;main.c: 46:         TMR0IF=0;
 18873  0000AE  94F2               	bcf	4082,2,c	;volatile
 18874  0000B0                     i2l775:
 18875  0000B0  C011  FFF4         	movff	??_isr+3,prodh
 18876  0000B4  C010  FFF3         	movff	??_isr+2,prodl
 18877  0000B8  C00F  FFDA         	movff	??_isr+1,fsr2h
 18878  0000BC  C00E  FFD9         	movff	??_isr,fsr2l
 18879  0000C0  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 18880  0000C2  0011               	retfie		f
 18881  0000C4                     __end_of_isr:
 18882                           	callstack 0
 18883                           
 18884 ;; *************** function i2_XF_scheduleTimer *****************
 18885 ;; Defined at:
 18886 ;;		line 96 in file "xf/xf.c"
 18887 ;; Parameters:    Size  Location     Type
 18888 ;;  tm              2    1[COMRAM] unsigned short 
 18889 ;;  ev              1    3[COMRAM] unsigned char 
 18890 ;;  inISR           1    4[COMRAM] _Bool 
 18891 ;; Auto vars:     Size  Location     Type
 18892 ;;  i               1    5[COMRAM] unsigned char 
 18893 ;; Return value:  Size  Location     Type
 18894 ;;                  1    wreg      unsigned char 
 18895 ;; Registers used:
 18896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18897 ;; Tracked objects:
 18898 ;;		On entry : 0/0
 18899 ;;		On exit  : 0/0
 18900 ;;		Unchanged: 0/0
 18901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18902 ;;      Params:         4       0       0       0       0       0       0
 18903 ;;      Locals:         1       0       0       0       0       0       0
 18904 ;;      Temps:          0       0       0       0       0       0       0
 18905 ;;      Totals:         5       0       0       0       0       0       0
 18906 ;;Total ram usage:        5 bytes
 18907 ;; Hardware stack levels used: 1
 18908 ;; Hardware stack levels required when called: 1
 18909 ;; This function calls:
 18910 ;;		i2_ENTERCRITICAL
 18911 ;;		i2_LEAVECRITICAL
 18912 ;; This function is called by:
 18913 ;;		_isr
 18914 ;; This function uses a non-reentrant model
 18915 ;;
 18916                           
 18917                           	psect	text78
 18918  00579E                     __ptext78:
 18919                           	callstack 0
 18920  00579E                     i2_XF_scheduleTimer:
 18921                           	callstack 17
 18922  00579E                     
 18923                           ;xf/xf.c: 96: TimerID XF_scheduleTimer(Time tm, Event ev, _Bool inISR);xf/xf.c: 97: {;xf
      +                          /xf.c: 98:     uint8_t i;;xf/xf.c: 100:     ENTERCRITICAL(inISR);
 18924  00579E  5005               	movf	i2XF_scheduleTimer@inISR^0,w,c
 18925  0057A0  EC8B  F02F         	call	i2_ENTERCRITICAL
 18926  0057A4                     
 18927                           ;xf/xf.c: 101:     for (i=0; i<8; i++)
 18928  0057A4  0E00               	movlw	0
 18929  0057A6  6E06               	movwf	i2XF_scheduleTimer@i^0,c
 18930  0057A8                     i2l7566:
 18931                           
 18932                           ;xf/xf.c: 102:     {;xf/xf.c: 103:         if (theXF.timerList[i].ev == NULLEVENT)
 18933  0057A8  5006               	movf	i2XF_scheduleTimer@i^0,w,c
 18934  0057AA  0D03               	mullw	3
 18935  0057AC  0EB7               	movlw	low (_theXF+2)
 18936  0057AE  24F3               	addwf	243,w,c
 18937  0057B0  6ED9               	movwf	fsr2l,c
 18938  0057B2  0E00               	movlw	high (_theXF+2)
 18939  0057B4  20F4               	addwfc	prodh,w,c
 18940  0057B6  6EDA               	movwf	fsr2h,c
 18941  0057B8  50DF               	movf	indf2,w,c
 18942  0057BA  A4D8               	btfss	status,2,c
 18943  0057BC  EFE2  F02B         	goto	i2u526_41
 18944  0057C0  EFE4  F02B         	goto	i2u526_40
 18945  0057C4                     i2u526_41:
 18946  0057C4  EFFC  F02B         	goto	i2l7570
 18947  0057C8                     i2u526_40:
 18948  0057C8                     
 18949                           ;xf/xf.c: 104:         {;xf/xf.c: 105:             theXF.timerList[i].tm = tm;
 18950  0057C8  5006               	movf	i2XF_scheduleTimer@i^0,w,c
 18951  0057CA  0D03               	mullw	3
 18952  0057CC  0EB5               	movlw	low _theXF
 18953  0057CE  24F3               	addwf	243,w,c
 18954  0057D0  6ED9               	movwf	fsr2l,c
 18955  0057D2  0E00               	movlw	high _theXF
 18956  0057D4  20F4               	addwfc	prodh,w,c
 18957  0057D6  6EDA               	movwf	fsr2h,c
 18958  0057D8  C002  FFDE         	movff	i2XF_scheduleTimer@tm,postinc2
 18959  0057DC  C003  FFDD         	movff	i2XF_scheduleTimer@tm+1,postdec2
 18960                           
 18961                           ;xf/xf.c: 106:             theXF.timerList[i].ev = ev;
 18962  0057E0  5006               	movf	i2XF_scheduleTimer@i^0,w,c
 18963  0057E2  0D03               	mullw	3
 18964  0057E4  0EB7               	movlw	low (_theXF+2)
 18965  0057E6  24F3               	addwf	243,w,c
 18966  0057E8  6ED9               	movwf	fsr2l,c
 18967  0057EA  0E00               	movlw	high (_theXF+2)
 18968  0057EC  20F4               	addwfc	prodh,w,c
 18969  0057EE  6EDA               	movwf	fsr2h,c
 18970  0057F0  C004  FFDF         	movff	i2XF_scheduleTimer@ev,indf2
 18971                           
 18972                           ;xf/xf.c: 107:             break;
 18973  0057F4  EF05  F02C         	goto	i2l7574
 18974  0057F8                     i2l7570:
 18975                           
 18976                           ;xf/xf.c: 109:     }
 18977  0057F8  2A06               	incf	i2XF_scheduleTimer@i^0,f,c
 18978  0057FA  0E07               	movlw	7
 18979  0057FC  6406               	cpfsgt	i2XF_scheduleTimer@i^0,c
 18980  0057FE  EF03  F02C         	goto	i2u527_41
 18981  005802  EF05  F02C         	goto	i2u527_40
 18982  005806                     i2u527_41:
 18983  005806  EFD4  F02B         	goto	i2l7566
 18984  00580A                     i2u527_40:
 18985  00580A                     i2l7574:
 18986                           
 18987                           ;xf/xf.c: 114:     LEAVECRITICAL(inISR);
 18988  00580A  5005               	movf	i2XF_scheduleTimer@inISR^0,w,c
 18989  00580C  EC80  F02F         	call	i2_LEAVECRITICAL
 18990  005810  0012               	return		;funcret
 18991  005812                     __end_ofi2_XF_scheduleTimer:
 18992                           	callstack 0
 18993                           
 18994 ;; *************** function _XF_decrementAndQueueTimers *****************
 18995 ;; Defined at:
 18996 ;;		line 139 in file "xf/xf.c"
 18997 ;; Parameters:    Size  Location     Type
 18998 ;;		None
 18999 ;; Auto vars:     Size  Location     Type
 19000 ;;  i               2   11[COMRAM] int 
 19001 ;; Return value:  Size  Location     Type
 19002 ;;                  1    wreg      void 
 19003 ;; Registers used:
 19004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19005 ;; Tracked objects:
 19006 ;;		On entry : 0/0
 19007 ;;		On exit  : 0/0
 19008 ;;		Unchanged: 0/0
 19009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19010 ;;      Params:         0       0       0       0       0       0       0
 19011 ;;      Locals:         2       0       0       0       0       0       0
 19012 ;;      Temps:          2       0       0       0       0       0       0
 19013 ;;      Totals:         4       0       0       0       0       0       0
 19014 ;;Total ram usage:        4 bytes
 19015 ;; Hardware stack levels used: 1
 19016 ;; Hardware stack levels required when called: 2
 19017 ;; This function calls:
 19018 ;;		_XF_unscheduleTimer
 19019 ;;		i2_XF_pushEvent
 19020 ;;		i2___wmul
 19021 ;; This function is called by:
 19022 ;;		_isr
 19023 ;; This function uses a non-reentrant model
 19024 ;;
 19025                           
 19026                           	psect	text79
 19027  004204                     __ptext79:
 19028                           	callstack 0
 19029  004204                     _XF_decrementAndQueueTimers:
 19030                           	callstack 16
 19031  004204                     
 19032                           ;xf/xf.c: 141:     int i;;xf/xf.c: 142:     for (i=0; i<8; i++)
 19033  004204  0E00               	movlw	0
 19034  004206  6E0D               	movwf	(XF_decrementAndQueueTimers@i+1)^0,c
 19035  004208  0E00               	movlw	0
 19036  00420A  6E0C               	movwf	XF_decrementAndQueueTimers@i^0,c
 19037  00420C                     i2l7544:
 19038                           
 19039                           ;xf/xf.c: 143:     {;xf/xf.c: 144:         if (theXF.timerList[i].ev != NULLEVENT)
 19040  00420C  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19041  004210  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19042  004214  0E00               	movlw	0
 19043  004216  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19044  004218  0E03               	movlw	3
 19045  00421A  6E03               	movwf	i2___wmul@multiplicand^0,c
 19046  00421C  EC24  F02F         	call	i2___wmul	;wreg free
 19047  004220  0EB7               	movlw	low (_theXF+2)
 19048  004222  2401               	addwf	?i2___wmul^0,w,c
 19049  004224  6ED9               	movwf	fsr2l,c
 19050  004226  0E00               	movlw	high (_theXF+2)
 19051  004228  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19052  00422A  6EDA               	movwf	fsr2h,c
 19053  00422C  50DF               	movf	indf2,w,c
 19054  00422E  B4D8               	btfsc	status,2,c
 19055  004230  EF1C  F021         	goto	i2u522_41
 19056  004234  EF1E  F021         	goto	i2u522_40
 19057  004238                     i2u522_41:
 19058  004238  EF82  F021         	goto	i2l7554
 19059  00423C                     i2u522_40:
 19060  00423C                     
 19061                           ;xf/xf.c: 145:         {;xf/xf.c: 147:             theXF.timerList[i].tm-=1;
 19062  00423C  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19063  004240  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19064  004244  0E00               	movlw	0
 19065  004246  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19066  004248  0E03               	movlw	3
 19067  00424A  6E03               	movwf	i2___wmul@multiplicand^0,c
 19068  00424C  EC24  F02F         	call	i2___wmul	;wreg free
 19069  004250  0EB5               	movlw	low _theXF
 19070  004252  2401               	addwf	?i2___wmul^0,w,c
 19071  004254  6ED9               	movwf	fsr2l,c
 19072  004256  0E00               	movlw	high _theXF
 19073  004258  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19074  00425A  6EDA               	movwf	fsr2h,c
 19075  00425C  06DE               	decf	postinc2,f,c
 19076  00425E  0E00               	movlw	0
 19077  004260  5ADD               	subwfb	postdec2,f,c
 19078                           
 19079                           ;xf/xf.c: 148:             if (theXF.timerList[i].tm ==0)
 19080  004262  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19081  004266  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19082  00426A  0E00               	movlw	0
 19083  00426C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19084  00426E  0E03               	movlw	3
 19085  004270  6E03               	movwf	i2___wmul@multiplicand^0,c
 19086  004272  EC24  F02F         	call	i2___wmul	;wreg free
 19087  004276  0EB5               	movlw	low _theXF
 19088  004278  2401               	addwf	?i2___wmul^0,w,c
 19089  00427A  6ED9               	movwf	fsr2l,c
 19090  00427C  0E00               	movlw	high _theXF
 19091  00427E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19092  004280  6EDA               	movwf	fsr2h,c
 19093  004282  50DE               	movf	postinc2,w,c
 19094  004284  10DE               	iorwf	postinc2,w,c
 19095  004286  A4D8               	btfss	status,2,c
 19096  004288  EF48  F021         	goto	i2u523_41
 19097  00428C  EF4A  F021         	goto	i2u523_40
 19098  004290                     i2u523_41:
 19099  004290  EF82  F021         	goto	i2l7554
 19100  004294                     i2u523_40:
 19101  004294                     
 19102                           ;xf/xf.c: 149:             {;xf/xf.c: 150:                 if(XF_pushEvent(theXF.timerLi
      +                          st[i].ev, 1) == 1)
 19103  004294  0E01               	movlw	1
 19104  004296  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19105  004298  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19106  00429C  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19107  0042A0  0E00               	movlw	0
 19108  0042A2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19109  0042A4  0E03               	movlw	3
 19110  0042A6  6E03               	movwf	i2___wmul@multiplicand^0,c
 19111  0042A8  EC24  F02F         	call	i2___wmul	;wreg free
 19112  0042AC  0EB7               	movlw	low (_theXF+2)
 19113  0042AE  2401               	addwf	?i2___wmul^0,w,c
 19114  0042B0  6ED9               	movwf	fsr2l,c
 19115  0042B2  0E00               	movlw	high (_theXF+2)
 19116  0042B4  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19117  0042B6  6EDA               	movwf	fsr2h,c
 19118  0042B8  50DF               	movf	indf2,w,c
 19119  0042BA  ECD5  F02C         	call	i2_XF_pushEvent
 19120  0042BE  06E8               	decf	wreg,f,c
 19121  0042C0  A4D8               	btfss	status,2,c
 19122  0042C2  EF65  F021         	goto	i2u524_41
 19123  0042C6  EF67  F021         	goto	i2u524_40
 19124  0042CA                     i2u524_41:
 19125  0042CA  EF6E  F021         	goto	i2l7552
 19126  0042CE                     i2u524_40:
 19127  0042CE                     
 19128                           ;xf/xf.c: 151:                 {;xf/xf.c: 152:                   XF_unscheduleTimer(i, 1
      +                          );
 19129  0042CE  0E01               	movlw	1
 19130  0042D0  6E02               	movwf	XF_unscheduleTimer@inISR^0,c
 19131  0042D2  500C               	movf	XF_decrementAndQueueTimers@i^0,w,c
 19132  0042D4  EC96  F02E         	call	_XF_unscheduleTimer
 19133                           
 19134                           ;xf/xf.c: 153:                 }
 19135  0042D8  EF82  F021         	goto	i2l7554
 19136  0042DC                     i2l7552:
 19137                           
 19138                           ;xf/xf.c: 155:                 {;xf/xf.c: 156:                   theXF.timerList[i].tm=1
      +                          ;
 19139  0042DC  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19140  0042E0  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19141  0042E4  0E00               	movlw	0
 19142  0042E6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19143  0042E8  0E03               	movlw	3
 19144  0042EA  6E03               	movwf	i2___wmul@multiplicand^0,c
 19145  0042EC  EC24  F02F         	call	i2___wmul	;wreg free
 19146  0042F0  0EB5               	movlw	low _theXF
 19147  0042F2  2401               	addwf	?i2___wmul^0,w,c
 19148  0042F4  6ED9               	movwf	fsr2l,c
 19149  0042F6  0E00               	movlw	high _theXF
 19150  0042F8  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19151  0042FA  6EDA               	movwf	fsr2h,c
 19152  0042FC  0E01               	movlw	1
 19153  0042FE  6EDE               	movwf	postinc2,c
 19154  004300  0E00               	movlw	0
 19155  004302  6EDD               	movwf	postdec2,c
 19156  004304                     i2l7554:
 19157                           
 19158                           ;xf/xf.c: 160:     }
 19159  004304  4A0C               	infsnz	XF_decrementAndQueueTimers@i^0,f,c
 19160  004306  2A0D               	incf	(XF_decrementAndQueueTimers@i+1)^0,f,c
 19161  004308  BE0D               	btfsc	(XF_decrementAndQueueTimers@i+1)^0,7,c
 19162  00430A  EF90  F021         	goto	i2u525_41
 19163  00430E  500D               	movf	(XF_decrementAndQueueTimers@i+1)^0,w,c
 19164  004310  E109               	bnz	i2u525_40
 19165  004312  0E08               	movlw	8
 19166  004314  5C0C               	subwf	XF_decrementAndQueueTimers@i^0,w,c
 19167  004316  A0D8               	btfss	status,0,c
 19168  004318  EF90  F021         	goto	i2u525_41
 19169  00431C  EF92  F021         	goto	i2u525_40
 19170  004320                     i2u525_41:
 19171  004320  EF06  F021         	goto	i2l7544
 19172  004324                     i2u525_40:
 19173  004324  0012               	return		;funcret
 19174  004326                     __end_of_XF_decrementAndQueueTimers:
 19175                           	callstack 0
 19176                           
 19177 ;; *************** function i2___wmul *****************
 19178 ;; Defined at:
 19179 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 19180 ;; Parameters:    Size  Location     Type
 19181 ;;  multiplier      2    0[COMRAM] unsigned int 
 19182 ;;  multiplicand    2    2[COMRAM] unsigned int 
 19183 ;; Auto vars:     Size  Location     Type
 19184 ;;  product         2    4[COMRAM] unsigned int 
 19185 ;; Return value:  Size  Location     Type
 19186 ;;                  2    0[COMRAM] unsigned int 
 19187 ;; Registers used:
 19188 ;;		wreg, status,2, status,0, prodl, prodh
 19189 ;; Tracked objects:
 19190 ;;		On entry : 0/0
 19191 ;;		On exit  : 0/0
 19192 ;;		Unchanged: 0/0
 19193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19194 ;;      Params:         4       0       0       0       0       0       0
 19195 ;;      Locals:         2       0       0       0       0       0       0
 19196 ;;      Temps:          0       0       0       0       0       0       0
 19197 ;;      Totals:         6       0       0       0       0       0       0
 19198 ;;Total ram usage:        6 bytes
 19199 ;; Hardware stack levels used: 1
 19200 ;; This function calls:
 19201 ;;		Nothing
 19202 ;; This function is called by:
 19203 ;;		_XF_decrementAndQueueTimers
 19204 ;; This function uses a non-reentrant model
 19205 ;;
 19206                           
 19207                           	psect	text80
 19208  005E48                     __ptext80:
 19209                           	callstack 0
 19210  005E48                     i2___wmul:
 19211                           	callstack 17
 19212  005E48  5001               	movf	i2___wmul@multiplier^0,w,c
 19213  005E4A  0203               	mulwf	i2___wmul@multiplicand^0,c
 19214  005E4C  CFF3 F005          	movff	prodl,i2___wmul@product
 19215  005E50  CFF4 F006          	movff	prodh,i2___wmul@product+1
 19216  005E54  5001               	movf	i2___wmul@multiplier^0,w,c
 19217  005E56  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 19218  005E58  50F3               	movf	243,w,c
 19219  005E5A  2606               	addwf	(i2___wmul@product+1)^0,f,c
 19220  005E5C  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 19221  005E5E  0203               	mulwf	i2___wmul@multiplicand^0,c
 19222  005E60  50F3               	movf	243,w,c
 19223  005E62  2606               	addwf	(i2___wmul@product+1)^0,f,c
 19224  005E64  C005  F001         	movff	i2___wmul@product,?i2___wmul
 19225  005E68  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 19226  005E6C  0012               	return		;funcret
 19227  005E6E                     __end_ofi2___wmul:
 19228                           	callstack 0
 19229                           
 19230 ;; *************** function i2_XF_pushEvent *****************
 19231 ;; Defined at:
 19232 ;;		line 49 in file "xf/xf.c"
 19233 ;; Parameters:    Size  Location     Type
 19234 ;;  ev              1    wreg     unsigned char 
 19235 ;;  inISR           1    6[COMRAM] _Bool 
 19236 ;; Auto vars:     Size  Location     Type
 19237 ;;  ev              1    7[COMRAM] unsigned char 
 19238 ;;  temp            1    8[COMRAM] unsigned char 
 19239 ;; Return value:  Size  Location     Type
 19240 ;;                  1    wreg      _Bool 
 19241 ;; Registers used:
 19242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19243 ;; Tracked objects:
 19244 ;;		On entry : 0/0
 19245 ;;		On exit  : 0/0
 19246 ;;		Unchanged: 0/0
 19247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19248 ;;      Params:         1       0       0       0       0       0       0
 19249 ;;      Locals:         2       0       0       0       0       0       0
 19250 ;;      Temps:          0       0       0       0       0       0       0
 19251 ;;      Totals:         3       0       0       0       0       0       0
 19252 ;;Total ram usage:        3 bytes
 19253 ;; Hardware stack levels used: 1
 19254 ;; Hardware stack levels required when called: 1
 19255 ;; This function calls:
 19256 ;;		i2_ENTERCRITICAL
 19257 ;;		i2_LEAVECRITICAL
 19258 ;;		i2___awmod
 19259 ;; This function is called by:
 19260 ;;		_XF_decrementAndQueueTimers
 19261 ;;		_isr
 19262 ;; This function uses a non-reentrant model
 19263 ;;
 19264                           
 19265                           	psect	text81
 19266  0059AA                     __ptext81:
 19267                           	callstack 0
 19268  0059AA                     i2_XF_pushEvent:
 19269                           	callstack 17
 19270                           
 19271                           ;incstack = 0
 19272                           ;i2XF_pushEvent@ev stored from wreg
 19273  0059AA  6E08               	movwf	i2XF_pushEvent@ev^0,c
 19274  0059AC                     
 19275                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
 19276  0059AC  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 19277  0059AE  EC8B  F02F         	call	i2_ENTERCRITICAL
 19278  0059B2                     
 19279                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
 19280  0059B2  0E01               	movlw	1
 19281  0059B4  0100               	movlb	0	; () banked
 19282  0059B6  25D9               	addwf	(_theXF+36)& (0+255),w,b
 19283  0059B8  6E01               	movwf	i2___awmod@dividend^0,c
 19284  0059BA  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 19285  0059BC  0E00               	movlw	0
 19286  0059BE  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
 19287  0059C0  0E00               	movlw	0
 19288  0059C2  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 19289  0059C4  0E0C               	movlw	12
 19290  0059C6  6E03               	movwf	i2___awmod@divisor^0,c
 19291  0059C8  ECD4  F028         	call	i2___awmod	;wreg free
 19292  0059CC  5001               	movf	?i2___awmod^0,w,c
 19293  0059CE  6E09               	movwf	i2XF_pushEvent@temp^0,c
 19294  0059D0                     
 19295                           ;xf/xf.c: 55:     if(temp == theXF.out)
 19296  0059D0  5009               	movf	i2XF_pushEvent@temp^0,w,c
 19297  0059D2  0100               	movlb	0	; () banked
 19298  0059D4  19DA               	xorwf	(_theXF+37)& (0+255),w,b
 19299  0059D6  A4D8               	btfss	status,2,c
 19300  0059D8  EFF0  F02C         	goto	i2u520_41
 19301  0059DC  EFF2  F02C         	goto	i2u520_40
 19302  0059E0                     i2u520_41:
 19303  0059E0  EFF8  F02C         	goto	i2l7456
 19304  0059E4                     i2u520_40:
 19305  0059E4                     
 19306                           ; BSR set to: 0
 19307                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
 19308  0059E4  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 19309  0059E6  EC80  F02F         	call	i2_LEAVECRITICAL
 19310  0059EA                     
 19311                           ;xf/xf.c: 58:       return 0;
 19312  0059EA  0E00               	movlw	0
 19313  0059EC  EF06  F02D         	goto	i2l705
 19314  0059F0                     i2l7456:
 19315                           
 19316                           ; BSR set to: 0
 19317                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
 19318  0059F0  0ECD               	movlw	low (_theXF+24)
 19319  0059F2  25D9               	addwf	(_theXF+36)& (0+255),w,b
 19320  0059F4  6ED9               	movwf	fsr2l,c
 19321  0059F6  6ADA               	clrf	fsr2h,c
 19322  0059F8  0E00               	movlw	high (_theXF+24)
 19323  0059FA  22DA               	addwfc	fsr2h,f,c
 19324  0059FC  C008  FFDF         	movff	i2XF_pushEvent@ev,indf2
 19325  005A00                     
 19326                           ; BSR set to: 0
 19327                           ;xf/xf.c: 61:     theXF.in = temp;
 19328  005A00  C009  F0D9         	movff	i2XF_pushEvent@temp,_theXF+36
 19329  005A04                     
 19330                           ; BSR set to: 0
 19331                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
 19332  005A04  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 19333  005A06  EC80  F02F         	call	i2_LEAVECRITICAL
 19334  005A0A                     
 19335                           ;xf/xf.c: 63:     return 1;
 19336  005A0A  0E01               	movlw	1
 19337  005A0C                     i2l705:
 19338  005A0C  0012               	return		;funcret
 19339  005A0E                     __end_ofi2_XF_pushEvent:
 19340                           	callstack 0
 19341                           
 19342 ;; *************** function i2___awmod *****************
 19343 ;; Defined at:
 19344 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 19345 ;; Parameters:    Size  Location     Type
 19346 ;;  dividend        2    0[COMRAM] int 
 19347 ;;  divisor         2    2[COMRAM] int 
 19348 ;; Auto vars:     Size  Location     Type
 19349 ;;  sign            1    5[COMRAM] unsigned char 
 19350 ;;  counter         1    4[COMRAM] unsigned char 
 19351 ;; Return value:  Size  Location     Type
 19352 ;;                  2    0[COMRAM] int 
 19353 ;; Registers used:
 19354 ;;		wreg, status,2, status,0
 19355 ;; Tracked objects:
 19356 ;;		On entry : 0/0
 19357 ;;		On exit  : 0/0
 19358 ;;		Unchanged: 0/0
 19359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19360 ;;      Params:         4       0       0       0       0       0       0
 19361 ;;      Locals:         2       0       0       0       0       0       0
 19362 ;;      Temps:          0       0       0       0       0       0       0
 19363 ;;      Totals:         6       0       0       0       0       0       0
 19364 ;;Total ram usage:        6 bytes
 19365 ;; Hardware stack levels used: 1
 19366 ;; This function calls:
 19367 ;;		Nothing
 19368 ;; This function is called by:
 19369 ;;		i2_XF_pushEvent
 19370 ;; This function uses a non-reentrant model
 19371 ;;
 19372                           
 19373                           	psect	text82
 19374  0051A8                     __ptext82:
 19375                           	callstack 0
 19376  0051A8                     i2___awmod:
 19377                           	callstack 17
 19378  0051A8  0E00               	movlw	0
 19379  0051AA  6E06               	movwf	i2___awmod@sign^0,c
 19380  0051AC  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
 19381  0051AE  EFDD  F028         	goto	i2u494_40
 19382  0051B2  EFDB  F028         	goto	i2u494_41
 19383  0051B6                     i2u494_41:
 19384  0051B6  EFE3  F028         	goto	i2l7176
 19385  0051BA                     i2u494_40:
 19386  0051BA  6C01               	negf	i2___awmod@dividend^0,c
 19387  0051BC  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 19388  0051BE  B0D8               	btfsc	status,0,c
 19389  0051C0  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 19390  0051C2  0E01               	movlw	1
 19391  0051C4  6E06               	movwf	i2___awmod@sign^0,c
 19392  0051C6                     i2l7176:
 19393  0051C6  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
 19394  0051C8  EFEA  F028         	goto	i2u495_40
 19395  0051CC  EFE8  F028         	goto	i2u495_41
 19396  0051D0                     i2u495_41:
 19397  0051D0  EFEE  F028         	goto	i2l7180
 19398  0051D4                     i2u495_40:
 19399  0051D4  6C03               	negf	i2___awmod@divisor^0,c
 19400  0051D6  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 19401  0051D8  B0D8               	btfsc	status,0,c
 19402  0051DA  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 19403  0051DC                     i2l7180:
 19404  0051DC  5003               	movf	i2___awmod@divisor^0,w,c
 19405  0051DE  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 19406  0051E0  B4D8               	btfsc	status,2,c
 19407  0051E2  EFF5  F028         	goto	i2u496_41
 19408  0051E6  EFF7  F028         	goto	i2u496_40
 19409  0051EA                     i2u496_41:
 19410  0051EA  EF1B  F029         	goto	i2l7196
 19411  0051EE                     i2u496_40:
 19412  0051EE  0E01               	movlw	1
 19413  0051F0  6E05               	movwf	i2___awmod@counter^0,c
 19414  0051F2  EFFF  F028         	goto	i2l7186
 19415  0051F6                     i2l7184:
 19416  0051F6  90D8               	bcf	status,0,c
 19417  0051F8  3603               	rlcf	i2___awmod@divisor^0,f,c
 19418  0051FA  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 19419  0051FC  2A05               	incf	i2___awmod@counter^0,f,c
 19420  0051FE                     i2l7186:
 19421  0051FE  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 19422  005200  EF04  F029         	goto	i2u497_41
 19423  005204  EF06  F029         	goto	i2u497_40
 19424  005208                     i2u497_41:
 19425  005208  EFFB  F028         	goto	i2l7184
 19426  00520C                     i2u497_40:
 19427  00520C                     i2l7188:
 19428  00520C  5003               	movf	i2___awmod@divisor^0,w,c
 19429  00520E  5C01               	subwf	i2___awmod@dividend^0,w,c
 19430  005210  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 19431  005212  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 19432  005214  A0D8               	btfss	status,0,c
 19433  005216  EF0F  F029         	goto	i2u498_41
 19434  00521A  EF11  F029         	goto	i2u498_40
 19435  00521E                     i2u498_41:
 19436  00521E  EF15  F029         	goto	i2l7192
 19437  005222                     i2u498_40:
 19438  005222  5003               	movf	i2___awmod@divisor^0,w,c
 19439  005224  5E01               	subwf	i2___awmod@dividend^0,f,c
 19440  005226  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 19441  005228  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 19442  00522A                     i2l7192:
 19443  00522A  90D8               	bcf	status,0,c
 19444  00522C  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 19445  00522E  3203               	rrcf	i2___awmod@divisor^0,f,c
 19446  005230  2E05               	decfsz	i2___awmod@counter^0,f,c
 19447  005232  EF06  F029         	goto	i2l7188
 19448  005236                     i2l7196:
 19449  005236  5006               	movf	i2___awmod@sign^0,w,c
 19450  005238  B4D8               	btfsc	status,2,c
 19451  00523A  EF21  F029         	goto	i2u499_41
 19452  00523E  EF23  F029         	goto	i2u499_40
 19453  005242                     i2u499_41:
 19454  005242  EF27  F029         	goto	i2l7200
 19455  005246                     i2u499_40:
 19456  005246  6C01               	negf	i2___awmod@dividend^0,c
 19457  005248  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 19458  00524A  B0D8               	btfsc	status,0,c
 19459  00524C  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 19460  00524E                     i2l7200:
 19461  00524E  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 19462  005252  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 19463  005256  0012               	return		;funcret
 19464  005258                     __end_ofi2___awmod:
 19465                           	callstack 0
 19466                           
 19467 ;; *************** function _XF_unscheduleTimer *****************
 19468 ;; Defined at:
 19469 ;;		line 125 in file "xf/xf.c"
 19470 ;; Parameters:    Size  Location     Type
 19471 ;;  id              1    wreg     unsigned char 
 19472 ;;  inISR           1    1[COMRAM] _Bool 
 19473 ;; Auto vars:     Size  Location     Type
 19474 ;;  id              1    2[COMRAM] unsigned char 
 19475 ;; Return value:  Size  Location     Type
 19476 ;;                  1    wreg      void 
 19477 ;; Registers used:
 19478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19479 ;; Tracked objects:
 19480 ;;		On entry : 0/0
 19481 ;;		On exit  : 0/0
 19482 ;;		Unchanged: 0/0
 19483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19484 ;;      Params:         1       0       0       0       0       0       0
 19485 ;;      Locals:         1       0       0       0       0       0       0
 19486 ;;      Temps:          0       0       0       0       0       0       0
 19487 ;;      Totals:         2       0       0       0       0       0       0
 19488 ;;Total ram usage:        2 bytes
 19489 ;; Hardware stack levels used: 1
 19490 ;; Hardware stack levels required when called: 1
 19491 ;; This function calls:
 19492 ;;		i2_ENTERCRITICAL
 19493 ;;		i2_LEAVECRITICAL
 19494 ;; This function is called by:
 19495 ;;		_XF_decrementAndQueueTimers
 19496 ;; This function uses a non-reentrant model
 19497 ;;
 19498                           
 19499                           	psect	text83
 19500  005D2C                     __ptext83:
 19501                           	callstack 0
 19502  005D2C                     _XF_unscheduleTimer:
 19503                           	callstack 16
 19504                           
 19505                           ;incstack = 0
 19506                           ;XF_unscheduleTimer@id stored from wreg
 19507  005D2C  6E03               	movwf	XF_unscheduleTimer@id^0,c
 19508  005D2E                     
 19509                           ;xf/xf.c: 125: void XF_unscheduleTimer(TimerID id, _Bool inISR);xf/xf.c: 126: {;xf/xf.c:
      +                           127:     ENTERCRITICAL(inISR);
 19510  005D2E  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 19511  005D30  EC8B  F02F         	call	i2_ENTERCRITICAL
 19512  005D34                     
 19513                           ;xf/xf.c: 128:     theXF.timerList[id].tm = 0;
 19514  005D34  5003               	movf	XF_unscheduleTimer@id^0,w,c
 19515  005D36  0D03               	mullw	3
 19516  005D38  0EB5               	movlw	low _theXF
 19517  005D3A  24F3               	addwf	243,w,c
 19518  005D3C  6ED9               	movwf	fsr2l,c
 19519  005D3E  0E00               	movlw	high _theXF
 19520  005D40  20F4               	addwfc	prodh,w,c
 19521  005D42  6EDA               	movwf	fsr2h,c
 19522  005D44  0E00               	movlw	0
 19523  005D46  6EDE               	movwf	postinc2,c
 19524  005D48  0E00               	movlw	0
 19525  005D4A  6EDD               	movwf	postdec2,c
 19526  005D4C                     
 19527                           ;xf/xf.c: 129:     theXF.timerList[id].ev = NULLEVENT;
 19528  005D4C  5003               	movf	XF_unscheduleTimer@id^0,w,c
 19529  005D4E  0D03               	mullw	3
 19530  005D50  0EB7               	movlw	low (_theXF+2)
 19531  005D52  24F3               	addwf	243,w,c
 19532  005D54  6ED9               	movwf	fsr2l,c
 19533  005D56  0E00               	movlw	high (_theXF+2)
 19534  005D58  20F4               	addwfc	prodh,w,c
 19535  005D5A  6EDA               	movwf	fsr2h,c
 19536  005D5C  0E00               	movlw	0
 19537  005D5E  6EDF               	movwf	indf2,c
 19538                           
 19539                           ;xf/xf.c: 130:     LEAVECRITICAL(inISR);
 19540  005D60  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 19541  005D62  EC80  F02F         	call	i2_LEAVECRITICAL
 19542  005D66  0012               	return		;funcret
 19543  005D68                     __end_of_XF_unscheduleTimer:
 19544                           	callstack 0
 19545                           
 19546 ;; *************** function i2_LEAVECRITICAL *****************
 19547 ;; Defined at:
 19548 ;;		line 186 in file "xf/xf.c"
 19549 ;; Parameters:    Size  Location     Type
 19550 ;;  inISR           1    wreg     _Bool 
 19551 ;; Auto vars:     Size  Location     Type
 19552 ;;  inISR           1    0[COMRAM] _Bool 
 19553 ;; Return value:  Size  Location     Type
 19554 ;;                  1    wreg      void 
 19555 ;; Registers used:
 19556 ;;		wreg, status,2
 19557 ;; Tracked objects:
 19558 ;;		On entry : 0/0
 19559 ;;		On exit  : 0/0
 19560 ;;		Unchanged: 0/0
 19561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19562 ;;      Params:         0       0       0       0       0       0       0
 19563 ;;      Locals:         1       0       0       0       0       0       0
 19564 ;;      Temps:          0       0       0       0       0       0       0
 19565 ;;      Totals:         1       0       0       0       0       0       0
 19566 ;;Total ram usage:        1 bytes
 19567 ;; Hardware stack levels used: 1
 19568 ;; This function calls:
 19569 ;;		Nothing
 19570 ;; This function is called by:
 19571 ;;		_XF_unscheduleTimer
 19572 ;;		i2_XF_pushEvent
 19573 ;;		i2_XF_scheduleTimer
 19574 ;; This function uses a non-reentrant model
 19575 ;;
 19576                           
 19577                           	psect	text84
 19578  005F00                     __ptext84:
 19579                           	callstack 0
 19580  005F00                     i2_LEAVECRITICAL:
 19581                           	callstack 17
 19582                           
 19583                           ;incstack = 0
 19584                           ;i2LEAVECRITICAL@inISR stored from wreg
 19585  005F00  6E01               	movwf	i2LEAVECRITICAL@inISR^0,c
 19586  005F02                     
 19587                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 19588  005F02  5001               	movf	i2LEAVECRITICAL@inISR^0,w,c
 19589  005F04  A4D8               	btfss	status,2,c
 19590  005F06  EF87  F02F         	goto	i2u493_41
 19591  005F0A  EF89  F02F         	goto	i2u493_40
 19592  005F0E                     i2u493_41:
 19593  005F0E  EF8A  F02F         	goto	i2l735
 19594  005F12                     i2u493_40:
 19595  005F12                     
 19596                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 19597  005F12  8EF2               	bsf	4082,7,c	;volatile
 19598  005F14                     i2l735:
 19599  005F14  0012               	return		;funcret
 19600  005F16                     __end_ofi2_LEAVECRITICAL:
 19601                           	callstack 0
 19602                           
 19603 ;; *************** function i2_ENTERCRITICAL *****************
 19604 ;; Defined at:
 19605 ;;		line 172 in file "xf/xf.c"
 19606 ;; Parameters:    Size  Location     Type
 19607 ;;  inISR           1    wreg     _Bool 
 19608 ;; Auto vars:     Size  Location     Type
 19609 ;;  inISR           1    0[COMRAM] _Bool 
 19610 ;; Return value:  Size  Location     Type
 19611 ;;                  1    wreg      void 
 19612 ;; Registers used:
 19613 ;;		wreg, status,2
 19614 ;; Tracked objects:
 19615 ;;		On entry : 0/0
 19616 ;;		On exit  : 0/0
 19617 ;;		Unchanged: 0/0
 19618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19619 ;;      Params:         0       0       0       0       0       0       0
 19620 ;;      Locals:         1       0       0       0       0       0       0
 19621 ;;      Temps:          0       0       0       0       0       0       0
 19622 ;;      Totals:         1       0       0       0       0       0       0
 19623 ;;Total ram usage:        1 bytes
 19624 ;; Hardware stack levels used: 1
 19625 ;; This function calls:
 19626 ;;		Nothing
 19627 ;; This function is called by:
 19628 ;;		_XF_unscheduleTimer
 19629 ;;		i2_XF_pushEvent
 19630 ;;		i2_XF_scheduleTimer
 19631 ;; This function uses a non-reentrant model
 19632 ;;
 19633                           
 19634                           	psect	text85
 19635  005F16                     __ptext85:
 19636                           	callstack 0
 19637  005F16                     i2_ENTERCRITICAL:
 19638                           	callstack 17
 19639                           
 19640                           ;incstack = 0
 19641                           ;i2ENTERCRITICAL@inISR stored from wreg
 19642  005F16  6E01               	movwf	i2ENTERCRITICAL@inISR^0,c
 19643  005F18                     
 19644                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 19645  005F18  5001               	movf	i2ENTERCRITICAL@inISR^0,w,c
 19646  005F1A  A4D8               	btfss	status,2,c
 19647  005F1C  EF92  F02F         	goto	i2u492_41
 19648  005F20  EF94  F02F         	goto	i2u492_40
 19649  005F24                     i2u492_41:
 19650  005F24  EF95  F02F         	goto	i2l731
 19651  005F28                     i2u492_40:
 19652  005F28                     
 19653                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 19654  005F28  9EF2               	bcf	4082,7,c	;volatile
 19655  005F2A                     i2l731:
 19656  005F2A  0012               	return		;funcret
 19657  005F2C                     __end_ofi2_ENTERCRITICAL:
 19658                           	callstack 0
 19659                           
 19660                           	psect	rparam
 19661  0000                     
 19662                           	psect	temp
 19663  00004E                     btemp:
 19664                           	callstack 0
 19665  00004E                     	ds	1
 19666  0000                     int$flags	set	btemp
 19667  0000                     wtemp8	set	btemp+1
 19668  0000                     ttemp5	set	btemp+1
 19669  0000                     ttemp6	set	btemp+4
 19670  0000                     ttemp7	set	btemp+8
 19671                           
 19672                           	psect	idloc
 19673                           
 19674                           ;Config register IDLOC0 @ 0x200000
 19675                           ;	unspecified, using default values
 19676  200000                     	org	2097152
 19677  200000  FF                 	db	255
 19678                           
 19679                           ;Config register IDLOC1 @ 0x200001
 19680                           ;	unspecified, using default values
 19681  200001                     	org	2097153
 19682  200001  FF                 	db	255
 19683                           
 19684                           ;Config register IDLOC2 @ 0x200002
 19685                           ;	unspecified, using default values
 19686  200002                     	org	2097154
 19687  200002  FF                 	db	255
 19688                           
 19689                           ;Config register IDLOC3 @ 0x200003
 19690                           ;	unspecified, using default values
 19691  200003                     	org	2097155
 19692  200003  FF                 	db	255
 19693                           
 19694                           ;Config register IDLOC4 @ 0x200004
 19695                           ;	unspecified, using default values
 19696  200004                     	org	2097156
 19697  200004  FF                 	db	255
 19698                           
 19699                           ;Config register IDLOC5 @ 0x200005
 19700                           ;	unspecified, using default values
 19701  200005                     	org	2097157
 19702  200005  FF                 	db	255
 19703                           
 19704                           ;Config register IDLOC6 @ 0x200006
 19705                           ;	unspecified, using default values
 19706  200006                     	org	2097158
 19707  200006  FF                 	db	255
 19708                           
 19709                           ;Config register IDLOC7 @ 0x200007
 19710                           ;	unspecified, using default values
 19711  200007                     	org	2097159
 19712  200007  FF                 	db	255
 19713                           
 19714                           	psect	config
 19715                           
 19716                           ; Padding undefined space
 19717  300000                     	org	3145728
 19718  300000  FF                 	db	255
 19719                           
 19720                           ;Config register CONFIG1H @ 0x300001
 19721                           ;	Oscillator Selection bits
 19722                           ;	FOSC = INTIO67, Internal oscillator block
 19723                           ;	4X PLL Enable
 19724                           ;	PLLCFG = ON, Oscillator multiplied by 4
 19725                           ;	Primary clock enable bit
 19726                           ;	PRICLKEN = ON, Primary clock is always enabled
 19727                           ;	Fail-Safe Clock Monitor Enable bit
 19728                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 19729                           ;	Internal/External Oscillator Switchover bit
 19730                           ;	IESO = OFF, Oscillator Switchover mode disabled
 19731  300001                     	org	3145729
 19732  300001  38                 	db	56
 19733                           
 19734                           ;Config register CONFIG2L @ 0x300002
 19735                           ;	Power-up Timer Enable bit
 19736                           ;	PWRTEN = OFF, Power up timer disabled
 19737                           ;	Brown-out Reset Enable bits
 19738                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 19739                           ;	Brown Out Reset Voltage bits
 19740                           ;	BORV = 190, VBOR set to 1.90 V nominal
 19741  300002                     	org	3145730
 19742  300002  1F                 	db	31
 19743                           
 19744                           ;Config register CONFIG2H @ 0x300003
 19745                           ;	Watchdog Timer Enable bits
 19746                           ;	WDTEN = SWON, WDT is controlled by SWDTEN bit of the WDTCON register
 19747                           ;	Watchdog Timer Postscale Select bits
 19748                           ;	WDTPS = 32768, 1:32768
 19749  300003                     	org	3145731
 19750  300003  3E                 	db	62
 19751                           
 19752                           ; Padding undefined space
 19753  300004                     	org	3145732
 19754  300004  FF                 	db	255
 19755                           
 19756                           ;Config register CONFIG3H @ 0x300005
 19757                           ;	CCP2 MUX bit
 19758                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 19759                           ;	PORTB A/D Enable bit
 19760                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 19761                           ;	P3A/CCP3 Mux bit
 19762                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 19763                           ;	HFINTOSC Fast Start-up
 19764                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 19765                           ;	Timer3 Clock input mux bit
 19766                           ;	T3CMX = PORTC0, T3CKI is on RC0
 19767                           ;	ECCP2 B output mux bit
 19768                           ;	P2BMX = PORTB5, P2B is on RB5
 19769                           ;	MCLR Pin Enable bit
 19770                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 19771  300005                     	org	3145733
 19772  300005  BD                 	db	189
 19773                           
 19774                           ;Config register CONFIG4L @ 0x300006
 19775                           ;	Stack Full/Underflow Reset Enable bit
 19776                           ;	STVREN = ON, Stack full/underflow will cause Reset
 19777                           ;	Single-Supply ICSP Enable bit
 19778                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 19779                           ;	Extended Instruction Set Enable bit
 19780                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 19781                           ;	Background Debug
 19782                           ;	DEBUG = 0x1, unprogrammed default
 19783  300006                     	org	3145734
 19784  300006  85                 	db	133
 19785                           
 19786                           ; Padding undefined space
 19787  300007                     	org	3145735
 19788  300007  FF                 	db	255
 19789                           
 19790                           ;Config register CONFIG5L @ 0x300008
 19791                           ;	Code Protection Block 0
 19792                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 19793                           ;	Code Protection Block 1
 19794                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 19795                           ;	Code Protection Block 2
 19796                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 19797                           ;	Code Protection Block 3
 19798                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 19799  300008                     	org	3145736
 19800  300008  0F                 	db	15
 19801                           
 19802                           ;Config register CONFIG5H @ 0x300009
 19803                           ;	Boot Block Code Protection bit
 19804                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 19805                           ;	Data EEPROM Code Protection bit
 19806                           ;	CPD = OFF, Data EEPROM not code-protected
 19807  300009                     	org	3145737
 19808  300009  C0                 	db	192
 19809                           
 19810                           ;Config register CONFIG6L @ 0x30000A
 19811                           ;	Write Protection Block 0
 19812                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 19813                           ;	Write Protection Block 1
 19814                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 19815                           ;	Write Protection Block 2
 19816                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 19817                           ;	Write Protection Block 3
 19818                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 19819  30000A                     	org	3145738
 19820  30000A  0F                 	db	15
 19821                           
 19822                           ;Config register CONFIG6H @ 0x30000B
 19823                           ;	Configuration Register Write Protection bit
 19824                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 19825                           ;	Boot Block Write Protection bit
 19826                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 19827                           ;	Data EEPROM Write Protection bit
 19828                           ;	WRTD = OFF, Data EEPROM not write-protected
 19829  30000B                     	org	3145739
 19830  30000B  E0                 	db	224
 19831                           
 19832                           ;Config register CONFIG7L @ 0x30000C
 19833                           ;	Table Read Protection Block 0
 19834                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 19835                           ;	Table Read Protection Block 1
 19836                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 19837                           ;	Table Read Protection Block 2
 19838                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 19839                           ;	Table Read Protection Block 3
 19840                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 19841  30000C                     	org	3145740
 19842  30000C  0F                 	db	15
 19843                           
 19844                           ;Config register CONFIG7H @ 0x30000D
 19845                           ;	Boot Block Table Read Protection bit
 19846                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 19847  30000D                     	org	3145741
 19848  30000D  40                 	db	64
 19849                           tosu	equ	0xFFF
 19850                           tosh	equ	0xFFE
 19851                           tosl	equ	0xFFD
 19852                           stkptr	equ	0xFFC
 19853                           pclatu	equ	0xFFB
 19854                           pclath	equ	0xFFA
 19855                           pcl	equ	0xFF9
 19856                           tblptru	equ	0xFF8
 19857                           tblptrh	equ	0xFF7
 19858                           tblptrl	equ	0xFF6
 19859                           tablat	equ	0xFF5
 19860                           prodh	equ	0xFF4
 19861                           prodl	equ	0xFF3
 19862                           indf0	equ	0xFEF
 19863                           postinc0	equ	0xFEE
 19864                           postdec0	equ	0xFED
 19865                           preinc0	equ	0xFEC
 19866                           plusw0	equ	0xFEB
 19867                           fsr0h	equ	0xFEA
 19868                           fsr0l	equ	0xFE9
 19869                           wreg	equ	0xFE8
 19870                           indf1	equ	0xFE7
 19871                           postinc1	equ	0xFE6
 19872                           postdec1	equ	0xFE5
 19873                           preinc1	equ	0xFE4
 19874                           plusw1	equ	0xFE3
 19875                           fsr1h	equ	0xFE2
 19876                           fsr1l	equ	0xFE1
 19877                           bsr	equ	0xFE0
 19878                           indf2	equ	0xFDF
 19879                           postinc2	equ	0xFDE
 19880                           postdec2	equ	0xFDD
 19881                           preinc2	equ	0xFDC
 19882                           plusw2	equ	0xFDB
 19883                           fsr2h	equ	0xFDA
 19884                           fsr2l	equ	0xFD9
 19885                           status	equ	0xFD8

Data Sizes:
    Strings     86
    Constant    1867
    Data        0
    BSS         283
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      77
    BANK0           160     85     160
    BANK1           256      1     202
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    g1.font.bitmap	PTR const unsigned char  size(2) Largest target is 0
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    g1.font.descriptor	PTR const struct . size(2) Largest target is 0
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    g1.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.font	PTR struct . size(2) Largest target is 0
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.text	PTR const unsigned char  size(2) Largest target is 0
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    g1.fpPress	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_9(CODE[11]), STR_8(CODE[8]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), STR_1(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_9(CODE[11]), STR_8(CODE[8]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), STR_1(CODE[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> touchScreenController@s(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_11(CODE[6]), STR_10(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_11(CODE[6]), STR_10(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_11(CODE[6]), STR_10(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> touchScreenController@s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S4261_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> touchScreenController@s(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> touchScreenController@s(BANK0[20]), 

    backlightController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    backlightController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    backlightController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    backlightController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    backlightController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    backlightController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    backlightController@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    checkCollision@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    checkCollision@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    checkCollision@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    checkCollision@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    checkCollision@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    checkCollision@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    checkCollision@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    mooveBall@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    mooveBall@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    mooveBall@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    mooveBall@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    mooveBall@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    mooveBall@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    mooveBall@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    moovePaddle@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    moovePaddle@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    moovePaddle@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    moovePaddle@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    moovePaddle@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    moovePaddle@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    moovePaddle@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    gameControllerController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerController@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    gameControllerSM@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerSM@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerSM@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerSM@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerSM@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerSM@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerSM@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    gameControllerInit@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    displayController@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    displaySM@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    displayInit@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    touchScreenController@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    touchScreenSM@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    sleepInit@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_Bitmap@colorTablePtr	PTR unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_Bitmap@bmpPtr	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_Bitmap@strPtr	PTR struct . size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    RGB2LCD@colorTableEntry	PTR unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_DrawText@font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_DrawText@font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_DrawText@font	PTR const struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_DrawText@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> touchScreenController@s(BANK0[20]), STR_9(CODE[11]), STR_8(CODE[8]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), STR_3(CODE[9]), 
		 -> STR_2(CODE[11]), STR_1(CODE[10]), 

    LCD_InSlider@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InSlider@slider	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_InButton@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_InButton@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_InButton@button	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_ButtonDraw@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonDraw@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonDraw@bmpPtr	PTR struct . size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_ButtonDraw@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonDraw@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_ButtonDraw@button	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_ButtonUpdate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonUpdate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_ButtonUpdate@button	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_ButtonCreate@fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonCreate@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonCreate@font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@textOrBmp	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_ButtonCreate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_ButtonCreate@button	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_SliderDraw@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderDraw@slider	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_SliderUpdate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderUpdate@slider	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_SliderCreate@fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Menu_inGameDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_inGameDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_inGameDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_inGameDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_inGameDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_inGameDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_inGameDraw@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Menu_parametersDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_parametersDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_parametersDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_parametersDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_parametersDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_parametersDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_parametersDraw@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Menu_welcomeDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_welcomeDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_welcomeDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_welcomeDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_welcomeDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_welcomeDraw@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    GameParameters_setY@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setY@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setY@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setY@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setY@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setY@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setY@s	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    GameParameters_setX@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setX@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setX@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setX@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setX@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setX@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setX@s	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    GameParameters_resetPos@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_resetPos@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_resetPos@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_resetPos@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_resetPos@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_resetPos@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_resetPos@s	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    GameParameters_setPlayer@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setPlayer@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setPlayer@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setPlayer@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setPlayer@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setBackLight@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setBackLight@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setBackLight@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setBackLight@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setBackLight@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setBackLight@s	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    GameParameters_init@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_init@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_init@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_init@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_init@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_init@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_init@s	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    S124$fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    g1.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    g1.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    g1.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    g1.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    S97$fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S97$fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S97$fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S97$font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    S97$text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    g1.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    S88$bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    arialNarrow_12ptFontInfo.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    S88$descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    arialNarrow_12ptFontInfo.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    Paddle_draw@p	PTR struct Paddle size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Paddle_addX@p	PTR struct Paddle size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Paddle_init@p	PTR struct Paddle size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Ball_draw@b	PTR struct Ball size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Ball_Update@b	PTR struct Ball size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Ball_init@b	PTR struct Ball size(2) Largest target is 213
		 -> g1(BANK1[201]), 


Critical Paths under _main in COMRAM

    _gameControllerInit->_gameControllerController
    _displayInit->_displayController
    _XF_init->___wmul
    _LCD_Init->_LCD_Lowlevel_Init
    _GameParameters_init->_LCD_ButtonCreate
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _XF_scheduleTimer->_ENTERCRITICAL
    _XF_scheduleTimer->_LEAVECRITICAL
    _sleepSM->_sleepController
    _gameControllerSM->_gameControllerController
    _gameControllerSM->_mooveBall
    _moovePaddle->_Paddle_addX
    _Paddle_addX->_LCD_DrawRect
    _mooveBall->_Ball_Update
    _Ball_Update->_Ball_draw
    _gameControllerController->_LCD_SliderUpdate
    _backlightController->_GameParameters_setBackLight
    _XF_pushEvent->___awmod
    _displaySM->_displayController
    _Menu_welcomeDraw->_LCD_DrawText
    _Menu_parametersDraw->_LCD_SliderDraw
    _LCD_SliderDraw->_LCD_SliderUpdate
    _LCD_SliderUpdate->___lwdiv
    _Paddle_draw->_LCD_DrawRect
    _LCD_ButtonDraw->_LCD_DrawText
    _LCD_DrawText->___wmul
    _LCD_ButtonUpdate->_LCD_DrawRect
    _LCD_Bitmap->___lwdiv
    ___wmul->___awdiv
    ___lwdiv->___wmul
    _Ball_draw->_LCD_DrawRect
    _XF_popEvent->___awmod

Critical Paths under _isr in COMRAM

    _isr->_XF_decrementAndQueueTimers
    i2_XF_scheduleTimer->i2_ENTERCRITICAL
    i2_XF_scheduleTimer->i2_LEAVECRITICAL
    _XF_decrementAndQueueTimers->i2_XF_pushEvent
    i2_XF_pushEvent->i2___awmod
    i2_XF_pushEvent->i2___wmul
    _XF_unscheduleTimer->i2_ENTERCRITICAL
    _XF_unscheduleTimer->i2_LEAVECRITICAL

Critical Paths under _main in BANK0

    _Factory_init->_sleepInit
    _sleepInit->_displayInit
    _displayInit->_displayController
    _Factory_exec->_touchScreenSM
    _touchScreenSM->_touchScreenController
    _touchScreenController->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _displaySM->_displayController
    _displayController->_Menu_inGameDraw
    _displayController->_Menu_parametersDraw
    _displayController->_Menu_welcomeDraw
    _Menu_welcomeDraw->_LCD_ButtonDraw
    _Menu_parametersDraw->_LCD_ButtonDraw
    _Menu_inGameDraw->_LCD_ButtonDraw
    _LCD_ButtonDraw->_LCD_Bitmap

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Factory_exec

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  566644
                       _Factory_exec
                       _Factory_init
 ---------------------------------------------------------------------------------
 (1) _Factory_init                                         2     2      0  246959
                                             68 BANK0      2     2      0
                _GameParameters_init
                       _LCD_DrawText
                           _LCD_Fill
                           _LCD_Init
                            _XF_init
                          _sleepInit
 ---------------------------------------------------------------------------------
 (2) _sleepInit                                            2     0      2  224547
                                             66 BANK0      2     0      2
                        _displayInit
                 _gameControllerInit
                    _sleepController
                    _touchScreenInit
 ---------------------------------------------------------------------------------
 (3) _touchScreenInit                                      0     0      0       0
                        _configTouch
 ---------------------------------------------------------------------------------
 (3) _gameControllerInit                                   2     0      2   25052
                                             58 COMRAM     2     0      2
           _gameControllerController
 ---------------------------------------------------------------------------------
 (3) _displayInit                                          2     0      2  199343
                                             64 BANK0      2     0      2
                  _displayController
 ---------------------------------------------------------------------------------
 (2) _XF_init                                              2     2      0    3031
                                             31 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0      90
                                             22 COMRAM     2     2      0
                  _LCD_Lowlevel_Init
 ---------------------------------------------------------------------------------
 (3) _LCD_Lowlevel_Init                                    5     5      0      60
                                             17 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GameParameters_init                                  2     0      2    8804
                                             42 COMRAM     2     0      2
                          _Ball_init
                   _LCD_ButtonCreate
                   _LCD_SliderCreate
                        _Paddle_init
 ---------------------------------------------------------------------------------
 (3) _Paddle_init                                          4     0      4     458
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _LCD_SliderCreate                                    22     0     22    1320
                                             17 COMRAM    22     0     22
 ---------------------------------------------------------------------------------
 (3) _LCD_ButtonCreate                                    25     0     25    6478
                                             17 COMRAM    25     0     25
 ---------------------------------------------------------------------------------
 (3) _Ball_init                                            2     0      2     164
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Factory_exec                                         1     1      0  319685
                                              0 BANK1      1     1      0
                        _XF_popEvent
                          _displaySM
                   _gameControllerSM
                            _sleepSM
                      _touchScreenSM
 ---------------------------------------------------------------------------------
 (2) _touchScreenSM                                        5     3      2   24025
                                             80 BANK0      5     3      2
              _touchScreenController
 ---------------------------------------------------------------------------------
 (3) _touchScreenController                               32    30      2   23749
                                             48 BANK0     32    30      2
                _GameParameters_setX
                _GameParameters_setY
                       _LCD_DrawText
                   _XF_scheduleTimer
                            ___fldiv
                            ___fltol
                           ___xxtofl
                      _configMeasure
                        _configTouch
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             16    10      6    8777
                                             34 BANK0     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6    8111
                                             26 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           42    36      6    7638
                                             62 COMRAM     8     2      6
                                             18 BANK0      8     8      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    5863
                                             44 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    3597
                                             33 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1537
                                             26 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                             17 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     183
                                             35 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     613
                                             17 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     625
                                             17 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _configTouch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _configMeasure                                        1     1      0      62
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     566
                                             17 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     427
                                             56 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2003
                                             31 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _XF_scheduleTimer                                     5     1      4     789
                                             18 COMRAM     5     1      4
                      _ENTERCRITICAL
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setY                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setX                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _sleepSM                                              3     3      0     124
                                             19 COMRAM     3     3      0
                    _sleepController
 ---------------------------------------------------------------------------------
 (3) _sleepController                                      2     2      0       0
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _gameControllerSM                                    27    25      2   94771
                                             58 COMRAM     7     5      2
                       _LCD_DrawRect
                        _Paddle_draw
           _gameControllerController
                          _mooveBall
                        _moovePaddle
 ---------------------------------------------------------------------------------
 (3) _moovePaddle                                          2     0      2   24923
                                             46 COMRAM     2     0      2
            _GameParameters_resetPos
                       _LCD_InButton
                        _Paddle_addX
                        _Paddle_draw
 ---------------------------------------------------------------------------------
 (4) _Paddle_addX                                         10     4      6   11180
                                             36 COMRAM    10     4      6
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (3) _mooveBall                                            2     0      2   23435
                                             56 COMRAM     2     0      2
                        _Ball_Update
                     _checkCollision
 ---------------------------------------------------------------------------------
 (4) _checkCollision                                       8     6      2    2198
                                             17 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _Ball_Update                                         10     8      2   21085
                                             46 COMRAM    10     8      2
                          _Ball_draw
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (4) _gameControllerController                             4     2      2   24931
                                             54 COMRAM     4     2      2
            _GameParameters_resetPos
                       _LCD_InButton
                       _LCD_InSlider
                   _LCD_SliderUpdate
                       _XF_pushEvent
                _backlightController
 ---------------------------------------------------------------------------------
 (5) _backlightController                                  4     2      2    3552
                                             23 COMRAM     4     2      2
        _GameParameters_setBackLight
 ---------------------------------------------------------------------------------
 (6) _GameParameters_setBackLight                          6     2      4    2284
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _XF_pushEvent                                         3     2      1    1569
                                             23 COMRAM     3     2      1
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) _LCD_InSlider                                        10     4      6     580
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (5) _LCD_InButton                                        10     4      6    1930
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (5) _GameParameters_resetPos                              2     0      2     692
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _displaySM                                            5     3      2  199591
                                             64 BANK0      5     3      2
                  _displayController
 ---------------------------------------------------------------------------------
 (4) _displayController                                    4     2      2  199222
                                             68 COMRAM     2     2      0
                                             62 BANK0      2     0      2
                    _Menu_inGameDraw
                _Menu_parametersDraw
                   _Menu_welcomeDraw
 ---------------------------------------------------------------------------------
 (5) _Menu_welcomeDraw                                     2     0      2   53606
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
 ---------------------------------------------------------------------------------
 (5) _Menu_parametersDraw                                  2     0      2   80097
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
                     _LCD_SliderDraw
 ---------------------------------------------------------------------------------
 (6) _LCD_SliderDraw                                      14    12      2   26460
                                             54 COMRAM    14    12      2
                       _LCD_DrawRect
                   _LCD_SliderUpdate
 ---------------------------------------------------------------------------------
 (5) _LCD_SliderUpdate                                    16    14      2   15656
                                             38 COMRAM    16    14      2
                       _LCD_DrawRect
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _Menu_inGameDraw                                      2     0      2   64976
                                             60 BANK0      2     0      2
                          _Ball_draw
                     _LCD_ButtonDraw
                           _LCD_Fill
                        _Paddle_draw
 ---------------------------------------------------------------------------------
 (6) _Paddle_draw                                          6     4      2   10690
                                             36 COMRAM     6     4      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_Fill                                             8     6      2     626
                                             17 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (6) _LCD_ButtonDraw                                      32    30      2   42936
                                             28 BANK0     32    30      2
                         _LCD_Bitmap
                   _LCD_ButtonUpdate
                       _LCD_DrawRect
                       _LCD_DrawText
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawText                                        34    21     13    9861
                                             31 COMRAM    34    21     13
                            ___awdiv
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     400
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1105
                                             17 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _LCD_ButtonUpdate                                    18    16      2   11891
                                             36 COMRAM    18    16      2
                       _LCD_DrawRect
                           _LCD_Read
 ---------------------------------------------------------------------------------
 (8) _LCD_Read                                            10     6      4     548
                                             17 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _LCD_Bitmap                                          38    32      6    7372
                                             38 COMRAM    10     4      6
                                              0 BANK0     28    28      0
                            _RGB2LCD
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    2802
                                             25 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     412
                                             17 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     901
                                             31 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _RGB2LCD                                             14    12      2     499
                                             17 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (6) _Ball_draw                                           10     8      2   10479
                                             36 COMRAM    10     8      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawRect                                        19     8     11   10175
                                             17 COMRAM    19     8     11
 ---------------------------------------------------------------------------------
 (2) _XF_popEvent                                          2     2      0    1016
                                             23 COMRAM     2     2      0
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     793
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _LEAVECRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _ENTERCRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isr                                                 4     4      0    2339
                                             13 COMRAM     4     4      0
         _XF_decrementAndQueueTimers
                     i2_XF_pushEvent
                 i2_XF_scheduleTimer
 ---------------------------------------------------------------------------------
 (13) i2_XF_scheduleTimer                                  5     1      4     328
                                              1 COMRAM     5     1      4
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (13) _XF_decrementAndQueueTimers                          4     4      0    1408
                                              9 COMRAM     4     4      0
                 _XF_unscheduleTimer
                     i2_XF_pushEvent
                           i2___wmul
 ---------------------------------------------------------------------------------
 (14) i2___wmul                                            6     2      4     419
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (13) i2_XF_pushEvent                                      3     2      1     603
                                              6 COMRAM     3     2      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
                          i2___awmod
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (14) _XF_unscheduleTimer                                  2     1      1     208
                                              1 COMRAM     2     1      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (14) i2_LEAVECRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_ENTERCRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Factory_exec
     _XF_popEvent
       _ENTERCRITICAL
       _LEAVECRITICAL
       ___awmod
     _displaySM
       _displayController
         _Menu_inGameDraw
           _Ball_draw
             _LCD_DrawRect
           _LCD_ButtonDraw
             _LCD_Bitmap
               _RGB2LCD
               ___lwdiv
                 ___wmul (ARG)
                   ___awdiv (ARG)
               ___lwmod
               ___wmul
             _LCD_ButtonUpdate
               _LCD_DrawRect
               _LCD_Read
             _LCD_DrawRect
             _LCD_DrawText
               ___awdiv
               ___wmul
               _strlen
             ___awdiv
             _strlen
           _LCD_Fill
           _Paddle_draw
             _LCD_DrawRect
         _Menu_parametersDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
           _LCD_SliderDraw
             _LCD_DrawRect
             _LCD_SliderUpdate
               _LCD_DrawRect
               ___lwdiv
               ___wmul
         _Menu_welcomeDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
     _gameControllerSM
       _LCD_DrawRect
       _Paddle_draw
       _gameControllerController
         _GameParameters_resetPos
         _LCD_InButton
         _LCD_InSlider
         _LCD_SliderUpdate
         _XF_pushEvent
           _ENTERCRITICAL
           _LEAVECRITICAL
           ___awmod
         _backlightController
           _GameParameters_setBackLight
       _mooveBall
         _Ball_Update
           _Ball_draw
           _LCD_DrawRect
         _checkCollision
       _moovePaddle
         _GameParameters_resetPos
         _LCD_InButton
         _Paddle_addX
           _LCD_DrawRect
         _Paddle_draw
     _sleepSM
       _sleepController
     _touchScreenSM
       _touchScreenController
         _GameParameters_setX
         _GameParameters_setY
         _LCD_DrawText
         _XF_scheduleTimer
           _ENTERCRITICAL
           _LEAVECRITICAL
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _configMeasure
         _configTouch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
   _Factory_init
     _GameParameters_init
       _Ball_init
       _LCD_ButtonCreate
       _LCD_SliderCreate
       _Paddle_init
     _LCD_DrawText
     _LCD_Fill
     _LCD_Init
       _LCD_Lowlevel_Init
     _XF_init
       ___wmul
     _sleepInit
       _displayInit
         _displayController
       _gameControllerInit
         _gameControllerController
       _sleepController
       _touchScreenInit
         _configTouch

 _isr (ROOT)
   _XF_decrementAndQueueTimers
     _XF_unscheduleTimer
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
     i2_XF_pushEvent
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
       i2___awmod
       i2___wmul (ARG)
     i2___wmul
   i2_XF_pushEvent
   i2_XF_scheduleTimer
     i2_ENTERCRITICAL
     i2_LEAVECRITICAL

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      1      CA       6       78.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     55      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      4D       1       81.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B7       9        0.0%
DATA                 0      0     1B7      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Sep 03 13:43:51 2021

                      _LCD_ButtonDraw 0E54                           ?_LCD_Bitmap 0027  
                                   l7 5C14                          ___fldiv@aexp 0038  
                        ___fldiv@bexp 0037                      _LCD_ButtonCreate 464E  
                        ___fldiv@sign 0030                          ?_displayInit 00A0  
                __end_of_Factory_exec 5B26                  __end_of_Factory_init 5040  
                                  l10 4438                                    l20 553C  
                                  l13 54B4                                    l31 563C  
                                  l28 40C0                                    _g1 0100  
                        ___awdiv@sign 0017               __end_of_sleepController 5D9E  
                   ??i2_ENTERCRITICAL 0001              __end_of_Menu_welcomeDraw 56B6  
                 ___wmul@multiplicand 001C                  backlightController@g 0018  
                    _LCD_ButtonUpdate 3334                         ?_LCD_InButton 0012  
                       ?_LCD_InSlider 0012                         ?_LCD_DrawRect 0012  
                       ?_LCD_DrawText 0020                                   l102 503E  
                                 l106 5B24                                   l212 4E82  
                                 l220 492E                                   l133 2802  
                                 l214 4EC6                                   l230 4546  
                                 l150 5ED2                                   l311 4F84  
                                 l207 30C6                                   l400 5E20  
                                 l153 5EBC                                   l233 4746  
                                 l170 56B4                                   l138 5CEA  
                                 l227 1816                                   l147 5DF8  
                                 l308 20FE                                   l252 4AEA  
                                 l500 30D4                                   l317 0E52  
                                 l173 55BE                                   l413 52F8  
                                 l501 30DC                                   l422 5D9C  
                                 l271 28F4                                   l239 3568  
                                 l511 3332                                   l248 1340  
                                 l176 58E0                                   l505 319E  
                                 l282 2AA4                                   l514 5EA6  
                                 l259 4A0C                                   l276 29AC  
                                 l532 5F3E                                   l285 2B12  
                                 l269 28E8                                   l613 35CC  
                                 l381 5396                                   l701 50F6  
                                 l614 362A                                   l279 2A0A  
                                 l287 2B3C                                   l623 3798  
                                 l631 5E8A                                   l519 5BC6  
                                 l608 3C8C                                   l705 5944  
                                 l634 042C                                   l626 47BC  
                                 l731 5EFE                                   l387 4202  
                                 l547 4C7E                                   l627 4830  
                                 l715 5728                                   l483 5F6C  
                                 l556 587A                                   l660 085C  
                                 l628 4840                                   l900 3E14  
                                 l709 5ACE                                   l645 0790  
                                 l638 041A                                   l494 542A  
                                 l735 5EE8                                   l591 5F50  
                                 l680 1C98                                   l656 07F2  
                                 l649 077E                                   l913 3F78  
                                 l780 5F56                                   l686 1CB4  
                                 l786 5E46                                   _GIE 007F97  
                                 _PR2 000FBB                                   _abs 5CEC  
                                 _pad 4D44                                   _isr 0008  
                configMeasure@channel 0012                       ??_ENTERCRITICAL 0012  
                        ___awmod@sign 0017                                   prod 000FF3  
                                 wreg 000FE8                __size_of_touchScreenSM 0094  
                     __end_of_RGB2LCD 4F86                          ___fltol@exp1 0042  
                    _touchScreenState 00DE                           _Ball_Update 4326  
                       ??_Paddle_addX 002B                                  l1030 51A6  
                                l1017 4D42                                  ?_abs 0024  
                                l1083 464C                                  l1502 2BDE  
                                l1504 2BE6                                  l4000 2EE2  
                                l1441 39A4                                  l1370 22F8  
                                l1522 2E1E                                  l4010 2EF4  
                                l4002 2EE8                                  l1284 579C  
                                l1444 3B00                                  l1540 5D22  
                                l4100 2F8E                                  l4020 2F02  
                                l4012 2EF6                                  l4004 2EEA  
                                l1277 5794                                  l1381 23B6  
                                l1373 22BC                                  l1294 59A8  
                                l1382 23A4                                  l4110 2FA0  
                                l4102 2F90                                  l4030 2F10  
                                l4022 2F04                                  l4014 2EF8  
                                l4006 2EEC                                  l1287 59A0  
                                l1455 3A98                                  l1543 5D2A  
                                l1535 5A66                                  l1368 2498  
                                l1448 3A3C                                  l1536 5A6E  
                                l1464 5B76                                  l4200 3052  
                                l4120 2FB6                                  l4112 2FA6  
                                l4104 2F96                                  l4040 2F22  
                                l4032 2F16                                  l4024 2F06  
                                l4016 2EFA                                  l4008 2EEE  
                                l1529 394C                                  l4210 3060  
                                l4202 3054                                  l4130 2FC8  
                                l4122 2FB8                                  l4114 2FA8  
                                l4106 2F98                                  l4050 2F30  
                                l4042 2F24                                  l4034 2F18  
                                l4026 2F08                                  l4018 2EFC  
                                l1379 233E                                  l1555 4BB4  
                                l1563 5CA6                                  l1491 4D88  
                                l1572 5C62                                  l4220 3076  
                                l4212 3066                                  l4204 3056  
                                l4140 2FDA                                  l4132 2FCE  
                                l4124 2FBE                                  l4116 2FAE  
                                l4108 2F9E                                  l4060 2F42  
                                l4052 2F36                                  l4044 2F2A  
                                l4036 2F1A                                  l4028 2F0E  
                                l1566 5F6E                                  l1494 4DCA  
                                l4230 3084                                  l4222 3078  
                                l4214 3068                                  l4206 3058  
                                l4150 2FEC                                  l4142 2FDC  
                                l4134 2FD0                                  l4126 2FC0  
                                l4118 2FB0                                  l4070 2F54  
                                l4062 2F44                                  l4054 2F38  
                                l4046 2F2C                                  l4038 2F1C  
                                l1496 4E04                                  l4240 309A  
                                l4232 308A                                  l4224 307E  
                                l4216 306E                                  l4208 305E  
                                l4160 3002                                  l4152 2FF2  
                                l4144 2FE2                                  l4136 2FD6  
                                l4128 2FC6                                  l4080 2F66  
                                l4072 2F5A                                  l4064 2F4A  
                                l4056 2F3E                                  l4048 2F2E  
                                l4250 30AC                                  l4242 309C  
                                l4234 308C                                  l4226 3080  
                                l4218 3070                                  l4170 3014  
                                l4162 3004                                  l4154 2FF4  
                                l4146 2FE4                                  l4138 2FD8  
                                l4090 2F78                                  l4082 2F68  
                                l4074 2F5C                                  l4066 2F4C  
                                l4058 2F40                                  l4260 30BE  
                                l4252 30AE                                  l4244 30A2  
                                l4236 3092                                  l4228 3082  
                                l4180 302A                                  l4172 301A  
                                l4164 300A                                  l4156 2FFA  
                                l4148 2FEA                                  l4092 2F7E  
                                l4084 2F6E                                  l4076 2F5E  
                                l4068 2F52                                  l4262 30C0  
                                l4254 30B0                                  l4246 30A4  
                                l4238 3094                                  l4190 303C  
                                l4182 302C                                  l4174 301C  
                                l4166 300C                                  l4158 2FFC  
                                l4094 2F80                                  l4086 2F70  
                                l4078 2F60                                  l4264 30C2  
                                l4256 30B6                                  l4248 30AA  
                                l4192 3042                                  l4184 3032  
                                l4176 3022                                  l4168 3012  
                                l4096 2F86                                  l4088 2F76  
                                l7002 5BC8                                  l7010 54B6  
                                l4266 30C4                                  l4258 30B8  
                                l4194 3044                                  l4186 3034  
                                l4178 3024                                  l4098 2F88  
                                l7004 5BD8                                  l7020 5514  
                                l7012 54C8                                  l3740 530A  
                                l3732 52FA                                  l4196 304A  
                                l4188 303A                                  l3900 2E2A  
                                l7006 5BEC                                  l7030 4686  
                                l7022 5528                                  l7014 54D8  
                                l3750 532C                                  l3742 530C  
                                l3734 5302                                  l4198 304C  
                                l3902 2E2C                                  ?_pad 0022  
                                l8000 2992                                  l7008 5C00  
                                l7040 46EA                                  l7032 469A  
                                l7024 464E                                  l7016 54EC  
                                l3760 5362                                  l3752 5338  
                                l3736 5306                                  l3920 2E5A  
                                l3912 2E34                                  l3904 2E2E  
                                l8010 29A0                                  l8002 2998  
                                l7042 46FE                                  l7034 46AE  
                                l7026 465E                                  l7050 4842  
                                l7018 5504                                  l3762 5370  
                                l3754 5352                                  l3738 5308  
                                l3930 2E6C                                  l3922 2E5C  
                                l3914 2E42                                  l3906 2E30  
                                l8100 2A82                                  l8020 29DC  
                                l8012 29BC                                  l8004 299A  
                                l7044 4712                                  l7036 46C2  
                                l7028 4672                                  l7060 48A2  
                                l7052 4852                                  l3764 537C  
                                l3748 531E                                  l3940 2E7A  
                                l3932 2E6E                                  l3924 2E5E  
                                l3916 2E54                                  l8110 2A94  
                                l8102 2A88                                  l8030 29EA  
                                l8022 29DE                                  l8014 29C0  
                                l8006 299C                                  l7046 4726  
                                l7038 46D6                                  l7070 4906  
                                l7062 48B6                                  l7054 4866  
                                l7230 249A                                  l3950 2E8C  
                                l3942 2E80                                  l3934 2E70  
                                l3926 2E64                                  l3918 2E58  
                                l8120 2ACE                                  l8112 2A96  
                                l8104 2A8A                                  l8040 29FA  
                                l8032 29EE                                  l8024 29E0  
                                l8016 29D6                                  l8008 299E  
                                l9000 0E42                                  l8200 40FE  
                                l7048 4736                                  l7072 491A  
                                l7064 48CA                                  l7056 487A  
                                l7240 24E8                                  l7232 24AA  
                                l3960 2E9E                                  l3952 2E8E  
                                l3944 2E82                                  l3936 2E72  
                                l3928 2E66                                  l8130 2ADE  
                                l8122 2AD2                                  l8114 2A98  
                                l8106 2A90                                  l8050 2A34  
                                l8042 29FC                                  l8034 29F0  
                                l8026 29E6                                  l8018 29DA  
                                l9010 0E50                                  l9002 0E44  
                                l8210 410E                                  l8202 4100  
                                l7066 48DE                                  l7058 488E  
                                l7250 25FC                                  l7242 24F8  
                                l7234 24AC                                  l3970 2EB0  
                                l3962 2EA4                                  l3954 2E94  
                                l3946 2E84                                  l3938 2E78  
                                l8140 2AEE                                  l8132 2AE0  
                                l8124 2AD4                                  l8116 2AB4  
                                l8108 2A92                                  l8060 2A44  
                                l8052 2A38                                  l8044 29FE  
                                l8036 29F6                                  l8028 29E8  
                                l9004 0E46                                  l8220 4120  
                                l8212 4110                                  l8204 4102  
                                l9100 4E1E                                  l8300 3CC4  
                                l7068 48F2                                  l7252 2666  
                                l7244 2510                                  l7236 24C0  
                                l3980 2EC2                                  l3972 2EB2  
                                l3964 2EA6                                  l3956 2E96  
                                l3948 2E86                                  l8150 2AFE  
                                l8142 2AF0                                  l8134 2AE2  
                                l8126 2AD6                                  l8118 2AB8  
                                l8070 2A54                                  l8062 2A46  
                                l8054 2A3A                                  l8046 2A1A  
                                l8038 29F8                                  l9006 0E48  
                                l8230 412A                                  l8222 4122  
                                l8214 4116                                  l8206 4106  
                                l9110 4E30                                  l9102 4E20  
                                l8310 3D20                                  l8302 3CD2  
                                l9030 2BB6                                  l9022 2B3E  
                                l7254 26D0                                  l7246 2528  
                                l7238 24D4                                  l3990 2ED4  
                                l3982 2EC4                                  l3974 2EB8  
                                l3966 2EAC                                  l3958 2E9C  
                                l3894 2E20                                  l8160 2B22  
                                l8152 2B00                                  l8144 2AF2  
                                l8136 2AE6                                  l8128 2AD8  
                                l8080 2A64                                  l8072 2A56  
                                l8064 2A48                                  l8056 2A3C  
                                l8048 2A1E                                  l9008 0E4E  
                                l8240 4134                                  l8232 412C  
                                l8224 4124                                  l8216 4118  
                                l8208 4108                                  l8400 4D0C  
                                l9200 111A                                  l9120 4E42  
                                l9112 4E36                                  l9104 4E26  
                                l8320 3D8A                                  l8312 3D28  
                                l8304 3CF2                                  l9040 2C0E  
                                l9032 2BB8                                  l9024 2B5E  
                                l7256 273A                                  l7248 2592  
                                l3992 2ED6                                  l3984 2EC6  
                                l3976 2EBA                                  l3968 2EAE  
                                l3896 2E24                                  l8162 2B26  
                                l8154 2B02                                  l8146 2AF6  
                                l8138 2AE8                                  l8090 2A72  
                                l8082 2A66                                  l8074 2A58  
                                l8066 2A4C                                  l8058 2A3E  
                                l8250 417E                                  l8242 413A  
                                l8234 412E                                  l8226 4126  
                                l8218 411E                                  l8170 40CA  
                                l8410 4D32                                  l8402 4D14  
                                l9210 124A                                  l9202 118A  
                                l9130 4E54                                  l9122 4E44  
                                l9114 4E38                                  l9106 4E28  
                                l8330 3DD4                                  l8322 3DAA  
                                l8314 3D3C                                  l8306 3CF6  
                                l9050 2CAC                                  l9042 2C14  
                                l9034 2BD2                                  l9026 2B88  
                                l7258 27A4                                  l3994 2ED8  
                                l3986 2ECC                                  l3978 2EC0  
                                l3898 2E28                                  l8156 2B04  
                                l8148 2AF8                                  l8092 2A74  
                                l8084 2A68                                  l8076 2A5C  
                                l8068 2A4E                                  l8420 5744  
                                l8260 41C2                                  l8252 4180  
                                l8244 413C                                  l8236 4130  
                                l8228 4128                                  l8180 40DA  
                                l8172 40CC                                  l8164 40C2  
                                l8412 4D3A                                  l8404 4D16  
                                l8500 1E1C                                  l9212 1280  
                                l9204 1192                                  l9140 4E6A  
                                l9132 4E5A                                  l9124 4E4A  
                                l9116 4E3E                                  l9108 4E2E  
                                l9220 444A                                  l8332 3DF4  
                                l8324 3DAC                                  l8316 3D4A  
                                l8308 3D02                                  l8340 3E28  
                                l9060 2D58                                  l9052 2CB4  
                                l9044 2C1C                                  l9036 2BEE  
                                l9028 2BA8                                  l9300 38F0  
                                l3996 2EDA                                  l3988 2ECE  
                                ?_isr 0001                                  l8158 2B06  
                                l8094 2A78                                  l8086 2A6A  
                                l8078 2A5E                                  l8430 577E  
                                l8422 574C                                  l8270 41EE  
                                l8262 41C4                                  l8254 4186  
                                l8246 415E                                  l8238 4132  
                                l8190 40EC                                  l8182 40DC  
                                l8174 40D2                                  l8166 40C6  
                                l8406 4D1C                                  l8510 1ECA  
                                l8502 1E76                                  l9214 12CC  
                                l9206 11EC                                  l9142 4E6C  
                                l9134 4E5C                                  l9126 4E4C  
                                l9118 4E40                                  l9230 453A  
                                l9222 447A                                  l8326 3DBE  
                                l8318 3D5C                                  l8350 3E98  
                                l8342 3E48                                  l9070 2DBA  
                                l9062 2D72                                  l9054 2CBA  
                                l9046 2C24                                  l9038 2C00  
                                l9310 3916                                  l3998 2EE0  
                                l9232 5EEC                                  l9240 50F8  
                                l8096 2A7A                                  l8088 2A70  
                                l8280 4F3C                                  l8432 5786  
                                l8424 5754                                  l8416 572A  
                                l8440 5958                                  l8272 41F6  
                                l8264 41C6                                  l8256 4188  
                                l8248 417C                                  l8192 40F2  
                                l8184 40E2                                  l8176 40D4  
                                l8168 40C8                                  l8408 4D22  
                                l8600 2032                                  l8520 1ED6  
                                l8512 1ECC                                  l8504 1EC2  
                                l9208 1248                                  l9216 1334  
                                l9160 4E96                                  l9152 4E7A  
                                l9144 4E6E                                  l9136 4E62  
                                l9128 4E52                                  l9224 448E  
                                l9320 563E                                  l8328 3DC4  
                                l8360 3F10                                  l8352 3EA0  
                                l8344 3E4C                                  l8336 3E16  
                                l9072 2DC0                                  l9080 2DF6  
                                l9064 2D8C                                  l9048 2C2A  
                                l9056 2D1E                                  l9312 393A  
                                l9304 38FC                                  l9234 5EFC  
                                l9250 5124                                  l9242 50FC  
                                l8098 2A80                                  l8282 4F7C  
                                l8434 5788                                  l8426 5762  
                                l8418 5732                                  l8450 5994  
                                l8442 5960                                  l8274 41FA  
                                l8266 41CA                                  l8258 41A4  
                                l8194 40F4                                  l8186 40E4  
                                l8178 40D6                                  l8602 2034  
                                l8610 2042                                  l8530 1EFA  
                                l8522 1EDA                                  l8514 1ECE  
                                l8506 1EC6                                  l9162 4EAC  
                                l9146 4E70                                  l9138 4E64  
                                l9090 4E0A                                  l9226 44C2  
                                l9218 443A                                  l9330 553E  
                                l9322 5648                                  l9410 58EA  
                                l9170 5CD4                                  l8362 3F22  
                                l8354 3EB4                                  l8346 3E5A  
                                l8338 3E1A                                  l9074 2DD2  
                                l9058 2D3A                                  l9066 2D9A  
                                l9306 390A                                  l9236 5ED6  
                                l9260 515C                                  l9252 512C  
                                l9244 510A                                  l7900 28A2  
                                l9084 542C                                  l8436 578E  
                                l8428 5768                                  l8452 599A  
                                l8444 5968                                  l8268 41CC  
                                l8196 40F6                                  l8188 40EA  
                                l8700 3334                                  l8380 4C9E  
                                l8372 4C80                                  l8612 2046  
                                l8604 2036                                  l8540 1F06  
                                l8532 1EFC                                  l8524 1EDC  
                                l8516 1ED2                                  l8508 1EC8  
                                l9180 0E9E                                  l9164 4EB0  
                                l9092 4E12                                  l9340 587C  
                                l9228 44FE                                  l9332 5548  
                                l9324 567E                                  l9404 4A0A  
                                l9420 5928                                  l9412 5908  
                                l9172 5CDA                                  l9500 1C80  
                                l8292 3C8E                                  l8356 3EC2  
                                l8364 3F28                                  l8348 3E7A  
                                l8460 4D74                                  l9076 2DDE  
                                l9068 2DAC                                  l9238 5EE6  
                                l9270 5196                                  l9262 5172  
                                l9254 513E                                  l9246 5112  
                                l7910 28B4                                  l7902 28A8  
                                l8278 4EC8                                  l8446 5976  
                                l8438 5946                                  l8286 5E22  
                                l8198 40F8                                  l8710 33D8  
                                l8702 3344                                  l8390 4CD2  
                                l8382 4CAC                                  l8374 4C84  
                                l8614 2048                                  l8622 2052  
                                l8606 203A                                  l8550 1F12  
                                l8542 1F0A                                  l8534 1EFE  
                                l8526 1EDE                                  l8518 1ED4  
                                l9190 0FBA                                  l9182 0EB2  
                                l9174 0E54                                  l9158 4E92  
                                l9094 4E14                                  l9086 55C0  
                                l9350 58CE                                  l9342 5886  
                                l9334 557E                                  l9326 5690  
                                l9318 5DD0                                  l9422 5938  
                                l9414 591C                                  l9166 5CA8  
                                l9502 1C98                                  l9430 1818  
                                l8294 3C92                                  l8366 3F38  
                                l8358 3EF0                                  l7830 4B10  
                                l8470 4DD8                                  l8462 4D80  
                                l8454 4D44                                  l9078 2DE6  
                                l9510 5A4A                                  l9272 519E  
                                l9264 517A                                  l9256 5146  
                                l9248 5116                                  l7920 28C4  
                                l7912 28B6                                  l7904 28AA  
                                l8448 598C                                  l8288 5E3E  
                                l8800 0A0E                                  l8720 085E  
                                l8712 3404                                  l8704 3374  
                                l8392 4CDA                                  l8384 4CB4  
                                l8376 4C92                                  l7840 5C16  
                                l8640 208A                                  l8632 207E  
                                l8616 204A                                  l8608 203C  
                                l8624 2054                                  l8560 1F20  
                                l8552 1F16                                  l8544 1F0C  
                                l8536 1F02                                  l8528 1EF6  
                                l8480 1CB6                                  l9192 0FF2  
                                l9184 0EE6                                  l9176 0E5E  
                                l9096 4E16                                  l9088 4E06  
                                l9344 5898                                  l9336 5590  
                                l9328 56A2                                  l9352 4A0E  
                                l9424 593C                                  l9416 5922  
                                l9408 58E4                                  l9168 5CB8  
                                l9440 18C0                                  l9432 183C  
                                l9512 4326                                  l9520 3FE8  
                                l8296 3CA0                                  l8368 3F58  
                                l7832 4B1A                                  l8472 4DEC  
                                l8464 4D94                                  l8456 4D52  
                                l9280 37CC                                  l9504 5A0E  
                                l9266 5180                                  l9258 514E  
                                l7930 28D6                                  l7922 28C6  
                                l7914 28B8                                  l7906 28AC  
                                l8810 0A3C                                  l8802 0A10  
                                l8730 0900                                  l8722 0866  
                                l8714 3424                                  l8706 3388  
                                l8394 4CE2                                  l8386 4CB8  
                                l8378 4C9A                                  l7842 5C22  
                                l8642 208C                                  l8634 2082  
                                l8626 2066                                  l8650 2096  
                                l8570 1F4C                                  l8562 1F22  
                                l8554 1F18                                  l8546 1F0E  
                                l8538 1F04                                  l8490 1D88  
                                l8482 1CC2                                  l9194 1006  
                                l9186 0F16                                  l9178 0E6E  
                                l9098 4E18                                  l9346 58AA  
                                l9338 55AE                                  l9602 5846  
                                l9370 4A9E                                  l9354 4A2C  
                                l9426 5942                                  l9450 195C  
                                l9442 18D8                                  l9434 1860  
                                l9610 356E                                  l9514 43AC  
                                l9530 4098                                  l9522 3FFA  
                                l8298 3CC0                                  l7834 4B38  
                                l7826 4AEC                                  l7850 5C64  
                                l8466 4DA8                                  l8458 4D66  
                                l9290 3872                                  l9282 37DC  
                                l9506 5A16                                  l9268 5186  
                                l7940 2908                                  l7932 28D8  
                                l7924 28CC                                  l7916 28BC  
                                l7908 28AE                                  l7860 2808  
                                l8900 0B5C                                  l8820 0A60  
                                l8812 0A40                                  l8804 0A34  
                                l8740 0984                                  l8732 0936  
                                l8724 0894                                  l8716 3438  
                                l8708 33BC                                  l8396 4CF0  
                                l8388 4CC0                                  l7844 5C26  
                                l8652 20B2                                  l8644 208E  
                                l8636 2084                                  l8628 206A  
                                l8580 1F5A                                  l8572 1F50  
                                l8564 1F44                                  l8556 1F1A  
                                l8548 1F10                                  l8492 1D98  
                                l8484 1D10                                  l9196 1082  
                                l9188 0F90                                  l9348 58BC  
                                l8660 1360                                  l9364 4A78  
                                l9380 4930                                  l9460 19F8  
                                l9452 1980                                  l9444 18FC  
                                l9436 1878                                  l9620 36D4  
                                l9612 35B6                                  l9516 43E8  
                                l9524 4050                                  l9532 5EBE  
                                l9700 214C                                  l9540 5E9E  
                                l8476 5CEC                                  l7836 4B6E  
                                l7828 4AFE                                  l7852 5C70  
                                l8468 4DAC                                  l9284 37E0  
                                l9276 379A                                  l9508 5A24  
                                l7950 2942                                  l7942 291E  
                                l7934 28DA                                  l7926 28CE  
                                l7918 28BE                                  l7870 2868  
                                l7862 280C                                  l8910 0BA8  
                                l8902 0B5E                                  l8830 0A6C  
                                l8822 0A62                                  l8814 0A42  
                                l8806 0A38                                  l8750 0992  
                                l8742 0986                                  l8734 0958  
                                l8726 08B4                                  l8718 3468  
                                l8398 4CF6                                  l7846 5C56  
                                l8654 20CA                                  l8638 2086  
                                l8590 1F9E                                  l8582 1F5C  
                                l8574 1F52                                  l8566 1F48  
                                l8558 1F1E                                  l8494 1DAA  
                                l8486 1D5E                                  l9198 10FA  
                                l8670 1494                                  l8662 13F0  
                                l9358 4A32                                  l9382 494E  
                                l9470 1AA0                                  l9462 1A1C  
                                l9454 1998                                  l9446 1920  
                                l9438 189C                                  l9622 36F0  
                                l9614 3614                                  l9630 375E  
                                l9526 4064                                  l9518 3F7A  
                                l9534 5EA8                                  l9710 2172  
                                l9702 214E                                  l9550 5B8A  
                                l9542 5EA0                                  l8478 5D06  
                                l7854 5C82                                  l9294 38AA  
                                l9286 3804                                  l9278 37BE  
                                l7960 2950                                  l7952 2944  
                                l7944 2922                                  l7936 28DC  
                                l7928 28D4                                  l7880 2882  
                                l7872 2878                                  l7864 2822  
                                l8920 0C0A                                  l8912 0BF4  
                                l8904 0B60                                  l8840 0A78  
                                l8832 0A70                                  l8824 0A64  
                                l8816 0A44                                  l8808 0A3A  
                                l8760 09C4                                  l8752 099E  
                                l8744 0988                                  l8736 097E  
                                l8728 08D4                                  l8656 20CE  
                                l8648 2094                                  l8592 1FA6  
                                l8584 1F5E                                  l8576 1F54  
                                l8568 1F4A                                  l8496 1DBC  
                                l8488 1D60                                  l8680 15BC  
                                l8672 1504                                  l8664 1418  
                                l9376 4AE8                                  l9392 499A  
                                l9480 1B3C                                  l9472 1AB8  
                                l9464 1A40                                  l9456 19BC  
                                l9448 1938                                  l9624 36FC  
                                l9616 3672                                  l9608 356A  
                                l9640 015C                                  l9528 4084  
                                l9560 56B6                                  l9800 240A  
                                l9720 21B2                                  l9712 2180  
                                l9704 2156                                  l9552 5B9C  
                                l9544 5EA2                                  l9536 5E8C  
                                l7856 5C86                                  l9296 38CE  
                                l9288 3828                                  l7970 2960  
                                l7962 2954                                  l7954 2946  
                                l7938 2904                                  l7890 2892  
                                l7882 2888                                  l7874 287C  
                                l7946 293C                                  l7866 283A  
                                l7858 2804                                  l8922 0C0C  
                                l8914 0C00                                  l8930 0C18  
                                l8906 0B64                                  l8850 0AB0  
                                l8842 0A80                                  l8834 0A72  
                                l8826 0A68                                  l8818 0A5C  
                                l8770 09D0                                  l8762 09C6  
                                l8754 09AA                                  l8746 098E  
                                l8738 0982                                  l8594 1FF6  
                                l8586 1F60                                  l8578 1F58  
                                l8498 1DDA                                  l8682 15DA  
                                l8690 16C6                                  l8674 1524  
                                l8666 1438                                  l8658 1342  
                                l9386 4954                                  l9490 1BD8  
                                l9482 1B60                                  l9474 1ADC  
                                l9466 1A58                                  l9458 19E0  
                                l9626 3744                                  l9618 368C  
                                l9650 02CE                                  l9642 01B2  
                                l9570 56E0                                  l9562 56BC  
                                l9810 2474                                  l9802 240E  
                                l9730 21F2                                  l9722 21B4  
                                l9714 2182                                  l9706 2166  
                                l9554 5BA0                                  l9546 5EA4  
                                l9538 5E9A                                  l9298 38DC  
                       ??_Paddle_draw 0027                                  l7980 2970  
                                l7972 2964                                  l7964 2956  
                                l7956 294C                                  l7948 2940  
                                l7892 2898                                  l7884 288A  
                                l7876 287E                                  l7868 2850  
                                l8940 0C9E                                  l8932 0C2E  
                                l8924 0C10                                  l8916 0C04  
                                l8908 0BA0                                  l8860 0AC8  
                                l8852 0ABC                                  l8844 0A88  
                                l8836 0A74                                  l8828 0A6A  
                                l8780 09F4                                  l8772 09D2  
                                l8764 09C8                                  l8756 09BE  
                                l8748 0990                                  l8596 201E  
                                l8588 1F68                                  l8692 1756  
                                l8684 15F6                                  l8676 1560  
                                l8668 1478                                  l9492 1BFC  
                                l9484 1B78                                  l9476 1B00  
                                l9468 1A7C                                  l9660 0482  
                                l9652 0314                                  l9644 01F8  
                                l9636 00C8                                  l9572 5710  
                                l9812 2478                                  l9804 2428  
                                l9740 2222                                  l9732 21FA  
                                l9716 2192                                  l9724 21BC  
                                l9708 216C                                  l9900 3AA6  
                                l9556 5BB0                                  l9548 5B7A  
                                l9580 5B26                                  l7990 2980  
                                l7982 2972                                  l7974 2966  
                                l7966 295C                                  l7958 294E  
                                l7894 289A                                  l7886 288C  
                                l7878 2880                                  l8950 0CEE  
                                l8942 0CE0                                  l8934 0C6C  
                                l8926 0C12                                  l8918 0C08  
                                l8870 0AFA                                  l8862 0ACA  
                                l8854 0AC0                                  l8838 0A76  
                                l8790 0A02                                  l8782 09F8  
                                l8774 09D6                                  l8766 09CA  
                                l8758 09C2                                  l8598 202E  
                                l8694 177E                                  l8686 1666  
                                l8678 159C                                  l9398 49C0  
                                l9494 1C20                                  l9486 1B9C  
                                l9478 1B18                                  l9670 05EA  
                                l9662 04C0                                  l9654 0348  
                                l9646 0240                                  l9638 011E  
                                l9574 5712                                  l9814 2486  
                                l9806 243E                                  l9750 2260  
                                l9742 2222                                  l9734 21FE  
                                l9726 21CC                                  l9718 21A2  
                                l9910 3AEE                                  l9902 3AA8  
                                l9558 5BC2                                  l9582 5B38  
                                l7992 2982                                  l7984 2978  
                                l7976 296C                                  l7968 295E  
                                l7896 289C                                  l7888 2890  
                                l8960 0D16                                  l8952 0CF2  
                                l8944 0CE6                                  l8936 0C78  
                                l8928 0C14                                  l8880 0B16  
                                l8872 0B02                                  l8864 0ACC  
                                l8856 0AC2                                  l8848 0AA8  
                                l8792 0A04                                  l8784 09FA  
                                l8776 09D8                                  l8768 09CE  
                                l8696 179E                                  l8688 1686  
                                l9592 5812                                  l9496 1C38  
                                l9488 1BC0                                  l9680 073A  
                                l9672 0632                                  l9664 0516  
                                l9656 038E                                  l9648 0286  
                                l9576 5722                                  l9568 56C0  
                                l9816 248C                                  l9808 2458  
                                l9760 22AC                                  l9752 2270  
                                l9728 21E2                                  l9840 45B2  
                                l9832 4572                                  l9912 3AF0  
                                l9904 3AAC                                  l9584 5B40  
                                l9920 5F40                                  l7994 2988  
                                l7986 297A                                  l7978 296E  
                                l7898 28A0                                  l8962 0D26  
                                l8954 0CF4                                  l8946 0CEA  
                                l8938 0C92                                  l8890 0B44  
                                l8882 0B1A                                  l8874 0B0E  
                                l8858 0AC4                                  l8866 0AD0  
                                l8970 0D9A                                  l8794 0A08  
                                l8786 09FC                                  l8778 09DA  
                                l8698 17DA                                  l9594 5816  
                                l9498 1C5C                                  l9682 07C2  
                                l9674 0678                                  l9666 055C  
                                l9658 03D6                                  l9818 248E  
                                l9770 22F6                                  l9762 22BA  
                                l9754 2280                                  l9746 2236  
                                l9738 2212                                  l9690 210C  
                                l9850 45E2                                  l9842 45C0  
                                l9834 459C                                  l9826 4548  
                                l9906 3AD0                                  l9586 5B48  
                                l9922 5F44                                  l7996 298A  
                                l7988 297C                                  l8980 0DF8  
                                l8972 0DA8                                  l8964 0D46  
                                l8956 0CF6                                  l8948 0CEC  
                                l8892 0B50                                  l8884 0B1C  
                                l8876 0B12                                  l8868 0AF2  
                                l8796 0A0A                                  l8788 0A00  
                                l9596 5826                                  l9684 0828  
                                l9676 06AC                                  l9668 05A4  
                                l9932 5D68                                  l9780 233C  
                                l9772 2308                                  l9764 22C6  
                                l9756 2288                                  l9748 2250  
                                l9692 211A                                  l9860 460C  
                                l9852 45EC                                  l9836 459E  
                                l9828 455E                                  l9908 3AE0  
                                l9588 5B64                                  l9940 30CC  
                                l9916 5F2C                                  l9924 5F62  
                                l7998 2990                                  l8990 0E04  
                                l8982 0DFA                                  l8974 0DE2  
                                l8958 0CFA                                  l8894 0B54  
                                l8886 0B1E                                  l8878 0B14  
                                l8798 0A0C                                  l9598 5836  
                                l9686 085C                                  l9678 06F2  
                                l9790 239C                                  l9774 231E  
                                l9782 234E                                  l9766 22E4  
                                l9758 2298                                  l9694 211C  
                                l9862 461C                                  l9838 45AE  
                                l9870 3950                                  l9950 3186  
                                l9942 30D6                                  l9918 5F32  
                                l9926 5F68                   __end_of_XF_popEvent 5AD0  
                                STR_1 7FBE                                  l8984 0DFC  
                                l8976 0DF0                                  l8992 0E08  
                                l8896 0B56                                  l8888 0B22  
                                l8968 0D52                                  l9928 5D68  
                                l9784 235C                                  l9776 2324  
                                l9768 22E6                                  l9696 212C  
                                l9688 2100                                  l9864 462C  
                                l9848 45D8                                  l9872 3960  
                                l9960 3204                                  l9952 3198  
                                l9944 30EA                                  STR_2 7FB3  
                                STR_3 7FC8                                  l8994 0E24  
                                l8986 0E00                                  l8978 0DF4  
                                l8898 0B58                                  l9794 23C6  
                                l9786 2360                                  l9778 232E  
                                l9698 213C                                  l9866 463C  
                                l9858 4600                                  l9890 3A26  
                                l9882 39DE                                  l9874 396E  
                                l9970 3224                                  l9962 3218  
                                l9954 31AC                                  l9946 3114  
                                l9938 30C8                                  STR_4 7FD1  
                                STR_5 7FE2                                  l8988 0E02  
                                l8996 0E2C                                  l9796 23D2  
                                l9788 236E                                  l9892 3A32  
                                l9884 39E6                                  l9876 39B4  
                                l9980 32B8                                  l9972 3232  
                                l9964 321C                                  l9956 31D6  
                                l9948 311C                                  STR_6 7FF6  
                                STR_7 7FFA                                  l8998 0E3E  
                                l9798 23E0                                  l9894 3A6E  
                                l9886 39F2                                  l9878 39CA  
                                l9974 3250                                  l9966 3220  
                                l9958 31DE                                  STR_8 7FDA  
                                STR_9 7FA8                                  l9992 4748  
                                l9896 3A7A                                  l9888 3A24  
                                l9976 3286                                  l9968 3222  
                                l9984 3306                                  l9994 4790  
                                l9898 3A88                                  l9978 329A  
                                l9996 4804                                  l9998 5E6E  
                       ??_Paddle_init 0016                                  u2170 5352  
                                u2171 534E                                  u2180 5396  
                                u2340 2E54                                  u2181 5392  
                                u2341 2E50                                  u6000 0900  
                                u6001 08FC                                  u6010 0932  
                                u6011 092E                                  u6100 0D26  
                                u6020 0958                                  u6101 0D22  
                                u6021 0954                                  u6110 0E24  
                                u6030 097A                                  u6111 0E20  
                                u6031 0976                                  u6120 0E3E  
                                u6040 0AA4                                  u7000 0482  
                                u5400 5CA6                                  u6200 2D3A  
                                u6121 0E3A                                  u6041 0AA0  
                                u7001 047E                                  u5401 5CA2  
                                u6201 2D36                                  u5410 2822  
                                u6050 0AF2                                  u7010 04C0  
                                u6210 2D58                                  u6130 2B70  
                                u5411 281E                                  u6051 0AEE  
                                u7011 04BC                                  u6211 2D54  
                                u6131 2B6A                                  u5420 2850  
                                u6060 0B44                                  u6300 5CD4  
                                u7020 0516                                  u7100 212C  
                                u5340 4AFE                                  u6220 2D72  
                                u6140 2B72                                  u5421 284C  
                                u6061 0B40                                  u6301 5CD0  
                                u7021 0512                                  u7101 2128  
                                u5341 4AFA                                  u6221 2D6E  
                                u5430 2878                                  u6070 0BA0  
                                u6310 0F16                                  u7030 055C  
                                u7110 213C                                  u5350 4B10  
                                u6230 2D8C                                  u6150 2B88  
                                u5431 2874                                  u6071 0B9C  
                                u6311 0F12                                  u7031 0558  
                                u7111 2138                                  u5351 4B0C  
                                u6231 2D88                                  u6151 2B84  
                                u6400 515C                                  u5440 291E  
                                u6080 0C2E                                  u6320 0FBA  
                                u7040 05EA                                  u7200 2308  
                                u7120 2180                                  u5600 3DD4  
                                u5360 4B38                                  u6240 2D9A  
                                u6160 2BB6                                  u6401 5158  
                                u5441 291A                                  u6081 0C2A  
                                u5505 4168                                  u6321 0FB6  
                                u7041 05E6                                  u7201 2304  
                                u7121 217C                                  u5601 3DD0  
                                u5361 4B34                                  u6241 2D96  
                                u6161 2BB2                                  u6410 5172  
                                u5450 2938                                  u6090 0D16  
                                u6330 0FF2                                  u7050 0678  
                                u7210 231E                                  u7130 2192  
                                u5610 3E28                                  u5370 4B6E  
                                u6250 2DAC                                  u6170 2BD2  
                                u6411 516E                                  u5451 2934  
                                u6091 0D12                                  u5515 41AE  
                                u6331 0FEE                                  u7051 0674  
                                u7211 231A                                  u7131 218E  
                                u5611 3E24                                  u5371 4B6A  
                                u6251 2DA8                                  u6171 2BCE  
                                u6420 5196                                  u5460 29D6  
                                u5700 4CF0                                  u5380 5C46  
                                u6340 1280                                  u6500 4AE4  
                                u7060 06F2                                  u7300 2458  
                                u7220 233C                                  u7140 21A2  
                                u5540 3CA0                                  u5620 3E5A  
                                u6260 2DBA                                  u6180 2C00  
                                u6421 5192                                  u5461 29D2  
                                u5525 4F46                                  u5701 4CEC  
                                u6341 127C                                  u6501 4AE0  
                                u7061 06EE                                  u7301 2454  
                                u7221 2338                                  u7141 219E  
                                u5541 3C9C                                  u5621 3E56  
                                u6261 2DB6                                  u6181 2BFC  
                                u6350 5EFC                                  u5470 2A34  
                                u5710 4D0C                                  u5390 5C56  
                                u6510 494E                                  u7070 07C2  
                                u7310 2486                                  u7230 235C  
                                u7150 21E2                                  u5550 3CD2  
                                u5630 3E98                                  u6270 2DD2  
                                u6190 2C0E                                  u6430 37BE  
                                u6351 5EF8                                  u5471 2A30  
                                u5535 4F5C                                  u5711 4D08  
                                u5391 5C52                                  u6511 494A  
                                u7071 07BE                                  u7311 2482  
                                u7231 2358                                  u7151 21DE  
                                u5551 3CCE                                  u5631 3E94  
                                u6271 2DCE                                  u6191 2C0A  
                                u6431 37BA                                  u6360 5EE6  
                                u5480 2ACE                                  u5720 4D32  
                                u6280 4EAC                                  u6520 4996  
                                u6600 18FC                                  u7080 0828  
                                u7240 236E                                  u7160 2222  
                                u7320 455E                                  u7400 396E  
                                u5640 3EC2                                  u5800 4D74  
                                u6440 3804                                  u4840 54C8  
                                u6361 5EE2                                  u5481 2ACA  
                                u5721 4D2E                                  u6281 4EA8  
                                u6521 4992                                  u6601 18F8  
                                u7081 0824                                  u7241 236A  
                                u7161 221E                                  u7321 455A  
                                u7401 396A                                  u5561 3CFC  
                                u5641 3EBE                                  u5801 4D70  
                                u6441 3800                                  u4841 54C4  
                                u6370 510A                                  u5490 2B3C  
                                u5730 5744                                  u6290 4EC6  
                                u6530 49BC                                  u6610 1920  
                                u7250 239C                                  u7170 2298  
                                u7090 211A                                  u7330 4592  
                                u7410 39CA                                  u5570 3D20  
                                u5650 3EF0                                  u5810 4DCA  
                                u6450 3828                                  u6371 5106  
                                u5491 2B38                                  u5731 5740  
                                u5387 5C3C                                  u6291 4EC2  
                                u6531 49B8                                  u6611 191C  
                                u7251 2398                                  u7171 2294  
                                u7091 2116                                  u7411 39C6  
                                u5571 3D1C                                  u5651 3EEC  
                                u5811 4DC6                                  u6451 3824  
                                u6380 5124                                  u5740 5762  
                                u5900 202E                                  u6540 4A06  
                                u6700 1ADC                                  u6620 195C  
                                u7260 23B2                                  u7180 22BA  
                                u7340 45C0                                  u7420 3A20  
                                u5580 3D4A                                  u5660 3F38  
                                u5820 4DD8                                  u6460 38CE  
                                u7500 3114                                  u6381 5120  
                                u5741 575E                                  u5901 202A  
                                u6541 4A02                                  u6701 1AD8  
                                u6621 1958                                  u7261 23AE  
                                u7181 22B6                                  u7341 45BC  
                                u7421 3A1C                                  u5581 3D46  
                                u5661 3F34                                  u5821 4DD4  
                                u6461 38CA                                  u7501 3110  
                                u6390 513E                                  u5750 577E  
                                u5670 4C92                                  u5910 2066  
                                u6470 4A2C                                  u6550 591C  
                                u6710 1B00                                  u6630 1980  
                                u7270 23C6                                  u7190 22E4  
                                u7350 45D4                                  u7430 3A6A  
                                u5590 3D8A                                  u5830 5D06  
                                u7510 31AC                                  u6391 513A  
                                u5751 577A                                  u5671 4C8E  
                                u5911 2062                                  u6471 4A28  
                                u6551 5918                                  u6711 1AFC  
                                u6631 197C                                  u7271 23C2  
                                u7191 22E0                                  u7351 45D0  
                                u7335 4588                                  u7431 3A66  
                                u5591 3D86                                  u5831 5D02  
                                u7511 31A8                                  u5760 5958  
                                u5680 4CAC                                  u5920 207A  
                                u5840 1D08                                  u6480 4A74  
                                u6720 1B3C                                  u6640 19BC  
                                u6560 183C                                  u7600 528E  
                                u7280 23E0                                  u7360 45FC  
                                u7440 3A88                                  u6800 5A66  
                                u7520 31D6                                  u5761 5954  
                                u5681 4CA8                                  u5921 2076  
                                u6481 4A70                                  u6721 1B38  
                                u6641 19B8                                  u6561 1838  
                                u7601 528A                                  u7281 23DC  
                                u7361 45F8                                  u7441 3A84  
                                u6801 5A62                                  u7521 31D2  
                                u5770 5976                                  u5690 4CD2  
                                u5930 20B2                                  u5850 1D88  
                                u6490 4A9A                                  u6730 1B60  
                                u6650 19E0                                  u6570 1860  
                                u6810 3FFA                                  u7610 52A6  
                                u7290 2428                                  u7370 461C  
                                u7450 3A98                                  u7530 3232  
                                u5771 5972                                  u5691 4CCE  
                                u5931 20AE                                  u5851 1D84  
                                u6491 4A96                                  u6731 1B5C  
                                u6651 19DC                                  u6571 185C  
                                u6811 3FF6                                  u7611 52A2  
                                u7291 2424                                  u7371 4618  
                                u7451 3A94                                  u7531 322E  
                                u5780 598C                                  u5940 20EE  
                                u5860 1D98                                  u7700 4C46  
                                u6740 1B9C                                  u6660 1A1C  
                                u6580 189C                                  u6900 3672  
                                u6820 4050                                  u7540 4790  
                                u7620 52C0                                  u7380 462C  
                                u7460 3AA6                                  u5781 5988  
                                u5861 1D94                                  u7701 4C42  
                                u6741 1B98                                  u6661 1A18  
                                u6581 1898                                  u6901 366E  
                                u6821 404C                                  u7541 478C  
                                u7621 52BC                                  u7381 4628  
                                u7461 3AA2                                  u5950 20FE  
                                u5870 1DBC                                  u6750 1BC0  
                                u6670 1A40                                  u6590 18C0  
                                u6910 36D4                                  u6830 4084  
                                u7550 4804                                  u7710 3B26  
                                u7470 3AE0                                  u7390 3960  
                                u5790 4D52                                  u7630 53B0  
                                u5951 20FA                                  u5871 1DB8  
                                u5847 1CFE                                  u6751 1BBC  
                                u6671 1A3C                                  u6591 18BC  
                                u6911 36D0                                  u6831 4080  
                                u7551 4800                                  u7711 3B22  
                                u7471 3ADC                                  u7391 395C  
                                u5791 4D4E                                  u7631 53AC  
                                u5880 1E14                                  u5960 1360  
                                u6760 1BFC                                  u6680 1A7C  
                                u6920 3744                                  u7720 3B3C  
                                u7480 3AEE                                  u6840 5B8A  
                                u7640 53D6                                  u7560 5078  
                                u5961 135C                                  u6761 1BF8  
                                u6681 1A78                                  u6921 3740  
                                u7721 3B38                                  u7481 3AEA  
                                u6841 5B86                                  u7641 53D2  
                                u7561 5074                                  u5970 15DA  
                                u6770 1C20                                  u6690 1AA0  
                                u6930 011E                                  u7730 3B62  
                                u6850 5BB0                                  u7490 30EA  
                                u7650 53FA                                  u7570 50EC  
                                u5947 20E4                                  u5971 15D6  
                                u6771 1C1C                                  u6691 1A9C  
                                u6931 011A                                  u7731 3B5E  
                                u6851 5BAC                                  u7491 30E6  
                                u7651 53F6                                  u7571 50E8  
                                u7580 5A8C                                  u5980 33D8  
                                u7660 4BD0                                  u6780 1C5C  
                                u6940 015C                                  u7740 3B7A  
                                u6860 56E0                                  u7581 5A88  
                                u5981 33D4                                  u7661 4BCC  
                                u6781 1C58                                  u6941 0158  
                                u7741 3B76                                  u6861 56DC  
                                _RBPU 007F8F                                  u5990 3468  
                                u5894 2012                                  u7670 4BE2  
                                u6790 1C80                                  u6950 01B2  
                                u7750 3B9C                                  u7590 5270  
                                u6870 5722                                  u5991 3464  
                                u5895 200C                                  u5887 1E0A  
                                u7671 4BDE                                  u6791 1C7C  
                                u6951 01AE                                  u7751 3B98  
                                u7591 526C                                  u6871 571E  
                                u7807 5368                                  u7680 4C06  
                                u6880 35B6                                  u6960 01F8  
                                u7760 5AEA                                  u7681 4C02  
                                u6881 35B2                                  u6961 01F4  
                                u7761 5AE6                                  u7690 4C2C  
                                u6890 3614                                  u6970 0286  
                                u7691 4C28                                  u6891 3610  
                                u6971 0282                                  u6980 0314  
                                u6981 0310                                  u6990 038E  
                                u6991 038A                                  u7777 4F98  
                                u7787 2E3A                                  u7797 5324  
                                _WPUB 000F61                           displaySM@ev 00A4  
                         LCD_Bitmap@i 007A                                  abs@a 0024  
                                _dbuf 00E0                       ?_checkCollision 0012  
           __size_of_LCD_SliderCreate 00EE                                  _main 5F52  
                                _dtoa 2B3E                      _XF_scheduleTimer 56B6  
                                _prec 0049                                  _nout 00DB  
                                pad@i 0029                                  pad@p 0026  
                                fsr1h 000FE2                                  fsr2h 000FDA  
                                indf1 000FE7                                  indf2 000FDF  
                                fsr1l 000FE1                                  pad@w 002B  
                                fsr2l 000FD9                                  btemp 004E  
                    Menu_inGameDraw@g 009C                        touchScreenSM@g 00B0  
                                prodh 000FF4                                  prodl 000FF3  
    __end_of_arialNarrow_12ptFontInfo 7FA8                                  start 00C4  
                         RGB2LCD@blue 001C                __end_of_LCD_ButtonDraw 1342  
           __size_of_LCD_SliderUpdate 04D6                       ___fldiv@new_exp 0031  
                      _LCD_SliderDraw 443A                    LCD_InSlider@slider 0012  
                     __end_of_XF_init 50F8                          ___param_bank 000000  
              LCD_ButtonCreate@height 0018                    XF_scheduleTimer@ev 0015  
                  XF_scheduleTimer@tm 0013                LCD_ButtonCreate@button 0028  
                               ??_abs 0026                                 ??_pad 0028  
                               ??_isr 000E                      __end_of_LCD_Fill 4EC8  
                      ??_LCD_InButton 0018                      __end_of_LCD_Init 30C8  
                    __end_of_LCD_Read 4204                        ??_LCD_InSlider 0018  
                      ??_LCD_DrawRect 001D           LCD_SliderCreate@cursorWidth 0020  
                               l10000 5E7A                                 l10010 5058  
                               l10002 5040                                 l10100 53B0  
                               l10020 5080                                 l10012 505C  
                               l10110 53E6                                 l10102 53B4  
                               l10022 50CC                                 l10014 5078  
                               l10030 5E00                                 l10040 5A72  
                               l10104 53C4                                 l10024 50D0  
                               l10008 5048                                 l10032 5E0C  
                               l10050 5A98                                 l10042 5A78  
                               l10130 4BE6                                 l10122 4BBA  
                               l10106 53D6                                 l10026 50EC  
                               l10034 5E18                                 l10210 4FAA  
                               l10202 4F86                                 l10052 5AA8  
                               l10044 5A8C                                 l10140 4C2C  
                               l10132 4BF2                                 l10124 4BBE  
                               l10060 525A                                 l10108 53DA  
                               l10116 53FE                                 l10036 5E1C  
                               l10028 5DFA                                 l10220 4FF2  
                               l10212 4FB6                                 l10204 4F88  
                               l10054 5AC6                                 l10046 5A92  
                               l10038 5A72                                 l10134 4C06  
                               l10126 4BD0                                 l10070 528E  
                               l10062 525E                                 l10230 5002  
                               l10222 4FF4                                 l10214 4FEC  
                               l10206 4F8C                                 l10056 5ACC  
                               l10144 4C34                                 l10136 4C0A  
                               l10128 4BE2                                 l10152 4C4A  
                               l10160 3B08                                 l10080 52B0  
                               l10072 5292                                 l10064 5270  
                               l10240 5014                                 l10232 5004  
                               l10224 4FF8                                 l10216 4FEE  
                               l10208 4FA6                                 l10138 4C1A  
                               l10162 3B14                                 l10074 5296  
                               l10066 5274                                 l10250 5020  
                               l10242 5016                                 l10234 5006  
                               l10226 4FFC                                 l10218 4FF0  
                               l10500 3772                                 l10180 3B6A  
                               l10164 3B26                                 l10076 52A6  
                               l10068 527C                                 l10260 5AEA  
                               l10252 5024                                 l10244 5018  
                               l10236 500E                                 l10228 5000  
                               l10502 4C60                                 l10190 3C1E  
                               l10182 3B7A                                 l10174 3B44  
                               l10166 3B2A                                 l10158 3B04  
                               l10262 5AF0                                 l10254 5030  
                               l10246 501A                                 l10238 5010  
                               l10504 585C                                 l10192 3C3E  
                               l10184 3B8A                                 l10176 3B50  
                               l10168 3B3C                                 l10088 52C4  
                               l10096 539C                                 l10264 5B02  
                               l10256 5AD0                                 l10248 501C  
                               l10506 0D7C                                 l10186 3B9C  
                               l10178 3B62                                 l10098 53A0  
                               l10266 5B14                                 l10258 5ADA  
                               l10188 3BA8                                 l10196 3C52  
                               l10268 5F52                                 l10490 5414  
                               l10492 331C                                 l10494 52DA  
                      ??_LCD_DrawText 002D                                 l10496 5D7E  
                               l10498 3C66                         ___fltol@sign1 0041  
                     __end_of___aodiv 3E16                                 ?_main 0001  
                               ?_dtoa 002D                       __end_of___aomod 3F7A  
                     LCD_ButtonDraw@i 0099                       __end_of___fldiv 249A  
                     __end_of___awdiv 4D44                                 STR_10 7FEA  
                               STR_11 7FF0                       __end_of___awmod 51A8  
                               _ANSB1 0079C9                                 _ANSB2 0079CA  
                     __end_of___fltol 464E                                 _T0CON 000FD5  
                     ___awdiv@divisor 0014                                 _LATB1 007C51  
                               _LATC0 007C58                                 _LATB2 007C52  
                               _LATB3 007C53                                 _LATC2 007C5A  
                               _LATB4 007C54                                 _LATC3 007C5B  
                               _LATC4 007C5C                                 _LATC5 007C5D  
                     __end_of___lwdiv 579E                       __end_of___lwmod 59AA  
                               i2l705 5A0C                                 i2l731 5F2A  
                               i2l715 5810                                 i2l718 5D66  
                               i2l735 5F14                                 i2l727 4324  
                               i2l771 0056                                 i2l775 00B0  
                               i2l786 5E6C                       ___awdiv@counter 0016  
                               _PLLEN 007CDE                          vfpfcnvrt@fmt 0041  
                               _TMR0H 000FD7                                 _TMR0L 000FD6  
                               _PORTA 000F80                       ??_configMeasure 0012  
                               _TRISA 000F92                   LCD_Bitmap@bfOffBits 0060  
                        LCD_Fill@page 0018                                 _flags 004B  
                        displayInit@g 00A0                                 _fputc 4AEC  
                               _theXF 00B5                                 _fputs 5C64  
              LCD_ButtonDraw@tempChar 008A                   __size_of_LCD_Bitmap 05F6  
                               pad@fp 0022                                 _width 0047  
                               _putch 5F6E                                 dtoa@d 002F  
                               dtoa@i 0070                                 dtoa@n 0068  
                               dtoa@p 0062                                 dtoa@s 0066  
                               dtoa@w 0064            __end_ofi2_XF_scheduleTimer 5812  
                __end_of_XF_pushEvent 5946                       __end_of_sleepSM 52FA  
                        Paddle_addX@p 0025                                 tablat 000FF5  
          ??_gameControllerController 0039                       touchScreenSM@ev 00B4  
                    __end_ofi2___wmul 5E6E                                 plusw2 000FDB  
         ?_XF_decrementAndQueueTimers 0001                                 ttemp5 004F  
                               ttemp6 0052                                 ttemp7 0056  
                               status 000FD8                                 wtemp8 004F  
                        Paddle_draw@p 0025                       __end_of_sprintf 5B78  
                        RGB2LCD@color 001E                          RGB2LCD@green 001A  
              __end_of_LCD_SliderDraw 4548                          Paddle_init@p 0012  
            __size_of_touchScreenInit 000C               LCD_ButtonCreate@bgColor 001C  
                  __size_ofi2___awmod 00B0                   __end_of_Paddle_addX 40C2  
                     ?_LCD_ButtonDraw 007C                     ?_gameControllerSM 003B  
                 __end_of_Paddle_draw 563E                         _touchScreenSM 5398  
                 __end_of_Paddle_init 553E                    __size_of_Ball_draw 008A  
                        LCD_Read@posX 0012                          LCD_Read@posY 0014  
                  __size_of_Ball_init 004E                       __initialization 5D9E  
                  ??_gameControllerSM 003D                          __end_of_main 5F62  
                        __end_of_dtoa 2E20               LCD_ButtonCreate@fpPress 0022  
              touchScreenController@g 0090                touchScreenController@s 0098  
                    ?_sleepController 0001                      i2XF_pushEvent@ev 0008  
                              ??_main 0047                                ??_dtoa 0037  
                       __activetblptr 000002                             ??_RGB2LCD 0014  
                         _XF_popEvent 5A70                                _ADCON0 000FC2  
                              _ADCON2 000FC0                      LCD_ButtonDraw@x1 008D  
                    LCD_ButtonDraw@x2 008F                      LCD_ButtonDraw@y1 0091  
                    LCD_ButtonDraw@y2 0093                                ?_fputc 0012  
                              ?_fputs 001B                                _ADRESH 000FC4  
                              _ADRESL 000FC3                                _CCPR2L 000F67  
                    ___awdiv@dividend 0012                                ?_putch 0001  
                              _INT1IE 007F83                                _INT1IF 007F80  
                  LCD_DrawRect@colorH 0021                    LCD_DrawRect@colorL 0022  
             _GameParameters_resetPos 5DD0                                i2l1030 5256  
                              i2l7200 524E                                i2l7160 5F18  
                              i2l7162 5F28                                i2l7170 51AC  
                              i2l7164 5F02                                i2l7180 51DC  
                              i2l7172 51BA                                i2l7166 5F12  
                              i2l7190 5222                                i2l7182 51EE  
                              i2l7174 51C2                                i2l7440 5D34  
                              i2l7192 522A                                i2l7184 51F6  
                              i2l7176 51C6                                i2l7168 51A8  
                              i2l7600 00AA                                i2l7442 5D4C  
                              i2l7194 5230                                i2l7186 51FE  
                              i2l7178 51D4                                i2l7450 59E4  
                              i2l7602 00AE                                i2l7188 520C  
                              i2l7196 5236                                i2l7460 5A04  
                              i2l7452 59EA                                i2l7444 59AC  
                              i2l7438 5D2E                                i2l7198 5246  
                              i2l7462 5A0A                                i2l7446 59B2  
                              i2l7550 42CE                                i2l7456 59F0  
                              i2l7448 59D0                                i2l7552 42DC  
                              i2l7544 420C                                i2l7560 57A4  
                              i2l7458 5A00                                i2l7466 5E48  
                              i2l7546 423C                                i2l7554 4304  
                              i2l7538 4204                                i2l7570 57F8  
                              i2l7468 5E64                                i2l7556 4308  
                              i2l7548 4294                                i2l7572 57FA  
                              i2l7580 0028                                i2l7574 580A  
                              i2l7566 57A8                                i2l7558 579E  
                              i2l7590 0068                                i2l7582 0036  
                              i2l7568 57C8                                i2l7584 0044  
                              i2l7592 0072                                i2l7594 0080  
                              i2l7586 0048                                i2l7578 001A  
                              i2l7596 008E                                i2l7588 0064  
                              i2l7598 00A6                                _OSCCON 000FD3  
                           ??_XF_init 0020                                _TMR0IE 007F95  
                              _TMR0IF 007F92                                _TMR2IF 007CF1  
                              _TRISB1 007C99                                _TRISC0 007CA0  
                              _TRISB2 007C9A                                _TRISC1 007CA1  
                              _TRISB3 007C9B                                _TRISC2 007CA2  
                              _TRISB4 007C9C                                _TRISC3 007CA3  
                              _TRISC4 007CA4                                _TRISC5 007CA5  
                        ?_moovePaddle 002F                      __end_of___xxtofl 3B02  
                     ?_LCD_SliderDraw 0037                   i2XF_pushEvent@inISR 0007  
                LCD_DrawText@bg_color 002B                        ?_touchScreenSM 00B0  
                     i2_LEAVECRITICAL 5F00                 __size_of_Factory_exec 0056  
               __size_of_Factory_init 00BA                          vfprintf@cfmt 0080  
                 LCD_Bitmap@jumpColor 0078                   LCD_Bitmap@jumpCount 0065  
                 _Menu_parametersDraw 553E                  __size_of_configTouch 001C  
          __end_of_gameControllerInit 5F52                             ??___aodiv 0022  
                           ??___aomod 0022                                ___wmul 5E22  
                           ??___fldiv 0028                             ??___awdiv 0016  
                           ??___awmod 0016                         LCD_Fill@color 0012  
                           ??___fltol 003D                LCD_ButtonUpdate@button 0025  
                           ??___lwdiv 0024                             ??___lwmod 0016  
                LCD_DrawText@fontByte 0037          __size_of_GameParameters_init 036A  
                              clear_0 5DA4                                clear_1 5DB0  
                              clear_2 5DBC          __size_of_GameParameters_setX 0016  
        __size_of_GameParameters_setY 0016                      ___awdiv@quotient 0018  
           LCD_ButtonCreate@textOrBmp 001E                 _touchScreenController 30C8  
                     ___awmod@divisor 0014                                isa$std 000001  
                     ___awmod@counter 0016                  __size_of_displayInit 0014  
                              pad@buf 0024                                dtoa@fp 002D  
                              _strlen 5C16                         LCD_DrawRect@i 0023  
                       LCD_DrawRect@j 001D                                fputc@c 0012  
                              fputs@c 001F                                fputs@i 0020  
                              fputs@s 001B          ?_GameParameters_setBackLight 0012  
                       LCD_DrawText@i 003E                     __end_ofi2___awmod 5258  
                       LCD_DrawText@x 0040                         LCD_DrawText@y 003D  
                LCD_DrawText@tempChar 003F                          __mediumconst 785C  
                              tblptrh 000FF7                             ??_sleepSM 0014  
                              tblptrl 000FF6                                tblptru 000FF8  
                   __end_of_Ball_draw 54B6                     __end_of_Ball_init 5C16  
                ?_Menu_parametersDraw 009C                   i2XF_scheduleTimer@i 0006  
                              putch@c 0001                      __end_of_vfprintf 5A70  
                      i2___awmod@sign 0006                             ??_sprintf 0047  
            __end_of_LCD_ButtonCreate 4748                           _Paddle_addX 3F7A  
                        _Factory_exec 5AD0                          _Factory_init 4F86  
                         _Paddle_draw 55C0                           _Paddle_init 54B6  
                    XF_pushEvent@temp 001A                          ___xxtofl@arg 001C  
               LCD_SliderCreate@width 0016                          ___xxtofl@exp 001B  
                        ___xxtofl@val 0012                  __end_of_LCD_InButton 4AEC  
               LCD_SliderCreate@steps 0022              __end_of_LCD_ButtonUpdate 356A  
                          __accesstop 0060               __end_of__initialization 5DC2  
                           ?_LCD_Fill 0012                      _LCD_SliderCreate 4842  
                           ?_LCD_Init 0001                             ?_LCD_Read 0012  
                __end_of_LCD_InSlider 4A0E                  __end_of_LCD_DrawRect 2B3E  
                __end_of_LCD_DrawText 2100           __size_of_XF_unscheduleTimer 003C  
                     i2_ENTERCRITICAL 5F16                         ___rparam_used 000001  
                          ___fltol@f1 0039                         LCD_Read@color 0018  
                    _LCD_SliderUpdate 1342                    LEAVECRITICAL@inISR 0012  
                           LCD_Init@i 0018                        __pcstackCOMRAM 0001  
                        ??_LCD_Bitmap 002D                     ??_touchScreenInit 0012  
         __end_of_backlightController 1CB6                         __end_of_fputc 4BB6  
                       __end_of_fputs 5CA8                   gameControllerInit@g 003B  
          LCD_ButtonCreate@fpReleased 0024                         __end_of_putch 5F70  
                   LCD_Bitmap@biWidth 0076                     ?_Menu_welcomeDraw 009C  
                LCD_Bitmap@endOfImage 0064              __end_of_XF_scheduleTimer 572A  
                           ?i2___wmul 0001                    ??_Menu_welcomeDraw 0042  
                   LCD_Bitmap@curXPos 006F   __size_of_XF_decrementAndQueueTimers 0122  
                   LCD_Bitmap@curYPos 0067                 __size_of_XF_pushEvent 0064  
               ??_Menu_parametersDraw 0045         ??_GameParameters_setBackLight 0016  
                        Ball_Update@b 002F             ??_GameParameters_resetPos 0014  
             _arialNarrow_12ptBitmaps 785D                      ??_checkCollision 0014  
                  __size_of_displaySM 00CA                 __end_of_LEAVECRITICAL 5EEA  
                  LCD_DrawText@offset 0033                               ??_fputc 0016  
                             ??_fputs 001F                          ?_Ball_Update 002F  
                             ??_putch 0012      __end_of_gameControllerController 379A  
           gameControllerController@g 0037               __end_ofi2_LEAVECRITICAL 5F16  
                      XF_pushEvent@ev 0019                            __pbssBANK0 00B5  
                          __pbssBANK1 0100                    __end_of_LCD_Bitmap 0E54  
                          ??_LCD_Fill 0014                            ??_LCD_Init 0017  
                          ??_LCD_Read 0016                       ??_touchScreenSM 00B2  
            LCD_ButtonCreate@txtColor 001A                    ENTERCRITICAL@inISR 0012  
            __size_of_Menu_inGameDraw 0066                               ?___wmul 001A  
              ?_touchScreenController 0090                          _XF_pushEvent 58E2  
                  __size_of_mooveBall 001E                    __size_of_sleepInit 0028  
                             ?_strlen 0012                            ??i2___wmul 0005  
             __size_ofi2_XF_pushEvent 0064                               _RGB2LCD 4EC8  
                             _INTEDG1 007F8D                  GameParameters_init@s 002B  
                           ?___xxtofl 0012                  GameParameters_setX@s 0012  
                GameParameters_setY@s 0012                    __size_of_vfpfcnvrt 01B4  
               __end_of_ENTERCRITICAL 5F00               __end_ofi2_ENTERCRITICAL 5F2C  
                    ??_LCD_ButtonDraw 007E                  Menu_parametersDraw@g 009C  
 __end_of_arialNarrow_12ptDescriptors 7FA1           _arialNarrow_12ptDescriptors 7E84  
                             _XF_init 5040                   LCD_ButtonDraw@xText 0095  
                 LCD_ButtonDraw@yText 0097                   LCD_ButtonDraw@width 008B  
                             __Hparam 0000                  __size_of_moovePaddle 00FA  
                             __Lparam 0000                    i2_XF_scheduleTimer 579E  
                             ___aodiv 3C8E                     __end_of_displaySM 4C80  
                             ___aomod 3E16                               ___fldiv 2100  
                             ___awdiv 4C80                               ___awmod 50F8  
                             ___fltol 4548                       __size_of___wmul 0026  
             LCD_ButtonUpdate@colorIn 002D                               ___lwdiv 572A  
                             ___lwmod 5946                             ?_vfprintf 007A  
                      LCD_Bitmap@newY 0073                        LCD_Bitmap@posX 0029  
                      LCD_Bitmap@posY 002B                        LCD_Fill@colorH 0014  
                      LCD_Fill@colorL 0015                               __pcinit 5D9E  
                      LCD_Fill@column 0016                               __ramtop 0600  
                             __ptext0 5F52                               __ptext1 4F86  
                             __ptext2 5DFA                               __ptext3 5F62  
                             __ptext4 5F40                               __ptext5 5F2C  
                             __ptext6 5040                               __ptext7 2E20  
                             __ptext8 52FA                               __ptext9 249A  
                 ?i2_XF_scheduleTimer 0002                       __size_of_strlen 004E  
           __size_of_gameControllerSM 018C                             _T2CONbits 000FBA  
                        __size_of_abs 0040                          __size_of_pad 00C2  
                        __size_of_isr 00BC                          ?_XF_popEvent 0001  
                          ??___xxtofl 0016                  LCD_Bitmap@pixelCount 0075  
                    ___awmod@dividend 0012                 LCD_DrawText@fontPixel 0038  
                             _sleepSM 5258                 __end_of_configMeasure 5BC8  
               __size_of_LCD_InButton 00DE               XF_unscheduleTimer@inISR 0002  
               __size_of_LCD_InSlider 00DE                     Menu_welcomeDraw@g 009C  
               __size_of_LCD_DrawRect 033A                               _sprintf 5B26  
               __size_of_LCD_DrawText 044A                      ??_LCD_SliderDraw 0039  
                end_of_initialization 5DC2                      ?i2_LEAVECRITICAL 0001  
                 _GameParameters_init 249A                   _GameParameters_setX 5EBE  
                 _GameParameters_setY 5EA8                     __end_of_mooveBall 5E8C  
                             fputc@fp 0014                  ??i2_XF_scheduleTimer 0006  
                       __Lmediumconst 785C                               fputs@fp 001D  
                      Paddle_addX@add 0029                   i2___wmul@multiplier 0001  
                   __end_of_sleepInit 5E22                     __end_of_vfpfcnvrt 394E  
                          _sleepState 00DF                  i2XF_scheduleTimer@ev 0004  
                i2XF_scheduleTimer@tm 0002                               postdec1 000FE5  
                             postdec2 000FDD                     _LCD_Lowlevel_Init 52FA  
                             postinc0 000FEE                               postinc1 000FE6  
                             postinc2 000FDE                            ??_vfprintf 0047  
   __size_of_gameControllerController 0230                  ?_GameParameters_init 002B  
           ?_gameControllerController 0037                     ??_Menu_inGameDraw 0042  
                ?_GameParameters_setX 0012                    ?_LCD_Lowlevel_Init 0001  
                ?_GameParameters_setY 0012                               strlen@a 0014  
                             strlen@s 0012                          _LCD_InButton 4A0E  
                           _PORTBbits 000F81              __end_of_LCD_SliderCreate 4930  
              LCD_SliderCreate@height 0018                          _LCD_InSlider 4930  
                        _displayState 00DD                          _LCD_DrawRect 2804  
                        _LCD_DrawText 1CB6                     XF_pushEvent@inISR 0018  
            __end_of_LCD_SliderUpdate 1818                      XF_popEvent@inISR 0019  
              LCD_SliderCreate@slider 0026                   ??_LCD_Lowlevel_Init 0012  
                       ___xxtofl@sign 001A                    _gameControllerInit 5F40  
            __size_of_sleepController 0036                        Factory_exec@ev 01C9  
                         ___fldiv@grs 0033                           ___fldiv@rem 002C  
                           i2___awmod 51A8                      ?i2_ENTERCRITICAL 0001  
                   ?_LCD_ButtonCreate 0012                          ?_Paddle_addX 0025  
                        ?_Paddle_draw 0025                             _Ball_draw 542C  
                        ?_Paddle_init 0012                             _Ball_init 5BC8  
                 ?_gameControllerInit 003B                  __size_of_Ball_Update 0114  
                  ??_LCD_ButtonCreate 002B                     ?_LCD_ButtonUpdate 0025  
                     _touchScreenInit 5F62                     _displayController 5812  
                         _CCP2CONbits 000F66                            displaySM@g 00A0  
                      LCD_Read@temp16 001A       __end_of_arialNarrow_12ptBitmaps 7E84  
              RGB2LCD@colorTableEntry 0012                         ??_configTouch 0012  
                  ??_LCD_ButtonUpdate 0027                     __size_of_LCD_Fill 00C2  
                   __size_of_LCD_Init 02A8                     __size_of_LCD_Read 0142  
                  ?_displayController 009E                            RGB2LCD@red 0018  
           __end_of_LCD_Lowlevel_Init 5398                    LCD_Lowlevel_Init@i 0013  
               LCD_ButtonCreate@fpOut 0026                     XF_scheduleTimer@i 0017  
               LCD_ButtonCreate@index 002A                 LCD_ButtonCreate@width 0016  
                       ??_displayInit 0047                 ??_GameParameters_init 002D  
               ??_GameParameters_setX 0016                 ??_GameParameters_setY 0016  
                 ??_displayController 0045                           vfpfcnvrt@ap 0043  
                         vfpfcnvrt@fp 003F                           vfpfcnvrt@ll 0072  
                      __end_of___wmul 5E48                  ??_gameControllerInit 003D  
                  LCD_Bitmap@biHeight 006B                  XF_unscheduleTimer@id 0003  
                      i2_XF_pushEvent 59AA                      i2___wmul@product 0005  
                   ?_XF_scheduleTimer 0013                        __end_of_strlen 5C64  
                       XF_popEvent@ev 0018                   start_initialization 5D9E  
                   __size_ofi2___wmul 0026                    ??_XF_scheduleTimer 0017  
                         __end_of_abs 5D2C                    LCD_InButton@button 0012  
                         __end_of_pad 4E06                           __end_of_isr 00C4  
               XF_scheduleTimer@inISR 0016                            ?i2___awmod 0001  
                          ?_Ball_draw 0025                            ?_Ball_init 0012  
           __end_of_displayController 587C             __size_of_Menu_welcomeDraw 0078  
          __end_of_XF_unscheduleTimer 5D68                     LCD_DrawRect@color 001B  
                   LCD_DrawRect@posX1 0012                     LCD_DrawRect@posX2 0016  
                   LCD_DrawRect@posY1 0014                     LCD_DrawRect@posY2 0018  
                  i2XF_pushEvent@temp 0009               ??_touchScreenController 0092  
                         vfprintf@fmt 007C                              ??___wmul 001E  
                 LCD_DrawText@yOffset 0035                   __end_of_configTouch 5EA8  
              __end_ofi2_XF_pushEvent 5A0E                   LCD_DrawText@posXEnd 003B  
                 LCD_DrawText@posYEnd 0039              _arialNarrow_12ptFontInfo 7FA1  
         __end_of_Menu_parametersDraw 55C0                              ??_strlen 0014  
                LCD_SliderCreate@posX 0012                  LCD_SliderCreate@posY 0014  
                    _gameControllerSM 3B02                   __end_of_displayInit 5F40  
                           ___fldiv@a 0024                             ___fldiv@b 0020  
                            ?_RGB2LCD 0012          __size_of_backlightController 049E  
                         __pbssCOMRAM 0047                LCD_SliderUpdate@slider 0027  
         XF_decrementAndQueueTimers@i 000C                         __pcstackBANK0 0060  
                       __pcstackBANK1 01C9                  LCD_SliderDraw@slider 0037  
                    ___aodiv@dividend 0012                    gameControllerSM@ev 0041  
             __end_of_touchScreenInit 5F6E                  __size_of_XF_popEvent 0060  
                   __size_of___xxtofl 01B4                      LCD_InButton@posX 0014  
                    LCD_InButton@posY 0016                      LCD_Bitmap@bmpPtr 0027  
                   LCD_DrawText@align 0024                              ?_XF_init 0001  
                   LCD_DrawText@color 0029                     ??_sleepController 0012  
                    LCD_Bitmap@strPtr 0071          ??_XF_decrementAndQueueTimers 000A  
                   LCD_DrawText@width 0041                 __end_of_touchScreenSM 542C  
             LCD_Bitmap@colorTablePtr 0069                  i2LEAVECRITICAL@inISR 0001  
                    LCD_SliderDraw@x1 003D                      LCD_SliderDraw@x2 003F  
                    LCD_SliderDraw@y1 0041                      LCD_SliderDraw@y2 0043  
          __size_of_LCD_Lowlevel_Init 009E                      ___lwdiv@dividend 0020  
                           _dtoa$4330 0060                             __pintcode 0008  
                       __pmediumconst 785C                              ?___aodiv 0012  
                            ?___aomod 0012                              ?___fldiv 0020  
                            ?___awdiv 0012                      ___aodiv@quotient 0024  
                            ?___awmod 0012                              ?___fltol 0039  
                            ?___lwdiv 0020                              ?___lwmod 0012  
              __size_of_LEAVECRITICAL 0016                       ?i2_XF_pushEvent 0007  
                           _displaySM 4BB6                     __size_of_vfprintf 0062  
 __end_of_GameParameters_setBackLight 5CEC           _GameParameters_setBackLight 5CA8  
            ?_GameParameters_resetPos 0012                            mooveBall@g 0039  
                            ?_sleepSM 0001                      ___lwdiv@quotient 0025  
         touchScreenController@valueX 00AE           touchScreenController@valueY 00AC  
                         ??i2___awmod 0005                              ?_sprintf 0082  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                      __size_of_putch 0002                           ??_Ball_draw 0027  
                         ??_Ball_init 0014            __size_of_displayController 006A  
                          sleepInit@g 00A2                              _LCD_Fill 4E06  
                            _LCD_Init 2E20                              _LCD_Read 40C2  
                       ??_moovePaddle 0031                        ___wmul@product 001E  
                __size_of_Paddle_addX 0148                  __size_of_Paddle_draw 007E  
                __size_of_Paddle_init 0088                       _Menu_inGameDraw 587C  
                i2ENTERCRITICAL@inISR 0001                    LCD_SliderUpdate@x1 0035  
                  LCD_SliderUpdate@x2 002F                    LCD_SliderUpdate@y1 0031  
                  LCD_SliderUpdate@y2 0033                    displayController@g 009E  
             __size_of_checkCollision 0796                             _mooveBall 5E6E  
                         _configTouch 5E8C                              i2u520_40 59E4  
                            i2u520_41 59E0                              i2u522_40 423C  
                            i2u530_40 0044                              i2u522_41 4238  
                            i2u530_41 0040                              i2u523_40 4294  
                            i2u531_40 0064                              i2u523_41 4290  
                            i2u531_41 0060                              i2u524_40 42CE  
                            i2u532_40 0080                              i2u524_41 42CA  
                            i2u532_41 007C                              i2u525_40 4324  
                            i2u533_40 008E                              i2u525_41 4320  
                            i2u533_41 008A                              XF_init@i 0020  
                            i2u526_40 57C8                              i2u526_41 57C4  
                            i2u527_40 580A                              i2u527_41 5806  
                            i2u528_40 0028                              i2u528_41 0024  
                           _sleepInit 5DFA                              i2u529_40 0036  
                            i2u529_41 0032                              i2u492_40 5F28  
                            i2u492_41 5F24                              i2u493_40 5F12  
                            i2u493_41 5F0E                              i2u494_40 51BA  
                            i2u494_41 51B6                              i2u495_40 51D4  
                            i2u495_41 51D0                              i2u496_40 51EE  
                            i2u496_41 51EA                              i2u497_40 520C  
                            i2u497_41 5208                              i2u498_40 5222  
                            i2u498_41 521E                              i2u499_40 5246  
                            i2u499_41 5242                __size_of_ENTERCRITICAL 0016  
                         _displayInit 5F2C                             _vfpfcnvrt 379A  
                          ?_displaySM 00A0                     ___wmul@multiplier 001A  
                   ?_LCD_SliderCreate 0012                              i2___wmul 5E48  
    GameParameters_setBackLight@value 0014                    LCD_ButtonUpdate@x1 0033  
                  LCD_ButtonUpdate@x2 002F                    LCD_ButtonUpdate@y1 0031  
                  LCD_ButtonUpdate@y2 0035               i2XF_scheduleTimer@inISR 0005  
                  ??_LCD_SliderCreate 0028                      __size_of_RGB2LCD 00BE  
                   ?_LCD_SliderUpdate 0027                      LCD_InSlider@posX 0014  
                    LCD_InSlider@posY 0016                  LCD_ButtonCreate@font 0020  
                LCD_ButtonCreate@posX 0012                  LCD_ButtonCreate@posY 0014  
                LCD_ButtonDraw@bmpPtr 009A                      ?_touchScreenInit 0001  
                  ??_LCD_SliderUpdate 0029                  LCD_ButtonDraw@button 007C  
                       _LEAVECRITICAL 5ED4                         ?_Factory_exec 0001  
                       ?_Factory_init 0001                    i2___awmod@dividend 0001  
                    _Menu_welcomeDraw 563E                       checkCollision@g 0012  
         __size_ofi2_XF_scheduleTimer 0074                      __size_of_XF_init 00B8  
                    LCD_DrawRect@fill 001A                            ?_mooveBall 0039  
                            __Hrparam 0000                      LCD_DrawRect@temp 001F  
                          ?_sleepInit 00A2              __size_ofi2_LEAVECRITICAL 0016  
                          vfprintf@ap 007E                              __Lrparam 0000  
                          vfprintf@fp 007A                   __end_of_moovePaddle 4842  
             __size_of_LCD_ButtonDraw 04EE                __size_of_configMeasure 0050  
           __size_of_LCD_ButtonCreate 00FA                      __size_of___aodiv 0188  
     __end_of_GameParameters_resetPos 5DFA                      __size_of___aomod 0164  
                    __size_of___fldiv 039A                      __size_of___awdiv 00C4  
                    __size_of___awmod 00B0                      __size_of___fltol 0106  
               i2___wmul@multiplicand 0003                            ?_vfpfcnvrt 003F  
                    __size_of___lwdiv 0074                      __size_of___lwmod 0064  
           __size_of_LCD_ButtonUpdate 0236                     gameControllerSM@g 003B  
                     ___aodiv@divisor 001A                      Paddle_addX@value 0027  
            LCD_ButtonUpdate@colorOut 002B                       ___aodiv@counter 0022  
                        moovePaddle@g 002F              GameParameters_setX@value 0014  
                     LCD_Bitmap@color 006D              GameParameters_setY@value 0014  
                    LCD_DrawText@font 0022                            sprintf@fmt 0084  
                    LCD_DrawText@posX 0025                      LCD_DrawText@posY 0027  
                            ___xxtofl 394E                            Ball_draw@b 0025  
                     ___lwdiv@divisor 0022                            Ball_init@b 0012  
                     ___lwdiv@counter 0024                              __ptext10 54B6  
                            __ptext11 4842                              __ptext20 2B3E  
                            __ptext12 464E                              __ptext21 4D44  
                            __ptext13 5BC8                              __ptext30 394E  
                            __ptext22 5C64                              __ptext14 5AD0  
                            __ptext31 4548                              __ptext23 4AEC  
                            __ptext15 5398                              __ptext40 3F7A  
                            __ptext32 2100                              __ptext24 5F6E  
                            __ptext16 30C8                              __ptext41 5E6E  
                            __ptext33 56B6                              __ptext25 5CEC  
                            __ptext17 5B26                              __ptext50 5DD0  
                            __ptext42 00C8                              __ptext34 5EA8  
                            __ptext26 3E16                              __ptext18 5A0E  
                            __ptext51 4BB6                              __ptext43 4326  
                            __ptext35 5EBE                              __ptext27 3C8E  
                            __ptext19 379A                              __ptext60 0E54  
                            __ptext52 5812                              __ptext44 356A  
                            __ptext36 5258                              __ptext28 5E8C  
                            __ptext61 1CB6                              __ptext53 563E  
                            __ptext45 1818                              __ptext37 5D68  
                            __ptext29 5B78                              __ptext70 4EC8  
                            __ptext62 5C16                              __ptext54 553E  
                            __ptext46 5CA8                              __ptext38 3B02  
                            __ptext71 542C                              __ptext63 4C80  
                            __ptext55 443A                              __ptext47 58E2  
                            __ptext39 4748                              __ptext80 5E48  
                            __ptext72 2804                              __ptext64 3334  
                            __ptext56 1342                              __ptext48 4930  
                            __ptext81 59AA                              __ptext73 5A70  
                            __ptext65 40C2                              __ptext57 587C  
                            __ptext49 4A0E                              __ptext82 51A8  
                            __ptext74 50F8                              __ptext66 085E  
                            __ptext58 55C0                              __ptext83 5D2C  
                            __ptext75 5ED4                              __ptext67 5E22  
                            __ptext59 4E06                              __ptext84 5F00  
                            __ptext76 5EEA                              __ptext68 5946  
                            __ptext85 5F16                              __ptext69 572A  
                            __ptext78 579E                              __ptext79 4204  
                    __size_of_sleepSM 00A2                        ?_LEAVECRITICAL 0001  
                       _ENTERCRITICAL 5EEA                         ??_Ball_Update 0031  
                      ??_Factory_exec 0047                        ??_Factory_init 00A4  
             __end_of_Menu_inGameDraw 58E2              GameParameters_resetPos@s 0012  
                    __size_of_sprintf 0052    __end_of_XF_decrementAndQueueTimers 4326  
          _XF_decrementAndQueueTimers 4204                         __size_of_main 0010  
                           sleepSM@ev 0016                         __size_of_dtoa 02E2  
           __size_of_XF_scheduleTimer 0074              __end_of_gameControllerSM 3C8E  
                 _backlightController 1818           __end_of_GameParameters_init 2804  
         __end_of_GameParameters_setX 5ED4           __end_of_GameParameters_setY 5EBE  
            __size_ofi2_ENTERCRITICAL 0016               __size_of_LCD_SliderDraw 010E  
        GameParameters_setBackLight@s 0012              _gameControllerController 356A  
                            isa$xinst 000000                            _LCD_Bitmap 085E  
      __size_of_touchScreenController 026C                    _XF_unscheduleTimer 5D2C  
       __end_of_touchScreenController 3334                              int$flags 004E  
                            _vfprintf 5A0E                         ?_XF_pushEvent 0018  
         __size_of_gameControllerInit 0012                           ??_displaySM 00A2  
                    ___aomod@dividend 0012                   ?_XF_unscheduleTimer 0002  
                   i2___awmod@divisor 0003                     i2___awmod@counter 0005  
                ?_backlightController 0018                       _sleepController 5D68  
                      ?_ENTERCRITICAL 0001                         _configMeasure 5B78  
                            intlevel2 0000                             sprintf@ap 0088  
                     LCD_DrawText@msg 0020                      ___lwmod@dividend 0012  
                ??_XF_unscheduleTimer 0003                           _moovePaddle 4748  
                 __end_of_Ball_Update 443A                        _checkCollision 00C8  
                         ??_mooveBall 003B                           ??_sleepInit 0047  
                    ??i2_XF_pushEvent 0008                        ??_XF_pushEvent 0019  
                     ___aomod@divisor 001A                           ??_vfpfcnvrt 0045  
                     ___aomod@counter 0022                     ??i2_LEAVECRITICAL 0001  
                            sprintf@f 008A                              sprintf@s 0082  
               ??_backlightController 001A                         ??_XF_popEvent 0018  
                     ___lwmod@divisor 0014               LCD_SliderCreate@bgColor 001C  
                     ___lwmod@counter 0016                       ??_LEAVECRITICAL 0012  
                      ?_configMeasure 0001           LCD_SliderCreate@borderColor 001E  
        __size_of_Menu_parametersDraw 0082              LCD_SliderCreate@sldColor 001A  
             LCD_SliderCreate@fpPress 0024                      ?_Menu_inGameDraw 009C  
                        ___aodiv@sign 0023                       Paddle_init@team 0014  
              __end_of_checkCollision 085E      __size_of_GameParameters_resetPos 002A  
__size_of_GameParameters_setBackLight 0044                          ___aomod@sign 0023  
                        ?_configTouch 0001                   _gameControllerState 004D  
